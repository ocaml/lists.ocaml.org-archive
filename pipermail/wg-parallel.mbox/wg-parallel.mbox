From jdimino@janestreet.com  Mon Apr 29 11:10:10 2013
Return-Path: <jdimino@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id CAD773C3F4
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 11:10:10 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1476734 
 * -2.4 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:39118
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UWlB1-0005i2-j7 (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <jdimino@janestreet.com>); Mon, 29 Apr 2013 11:19:26 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWlAg-0002Ka-HZ
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:18:58 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <jdimino@janestreet.com>) id 1UWlAg-0002Ku-Gl
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:18:58 -0400
Received: from mail-ia0-f198.google.com ([209.85.210.198])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWlAg-0007rq-Dv
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:18:58 -0400
Received: by mail-ia0-f198.google.com with SMTP id t4so18311057iag.5
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 03:18:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:date:message-id:subject:from:to
 :content-type; bh=DIHseflVLqUHDyWj5mqZsEJEPVBjRj3Rp2tWbTcSyOU=;
 b=dSI4Bdk6BGxyQN4JYYF8dEWbu7BQXBUPV8d6I3Rsa6DhJ1fKsg9mLYekiMG/1cGs32
 zrF4DRA9R10OhjAwpcadQR5kfXJWNeEn9qCxKoxyAdErDnd+m+hO3tTbnSOjy9FuvioN
 /y1HxI7Bk8q992qtohb3PTnIK30hrfH7xwzYY=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:date:message-id:subject:from:to
 :content-type:x-gm-message-state;
 bh=DIHseflVLqUHDyWj5mqZsEJEPVBjRj3Rp2tWbTcSyOU=;
 b=MrKLeQTzhm6txRjSBbvikc3tI2yp0VpGRx3SopIhq0W4MK632T+5XDWFXRhiXnQphs
 J8uEIiNb2a9xsN6nRhSNOzN1RlWi9GCix28mOocOOJaSVQEeu1snIS28PxGn7l6qomlZ
 LQgX8uLdBJplQhC/9kwD2EL/+MVNn5KtoMtewG34Yp1qIa8WT0uSRgiq8YhWfsANKrhP
 B4lPY25do63p9DwmQ7rMv9PFNjTnFDA33cnSHPimlrdqXzEepUJoLam6raVPa2uQXSCy
 ZOys5vDvHeCw+uZnrFMlWNI11a7l4pFYAiL7ZBbueAmVtbisKJ2eOk+Tqqhnm3OGMt/J
 qG6w==
X-Received: by 10.50.49.65 with SMTP id s1mr554599ign.26.1367230738119;
 Mon, 29 Apr 2013 03:18:58 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.50.49.65 with SMTP id s1mr554596ign.26.1367230737984; Mon,
 29 Apr 2013 03:18:57 -0700 (PDT)
Received: by 10.50.50.171 with HTTP; Mon, 29 Apr 2013 03:18:57 -0700 (PDT)
Date: Mon, 29 Apr 2013 11:18:57 +0100
Message-ID: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
From: Jeremie Dimino <jdimino@janestreet.com>
To: wg-parallel@lists.ocaml.org
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQnLGlGQ96WB2oYz/GDPAuEY55hDcxzZBh65e4PIzHPh99SKWdLFsXjMNtHNc0EhLYh1mCzbpvJf9lpgseHHWWwqeG6updQXsDNCViwnBGEhSNISIHYXtFOMowA5uQuahA2d9pHDmdd7Eqqq2KtwgwZC4S0u9wL3wU7iaTO1SdzU/YhI8xE=
Subject: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 10:10:10 -0000

Hi everybody and welcome to the wg-parallel mailing list,

The aim of this group is to discuss the future of monadic cooperative
concurrent programing in OCaml.  There are currently two well-known
libraries for that purpose, lwt and async. Lwt is historically the
first one, async was developed at Jane Street and has been
open-sourced recently.

These libraries are quite 'invasive' since they require to write the
code in a cooperative way.  It is not possible to use both of them in
the same program and even if a third-party library can sometime be
made to work with both, it is in general complex and not very
convenient.

So while they are both important having two such 'core' and
incompatible libraries is not a very good thing for the OCaml
community.  Switching brutally from one to the other is not realistic
since it would require a huge amount of time and efforts.  The idea
would be to make them evolve so they are close enough and, if
possible, eventually have only one.

One strategy developped by big projects using both lwt and async such
as Mirage/Xen is to interact at the RPC level.  This can be done on
top of lwt and async without modifying them and there are people
working in this direction.

They are currently two big semantic divergences in the kernel of both
libraries: execution order and error handling. Plus they are a number
of other more or less important differences.  I try to describe them
in the rest of this email.

Semantic of bind
----------------

The general idea in lwt is to run the most it can immediatly and
yielding is always explicit, while in async the precedence is given to
knowing exactly when the code is going to be executed.

So for [return x >>= f]:

- lwt evaluates [f x] immediatly
- async returns a non-determined deferred and will evaluate [f x]
during the next cycle

This semantic of the bind is very important for lwt users, but async
is already planning to add a second monad with lwt's behavior, so it
shouldn't be an issue.

Lwt and async also differs regarding Lwt.wait/Ivar.fill but there
seems to be an agreement that the async's behavior is better and it is
trivial to change in lwt so that shouldn't be an issue.

Error handling
--------------

The ['a Lwt.t] type 'inline' the error monad [Value of 'a | Error of
exn] while in async all errors are explicit.  So the async equivalent
of ['a Lwt.t] would be [('a, exn) Result.t Deferred.t].

As a result, while most functions in lwt return a [something Lwt.t],
in async they return a variant or a [something Or_error.t Deferred.t]
when the result may be an error status.

This may be tedious to handle.

Local storage
-------------

Lwt allows to define global variables with different values in
different threads.  This was introduced so logs can display 'thread
identifiers' but is now also used for other things.  Async internally
has such a mechanism, it could be adapted and exported.

Scheduler
---------

The kernel of lwt can be used without a scheduler, which is important
for javascript for instance.  The scheduler is part of the lwt.unix
package and can be run multiple times in the lifetime of a program.

This is not true for async but it is something that can be considered.

Portability
-----------

The kernel of lwt depends only on the standard library and has no C.
As a result it is very portable and can be used without problem in
javascript or any other exotic environment.

The kernel of async (Async_core) currently depends on Core which
depends on Unix and contains C bindings.  It is planned to split Core
to get a small kernel for Core and Async.

Lwt is also more portable, for example it runs on Windows.  Windows
support could be added to Async.

There are questions about whether this should be done like in
unix/lwt.unix, i.e. emulate unix's behavior on Windows, or binds the
Win32 API directly and write the dispatching code in OCaml.

General experience
------------------

Async is part of the core suite and use core's convention.  Code using
it starts with:

    open Core.Std
    open Async.Std

which brings all the core and async world into the environment.

The core style is generally considered better and async has a huge
number of utilities well integrated together, but switching code to it
may require a lot of work.

On the other hand lwt is more independent so it is easier to integrate
it into an existing project.



In conclusion there is a lot to think about but no blocker.

Jeremie

From mshinwell@janestreet.com  Mon Apr 29 11:29:53 2013
Return-Path: <mshinwell@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-52.csi.cam.ac.uk (ppsw-52.csi.cam.ac.uk [131.111.8.152])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 8E7343C3F4
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 11:29:53 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1476734 
 * -2.4 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:55586
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-52.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtp id 1UWlU7-00026x-EF (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <mshinwell@janestreet.com>); Mon, 29 Apr 2013 11:39:09 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <mshinwell@janestreet.com>) id 1UWlTl-0003eA-7E
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:38:41 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <mshinwell@janestreet.com>) id 1UWlTl-0005Gz-5p
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:38:41 -0400
Received: from mail-ve0-f199.google.com ([209.85.128.199])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <mshinwell@janestreet.com>) id 1UWlTl-0008Sp-3O
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:38:41 -0400
Received: by mail-ve0-f199.google.com with SMTP id m1so6320781ves.2
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 03:38:40 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=I9/x4T1eLdYAiVWghF81JztQJJY/F4x/d0aOzLzMEGI=;
 b=fKV0UV0zaFlCFrC5HUKuGS+ot2u5skOVPP3snEsd2O9KHfWnLofO9SHmHWwbaRo0r9
 xom+i0ZLbhN1TTCZit+Sqdp+MNTp54CAbQ6nDrQvfvxUyewimnNkBnZ35WAGYH3H2MaA
 E3qCTTzNEkxZOTSKM7ES9TrdPUjJ4aauF0mIo=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type:x-gm-message-state;
 bh=I9/x4T1eLdYAiVWghF81JztQJJY/F4x/d0aOzLzMEGI=;
 b=RawMgtpap/zr/1pdTQ+V0Kq6zB5SO5eL88TDI1fr6HQkLoERSbHDW5452y+qvn1wEj
 bbwcdpcKnRA81oMxJX0c8AYS2BimNH/k9iPblU/LgUO2z90COs+6sj4WSZ5A5T+UI0sm
 nnIPFN3DwDV+wdmSDcIV00x6bYuEkAZDF5Qt5p6/tiDROmcs4ACAESkvAIMjuXA12+cy
 VwoJoWPQLThRA091ebwJ2yFkpYWC0XXsp3R2w9R2LFC7dN/py/5m+WP/drTIQmXsEgTA
 lKtDQSOd96iRv3QfIaJOBYuHMMpVL4rJxVgXEMWRf74yHP94LRi/7/PLGtfyvnQ8IdRf
 PurQ==
X-Received: by 10.220.42.7 with SMTP id q7mr2664876vce.69.1367231920906;
 Mon, 29 Apr 2013 03:38:40 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.220.42.7 with SMTP id q7mr2664874vce.69.1367231920797; Mon,
 29 Apr 2013 03:38:40 -0700 (PDT)
Received: by 10.58.1.166 with HTTP; Mon, 29 Apr 2013 03:38:40 -0700 (PDT)
In-Reply-To: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
Date: Mon, 29 Apr 2013 11:38:40 +0100
Message-ID: <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
From: Mark Shinwell <mshinwell@janestreet.com>
To: Jeremie Dimino <jdimino@janestreet.com>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQkNJZ+2jA+iCCLYrTGHno+bZ27rR3xxtWYR5MHENf0zKPJDioUvmoasPRu0HJ0n1RuJ7DAN8BspHY74kQmz/Zpmx1ye5DtzUn7ptCazqL2mhStRfoeH/SW+1Z2GGesDK5/aj8S1zQMLGx3qKbcZ0JVnoi135SFN+uE5VTxtPXhl1BctJ/w=
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 10:29:53 -0000

On 29 April 2013 11:18, Jeremie Dimino <jdimino@janestreet.com> wrote:
> Lwt and async also differs regarding Lwt.wait/Ivar.fill but there
> seems to be an agreement that the async's behavior is better and it is
> trivial to change in lwt so that shouldn't be an issue.

I might be misunderstanding something about Lwt here, but as far as I
see it, this latter point is quite important.  I believe one of the
most important features of Async is the fact that you cannot be
interrupted "between binds" by some arbitrary other job---whereas I
do not think that is the case with the Lwt semantics (as far as I know,
the equivalent to filling an ivar could cause something else to be
run immediately; is that correct?).

> Error handling
> --------------
>
> The ['a Lwt.t] type 'inline' the error monad [Value of 'a | Error of
> exn] while in async all errors are explicit.  So the async equivalent
> of ['a Lwt.t] would be [('a, exn) Result.t Deferred.t].
>
> As a result, while most functions in lwt return a [something Lwt.t],
> in async they return a variant or a [something Or_error.t Deferred.t]
> when the result may be an error status.

I think it's worth noting the [Monitor] construct of Async here,
which encapsulates jobs with wrappers to direct any exceptions they
might throw to appropriate places.

Mark

From anil@recoil.org  Mon Apr 29 11:39:38 2013
Return-Path: <anil@recoil.org>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-32.csi.cam.ac.uk (ppsw-32.csi.cam.ac.uk [131.111.8.132])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 77B063C3F4
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 11:39:38 +0100 (BST)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.3.2-1476734
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from recoil.dh.bytemark.co.uk ([89.16.177.154]:15975
 helo=dark.recoil.org)
 by ppsw-32.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with smtp id 1UWldd-0005jm-1X (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <anil@recoil.org>); Mon, 29 Apr 2013 11:48:54 +0100
Received: (qmail 3580 invoked by uid 634); 29 Apr 2013 10:48:53 -0000
X-Spam-Level: *
X-Spam-Status: No, hits=-1.0 required=5.0
	tests=ALL_TRUSTED
X-Spam-Check-By: dark.recoil.org
Received: from no-dns-yet.demon.co.uk (HELO [192.168.14.84]) (62.49.66.12)
 (smtp-auth username remote@recoil.org, mechanism cram-md5)
 by dark.recoil.org (qpsmtpd/0.84) with ESMTPA; Mon, 29 Apr 2013 11:48:52 +0100
Content-Type: text/plain; charset=us-ascii
Mime-Version: 1.0 (Mac OS X Mail 6.3 \(1503\))
From: Anil Madhavapeddy <anil@recoil.org>
In-Reply-To: <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
Date: Mon, 29 Apr 2013 11:48:43 +0100
Content-Transfer-Encoding: 7bit
Message-Id: <78149F76-FBA0-48C3-9F02-8A791F8FC630@recoil.org>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
To: Mark Shinwell <mshinwell@janestreet.com>
X-Mailer: Apple Mail (2.1503)
X-Virus-Checked: Checked by ClamAV on dark.recoil.org
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 10:39:38 -0000

On 29 Apr 2013, at 11:38, Mark Shinwell <mshinwell@janestreet.com> wrote:

> On 29 April 2013 11:18, Jeremie Dimino <jdimino@janestreet.com> wrote:
>> Lwt and async also differs regarding Lwt.wait/Ivar.fill but there
>> seems to be an agreement that the async's behavior is better and it is
>> trivial to change in lwt so that shouldn't be an issue.
> 
> I might be misunderstanding something about Lwt here, but as far as I
> see it, this latter point is quite important.  I believe one of the
> most important features of Async is the fact that you cannot be
> interrupted "between binds" by some arbitrary other job---whereas I
> do not think that is the case with the Lwt semantics (as far as I know,
> the equivalent to filling an ivar could cause something else to be
> run immediately; is that correct?).

If I understand this right, Lwt exposes `wakeup` and `wakeup_later`,
and the latter defers the wakeup until the scheduler is entered again.
Therefore, `wakeup_later` is most similar to Async's model.

I'm not sure if there are other ways in Lwt to interrupt a running
thread, aside from Lwt_preemptive.  Is it sufficient to alias Lwt.wakeup
to Lwt.wakeup_later?

-anil

From jdimino@janestreet.com  Mon Apr 29 11:40:21 2013
Return-Path: <jdimino@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-52.csi.cam.ac.uk (ppsw-52.csi.cam.ac.uk [131.111.8.152])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 420343C3F4
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 11:40:21 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1476734 
 * -2.4 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:56458
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-52.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtp id 1UWleF-0007VQ-Da (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <jdimino@janestreet.com>); Mon, 29 Apr 2013 11:49:37 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWldu-0004MY-Ph
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:49:10 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <jdimino@janestreet.com>) id 1UWldu-0006w7-OZ
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:49:10 -0400
Received: from mail-oa0-f69.google.com ([209.85.219.69])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWldu-0000M1-Lc
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:49:10 -0400
Received: by mail-oa0-f69.google.com with SMTP id l20so38590571oag.4
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 03:49:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=Lumqw4ogfJc9X0iObEPvIRj2aROcCF6+1Q15EGiM2dw=;
 b=Zdo8eWj4D6oX11rp+EDqyVsm3uS4QUhOhP5i/IRff2fzpIdku6w2kY/LuEOYu8wk2w
 ScgFZyhP6atLkF3UoFMqXOPbUtN3zHGksVeh38FEeisC/rb7e4Mm8TfSsSju5ycw842Z
 GvHvdN4cip0jdSoMEwPai7BGpS0sdNW3UYYH0=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type:x-gm-message-state;
 bh=Lumqw4ogfJc9X0iObEPvIRj2aROcCF6+1Q15EGiM2dw=;
 b=iVFDlU2uBoCnsz5AK8cDZ9gd8AcbKuKY1O0krFlDwvRx8i6SM4SV0pN8EGuQ8frgVa
 H2XO9cO9k2r7+hucDkrJVvYMY3vuu3g0y1+YwwxEN+EbGo75tuW+HAtW2sPeuR0CnaNF
 f4GxCvnklb4Bh2T1/Vecs+Iz0wUU4w50VYC4loZWJ69SjPlIDhP0TdqrqyKO8Te8N2oM
 sLZ1xzw6RGBr5cPxPRb3D5uargHLz6lQQOg3qvNmwaTaV72YBHj8A5kzxnnnrawun6bE
 UM+PE6On/H+0V3bUWZjipAVEOsJbFOqmcWpZQ1zJeDInQ+VqqZoElTd8zREKv+KJlTlI
 Bg0g==
X-Received: by 10.50.32.69 with SMTP id g5mr609311igi.104.1367232550308;
 Mon, 29 Apr 2013 03:49:10 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.50.32.69 with SMTP id g5mr609309igi.104.1367232550248; Mon,
 29 Apr 2013 03:49:10 -0700 (PDT)
Received: by 10.50.50.171 with HTTP; Mon, 29 Apr 2013 03:49:10 -0700 (PDT)
In-Reply-To: <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
Date: Mon, 29 Apr 2013 11:49:10 +0100
Message-ID: <CANhEzE4MvCA9kOQv=qR-=O-SOFnNqszQLn2iGzpNTwf+ukKWCQ@mail.gmail.com>
From: Jeremie Dimino <jdimino@janestreet.com>
To: Mark Shinwell <mshinwell@janestreet.com>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQkHhFJi4udV6Bbymz/P4m892ae538ubtuwmY3LQPu+Fjbi2AXKAiP0Y9+JtB0QNorkhLVrps++97j+gSYlUyG+V93uEVnkVROcmwhxKXYI4ueO2BGHz9pFrKfOhb57CqEtsJwF4ePpX+7dkdYtlzJzCgGJIOMJWWW24OAkvtpHAlKT/Pxw=
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 10:40:21 -0000

On Mon, Apr 29, 2013 at 11:38 AM, Mark Shinwell
<mshinwell@janestreet.com> wrote:
> I might be misunderstanding something about Lwt here, but as far as I
> see it, this latter point is quite important.  I believe one of the
> most important features of Async is the fact that you cannot be
> interrupted "between binds" by some arbitrary other job---whereas I
> do not think that is the case with the Lwt semantics (as far as I know,
> the equivalent to filling an ivar could cause something else to be
> run immediately; is that correct?).

You are right.  The equivalent of Ivar.fill is Lwt.wakeup (not wait,
my mistake) and it runs all thunk functions immediately.  However I
believe that people don't often rely on this behavior and changing it
to be the same as async wouldn't be a problem.  In fact there is
already a Lwt.wakeup_later function in lwt since Lwt.wakeup can be
problematic. It used to cause a stack overflow in Lwt_mutex for
instance.  That would require an addition to the signature of the Lwt
module to still be able to use it in an environment without a
scheduler (basically running all pending jobs).

> I think it's worth noting the [Monitor] construct of Async here,
> which encapsulates jobs with wrappers to direct any exceptions they
> might throw to appropriate places.

Indeed.  In lwt such exceptions are captured inside the lwt monad.

From jdimino@janestreet.com  Mon Apr 29 11:45:30 2013
Return-Path: <jdimino@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-52.csi.cam.ac.uk (ppsw-52.csi.cam.ac.uk [131.111.8.152])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 3DC0D3C3F4
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 11:45:30 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1476734 
 * -2.4 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:56966
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-52.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtp id 1UWljE-0001nK-Db (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <jdimino@janestreet.com>); Mon, 29 Apr 2013 11:54:46 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWlit-0004h4-Qx
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:54:19 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <jdimino@janestreet.com>) id 1UWlit-0007lS-Q5
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:54:19 -0400
Received: from mail-ia0-f198.google.com ([209.85.210.198])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWlit-0000Vs-NM
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 06:54:19 -0400
Received: by mail-ia0-f198.google.com with SMTP id t4so18398524iag.5
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 03:54:19 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=lmEcDTeKbQipNY7+n/MLnWlOOOoZNXpwmHzy11G2lvk=;
 b=VvsraRaWmLwdPY5Amw971PXO6STBb0y5QvV3Uru87DnP09cXjszwxmfhlS9b6V0Psj
 1qixwINix4ib+CvcRr1uMdTnsVk1RuVcnumzNZqRQAkI1QOr3DYdsXJN442AmTXoVren
 U6GU1TS+xJ23LGDK7LnbfSBOwU1HACphzfQRo=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type:x-gm-message-state;
 bh=lmEcDTeKbQipNY7+n/MLnWlOOOoZNXpwmHzy11G2lvk=;
 b=BOjAOr5xlcjsTuW8T0ex+sN2ThNDJsgYm8opPncsKDXi5lCouLnqcHuLKj9vGDf33b
 gnjDO40k8U5aVjLMZVUH9ENNUcbSIdSdNKD4Y6iczlXYg9J14bvmRL0m079lXT/rgwIx
 dFDEnfr5qesNr/CZrCIBA4/6xFcWQSk8WlnJwVNu9HZ+msvZQ94wTlvsY8e7M5RToQuk
 zO6at9PNRQTBWnaDRtLrczR8YPLsTpJopqiT70zG2sO3+7yNnt22IFbJed/lXkBdhkOX
 6EopPQkrJ0aCR4nJS6dYtKdJzwMklOwXvTsqJk2Fh6Va2wIFn+wfdG5gDTuaLjJaWkq5
 9AfA==
X-Received: by 10.50.29.51 with SMTP id g19mr6997408igh.104.1367232859417;
 Mon, 29 Apr 2013 03:54:19 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.50.29.51 with SMTP id g19mr6997407igh.104.1367232859349;
 Mon, 29 Apr 2013 03:54:19 -0700 (PDT)
Received: by 10.50.50.171 with HTTP; Mon, 29 Apr 2013 03:54:19 -0700 (PDT)
In-Reply-To: <78149F76-FBA0-48C3-9F02-8A791F8FC630@recoil.org>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
 <78149F76-FBA0-48C3-9F02-8A791F8FC630@recoil.org>
Date: Mon, 29 Apr 2013 11:54:19 +0100
Message-ID: <CANhEzE5aADb42TEObD1AAUkossmOU4v3tdwhEdKxhan6bD4jRA@mail.gmail.com>
From: Jeremie Dimino <jdimino@janestreet.com>
To: Anil Madhavapeddy <anil@recoil.org>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQl4w9/DFfqx9CGLxo/r5RxuaVDfY9R8T6vI2JcZdW0xTQFoN1ZzDUFeJ6S4iLVH3mYTn9ghuYwKiUNPKZnOaCuYU2bxERFuyPtDCcckT6RvmaRp6ZP/16M/xGp4C6zByeETiCJZNzUagcGBxVNoGBe1MWbWtdeb0OF9K/Bbumu8hJuPeWY=
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 10:45:30 -0000

On Mon, Apr 29, 2013 at 11:48 AM, Anil Madhavapeddy <anil@recoil.org> wrote:
> If I understand this right, Lwt exposes `wakeup` and `wakeup_later`,
> and the latter defers the wakeup until the scheduler is entered again.
> Therefore, `wakeup_later` is most similar to Async's model.

Almost.  The idea is that Lwt.wakeup_later pushes pending jobs to a
global queue and they are run at the end of the topmost
Lwt.wakeup/Lwt.wakeup_later, to avoid a stack overflow in some cases.

> I'm not sure if there are other ways in Lwt to interrupt a running
> thread, aside from Lwt_preemptive.  Is it sufficient to alias Lwt.wakeup
> to Lwt.wakeup_later?

Yes but that's not enough, we also need to remove the code running
pending jobs from Lwt.wakeup/wakeup_later, put it in its own exported
function, and call this function in the scheduler.  In scheduler-free
environment the latter may have to be called in some hook or at the
end of callbacks.

From anil@recoil.org  Mon Apr 29 15:48:35 2013
Return-Path: <anil@recoil.org>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-52.csi.cam.ac.uk (ppsw-52.csi.cam.ac.uk [131.111.8.152])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id A19743C541
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 15:48:35 +0100 (BST)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.3.2-1476734
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from recoil.dh.bytemark.co.uk ([89.16.177.154]:7348
 helo=dark.recoil.org)
 by ppsw-52.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with smtp id 1UWpWa-0004ik-Cy (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <anil@recoil.org>); Mon, 29 Apr 2013 15:57:52 +0100
Received: (qmail 27796 invoked by uid 634); 29 Apr 2013 14:57:51 -0000
X-Spam-Level: *
X-Spam-Status: No, hits=-1.0 required=5.0
	tests=ALL_TRUSTED
X-Spam-Check-By: dark.recoil.org
Received: from host81-149-102-120.in-addr.btopenworld.com (HELO clink-4.home)
 (81.149.102.120)
 (smtp-auth username remote@recoil.org, mechanism cram-md5)
 by dark.recoil.org (qpsmtpd/0.84) with ESMTPA; Mon, 29 Apr 2013 15:57:51 +0100
Content-Type: text/plain; charset=iso-8859-1
Mime-Version: 1.0 (Mac OS X Mail 6.3 \(1503\))
From: Anil Madhavapeddy <anil@recoil.org>
In-Reply-To: <CANhEzE5aADb42TEObD1AAUkossmOU4v3tdwhEdKxhan6bD4jRA@mail.gmail.com>
Date: Mon, 29 Apr 2013 15:57:48 +0100
Content-Transfer-Encoding: quoted-printable
Message-Id: <3ED6C028-C723-482A-85DF-327A2677D93B@recoil.org>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
 <78149F76-FBA0-48C3-9F02-8A791F8FC630@recoil.org>
 <CANhEzE5aADb42TEObD1AAUkossmOU4v3tdwhEdKxhan6bD4jRA@mail.gmail.com>
To: Jeremie Dimino <jdimino@janestreet.com>
X-Mailer: Apple Mail (2.1503)
X-Virus-Checked: Checked by ClamAV on dark.recoil.org
Cc: wg-parallel@lists.ocaml.org, Romain Slootmaekers <romain@incubaid.com>
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 14:48:35 -0000

On 29 Apr 2013, at 11:54, Jeremie Dimino <jdimino@janestreet.com> wrote:

> On Mon, Apr 29, 2013 at 11:48 AM, Anil Madhavapeddy <anil@recoil.org> =
wrote:
>> If I understand this right, Lwt exposes `wakeup` and `wakeup_later`,
>> and the latter defers the wakeup until the scheduler is entered =
again.
>> Therefore, `wakeup_later` is most similar to Async's model.
>=20
> Almost.  The idea is that Lwt.wakeup_later pushes pending jobs to a
> global queue and they are run at the end of the topmost
> Lwt.wakeup/Lwt.wakeup_later, to avoid a stack overflow in some cases.
>=20
>> I'm not sure if there are other ways in Lwt to interrupt a running
>> thread, aside from Lwt_preemptive.  Is it sufficient to alias =
Lwt.wakeup
>> to Lwt.wakeup_later?
>=20
> Yes but that's not enough, we also need to remove the code running
> pending jobs from Lwt.wakeup/wakeup_later, put it in its own exported
> function, and call this function in the scheduler.  In scheduler-free
> environment the latter may have to be called in some hook or at the
> end of callbacks.

Got it. I don't have a feel for the performance impact of such deferred
scheduling, except that the difference between busy-spinning if there =
are
outstanding requests, vs dropping into select/kqueue/epoll more =
frequently
is very significant.

For example, the Arakoon folks anecdotally reported a 20x performance =
loss
between a direct Unix implementation of their database layer vs an Lwt
one.  A loss that large can only be explained by context switching or
pathological scheduling somewhere (given we know that Lwt doesn't result
in a lot more allocation on the major heap).
http://www.slideshare.net/eikke/arakoon (slide 14/15)
(I'm CCing Romain, who might have details).

Either way, this seems like a good time to establish a few simple
microbenchmarks such as a TCP iperf or HTTPbench, just to have a few
baseline numbers to evaluate such design decisions against.  I do =
believe
that the Async 'drop to scheduler' behaviour is far easier to understand
than Lwt's, but not if it costs an order of magnitude in I/O throughput.

-anil


From sweeks@janestreet.com  Mon Apr 29 15:57:55 2013
Return-Path: <sweeks@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id DE1B53C541
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 15:57:55 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1476734 
 * -2.4 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:45751
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UWpfW-0004uT-he (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <sweeks@janestreet.com>); Mon, 29 Apr 2013 16:07:12 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <sweeks@janestreet.com>) id 1UWpfB-0001hl-Ac
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 11:06:45 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <sweeks@janestreet.com>) id 1UWpfB-0002lj-9q
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 11:06:45 -0400
Received: from mail-vb0-f69.google.com ([209.85.212.69])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <sweeks@janestreet.com>) id 1UWpfB-0002Pi-7n
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 11:06:45 -0400
Received: by mail-vb0-f69.google.com with SMTP id x19so4394952vbf.4
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 08:06:45 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=8tTfji5nQdMtXkck1P4UFA7BM0SwasXpMgpB6SbW2Lw=;
 b=RXbBZubt566TPTcNXxsTkH4o/ftP5cbteCAM1o4uPMxEXpjNkjr1Gymq1++N8HvPa5
 Dj1xYHGGg5yyA52Tq6WANBoKT0zS1hxM27ouidHARks/0I+xl7gfuZ+cHy2E5+Uimy3B
 +pf2t8DJ9granRT3ixvjvHh4SNl3qzNhGEu1g=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type:x-gm-message-state;
 bh=8tTfji5nQdMtXkck1P4UFA7BM0SwasXpMgpB6SbW2Lw=;
 b=RbYHNwYcqWRgb43onPHjhYn2stitqxoV3MJLhyvWhRcysrpAV5wiHMBYU9JKX6WsyD
 hL7OPXhWQikDctclFWmMQBx8M5fj1HQVE0+IPLJ6UGY6S51bCB4GjiqFzOi1PFwUjfCU
 pFkqHj9f9eCUKN2+Mnkglcq5Yu3ZWR3mK7Ccs5opn3R6LkCikjMY7L76mt0PAWNPjcWH
 E4oEPO/CfU5BJfGuG/SdwlfTCSuglVq9qAItUwisXOtLs9iyhzeiKf2iY3WrZ3WxD6yL
 BQUd72V5GgmoCx0s1W6nsrNdmr6HZaiD5oYjdR5nD9kIFM+JYjBKusOxnMzsjATdv9Kh
 OZmQ==
X-Received: by 10.58.187.42 with SMTP id fp10mr33112739vec.46.1367248004860;
 Mon, 29 Apr 2013 08:06:44 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.58.187.42 with SMTP id fp10mr33112726vec.46.1367248004663;
 Mon, 29 Apr 2013 08:06:44 -0700 (PDT)
Received: by 10.220.219.18 with HTTP; Mon, 29 Apr 2013 08:06:44 -0700 (PDT)
In-Reply-To: <3ED6C028-C723-482A-85DF-327A2677D93B@recoil.org>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
 <78149F76-FBA0-48C3-9F02-8A791F8FC630@recoil.org>
 <CANhEzE5aADb42TEObD1AAUkossmOU4v3tdwhEdKxhan6bD4jRA@mail.gmail.com>
 <3ED6C028-C723-482A-85DF-327A2677D93B@recoil.org>
Date: Mon, 29 Apr 2013 11:06:44 -0400
Message-ID: <CAPYVAiKvC7XAXnyLBbZcQV_f_DBXUSmAfP0BXHs9i9cpmaQcyg@mail.gmail.com>
From: Stephen Weeks <sweeks@janestreet.com>
To: Anil Madhavapeddy <anil@recoil.org>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQmYnjT2/65WnxoFB2+Cy9xgXqX3NhVawskvIixsLhiKAnUOWTK1dyS7o5GMYO/9FR28+iz7RCr+3I/8aMVc2+AIbF7+xEOOekzvW2EQcQrc5RqlvVpTHtrfp/TmdP4Hxojf5I+MKDRNleM4u71TtEj7FKfzLTiAIKGa04Ha1EtovAJM78g=
Cc: wg-parallel@lists.ocaml.org, Romain Slootmaekers <romain@incubaid.com>
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 14:57:56 -0000

Async's approach shouldn't cause more select/epoll calls.  It is only
a different order in which the closures run.  It does require more
allocation, because one has to create a "job" to run later rather than
immediately run a closure.  But that's very small.  Plus, we have a
patch coming soon that will eliminate even that allocation, by reusing
the memory for jobs.

> Got it. I don't have a feel for the performance impact of such deferred
> scheduling, except that the difference between busy-spinning if there are
> outstanding requests, vs dropping into select/kqueue/epoll more frequently
> is very significant.
>
> For example, the Arakoon folks anecdotally reported a 20x performance loss
> between a direct Unix implementation of their database layer vs an Lwt
> one.  A loss that large can only be explained by context switching or
> pathological scheduling somewhere (given we know that Lwt doesn't result
> in a lot more allocation on the major heap).
> http://www.slideshare.net/eikke/arakoon (slide 14/15)
> (I'm CCing Romain, who might have details).
>
> Either way, this seems like a good time to establish a few simple
> microbenchmarks such as a TCP iperf or HTTPbench, just to have a few
> baseline numbers to evaluate such design decisions against.  I do believe
> that the Async 'drop to scheduler' behaviour is far easier to understand
> than Lwt's, but not if it costs an order of magnitude in I/O throughput.
>
> -anil
>
> _______________________________________________
> wg-parallel mailing list
> wg-parallel@lists.ocaml.org
> http://lists.ocaml.org/listinfo/wg-parallel

From jdimino@janestreet.com  Mon Apr 29 16:03:42 2013
Return-Path: <jdimino@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-32.csi.cam.ac.uk (ppsw-32.csi.cam.ac.uk [131.111.8.132])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 6570B3C541
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 16:03:42 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1476734 
 * -2.4 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:57454
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-32.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtp id 1UWpl7-0001CF-1s (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <jdimino@janestreet.com>); Mon, 29 Apr 2013 16:12:59 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWpkm-0002Ir-81
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 11:12:32 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <jdimino@janestreet.com>) id 1UWpkm-0004Op-7C
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 11:12:32 -0400
Received: from mail-ia0-f198.google.com ([209.85.210.198])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWpkm-0002c5-3o
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 11:12:32 -0400
Received: by mail-ia0-f198.google.com with SMTP id t4so19200015iag.9
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 08:12:31 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=pRxFR5p/byQ68aKwkGUn/K4eI9AzdNOcCVTD5fWzrCM=;
 b=kVQRybeN2RlXWnYIya66ceNPwRldLam2Omqp/ZFq0O/UIZwZqLrfOUlP3IDqPQLEwG
 6M4QP+hBatuGrHPuAEtRqheskGAUZBiaDmTjv67HDKu4M/b8ydT7dW46kvHLrWx7lxn1
 VpK6u5UtEUvm9tOmskcMoQ6Y1ckSrZzIchMBs=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type:x-gm-message-state;
 bh=pRxFR5p/byQ68aKwkGUn/K4eI9AzdNOcCVTD5fWzrCM=;
 b=bxI8rSXZmPAVhgW9ZFRW3Uv8PV7UXlQNZZIF9gdLOL9PVaaLwH5YeG/nhLz/IP321s
 bkQ+FCAzipFKFjrOPdyHgfiiv3MMMht+wQEbWkxcNUkflc0T8pjQ+HeJQNzqzBmkWhYR
 K2QEs7lSuyw9ohlqfAlxaB6dYd/Rua2C842jetQrsCSjv9fn9OObtLv3oz9UB6osKSdq
 2Av8Vg3Oqlo/COiCueA2odB85j798k2Tqtmhtk2wY/pqK3TaHpl2WnLO7TG0VebtU3Ye
 lHQRC4OmJrxWjfSit5V3XgBWJlRJPuIPe33VyYZ8KitlcIeV6PjmENoqMUBmSq9QdW2W
 lLUg==
X-Received: by 10.42.203.68 with SMTP id fh4mr14932230icb.36.1367248346152;
 Mon, 29 Apr 2013 08:12:26 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.42.203.68 with SMTP id fh4mr14932219icb.36.1367248346036;
 Mon, 29 Apr 2013 08:12:26 -0700 (PDT)
Received: by 10.50.50.171 with HTTP; Mon, 29 Apr 2013 08:12:25 -0700 (PDT)
In-Reply-To: <3ED6C028-C723-482A-85DF-327A2677D93B@recoil.org>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
 <78149F76-FBA0-48C3-9F02-8A791F8FC630@recoil.org>
 <CANhEzE5aADb42TEObD1AAUkossmOU4v3tdwhEdKxhan6bD4jRA@mail.gmail.com>
 <3ED6C028-C723-482A-85DF-327A2677D93B@recoil.org>
Date: Mon, 29 Apr 2013 16:12:25 +0100
Message-ID: <CANhEzE7Eb19vEhi9DKeLqCydZVr=kjVeWGDUHwHkT+CANn2cdA@mail.gmail.com>
From: Jeremie Dimino <jdimino@janestreet.com>
To: Anil Madhavapeddy <anil@recoil.org>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQkI7Z2XOnKAIOSp5ZZ/5vt+hYPLMqbtfOG/v3L7iKzgMmNITkKlCBb+NKBH0LIWX8DyhMTHHv/J1rzp0r1H5ufXtCnhUgamlvtXVt8QIXwHxEVymo1+HPQe35g5hjnGD5qa3uAkkny2kTtIYHn65+QZwjJvRBg19PYUhozxQnazJFCFffo=
Cc: wg-parallel@lists.ocaml.org, Romain Slootmaekers <romain@incubaid.com>
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 15:03:42 -0000

On Mon, Apr 29, 2013 at 3:57 PM, Anil Madhavapeddy <anil@recoil.org> wrote:
> Got it. I don't have a feel for the performance impact of such deferred
> scheduling, except that the difference between busy-spinning if there are
> outstanding requests, vs dropping into select/kqueue/epoll more frequently
> is very significant.

As Stephen said there shouldn't be more select/kqueue/epoll calls.
The idea is to run all jobs until there is no one left (with a limit)
before doing the blocking select/kqueue/epoll call.

> For example, the Arakoon folks anecdotally reported a 20x performance loss
> between a direct Unix implementation of their database layer vs an Lwt
> one.  A loss that large can only be explained by context switching or
> pathological scheduling somewhere (given we know that Lwt doesn't result
> in a lot more allocation on the major heap).
> http://www.slideshare.net/eikke/arakoon (slide 14/15)
> (I'm CCing Romain, who might have details).

I believe this was about the disk IO.  Disk IO are done using
preemptive threads since unix doesn't support asynchronous disk IO.
When data are cached it is indeed much slower.  You can get about the
same as direct IO after some tweaking: set the async_method to
'switch' and force the process to run only on one cpu. But the switch
method doesn't work with the threaded runtime.

From anil@recoil.org  Mon Apr 29 16:25:43 2013
Return-Path: <anil@recoil.org>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-52.csi.cam.ac.uk (ppsw-52.csi.cam.ac.uk [131.111.8.152])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 31A113C541
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 16:25:43 +0100 (BST)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.3.2-1476734
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from recoil.dh.bytemark.co.uk ([89.16.177.154]:42988
 helo=dark.recoil.org)
 by ppsw-52.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with smtp id 1UWq6V-0005U2-Dt (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <anil@recoil.org>); Mon, 29 Apr 2013 16:35:00 +0100
Received: (qmail 3130 invoked by uid 634); 29 Apr 2013 15:34:59 -0000
X-Spam-Level: *
X-Spam-Status: No, hits=-1.0 required=5.0
	tests=ALL_TRUSTED
X-Spam-Check-By: dark.recoil.org
Received: from host81-149-102-120.in-addr.btopenworld.com (HELO clink-4.home)
 (81.149.102.120)
 (smtp-auth username remote@recoil.org, mechanism cram-md5)
 by dark.recoil.org (qpsmtpd/0.84) with ESMTPA; Mon, 29 Apr 2013 16:34:56 +0100
Content-Type: text/plain; charset=iso-8859-1
Mime-Version: 1.0 (Mac OS X Mail 6.3 \(1503\))
From: Anil Madhavapeddy <anil@recoil.org>
In-Reply-To: <CANhEzE7Eb19vEhi9DKeLqCydZVr=kjVeWGDUHwHkT+CANn2cdA@mail.gmail.com>
Date: Mon, 29 Apr 2013 16:34:56 +0100
Content-Transfer-Encoding: 7bit
Message-Id: <514F0BA1-6F86-414D-88DC-9D731009C74B@recoil.org>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
 <78149F76-FBA0-48C3-9F02-8A791F8FC630@recoil.org>
 <CANhEzE5aADb42TEObD1AAUkossmOU4v3tdwhEdKxhan6bD4jRA@mail.gmail.com>
 <3ED6C028-C723-482A-85DF-327A2677D93B@recoil.org>
 <CANhEzE7Eb19vEhi9DKeLqCydZVr=kjVeWGDUHwHkT+CANn2cdA@mail.gmail.com>
To: Jeremie Dimino <jdimino@janestreet.com>
X-Mailer: Apple Mail (2.1503)
X-Virus-Checked: Checked by ClamAV on dark.recoil.org
Cc: Dave Scott <Dave.Scott@eu.citrix.com>, Vsevolod Stakhov <vs374@cam.ac.uk>,
 wg-parallel@lists.ocaml.org, Romain Slootmaekers <romain@incubaid.com>
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 15:25:43 -0000

On 29 Apr 2013, at 16:12, Jeremie Dimino <jdimino@janestreet.com> wrote:

> On Mon, Apr 29, 2013 at 3:57 PM, Anil Madhavapeddy <anil@recoil.org> wrote:
>> Got it. I don't have a feel for the performance impact of such deferred
>> scheduling, except that the difference between busy-spinning if there are
>> outstanding requests, vs dropping into select/kqueue/epoll more frequently
>> is very significant.
> 
> As Stephen said there shouldn't be more select/kqueue/epoll calls.
> The idea is to run all jobs until there is no one left (with a limit)
> before doing the blocking select/kqueue/epoll call.
> 
>> For example, the Arakoon folks anecdotally reported a 20x performance loss
>> between a direct Unix implementation of their database layer vs an Lwt
>> one.  A loss that large can only be explained by context switching or
>> pathological scheduling somewhere (given we know that Lwt doesn't result
>> in a lot more allocation on the major heap).
>> http://www.slideshare.net/eikke/arakoon (slide 14/15)
>> (I'm CCing Romain, who might have details).
> 
> I believe this was about the disk IO.  Disk IO are done using
> preemptive threads since unix doesn't support asynchronous disk IO.

Right... and at the block level and not the filesystem level.  Many
modern operating systems do expose an async block interface that isn't
POSIX that would be better to bind against than POSIX AIO, such as
libaio on Linux.

However, the specific decision of block scheduler depends on whether
your writes are page-aligned (so that O_DIRECT is suitable), and if
you need kernel-level elevator scheduling (often more harmful than
good on VMs or large RAID arrays with many spindles).

> When data are cached it is indeed much slower.  You can get about the
> same as direct IO after some tweaking: set the async_method to
> 'switch' and force the process to run only on one cpu. But the switch
> method doesn't work with the threaded runtime.

Yeah, I'd say that most high-performance databases gave up trying to do
anything useful with POSIX AIO a long time ago, and are mostly O_DIRECT
based.  At the filesystem layer, there are similar extensions in Linux
to query the internal details of filesystem layouts via fiemap [1,2].

One of our PhD students has also been noticing similar performance
artefacts for *network* traffic in the matrix of operating system,
destination (localhost vs remote) and protocol (TCP/UDP/pipe/shmem).

All of this makes me worry that we're entering a mire of cross-platform
issues as Async goes more open.  libuv [3], for example, takes care of
many of these async-IO issues, and has a large userbase thanks to our
Javascript-loving friends at Nodejs.  I wonder if a good intern project
would be to bind libuv to Async and test its performance profile vs
the current tree...


[1] https://github.com/Incubaid/baardskeerder/blob/master/src/posix.c
[2] http://lwn.net/Articles/297696/

From jdimino@janestreet.com  Mon Apr 29 16:39:50 2013
Return-Path: <jdimino@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id F29BB3C541
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 16:39:49 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1476734 
 * -2.4 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:53677
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UWqK4-0005kO-hw (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <jdimino@janestreet.com>); Mon, 29 Apr 2013 16:49:07 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWqJj-0006KG-Ux
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 11:48:39 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <jdimino@janestreet.com>) id 1UWqJj-0006Ec-Sj
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 11:48:39 -0400
Received: from mail-ie0-f197.google.com ([209.85.223.197])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWqJj-0004BI-Pm
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 11:48:39 -0400
Received: by mail-ie0-f197.google.com with SMTP id a11so34271315iee.8
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 08:48:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=BzonB985RJbf7h3yKybG3cIkgENbtdM0VQl+/i4uPXI=;
 b=XjUUeMl/S9jwROFJ/kW6OeWBgUReGk+igGua6PRJlQaPGirCvrlxvjAcLMEMoikv3C
 +nTP8HfKbtQRQuq9fIEbUPaKZlDsOVsOkuAep5yBqXbsxom5WlwLiw2tpPMwFNhzNeuz
 EH1pwnSjlZ5jVD9wWmVG2U2Nlf5nW493Pv1i4=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type:x-gm-message-state;
 bh=BzonB985RJbf7h3yKybG3cIkgENbtdM0VQl+/i4uPXI=;
 b=H0xvrzuF4HQkZMlL4Tp0anEPqO3RO7Vvhp5js5Uvavy/UbV4LhAN6dhk95jKBjdAr7
 1oGLntXuzY+Ico0BDAvSy38e4gW59H6WThD3iHRGTfssshn7T0fMD+Z6hRuR5Y4sB2MF
 rhZL4JFcaShkadkjnQ9S8jIUkcowyWa+tnVcEMJ8iRa7e1ZQrVPbCJH1RCuf4B81Xsdo
 uun7+2L4geF6rCio6mLcGdDei3xTQNFzCr00lW3zuw4HOw3fTxzLW63J2VprSMDa6THp
 ztB4L+zHxUfyhOxCVtKZCLAs4PRTz1EsKYXZ+XfIOC9LRrySBzBlD4/mY75G7dHqdloj
 vtWA==
X-Received: by 10.50.109.166 with SMTP id ht6mr7635434igb.26.1367250519516;
 Mon, 29 Apr 2013 08:48:39 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.50.109.166 with SMTP id ht6mr7635430igb.26.1367250519455;
 Mon, 29 Apr 2013 08:48:39 -0700 (PDT)
Received: by 10.50.50.171 with HTTP; Mon, 29 Apr 2013 08:48:39 -0700 (PDT)
In-Reply-To: <514F0BA1-6F86-414D-88DC-9D731009C74B@recoil.org>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
 <78149F76-FBA0-48C3-9F02-8A791F8FC630@recoil.org>
 <CANhEzE5aADb42TEObD1AAUkossmOU4v3tdwhEdKxhan6bD4jRA@mail.gmail.com>
 <3ED6C028-C723-482A-85DF-327A2677D93B@recoil.org>
 <CANhEzE7Eb19vEhi9DKeLqCydZVr=kjVeWGDUHwHkT+CANn2cdA@mail.gmail.com>
 <514F0BA1-6F86-414D-88DC-9D731009C74B@recoil.org>
Date: Mon, 29 Apr 2013 16:48:39 +0100
Message-ID: <CANhEzE41SzZd+0C5dniq6hS0E9Vi7s6_iC3CQtCu9X8ikmwv4w@mail.gmail.com>
From: Jeremie Dimino <jdimino@janestreet.com>
To: Anil Madhavapeddy <anil@recoil.org>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQnOfEqc54lJnv0kRdphPtLnuKnYBwMwFUdpEz+hOR5r5ZMsKd7GvoUvJxQMRcyi6PqTqBbw2YOo9c07L0nrugSDNca0Mo+2L81j3kzQs6yapN6AaGPrVxu6E7uVdP8jXWIVcBrLXXnk9I8MLMD33r22/HRQbib+RIq8Jxur1ILCAsaNl0k=
Cc: Dave Scott <Dave.Scott@eu.citrix.com>, Vsevolod Stakhov <vs374@cam.ac.uk>,
 wg-parallel@lists.ocaml.org, Romain Slootmaekers <romain@incubaid.com>
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 15:39:50 -0000

On Mon, Apr 29, 2013 at 4:34 PM, Anil Madhavapeddy <anil@recoil.org> wrote:
> Right... and at the block level and not the filesystem level.  Many
> modern operating systems do expose an async block interface that isn't
> POSIX that would be better to bind against than POSIX AIO, such as
> libaio on Linux.

Yeah, I did a few experiments with that.  We could bind to libaio but
definitely not make it the default.  It requires O_DIRECT which
destroys performances when data are already cached by the kernel.
Also it transparently default to synchronous IO when AIO is not
supported by the filesystem and there is no way to detect it.

So it could be a third-party library for specific use but cannot
replace the generic disk IO interface.

> All of this makes me worry that we're entering a mire of cross-platform
> issues as Async goes more open.  libuv [3], for example, takes care of
> many of these async-IO issues, and has a large userbase thanks to our
> Javascript-loving friends at Nodejs.  I wonder if a good intern project
> would be to bind libuv to Async and test its performance profile vs
> the current tree...

Interesting.  I think it would be worth trying.

From jdimino@janestreet.com  Mon Apr 29 16:53:04 2013
Return-Path: <jdimino@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 536AE3C541
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 16:53:04 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1476734 
 * -2.4 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:56379
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UWqWt-0002U7-if (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <jdimino@janestreet.com>); Mon, 29 Apr 2013 17:02:21 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWqWZ-0007ul-3Z
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 12:01:55 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <jdimino@janestreet.com>) id 1UWqWZ-0001ua-2O
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 12:01:55 -0400
Received: from mail-ob0-f199.google.com ([209.85.214.199])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UWqWY-0004kH-VZ
 for wg-parallel@lists.ocaml.org; Mon, 29 Apr 2013 12:01:55 -0400
Received: by mail-ob0-f199.google.com with SMTP id wp18so34947801obc.10
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 09:01:54 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=RZhX/HlI+hx/cE+es+Cc83wr3odKjZDkJA+TMN5Igig=;
 b=nekUyYG3BkbwI7Fa6nFAhMTSN1DX/fDNEN/tE8qa3zr3OpRjIl0C48O0OKBrLKCKps
 U5NNQiFGkXy22+yH0TWxjrYh3xq8xIZJm8NAZqtsU/TgOb3BYOieViTfpCS4w3AaY/Bh
 e1ZPJwyrtaCi7FZaMfkrbFM95WktnKPBddZ1Q=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type:x-gm-message-state;
 bh=RZhX/HlI+hx/cE+es+Cc83wr3odKjZDkJA+TMN5Igig=;
 b=PAguMI4nePGFd/9oKEwGrHs2D8EuphEwPjy4P/HTde+sZ/DiKbIL3m1EF8uvV8ood9
 tEdoADUhvIsgZnXTXL8wt0JUDjWAvrFxX/sljbxwIoMbMDfs+Wvpd7w0IXcSFhcIXg3f
 XKJ7wUosQkKuifYTIJeGW8OWcHVYCcLKonDmSZM7kUj4fsWrnyYIVT5YiijaXkJwWQ+F
 +BAN1EB+MoQob+3Y3exTgkJk4ULKqXZyx/nYcgMbYSq8jBprf6eqT7C1lDpdTZLv2R4z
 nGwE7J+WH0bn2ZInKYDDU2hMolMroE1vOYv1E6GaSsWr+YRn4DLyN1pOStQs3XhdNHMC
 lw4w==
X-Received: by 10.50.49.65 with SMTP id s1mr1284258ign.26.1367251314610;
 Mon, 29 Apr 2013 09:01:54 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.50.49.65 with SMTP id s1mr1284252ign.26.1367251314545; Mon,
 29 Apr 2013 09:01:54 -0700 (PDT)
Received: by 10.50.50.171 with HTTP; Mon, 29 Apr 2013 09:01:54 -0700 (PDT)
In-Reply-To: <517E97DA.3000800@incubaid.com>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
 <78149F76-FBA0-48C3-9F02-8A791F8FC630@recoil.org>
 <CANhEzE5aADb42TEObD1AAUkossmOU4v3tdwhEdKxhan6bD4jRA@mail.gmail.com>
 <3ED6C028-C723-482A-85DF-327A2677D93B@recoil.org>
 <CANhEzE7Eb19vEhi9DKeLqCydZVr=kjVeWGDUHwHkT+CANn2cdA@mail.gmail.com>
 <517E97DA.3000800@incubaid.com>
Date: Mon, 29 Apr 2013 17:01:54 +0100
Message-ID: <CANhEzE5Mxcnb-E9KGN1m83_6C0KzFdaqEuf3xC2SHmm8DR05VA@mail.gmail.com>
From: Jeremie Dimino <jdimino@janestreet.com>
To: Romain Slootmaekers <romain@incubaid.com>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQl6cqRka54Pa/kgHZWkuNZghBhtyOHOhkXtGzN2OnroursgBT0NRbWyLRlThfZwdvsVHHbxpw9MUBeD4B6aZqh3Rw/uH9VTWNSlVujC1U5K8xl7siTzQQFawyUIGUDdcpDF+iUPpU1l+sVYoYgw2OjAQxpAkQ2p7pHSvJf1sV+rfHcYtHk=
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 15:53:04 -0000

On Mon, Apr 29, 2013 at 4:55 PM, Romain Slootmaekers
<romain@incubaid.com> wrote:
> Posix is indeed broken for all things related to file IO.
> * not all file descriptors are equal:
> [select on a file descriptor for a regular file, always returns true, while
> for a socket you get more relevant results]

Yeah, in the POSIX world blocking means an operation that can block
forever, like reading on a socket.  Reading from a regular file is not
considered as blocking for instance because the data are there on the
disk so you will get them at some point, even if it takes ages because
the disk is slow or because it is in fact a NFS.

> In essence: the situation is a mess.

True.


Jeremie

From romain@incubaid.com  Mon Apr 29 16:45:52 2013
Return-Path: <romain@incubaid.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id B4C203C541
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 16:45:52 +0100 (BST)
X-Cam-SpamDetails: score -0.7 from SpamAssassin-3.3.2-1476734 
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at http://www.dnswl.org/, low
 *      trust
 *      [74.125.83.53 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mail-ee0-f53.google.com ([74.125.83.53]:40536)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UWqQ1-0008B3-gS (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <romain@incubaid.com>); Mon, 29 Apr 2013 16:55:09 +0100
Received: by mail-ee0-f53.google.com with SMTP id d17so2645865eek.26
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 08:55:08 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:message-id:date:from:user-agent:mime-version:to:cc
 :subject:references:in-reply-to:content-type
 :content-transfer-encoding:x-gm-message-state;
 bh=FFrjHjgbXnNBPHghBBWFPu/Z5VBVfFfUq+rT/8l+/XQ=;
 b=lcQ8VhwQv3YdECfVIkGbmrPIkOxICPUQLJSEmLqeq2tt4ihwqYcDS43qdBjH9tmatu
 /5y1WXs+TFdgu4tO3jveFwy9LQqj2jsHg0h9eU3Lmd5PMPwlf7XTrg9aRNMGgwUuBeHM
 3vByMgkE8453ktMgW0lyky5LVNKa7e/xZlE3/ehAcpHtWJ/NrhrZ9jVXk4iawGDqrkhA
 nptML9iJ3Q0UDqbXjjfOjqUYu01Wt/cODlVvv40Ug/17qA3Biovbq7zZnEb3zZeVKXXX
 2W3LnxN1MZyZbgHQIaYNpVF754Ogm2QprJC0hm7FOBPLRFkxNFsg4yNd8xLofvqm/0Q0
 3kJg==
X-Received: by 10.15.95.74 with SMTP id bc50mr99111926eeb.36.1367250908612;
 Mon, 29 Apr 2013 08:55:08 -0700 (PDT)
Received: from [192.168.252.70] ([85.255.197.126])
 by mx.google.com with ESMTPSA id bj2sm33600876eeb.1.2013.04.29.08.55.07
 for <multiple recipients>
 (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
 Mon, 29 Apr 2013 08:55:07 -0700 (PDT)
Message-ID: <517E97DA.3000800@incubaid.com>
Date: Mon, 29 Apr 2013 17:55:06 +0200
From: Romain Slootmaekers <romain@incubaid.com>
User-Agent: Mozilla/5.0 (X11; Linux x86_64;
 rv:17.0) Gecko/20130329 Thunderbird/17.0.5
MIME-Version: 1.0
To: Jeremie Dimino <jdimino@janestreet.com>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CAM3Ki77FrZGJHu2WH6OLLwiNW-YytY4SJnA=3S7sT-n467PDKQ@mail.gmail.com>
 <78149F76-FBA0-48C3-9F02-8A791F8FC630@recoil.org>
 <CANhEzE5aADb42TEObD1AAUkossmOU4v3tdwhEdKxhan6bD4jRA@mail.gmail.com>
 <3ED6C028-C723-482A-85DF-327A2677D93B@recoil.org>
 <CANhEzE7Eb19vEhi9DKeLqCydZVr=kjVeWGDUHwHkT+CANn2cdA@mail.gmail.com>
In-Reply-To: <CANhEzE7Eb19vEhi9DKeLqCydZVr=kjVeWGDUHwHkT+CANn2cdA@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Gm-Message-State: ALoCoQkiyUQPDk70dz3Bfta4OI09KpP1cDECXLqVOiE4dCnv+wZ7g8l0qgmx6DsoRiCPR1jAnoUQ
X-Mailman-Approved-At: Mon, 29 Apr 2013 16:53:09 +0100
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 15:45:52 -0000

On 04/29/2013 05:12 PM, Jeremie Dimino wrote:
> On Mon, Apr 29, 2013 at 3:57 PM, Anil Madhavapeddy <anil@recoil.org> wrote:
>> Got it. I don't have a feel for the performance impact of such deferred
>> scheduling, except that the difference between busy-spinning if there are
>> outstanding requests, vs dropping into select/kqueue/epoll more frequently
>> is very significant.
> As Stephen said there shouldn't be more select/kqueue/epoll calls.
> The idea is to run all jobs until there is no one left (with a limit)
> before doing the blocking select/kqueue/epoll call.
>
>> For example, the Arakoon folks anecdotally reported a 20x performance loss
>> between a direct Unix implementation of their database layer vs an Lwt
>> one.  A loss that large can only be explained by context switching or
>> pathological scheduling somewhere (given we know that Lwt doesn't result
>> in a lot more allocation on the major heap).
>> http://www.slideshare.net/eikke/arakoon (slide 14/15)
>> (I'm CCing Romain, who might have details).
> I believe this was about the disk IO.  Disk IO are done using
> preemptive threads since unix doesn't support asynchronous disk IO.
> When data are cached it is indeed much slower.  You can get about the
> same as direct IO after some tweaking: set the async_method to
> 'switch' and force the process to run only on one cpu. But the switch
> method doesn't work with the threaded runtime.
Yes. it was about disk IO, on Linux.

(from the top of my head, we did something like this:

     Lwt_unix.execute_job
-            (pread_job (Lwt_unix.unix_file_descr ch) len offset)
-            (fun job -> pread_result job buf pos)
-            pread_free


which was dead slow.


At that point in time, we also experimented with Lwt_unix.Async_switch
but that gave SEGVs

Some more remarks:
we have seen scheduling differences between different Lwt versions,
In the past, the scheduling was eager, while the current one is very 
round-robin-ish,
and performance impact for us is about -10%. (we have no problem with 
that, it's just an observation)

Posix is indeed broken for all things related to file IO.
* not all file descriptors are equal:
[select on a file descriptor for a regular file, always returns true, 
while for a socket you get more relevant results]
* things can have empty implementations (fe I believe the fsync 
implementation on OSX is something like this:
    int fsync(int fd) {return 0;}

    )

* for a lot of behaviour,
   you depend on file system choices and sys-admin choices (mount options)
   and they have a talent for the wrong choices.


In essence: the situation is a mess.

have fun,

Romain.



From yminsky@gmail.com  Mon Apr 29 20:31:45 2013
Return-Path: <yminsky@gmail.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-32.csi.cam.ac.uk (ppsw-32.csi.cam.ac.uk [131.111.8.132])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 0D0FF3C541
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 20:31:45 +0100 (BST)
X-Cam-SpamDetails: score 0.6 from SpamAssassin-3.3.2-1476734 
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at http://www.dnswl.org/, low
 *      trust
 *      [209.85.212.175 listed in list.dnswl.dnsbl.ja.net]
 *  0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 *       (yminsky[at]gmail.com)
 *  0.0 DKIM_ADSP_CUSTOM_MED No valid author signature, adsp_override is
 *      CUSTOM_MED
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
 *  1.2 NML_ADSP_CUSTOM_MED ADSP custom_med hit, and not from a mailing
 *      list
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mail-wi0-f175.google.com ([209.85.212.175]:47480)
 by ppsw-32.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtp id 1UWtwb-0006pr-2S (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <yminsky@gmail.com>); Mon, 29 Apr 2013 20:41:02 +0100
Received: by mail-wi0-f175.google.com with SMTP id h11so3167697wiv.2
 for <wg-parallel@lists.ocaml.org>; Mon, 29 Apr 2013 12:41:01 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:x-received:reply-to:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=NuL9kubDdbHMPmgdnke7fFFB038AnHeeEktZDaPCte4=;
 b=MhpmPDm3HF/3dpjYVoRcxAg3PEIRcUS44ikuACQnfneh+3bLLYj9LRa5Cik4txB2c6
 Suq+OE9HkaVul4EptDjkVNEEflXu6sEtxVw2xCo1FIV2DWSFibl5jOOGw7Q1r/AeYkSY
 MuIJu6rOpk0fHPDrNXGvxeCqOfnErlxk0Od0bS5QLVtzxGwL7kSSiOAZDaMDVzaOE+Bt
 e6n8gk6qRqk7V6BmwPY+IKdBtu2sOHYEqnEXBYGcibacXaPEiq3p/9PqG9hro7fNESqs
 vdC8qrKQOvDHYYejK8rHjTPKeiEg0oYxioodhMOvXoSYOjE3NffSPFbhIkg45HD8NhdD
 91lw==
MIME-Version: 1.0
X-Received: by 10.180.83.199 with SMTP id s7mr20112925wiy.19.1367264461472;
 Mon, 29 Apr 2013 12:41:01 -0700 (PDT)
Received: by 10.194.178.69 with HTTP; Mon, 29 Apr 2013 12:41:01 -0700 (PDT)
In-Reply-To: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
Date: Mon, 29 Apr 2013 15:41:01 -0400
Message-ID: <CADKNfhJe7wWOuPjOMEXc7y5BZ1EPJVhqvhcb1HcfDL60rBqJvw@mail.gmail.com>
From: Yaron Minsky <yminsky@gmail.com>
To: Jeremie Dimino <jdimino@janestreet.com>
Content-Type: text/plain; charset=ISO-8859-1
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
Reply-To: yminsky@gmail.com
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 29 Apr 2013 19:31:45 -0000

I'm not sure that the right goal is "to make them evolve so they are
close enough".  If we're going to end up with just one implementation,
it's hard for me to see how it's not going to be Async, because Jane
Street is not going to be able to move away from Async as a practical
matter.

If people sign on to that understanding (a big if), then we should
focus less on evolving the two towards each other, and more on:

- Making Async more hospitable to LWT users
- Making it easier to interoperate between the two in the meantime

In terms of hospitality, there are a few clear things to do that Jane
Street can work on directly.

  - Breaking out Core and Async to have _kernel_ versions (e.g.,
    Core_kernel and Async_kernel) that don't depend on things like
    threads, C-bindings or objects.

  - Rearrange functionality so that you have the maximum available
    functionality when you're only using the kernel.

  - add an "immediate deferred" version of the Deferred monad that has
    the semantics that Lwt users are used to that the RHS of a bind
    whose LHS is filled in fires immediately.

There are also some pieces we're less well equipped to do, in
particular, porting to Windows and Javascript.  The windows part in
particular is perhaps an area where we can get help from OCamlPro.

Here are some other things that might help:

- Have a skin to the Async library that is easier to use without
  Core.  I suspect that opening Async.Std without opening Core.Std is
  already not a complete disaster, but there's probably a less
  invasive wrapper for Core that could help here, and maybe an
  alternate layout for Async.  Anil, do you have a view as to what's
  needed here?  Have you tried Async without opening Core.Std?

- Have a skin for Async that makes transitioning over from Lwt easier.
  I'm not sure whether this makes sense, but it certainly seems
  reasonable.  Maybe we can get some experience porting some existing
  Lwt code over and figure out what the pain points are.

In terms of interop, making an LWT equivalent of Async-RPC certainly
seems appealing.  I don't know if there are any other reasonable
interop tricks that one could want.  You could imagine having an
in-process Lwt/Async interop layer, but I suspect that madness lies
that way....

y

On Mon, Apr 29, 2013 at 6:18 AM, Jeremie Dimino <jdimino@janestreet.com> wrote:
> Hi everybody and welcome to the wg-parallel mailing list,
>
> The aim of this group is to discuss the future of monadic cooperative
> concurrent programing in OCaml.  There are currently two well-known
> libraries for that purpose, lwt and async. Lwt is historically the
> first one, async was developed at Jane Street and has been
> open-sourced recently.
>
> These libraries are quite 'invasive' since they require to write the
> code in a cooperative way.  It is not possible to use both of them in
> the same program and even if a third-party library can sometime be
> made to work with both, it is in general complex and not very
> convenient.
>
> So while they are both important having two such 'core' and
> incompatible libraries is not a very good thing for the OCaml
> community.  Switching brutally from one to the other is not realistic
> since it would require a huge amount of time and efforts.  The idea
> would be to make them evolve so they are close enough and, if
> possible, eventually have only one.
>
> One strategy developped by big projects using both lwt and async such
> as Mirage/Xen is to interact at the RPC level.  This can be done on
> top of lwt and async without modifying them and there are people
> working in this direction.
>
> They are currently two big semantic divergences in the kernel of both
> libraries: execution order and error handling. Plus they are a number
> of other more or less important differences.  I try to describe them
> in the rest of this email.
>
> Semantic of bind
> ----------------
>
> The general idea in lwt is to run the most it can immediatly and
> yielding is always explicit, while in async the precedence is given to
> knowing exactly when the code is going to be executed.
>
> So for [return x >>= f]:
>
> - lwt evaluates [f x] immediatly
> - async returns a non-determined deferred and will evaluate [f x]
> during the next cycle
>
> This semantic of the bind is very important for lwt users, but async
> is already planning to add a second monad with lwt's behavior, so it
> shouldn't be an issue.
>
> Lwt and async also differs regarding Lwt.wait/Ivar.fill but there
> seems to be an agreement that the async's behavior is better and it is
> trivial to change in lwt so that shouldn't be an issue.
>
> Error handling
> --------------
>
> The ['a Lwt.t] type 'inline' the error monad [Value of 'a | Error of
> exn] while in async all errors are explicit.  So the async equivalent
> of ['a Lwt.t] would be [('a, exn) Result.t Deferred.t].
>
> As a result, while most functions in lwt return a [something Lwt.t],
> in async they return a variant or a [something Or_error.t Deferred.t]
> when the result may be an error status.
>
> This may be tedious to handle.
>
> Local storage
> -------------
>
> Lwt allows to define global variables with different values in
> different threads.  This was introduced so logs can display 'thread
> identifiers' but is now also used for other things.  Async internally
> has such a mechanism, it could be adapted and exported.
>
> Scheduler
> ---------
>
> The kernel of lwt can be used without a scheduler, which is important
> for javascript for instance.  The scheduler is part of the lwt.unix
> package and can be run multiple times in the lifetime of a program.
>
> This is not true for async but it is something that can be considered.
>
> Portability
> -----------
>
> The kernel of lwt depends only on the standard library and has no C.
> As a result it is very portable and can be used without problem in
> javascript or any other exotic environment.
>
> The kernel of async (Async_core) currently depends on Core which
> depends on Unix and contains C bindings.  It is planned to split Core
> to get a small kernel for Core and Async.
>
> Lwt is also more portable, for example it runs on Windows.  Windows
> support could be added to Async.
>
> There are questions about whether this should be done like in
> unix/lwt.unix, i.e. emulate unix's behavior on Windows, or binds the
> Win32 API directly and write the dispatching code in OCaml.
>
> General experience
> ------------------
>
> Async is part of the core suite and use core's convention.  Code using
> it starts with:
>
>     open Core.Std
>     open Async.Std
>
> which brings all the core and async world into the environment.
>
> The core style is generally considered better and async has a huge
> number of utilities well integrated together, but switching code to it
> may require a lot of work.
>
> On the other hand lwt is more independent so it is easier to integrate
> it into an existing project.
>
>
>
> In conclusion there is a lot to think about but no blocker.
>
> Jeremie
> _______________________________________________
> wg-parallel mailing list
> wg-parallel@lists.ocaml.org
> http://lists.ocaml.org/listinfo/wg-parallel

From vincent.balat@univ-paris-diderot.fr  Tue Apr 30 13:34:16 2013
Return-Path: <vincent.balat@univ-paris-diderot.fr>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-mx-f.csi.cam.ac.uk [131.111.8.149])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 4A6053C3F4
 for <wg-parallel@lists.ocaml.org>; Tue, 30 Apr 2013 13:34:16 +0100 (BST)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.3.2-1476922
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from korolev.univ-paris7.fr ([194.254.61.138]:50842)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtp id 1UX9uB-0003bg-9A (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <vincent.balat@univ-paris-diderot.fr>);
 Tue, 30 Apr 2013 13:43:36 +0100
Received: from mailhub.math.univ-paris-diderot.fr
 (mailhub.math.univ-paris-diderot.fr [81.194.30.253])
 by korolev.univ-paris7.fr (8.14.4/8.14.4/relay1/38117) with ESMTP id
 r3UChQZ4030866; Tue, 30 Apr 2013 14:43:26 +0200
Received: from mailhub.math.univ-paris-diderot.fr (localhost [127.0.0.1])
 by mailhub.math.univ-paris-diderot.fr (Postfix) with ESMTP id 502E14C0A7;
 Tue, 30 Apr 2013 14:43:26 +0200 (CEST)
X-Virus-Scanned: amavisd-new at math.univ-paris-diderot.fr
Received: from mailhub.math.univ-paris-diderot.fr ([127.0.0.1])
 by mailhub.math.univ-paris-diderot.fr (mailhub.math.univ-paris-diderot.fr
 [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id vuf7eT9wT0sK; Tue, 30 Apr 2013 14:43:25 +0200 (CEST)
Received: from magnesium.localnet (unknown [172.23.36.32])
 (Authenticated sender: balat)
 by mailhub.math.univ-paris-diderot.fr (Postfix) with ESMTPSA id 388C54C0A6;
 Tue, 30 Apr 2013 14:43:25 +0200 (CEST)
From: Vincent Balat <vincent.balat@univ-paris-diderot.fr>
Organization: Laboratoire PPS - CNRS - =?iso-8859-1?q?Universit=E9_Paris?=
 Diderot
To: wg-parallel@lists.ocaml.org, yminsky@gmail.com
Date: Tue, 30 Apr 2013 14:43:18 +0200
User-Agent: KMail/1.13.7 (Linux/3.2.0-4-amd64; KDE/4.8.4; x86_64; ; )
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CADKNfhJe7wWOuPjOMEXc7y5BZ1EPJVhqvhcb1HcfDL60rBqJvw@mail.gmail.com>
In-Reply-To: <CADKNfhJe7wWOuPjOMEXc7y5BZ1EPJVhqvhcb1HcfDL60rBqJvw@mail.gmail.com>
MIME-Version: 1.0
Content-Type: Text/Plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Message-Id: <201304301443.18776.vincent.balat@univ-paris-diderot.fr>
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.2.7
 (korolev.univ-paris7.fr [194.254.61.138]);
 Tue, 30 Apr 2013 14:43:26 +0200 (CEST)
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Tue, 30 Apr 2013 12:34:16 -0000

Hi,

I want to thank very much Yaron and all of you for taking time to try to find 
a solution to this problem. I also want to remind the position of the Ocsigen 
project on this list (and make it clear that we do not plan to switch to 
Async).

> I'm not sure that the right goal is "to make them evolve so they are
> close enough".  If we're going to end up with just one implementation,
> it's hard for me to see how it's not going to be Async, because Jane
> Street is not going to be able to move away from Async as a practical
> matter.

I understand but I think it is even worse for Lwt, because it is used by many 
projects (representing several hundreds of thousand of lines, written by many 
people). Ending up with one implementation is unfortunately a very unlikely 
hypothesis. That's why I proposed, not to drop one of the implementation, but 
to try to converge in term of features and semantics, in order to make it 
easier to adapt libraries for one or the other, and thus limit the impact of 
the schism Async is creating.

It is not possible to ask Lwt projects to switch to the current implementation 
of Async, because there are too many projects and most of them will probably 
just do nothing.The Ocsigen Web framework itself is a large piece of code, 
relying a lot on very precise details of the semantics of Lwt. We are 
currently working on ambititous projects that have a much higher level of 
priority. Besides, we cannot take this decision for all our users.

If Jane Street does not want to switch to Lwt (which would be the best 
solution for the community but I understand that it is not easy), the only 
possibility I see to end up with one implementation is to make Async evolve so 
that it could really be used in some way as an exact replacement for Lwt.

In the current state of things, I want to make it clear that Ocsigen will not 
switch to Async, and will not abandon Lwt users, and continue to encourage 
people using Lwt rather than Async, in order to keep a consistency between 
libraries.

But we would be happy if Jane Street could help avoid a split of the OCaml 
community ... The solutions you propose are a very good first step, and we 
appreciate it.

Vincent


From yminsky@gmail.com  Tue Apr 30 13:49:39 2013
Return-Path: <yminsky@gmail.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 937EF3C3F4
 for <wg-parallel@lists.ocaml.org>; Tue, 30 Apr 2013 13:49:39 +0100 (BST)
X-Cam-SpamDetails: score 0.6 from SpamAssassin-3.3.2-1476922 
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at http://www.dnswl.org/, low
 *      trust
 *      [74.125.82.44 listed in list.dnswl.dnsbl.ja.net]
 *  0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 *       (yminsky[at]gmail.com)
 *  0.0 DKIM_ADSP_CUSTOM_MED No valid author signature, adsp_override is
 *      CUSTOM_MED
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
 *  1.2 NML_ADSP_CUSTOM_MED ADSP custom_med hit, and not from a mailing
 *      list
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mail-wg0-f44.google.com ([74.125.82.44]:63372)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UXA94-0003YH-hx (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <yminsky@gmail.com>); Tue, 30 Apr 2013 13:58:59 +0100
Received: by mail-wg0-f44.google.com with SMTP id a12so420306wgh.23
 for <wg-parallel@lists.ocaml.org>; Tue, 30 Apr 2013 05:58:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=mime-version:x-received:reply-to:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=0kd9xcvzVNgYfG9yIkdmRsN9SthkOoh1lsynF/KZRAc=;
 b=QcpJyyYH/m5DPApU7i0AjVuS5qp88i8pWiEr1ZmILuSTrfQFq55Slqspn1iSKYKYJR
 kun7t081hvXXRyqbLywpap86Gqe5ZQeD/osqHMixkBeyfCpdbjBI1ibHAjxIUObJZvWr
 gsUaYXoDv1xXjcCVb3UbCGmkwWZV0MmAhZT8iJDLhA1uQevUZ4CEiQUYtI55q7Rwukm1
 Qe90wA+/1zb/I/18ZdhYI2ueMaMacM/j+vLqSs/CA9zFX/98FsJm2M3q1RPykoVS7oXs
 MV9luPSRRA86swLmdkeSE6+blxNXg4gPvFoCXHm856HVPI36RS9hEctGzM5CmRcBL/R+
 4ieQ==
MIME-Version: 1.0
X-Received: by 10.180.83.199 with SMTP id s7mr2294841wiy.19.1367326738343;
 Tue, 30 Apr 2013 05:58:58 -0700 (PDT)
Received: by 10.194.178.69 with HTTP; Tue, 30 Apr 2013 05:58:58 -0700 (PDT)
In-Reply-To: <201304301443.18776.vincent.balat@univ-paris-diderot.fr>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CADKNfhJe7wWOuPjOMEXc7y5BZ1EPJVhqvhcb1HcfDL60rBqJvw@mail.gmail.com>
 <201304301443.18776.vincent.balat@univ-paris-diderot.fr>
Date: Tue, 30 Apr 2013 08:58:58 -0400
Message-ID: <CADKNfhLArip0chsO9h0zjvt066_zmOM1nuUUFO=o-L4qeJ=xRA@mail.gmail.com>
From: Yaron Minsky <yminsky@gmail.com>
To: Vincent Balat <vincent.balat@univ-paris-diderot.fr>
Content-Type: text/plain; charset=ISO-8859-1
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
Reply-To: yminsky@gmail.com
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Tue, 30 Apr 2013 12:49:39 -0000

On Tue, Apr 30, 2013 at 8:43 AM, Vincent Balat
<vincent.balat@univ-paris-diderot.fr> wrote:
> Hi,
>
> I want to thank very much Yaron and all of you for taking time to try to find
> a solution to this problem. I also want to remind the position of the Ocsigen
> project on this list (and make it clear that we do not plan to switch to
> Async).
>
>> I'm not sure that the right goal is "to make them evolve so they are
>> close enough".  If we're going to end up with just one implementation,
>> it's hard for me to see how it's not going to be Async, because Jane
>> Street is not going to be able to move away from Async as a practical
>> matter.
>
> I understand but I think it is even worse for Lwt, because it is used by many
> projects (representing several hundreds of thousand of lines, written by many
> people). Ending up with one implementation is unfortunately a very unlikely
> hypothesis. That's why I proposed, not to drop one of the implementation, but
> to try to converge in term of features and semantics, in order to make it
> easier to adapt libraries for one or the other, and thus limit the impact of
> the schism Async is creating.

Unfortunately, I don't see how having two libraries with different
implementations and similar semantics is much of an improvement over
the current state of affairs.  Using functors for making libraries
portable over the two is no way to live!

I understand your reluctance to switch away from Lwt --- surely,
dealing with the migration would be disruptive and would take
significant time and effort.  Indeed, our own situation is that we
have a few million lines of code using Async, 100 or so active
developers internally, and many mission-critical applications that
depend on the details of Async's semantics and performance, so moving
away from it is a non-starter for us as well.

In any case, I think the question of how to maximize interoperatbility
between Async and Lwt seems on topic.  Beyond that, we're interested
in understanding what can be done to make Async more broadly useful to
people outside of Jane Street.

y

> It is not possible to ask Lwt projects to switch to the current implementation
> of Async, because there are too many projects and most of them will probably
> just do nothing.The Ocsigen Web framework itself is a large piece of code,
> relying a lot on very precise details of the semantics of Lwt. We are
> currently working on ambititous projects that have a much higher level of
> priority. Besides, we cannot take this decision for all our users.
>
> If Jane Street does not want to switch to Lwt (which would be the best
> solution for the community but I understand that it is not easy), the only
> possibility I see to end up with one implementation is to make Async evolve so
> that it could really be used in some way as an exact replacement for Lwt.
>
> In the current state of things, I want to make it clear that Ocsigen will not
> switch to Async, and will not abandon Lwt users, and continue to encourage
> people using Lwt rather than Async, in order to keep a consistency between
> libraries.
>
> But we would be happy if Jane Street could help avoid a split of the OCaml
> community ... The solutions you propose are a very good first step, and we
> appreciate it.
>
> Vincent
>

From daniel.buenzli@erratique.ch  Tue Apr 30 18:16:05 2013
Return-Path: <daniel.buenzli@erratique.ch>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 496203C3F4
 for <wg-parallel@lists.ocaml.org>; Tue, 30 Apr 2013 18:16:05 +0100 (BST)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.3.2-1476922
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mail6.webfaction.com ([74.55.86.74]:46548
 helo=smtp.webfaction.com)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UXEIv-0001iY-gX (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <daniel.buenzli@erratique.ch>); Tue, 30 Apr 2013 18:25:25 +0100
Received: from [10.80.118.32] (firewall.ctxuk.citrix.com [46.33.159.2])
 by smtp.webfaction.com (Postfix) with ESMTP id EB0E020EFE7E
 for <wg-parallel@lists.ocaml.org>; Tue, 30 Apr 2013 17:25:23 +0000 (UTC)
Date: Tue, 30 Apr 2013 18:25:21 +0100
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: wg-parallel@lists.ocaml.org
Message-ID: <3E7D3178A81143979C47D6C9E012039C@erratique.ch>
X-Mailer: sparrow 1.6.4 (build 1178)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Subject: [wg-parallel]  About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Tue, 30 Apr 2013 17:16:05 -0000

(sorry for the top post I was not subscribed)

To be honest I'm neither content with either lwt nor async. I actually toyed with my own implementation of these concepts, that may, or not, be released in the future. A few hints of what lead me to that are given here [1]. 

That being said I would like to stress that a lot of foundational libraries can avoid making a choice *without* functorizing as Yaron (doesn't) suggest.

Notably codecs can be made both lwt and async friendly by following this pattern [2] (the repo has a toy example, see the readme), which I already implemented for Unicode and JSON decoding [3,4]; xmlm will adopt it once I get time to work on the library again; the Vg library on which I'm currently working on [5] also uses that pattern.

Given the positions on both sides, I actually think we should take that "schism" as a chance rather than a curse. Striving for independence from the concrete asynchronous programming mechanism (with or without functorizing) and cutting down on dependencies in foundational libraries may actually lead to software that is more composable, adaptable and reusable in the long term.

My opinion is that most of the time choosing a particular asynchronous programming library should be a choice left to the developer of *applications* not to the developer of libraries --- but I have a bias towards small and focused libraries rather than "solve everything frameworks".

Best,

Daniel

[1] https://github.com/dbuenzli/fut/blob/master/RATIONALE
[2] https://github.com/dbuenzli/nbcodec/blob/master/RATIONALE
[3] http://erratique.ch/software/uutf
[4] http://erratique.ch/software/jsonm
[5] https://github.com/dbuenzli/vg/



From yminsky@janestreet.com  Tue Apr 30 22:06:21 2013
Return-Path: <yminsky@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id C31A33C3F4
 for <wg-parallel@lists.ocaml.org>; Tue, 30 Apr 2013 22:06:21 +0100 (BST)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.3.2-1476922 
 * -2.5 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:54410
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UXHtg-0000f2-iP (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <yminsky@janestreet.com>); Tue, 30 Apr 2013 22:15:42 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <yminsky@janestreet.com>) id 1UXHtL-0004DA-4N
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 17:15:15 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <yminsky@janestreet.com>) id 1UXHtI-0007dy-3F
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 17:15:12 -0400
Received: from mail-ea0-f200.google.com ([209.85.215.200])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <yminsky@janestreet.com>) id 1UXHtH-00007y-VJ
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 17:15:12 -0400
Received: by mail-ea0-f200.google.com with SMTP id z7so1316411eaf.11
 for <wg-parallel@lists.ocaml.org>; Tue, 30 Apr 2013 14:15:11 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type
 :content-transfer-encoding;
 bh=+3OFfz1Mj4MjlJ5UKoBENEeGOkWnYhofIaXtJz0Mtco=;
 b=GDqrFWlZkV8kDIpvvRQt0dqGEMFuCJjKPAjezw96FS6SlU83PLsktPjJLudV4Wcryi
 Uiiv+j874RJMxaEKbIpe57p23AA14gpg2imcWSdplbC/n9D3aY/yglufytt2JzhH7ijm
 2AxuY/z8dspT62ZRbMDf2NZcBUfEx34mmSehc=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type
 :content-transfer-encoding:x-gm-message-state;
 bh=+3OFfz1Mj4MjlJ5UKoBENEeGOkWnYhofIaXtJz0Mtco=;
 b=FgZZO8WJ/R7kd2kd97Lp91a6BTCiHo2BUXapVK0sw6ROF6zVBNmVD7GN+xdG+oAMoK
 g4234VtMKI77b9fszSEfK/FZyr6d7ohJMBTg3IEYjIvUbr6aqTTv8br1OGDDiBErylnx
 VcdAS1lLjiApyOiHJwGXqhqU3dgWE8xMzJqcclijKB7ggpoTk26ak9IvOSjBKNbS6ydl
 jQp/bxUhKVd5p6p8zOtEU+LiyItD4znRTpFqHo0kfc/tE3I0X9Bd+w8BRxrHYULuPjiG
 jplr9Apb24nYAvVlxwUnTv4gbMGbxF2X+rn5u2tRuAcbRGE71NUPu6mV7btVbk8hirvQ
 mPQQ==
X-Received: by 10.15.52.70 with SMTP id o46mr270017eew.14.1367356511408;
 Tue, 30 Apr 2013 14:15:11 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.15.52.70 with SMTP id o46mr269987eew.14.1367356511252; Tue,
 30 Apr 2013 14:15:11 -0700 (PDT)
Received: by 10.223.85.155 with HTTP; Tue, 30 Apr 2013 14:15:11 -0700 (PDT)
In-Reply-To: <3E7D3178A81143979C47D6C9E012039C@erratique.ch>
References: <3E7D3178A81143979C47D6C9E012039C@erratique.ch>
Date: Tue, 30 Apr 2013 17:15:11 -0400
Message-ID: <CACLX4jTsVU=NafyrVxRYYmEGLXQDdBGXs_wZ3ir5ZsPq=EUxiw@mail.gmail.com>
From: Yaron Minsky <yminsky@janestreet.com>
To: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@erratique.ch>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
X-Gm-Message-State: ALoCoQn4mAN8VSgwcpaqKriNNGVBjeQUNsTF8SjU/D1AO5qkA52wgtqG9OdnVnP2LEge+OSUnAl6ErHyKlejCtTz5N3YmXapzFeEWBY32k48z61EW60viqAkPyhKbeL1iHVOPO9F/B5/GznME4B/IKbC+U5wDRrZXGezlJQIU7ADCM8CWnJBxI8=
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Tue, 30 Apr 2013 21:06:21 -0000

It's a beautiful dream, but it sounds implausible to me.  I think one
might as well propose writing programs in a way that is independent of
the programming language.  This is doable in some small ways on the
margin, but it's not a practical approach.

I do think that some libraries, like the parsing associated with XML
or JSON, can be made independent in this way.  But this represents
only a small part of the concurrent code that one writes, and so only
solves a small part of the problem.

In the end, I do still think we will be better off if we can settle on
one major concurrent programming library.

y

On Tue, Apr 30, 2013 at 1:25 PM, Daniel B=FCnzli
<daniel.buenzli@erratique.ch> wrote:
> (sorry for the top post I was not subscribed)
>
> To be honest I'm neither content with either lwt nor async. I
> actually toyed with my own implementation of these concepts, that
> may, or not, be released in the future. A few hints of what lead me
> to that are given here [1].
>
> That being said I would like to stress that a lot of foundational
> libraries can avoid making a choice *without* functorizing as Yaron
> (doesn't) suggest.
>
> Notably codecs can be made both lwt and async friendly by following
> this pattern [2] (the repo has a toy example, see the readme), which
> I already implemented for Unicode and JSON decoding [3,4]; xmlm will
> adopt it once I get time to work on the library again; the Vg
> library on which I'm currently working on [5] also uses that
> pattern.
>
> Given the positions on both sides, I actually think we should take
> that "schism" as a chance rather than a curse. Striving for
> independence from the concrete asynchronous programming mechanism
> (with or without functorizing) and cutting down on dependencies in
> foundational libraries may actually lead to software that is more
> composable, adaptable and reusable in the long term.
>
> My opinion is that most of the time choosing a particular
> asynchronous programming library should be a choice left to the
> developer of *applications* not to the developer of libraries ---
> but I have a bias towards small and focused libraries rather than
> "solve everything frameworks".
>
> Best,
>
> Daniel
>
> [1] https://github.com/dbuenzli/fut/blob/master/RATIONALE
> [2] https://github.com/dbuenzli/nbcodec/blob/master/RATIONALE
> [3] http://erratique.ch/software/uutf
> [4] http://erratique.ch/software/jsonm
> [5] https://github.com/dbuenzli/vg/
>
>
> _______________________________________________
> wg-parallel mailing list
> wg-parallel@lists.ocaml.org
> http://lists.ocaml.org/listinfo/wg-parallel

From daniel.buenzli@erratique.ch  Wed May  1 01:17:31 2013
Return-Path: <daniel.buenzli@erratique.ch>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-32.csi.cam.ac.uk (ppsw-32.csi.cam.ac.uk [131.111.8.132])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 930423C3F4
 for <wg-parallel@lists.ocaml.org>; Wed,  1 May 2013 01:17:31 +0100 (BST)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.3.2-1476922
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mail6.webfaction.com ([74.55.86.74]:49519
 helo=smtp.webfaction.com)
 by ppsw-32.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtp id 1UXKsm-0005XL-2E (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <daniel.buenzli@erratique.ch>); Wed, 01 May 2013 01:26:53 +0100
Received: from [172.20.10.2] (92.40.253.89.threembb.co.uk [92.40.253.89])
 by smtp.webfaction.com (Postfix) with ESMTP id 11AE720D7470;
 Wed,  1 May 2013 00:26:40 +0000 (UTC)
Date: Wed, 1 May 2013 01:26:35 +0100
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: Yaron Minsky <yminsky@janestreet.com>
Message-ID: <910F0F81D8AC41FDBFCE86AFA7DA03AA@erratique.ch>
In-Reply-To: <CACLX4jTsVU=NafyrVxRYYmEGLXQDdBGXs_wZ3ir5ZsPq=EUxiw@mail.gmail.com>
References: <3E7D3178A81143979C47D6C9E012039C@erratique.ch>
 <CACLX4jTsVU=NafyrVxRYYmEGLXQDdBGXs_wZ3ir5ZsPq=EUxiw@mail.gmail.com>
X-Mailer: sparrow 1.6.4 (build 1178)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 01 May 2013 00:17:31 -0000

Le mardi, 30 avril 2013 =C3=A0 22:15, Yaron Minsky a =C3=A9crit :
> It's a beautiful dream, but it sounds implausible to me. =20

I don't dream, I write code. But, glancing over the discussion, I guess t=
here are factors at that play that are not purely technical here. =20
 =20
> I think one might as well propose writing programs in a way that is ind=
ependent of
> the programming language. This is doable in some small ways on the
> margin, but it's not a practical approach.

I don't think that's the point. I guess when you read/use code that you a=
re not happy with it's just sane to not depend too much on it. That may b=
e painful in the short term but more rewarding in the long term (which is=
 what I'm interested in). =20
 =20


> But this represents only a small part of the concurrent code that one w=
rites, and so only
> solves a small part of the problem.

The question is which amount of the concurrent code you write is really a=
pplication independent. I don't have the answer but my bet on that is tha=
t it's actually quite few. You may have a few concurrency patterns but I =
don't see how this couldn't be provided the asynchronous libraries themse=
lves using the asynchronously =22agnostic=22 primitive libraries.

But that may require a different mindset (especially one that is not tied=
 to the application one is currently writing).

Best,

Daniel



From yminsky@janestreet.com  Wed May  1 01:34:44 2013
Return-Path: <yminsky@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-mx-f.csi.cam.ac.uk [131.111.8.149])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id A9EFC3C3F4
 for <wg-parallel@lists.ocaml.org>; Wed,  1 May 2013 01:34:44 +0100 (BST)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.3.2-1476922 
 * -2.5 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:56586
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtp id 1UXL9M-0002ae-7z (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <yminsky@janestreet.com>); Wed, 01 May 2013 01:44:06 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <yminsky@janestreet.com>) id 1UXL80-0007HX-JC
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 20:42:36 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <yminsky@janestreet.com>) id 1UXL80-0004fF-IR
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 20:42:36 -0400
Received: from mail-ee0-f72.google.com ([74.125.83.72])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <yminsky@janestreet.com>) id 1UXL80-0006m8-EN
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 20:42:36 -0400
Received: by mail-ee0-f72.google.com with SMTP id d17so1510610eek.7
 for <wg-parallel@lists.ocaml.org>; Tue, 30 Apr 2013 17:42:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type
 :content-transfer-encoding;
 bh=bnLQABLdIOuVUwTHqHXvJMDujqGkaDXQXsi1TN2KuzM=;
 b=PA+Bol9klh6af9c4xhsbAvHPI9N+n2eS3mNEg9qedwqB0itT2Fls+l5/BPs0CTF0eb
 X5cWWcH0ciqHRhHq9wEODi8N9sAMNhJZo8IZxFQEZFwUAN34WHDQweixLmY9DC2YMG7P
 qzOlEBEArbnQC4ZqB2akySR716QgnHi/HBHz0=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type
 :content-transfer-encoding:x-gm-message-state;
 bh=bnLQABLdIOuVUwTHqHXvJMDujqGkaDXQXsi1TN2KuzM=;
 b=oNYLmrZeUyBZl0t9/RJB5MUs4Zjx1F2QhHbgcxUnrfHfaaiJNh9OSDRNG81kET3Zad
 XMFwcw5+egGHXAJ64UbI4Lmi+yDKdABHbSTBqd7BAJEW3a11uPhT3DexAKuMQr2hPlM7
 tbQS/vufQvcve0B8CJmCd7msFjvJm56alnGweyMIRtyb7remrJx56t4tG8qzNeHa4hov
 jseA+L1z6b1G4kx3iyTWyFloIZnfDarw0baVVsmLUkvFDqXdkv/COfsvX5voc98R0/0y
 SWEgUHEOj4kVXmdrV1TqUtf005M/iV8eImKzBS/kDxGQZQRZMMNo/mqbxArPnsg3iz0n
 KAMA==
X-Received: by 10.15.22.76 with SMTP id e52mr1854234eeu.7.1367368955794;
 Tue, 30 Apr 2013 17:42:35 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.15.22.76 with SMTP id e52mr1854208eeu.7.1367368955560; Tue,
 30 Apr 2013 17:42:35 -0700 (PDT)
Received: by 10.223.97.77 with HTTP; Tue, 30 Apr 2013 17:42:35 -0700 (PDT)
In-Reply-To: <910F0F81D8AC41FDBFCE86AFA7DA03AA@erratique.ch>
References: <3E7D3178A81143979C47D6C9E012039C@erratique.ch>
 <CACLX4jTsVU=NafyrVxRYYmEGLXQDdBGXs_wZ3ir5ZsPq=EUxiw@mail.gmail.com>
 <910F0F81D8AC41FDBFCE86AFA7DA03AA@erratique.ch>
Date: Tue, 30 Apr 2013 20:42:35 -0400
Message-ID: <CACLX4jQ9y7oQM0HO_0JioMGqz=CTXT-w1cYwPj6Vtuso1DhOvg@mail.gmail.com>
From: Yaron Minsky <yminsky@janestreet.com>
To: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@erratique.ch>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
X-Gm-Message-State: ALoCoQl1zcLjEltEBtSLDlOZ6r7zrrTIb2SunX4pLP2Ib1vfI9R2KF4qNoxY7w5g4ehIQ7hVdKTzzp2cfm5G+eLM9XOsEqJky0IFqPlJVbc9cezSbWmrTupV80RZWNyj+yu7FEYgVAbwjlGYDtPPzXs/2TuOyqJhQY2dMzukJsPgZB7RToNuJh0=
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 01 May 2013 00:34:44 -0000

On Tue, Apr 30, 2013 at 8:26 PM, Daniel B=FCnzli
<daniel.buenzli@erratique.ch> wrote:
> Le mardi, 30 avril 2013 =E0 22:15, Yaron Minsky a =E9crit :
>> It's a beautiful dream, but it sounds implausible to me.
>
> I don't dream, I write code. But, glancing over the discussion, I
> guess there are factors at that play that are not purely technical
> here.

For sure.  For example, the size of the community that already knows
and uses a given library or toolchain plays an important role, which
is more than a purely technical questions.

That said, my objection to your proposal is essentially technical.
Writing a layer that abstracts over Lwt and Async seems highly
problematic.  I think it's hard to build such an abstraction that is
performant, reliable, easy to reason about, and flexible enough to
attach to a wide variety of applications.

That said, this is the kind of objection that is easily overcome by
code!  I'd be very curious to see what such an abstraction looked
like.  I'm sure such a thing is not impossible --- after all, Async
and Lwt both abstract over multiple other concurrency primitives, like
select, libev and epoll.

>> I think one might as well propose writing programs in a way that is
>> independent of the programming language. This is doable in some
>> small ways on the margin, but it's not a practical approach.
>
> I don't think that's the point. I guess when you read/use code that
> you are not happy with it's just sane to not depend too much on
> it. That may be painful in the short term but more rewarding in the
> long term (which is what I'm interested in).
>
>> But this represents only a small part of the concurrent code that
>> one writes, and so only solves a small part of the problem.
>
> The question is which amount of the concurrent code you write is
> really application independent. I don't have the answer but my bet
> on that is that it's actually quite few. You may have a few
> concurrency patterns but I don't see how this couldn't be provided
> the asynchronous libraries themselves using the asynchronously
> "agnostic" primitive libraries.
>
> But that may require a different mindset (especially one that is not
> tied to the application one is currently writing).

I don't understand what you mean by "application independent".  There
are of course lots of application-independent libraries written in
Async (and Lwt too), from communication mechanisms like Async-RPC to
code for setting up TCP servers and clients in the Tcp module, to
logging facilities like Async's Log library.  But these libraries all
depend on the error handling, concurrency and performance semantics of
Async.

y

From yminsky@janestreet.com  Wed May  1 01:39:09 2013
Return-Path: <yminsky@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 36DF33C3F4
 for <wg-parallel@lists.ocaml.org>; Wed,  1 May 2013 01:39:09 +0100 (BST)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.3.2-1476922 
 * -2.5 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:33848
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UXLDc-0006Yh-ib (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <yminsky@janestreet.com>); Wed, 01 May 2013 01:48:30 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <yminsky@janestreet.com>) id 1UXLDH-0007cn-Kp
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 20:48:03 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <yminsky@janestreet.com>) id 1UXLDH-0005Oo-K4
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 20:48:03 -0400
Received: from mail-lb0-f197.google.com ([209.85.217.197])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <yminsky@janestreet.com>) id 1UXLDH-00071A-FJ
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 20:48:03 -0400
Received: by mail-lb0-f197.google.com with SMTP id t10so1636186lbi.8
 for <wg-parallel@lists.ocaml.org>; Tue, 30 Apr 2013 17:48:02 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=LIYs2WTJ8hoAAIwUVkmo9bsgrM8JIdSpv22z1rUab+s=;
 b=KFascA4ioDoHe9CrlqzgB/wMFPQD3q0OMw5FNeFtnFIUrnZWd8Gl+kDuHsHsgY2UnC
 TY0CweFKLTvAyuBr2TDthZW7vf32p2R3oq/j8hRLPd+uDXzI0UyGH81lh8NQVzVFOOwU
 wsxbQvbbGtPtDzg1UH3DSgMH//6iR6iMhogYA=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type:x-gm-message-state;
 bh=LIYs2WTJ8hoAAIwUVkmo9bsgrM8JIdSpv22z1rUab+s=;
 b=KyhIoktEE8LLDlz/7Knog1O/z67no23ZJZ2g6mFh9WTikd/jynq//mE79E0IyfsOcy
 +9pX6V7AOEvxCjJifNOK+KF1QzdmmGf6BbRZx6yYqlI2COGoa4YCMWaM6cFjat9RYuFd
 j5d7OKJyOYwKU5wdchzhxSFzFyxixFHNzQcw7axXLLBUCXgSVDGT6jNX10XXEfAfgdKu
 fBaT1EY2e46h3SCgcmgZWT9PkX3XIEF7sGa/OgOl7AoEsFWeokHJBnasRh9SySTnPoMf
 dU7fb/DA+/8tj/4J90Mk0/yD9XcZerpX+vJfLbewaWaHgLvAUF+TZokDr8DAu7yaF3KA
 HT3A==
X-Received: by 10.14.202.201 with SMTP id d49mr1939964eeo.1.1367369282627;
 Tue, 30 Apr 2013 17:48:02 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.14.202.201 with SMTP id d49mr1939947eeo.1.1367369282483;
 Tue, 30 Apr 2013 17:48:02 -0700 (PDT)
Received: by 10.223.97.77 with HTTP; Tue, 30 Apr 2013 17:48:02 -0700 (PDT)
In-Reply-To: <CADKNfhLArip0chsO9h0zjvt066_zmOM1nuUUFO=o-L4qeJ=xRA@mail.gmail.com>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CADKNfhJe7wWOuPjOMEXc7y5BZ1EPJVhqvhcb1HcfDL60rBqJvw@mail.gmail.com>
 <201304301443.18776.vincent.balat@univ-paris-diderot.fr>
 <CADKNfhLArip0chsO9h0zjvt066_zmOM1nuUUFO=o-L4qeJ=xRA@mail.gmail.com>
Date: Tue, 30 Apr 2013 20:48:02 -0400
Message-ID: <CACLX4jQvYsB344L4DuebRzgCpL6tL0Fcj_Nixeu2iqBFrQsgFQ@mail.gmail.com>
From: Yaron Minsky <yminsky@janestreet.com>
To: Jeremie Dimino <jdimino@janestreet.com>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQnHjD0jz8MI27dj/eO+Z3wcEHP+uP/FWiyN//MNIG43Jl7AnD8/KaP1d3miblEAL6MPkvPck8uwpom1PTci2R1uR8BfwIQkrxuJekTgGFnREfv8P4k6TRNQGUKwZ9gYnF1qiJl2jTAjUfHQJ4Z9HwOzzzdyI02OTBp70W0y+DZ7Aq0XqmY=
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 01 May 2013 00:39:09 -0000

Jeremie, I have another thought about trying to bring Lwt and Async
together: knowing the two engines well as you do, do you think it
makes any technical sense to basically bolt an Lwt skin on top of
Async?  i.e., create an alternate version of the Lwt module where 'a
Lwt.t = 'a Or_exn.t Deferred.t, so as to let one share the core
scheduler.  This could allow code written to Lwt to run on top of
Async's engine.

I suspect it would be quite a large effort, and perhaps the Lwt
community would have no interest in using the result of it, so I'm not
saying it's worth doing.  I'm just wondering if you think it's a
technically feasible project.

y

On Tue, Apr 30, 2013 at 8:58 AM, Yaron Minsky <yminsky@gmail.com> wrote:
> On Tue, Apr 30, 2013 at 8:43 AM, Vincent Balat
> <vincent.balat@univ-paris-diderot.fr> wrote:
>> Hi,
>>
>> I want to thank very much Yaron and all of you for taking time to try to find
>> a solution to this problem. I also want to remind the position of the Ocsigen
>> project on this list (and make it clear that we do not plan to switch to
>> Async).
>>
>>> I'm not sure that the right goal is "to make them evolve so they are
>>> close enough".  If we're going to end up with just one implementation,
>>> it's hard for me to see how it's not going to be Async, because Jane
>>> Street is not going to be able to move away from Async as a practical
>>> matter.
>>
>> I understand but I think it is even worse for Lwt, because it is used by many
>> projects (representing several hundreds of thousand of lines, written by many
>> people). Ending up with one implementation is unfortunately a very unlikely
>> hypothesis. That's why I proposed, not to drop one of the implementation, but
>> to try to converge in term of features and semantics, in order to make it
>> easier to adapt libraries for one or the other, and thus limit the impact of
>> the schism Async is creating.
>
> Unfortunately, I don't see how having two libraries with different
> implementations and similar semantics is much of an improvement over
> the current state of affairs.  Using functors for making libraries
> portable over the two is no way to live!
>
> I understand your reluctance to switch away from Lwt --- surely,
> dealing with the migration would be disruptive and would take
> significant time and effort.  Indeed, our own situation is that we
> have a few million lines of code using Async, 100 or so active
> developers internally, and many mission-critical applications that
> depend on the details of Async's semantics and performance, so moving
> away from it is a non-starter for us as well.
>
> In any case, I think the question of how to maximize interoperatbility
> between Async and Lwt seems on topic.  Beyond that, we're interested
> in understanding what can be done to make Async more broadly useful to
> people outside of Jane Street.
>
> y
>
>> It is not possible to ask Lwt projects to switch to the current implementation
>> of Async, because there are too many projects and most of them will probably
>> just do nothing.The Ocsigen Web framework itself is a large piece of code,
>> relying a lot on very precise details of the semantics of Lwt. We are
>> currently working on ambititous projects that have a much higher level of
>> priority. Besides, we cannot take this decision for all our users.
>>
>> If Jane Street does not want to switch to Lwt (which would be the best
>> solution for the community but I understand that it is not easy), the only
>> possibility I see to end up with one implementation is to make Async evolve so
>> that it could really be used in some way as an exact replacement for Lwt.
>>
>> In the current state of things, I want to make it clear that Ocsigen will not
>> switch to Async, and will not abandon Lwt users, and continue to encourage
>> people using Lwt rather than Async, in order to keep a consistency between
>> libraries.
>>
>> But we would be happy if Jane Street could help avoid a split of the OCaml
>> community ... The solutions you propose are a very good first step, and we
>> appreciate it.
>>
>> Vincent
>>
> _______________________________________________
> wg-parallel mailing list
> wg-parallel@lists.ocaml.org
> http://lists.ocaml.org/listinfo/wg-parallel

From daniel.buenzli@erratique.ch  Wed May  1 02:46:01 2013
Return-Path: <daniel.buenzli@erratique.ch>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-mx-f.csi.cam.ac.uk [131.111.8.149])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 6F83F3C3F4
 for <wg-parallel@lists.ocaml.org>; Wed,  1 May 2013 02:46:01 +0100 (BST)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.3.2-1476922
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mail6.webfaction.com ([74.55.86.74]:34627
 helo=smtp.webfaction.com)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtp id 1UXMGQ-0004fr-6S (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <daniel.buenzli@erratique.ch>); Wed, 01 May 2013 02:55:23 +0100
Received: from [172.20.10.2] (92.40.253.89.threembb.co.uk [92.40.253.89])
 by smtp.webfaction.com (Postfix) with ESMTP id 6205B20EA796;
 Wed,  1 May 2013 01:54:51 +0000 (UTC)
Date: Wed, 1 May 2013 02:54:46 +0100
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: Yaron Minsky <yminsky@janestreet.com>
Message-ID: <5EAC34FD03C547579C5E6DC1B4FCF9A4@erratique.ch>
In-Reply-To: <CACLX4jQ9y7oQM0HO_0JioMGqz=CTXT-w1cYwPj6Vtuso1DhOvg@mail.gmail.com>
References: <3E7D3178A81143979C47D6C9E012039C@erratique.ch>
 <CACLX4jTsVU=NafyrVxRYYmEGLXQDdBGXs_wZ3ir5ZsPq=EUxiw@mail.gmail.com>
 <910F0F81D8AC41FDBFCE86AFA7DA03AA@erratique.ch>
 <CACLX4jQ9y7oQM0HO_0JioMGqz=CTXT-w1cYwPj6Vtuso1DhOvg@mail.gmail.com>
X-Mailer: sparrow 1.6.4 (build 1178)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 01 May 2013 01:46:01 -0000

Le mercredi, 1 mai 2013 =C3=A0 01:42, Yaron Minsky a =C3=A9crit :
> That said, my objection to your proposal is essentially technical.
> Writing a layer that abstracts over Lwt and Async seems highly
> problematic. =20

We agree on that, I don't like the functor approach. My take on that is t=
o turn the problem upside down and instead of abstracting over the asynch=
ronous primitives, provide libraries that are asynchronous in their own m=
ode of operation independently of monadic concurrency libraries, and henc=
e usable by any of them (or whatever asynchronous mechanism that may beco=
me prevalent in the future).  =20

=46or me the idea is that we can afford *library* programmers to suffer t=
hat pain --- basically hand made cps progamming, it's fun bun can be odd=E2=
=80=A6 However *application* (or end-user) programmers should not have to=
 suffer and use the monadic programming library of their choice. =20

Now the point to which that idea can be brought is unknown to me. One thi=
ng that is certain to me is that at least for codecs (which is not a smal=
l amount of libraries in my opinion), this can be done and should be done=
.
 =20
> I think it's hard to build such an abstraction that is performant,

Regarding codecs, the pattern I mention allows you to use a unique, fixed=
 size, buffer for input and output -- perfect for Unix.=7Bread,write=7D. =
There may however be a cost for cps that I'm not really able to assert --=
 but I guess you also pay that price if you work directly with a monadic =
library.

 =20
> reliable, easy to reason about, =20

In fact the whole point of my wip on =46ut =5B1=5D was to attach a clear =
denotational semantics to its values and primitives. But since some combi=
nators have side effects (cancellation) it hinders equational reasoning. =
Still I think it's nice to have a clear semantics attached your combinato=
rs, something I find really lacking in both async and lwt. Maybe I'm spec=
ial but I like to understand my abstractions, especially having a clear c=
oncurrency model of the runtime is important to me (and a simple one aswe=
ll, hence =46ut's fifo queues).

> I don't understand what you mean by =22application independent=22. =20
By application *dependent* I mean related to the software architecture, d=
esign and constraints you choose to try to solve your specific problem --=
 maybe that's just non obviously reusable code. =20
 =20
> There
> are of course lots of application-independent libraries written in
> Async (and Lwt too), from communication mechanisms like Async-RPC to
> code for setting up TCP servers and clients in the Tcp module, to
> logging facilities like Async's Log library. But these libraries all
> depend on the error handling, concurrency and performance semantics of
> Async.

These would be for me in the =22concurrency patterns=22 I mentioned. So t=
he question is how far can we go here by just plugin asynchronous agnosti=
c libraries, and how painful it is (or not) for the end-user. I was actua=
lly intending to work on these questions beyond codecs (which is a solved=
 problem for me) in my work on webs =5B2=5D, but I'm on other things righ=
t now.

Best,

Daniel =20

=5B1=5D =20
http://erratique.ch/tmp/fut/=46ut.html
https://github.com/dbuenzli/fut/blob/master/src/fut.mli

=5B2=5D
https://github.com/dbuenzli/webs


From yminsky@janestreet.com  Wed May  1 04:07:05 2013
Return-Path: <yminsky@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 209BD3C3F4
 for <wg-parallel@lists.ocaml.org>; Wed,  1 May 2013 04:07:05 +0100 (BST)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.3.2-1476922 
 * -2.5 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:36715
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UXNWn-0002hb-gK (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <yminsky@janestreet.com>); Wed, 01 May 2013 04:16:26 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <yminsky@janestreet.com>) id 1UXNWM-0006Oy-Cc
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 23:15:54 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <yminsky@janestreet.com>) id 1UXNWM-0002GB-Bq
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 23:15:54 -0400
Received: from mail-lb0-f197.google.com ([209.85.217.197])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <yminsky@janestreet.com>) id 1UXNWM-00036d-6l
 for wg-parallel@lists.ocaml.org; Tue, 30 Apr 2013 23:15:54 -0400
Received: by mail-lb0-f197.google.com with SMTP id t10so1741597lbi.4
 for <wg-parallel@lists.ocaml.org>; Tue, 30 Apr 2013 20:15:53 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type
 :content-transfer-encoding;
 bh=4VmnZlaDvW+rc+7q6BA1QLrc3Oo9nc0uNS0FvDI5SEw=;
 b=JD4BW9KA+jlcsm4tqUypAlcBClA4uaXveZXqSVQqwcFxqKqoAsLBbpNExMY3gCK1XB
 rPi8JGbW4cQm+kgOtiJddqiynIGLr/n3ViqG124V7T+xAcGr4VDQ4nDLcZlLcOPLENqS
 zVUssbNB9usd2W0cy2jQTZ4IhJsZyRJ0h7Aik=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type
 :content-transfer-encoding:x-gm-message-state;
 bh=4VmnZlaDvW+rc+7q6BA1QLrc3Oo9nc0uNS0FvDI5SEw=;
 b=ScPRuGRMZLbiOKg+ukD944Jh13CSFML3SzFQJSYLr8jLJM2QQnGd7Cmfq2vJBgRQqu
 uMIWdxb1iH/X/mIdXtFxJwXpk53qrashyMQc7On9opXzI4i9Q8mL02l10akRVYglYWpb
 ndNc5o5v6bptaEWxFDh9CEbuQ4zJx87dCV4gwl0waBK2IhiuAykZ27eM+0MBjP1gptQ2
 K4jhP6z2NMiWjfgYNmVzMQXRP0TOgY0ZSkojQW1vqCbM1gUoT8NEsdgEAWn3cji2TDY4
 FYKUfTe4qmUmOU6bSQwxcMUxMXe1m7Dk32e+BECjvd9x5VRApq6/kDZoN0ZZ1tnx4UXw
 hNHQ==
X-Received: by 10.14.202.201 with SMTP id d49mr2925423eeo.1.1367378153256;
 Tue, 30 Apr 2013 20:15:53 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.14.202.201 with SMTP id d49mr2925409eeo.1.1367378153063;
 Tue, 30 Apr 2013 20:15:53 -0700 (PDT)
Received: by 10.223.97.77 with HTTP; Tue, 30 Apr 2013 20:15:52 -0700 (PDT)
In-Reply-To: <5EAC34FD03C547579C5E6DC1B4FCF9A4@erratique.ch>
References: <3E7D3178A81143979C47D6C9E012039C@erratique.ch>
 <CACLX4jTsVU=NafyrVxRYYmEGLXQDdBGXs_wZ3ir5ZsPq=EUxiw@mail.gmail.com>
 <910F0F81D8AC41FDBFCE86AFA7DA03AA@erratique.ch>
 <CACLX4jQ9y7oQM0HO_0JioMGqz=CTXT-w1cYwPj6Vtuso1DhOvg@mail.gmail.com>
 <5EAC34FD03C547579C5E6DC1B4FCF9A4@erratique.ch>
Date: Tue, 30 Apr 2013 23:15:52 -0400
Message-ID: <CACLX4jTAGFfLPVfa4whs5PAp-qyZ4inzjE8D=AxRFikhEZfCww@mail.gmail.com>
From: Yaron Minsky <yminsky@janestreet.com>
To: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@erratique.ch>
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: quoted-printable
X-Gm-Message-State: ALoCoQkzU9jMzxcTlsNknVYCALmc5gtN8GuaO1KFwxc+5OvjnLbBIQhXxIOkqVzkVO6wJ587ft9klUMKSp/dW8IfJU/4s+O7efFrCQpUv3C+dXdnw+/t4eVV3GVfASp0eUMPfpchjT2CpvY49wEVhOAt86dx+rkwQcnlslQmutXwZOQofw4Z4z8=
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 01 May 2013 03:07:05 -0000

Is the code to Fut available somewhere?  I couldn't find it on your page.

>From a glance, Fut looks more like a third monadic concurrency
library, parallel to Async and Lwt, rather than an abstraction layer
above such libraries.  Am I missing something here?

y

On Tue, Apr 30, 2013 at 9:54 PM, Daniel B=FCnzli
<daniel.buenzli@erratique.ch> wrote:
> Le mercredi, 1 mai 2013 =E0 01:42, Yaron Minsky a =E9crit :
>> That said, my objection to your proposal is essentially technical.
>> Writing a layer that abstracts over Lwt and Async seems highly
>> problematic.
>
> We agree on that, I don't like the functor approach. My take on that is t=
o turn the problem upside down and instead of abstracting over the asynchro=
nous primitives, provide libraries that are asynchronous in their own mode =
of operation independently of monadic concurrency libraries, and hence usab=
le by any of them (or whatever asynchronous mechanism that may become preva=
lent in the future).
>
> For me the idea is that we can afford *library* programmers to suffer tha=
t pain --- basically hand made cps progamming, it's fun bun can be odd=85 H=
owever *application* (or end-user) programmers should not have to suffer an=
d use the monadic programming library of their choice.
>
> Now the point to which that idea can be brought is unknown to me. One thi=
ng that is certain to me is that at least for codecs (which is not a small =
amount of libraries in my opinion), this can be done and should be done.
>
>> I think it's hard to build such an abstraction that is performant,
>
> Regarding codecs, the pattern I mention allows you to use a unique, fixed=
 size, buffer for input and output -- perfect for Unix.{read,write}. There =
may however be a cost for cps that I'm not really able to assert -- but I g=
uess you also pay that price if you work directly with a monadic library.
>
>
>> reliable, easy to reason about,
>
> In fact the whole point of my wip on Fut [1] was to attach a clear denota=
tional semantics to its values and primitives. But since some combinators h=
ave side effects (cancellation) it hinders equational reasoning. Still I th=
ink it's nice to have a clear semantics attached your combinators, somethin=
g I find really lacking in both async and lwt. Maybe I'm special but I like=
 to understand my abstractions, especially having a clear concurrency model=
 of the runtime is important to me (and a simple one aswell, hence Fut's fi=
fo queues).
>
>> I don't understand what you mean by "application independent".
> By application *dependent* I mean related to the software architecture, d=
esign and constraints you choose to try to solve your specific problem -- m=
aybe that's just non obviously reusable code.
>
>> There
>> are of course lots of application-independent libraries written in
>> Async (and Lwt too), from communication mechanisms like Async-RPC to
>> code for setting up TCP servers and clients in the Tcp module, to
>> logging facilities like Async's Log library. But these libraries all
>> depend on the error handling, concurrency and performance semantics of
>> Async.
>
> These would be for me in the "concurrency patterns" I mentioned. So the q=
uestion is how far can we go here by just plugin asynchronous agnostic libr=
aries, and how painful it is (or not) for the end-user. I was actually inte=
nding to work on these questions beyond codecs (which is a solved problem f=
or me) in my work on webs [2], but I'm on other things right now.
>
> Best,
>
> Daniel
>
> [1]
> http://erratique.ch/tmp/fut/Fut.html
> https://github.com/dbuenzli/fut/blob/master/src/fut.mli
>
> [2]
> https://github.com/dbuenzli/webs
>

From jdimino@janestreet.com  Wed May  1 08:04:12 2013
Return-Path: <jdimino@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-52.csi.cam.ac.uk (ppsw-52.csi.cam.ac.uk [131.111.8.152])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 91C7B3C041
 for <wg-parallel@lists.ocaml.org>; Wed,  1 May 2013 08:04:12 +0100 (BST)
X-Cam-SpamDetails: score -2.5 from SpamAssassin-3.3.2-1477509 
 * -2.6 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:58987
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-52.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtp id 1UXREH-00048F-EB (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <jdimino@janestreet.com>); Wed, 01 May 2013 08:13:34 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UXRDv-0001dh-4S
 for wg-parallel@lists.ocaml.org; Wed, 01 May 2013 03:13:07 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <jdimino@janestreet.com>) id 1UXRDv-0000gO-3F
 for wg-parallel@lists.ocaml.org; Wed, 01 May 2013 03:13:07 -0400
Received: from mail-ob0-f198.google.com ([209.85.214.198])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UXRDv-0001wa-05
 for wg-parallel@lists.ocaml.org; Wed, 01 May 2013 03:13:07 -0400
Received: by mail-ob0-f198.google.com with SMTP id tb18so6728192obb.9
 for <wg-parallel@lists.ocaml.org>; Wed, 01 May 2013 00:13:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=Zf25WDkI2zb3plmZkKXfwECgIYluBiqDgcN6smVIBb4=;
 b=eGDamUfF/ALiFJchR/0EOx5KjdwfpU5tyZi5jocsDpVZurLTOJYBIe0M7gDZLfNesj
 4pvB+fuLO1aT/jwrbuqpv151KjKT0J/bavSex+zqzy0K9VT2ow78HE3UjOzAzn4zb78G
 rxMU4hq0gC5FjjFJeZQiNA+srq0mKTheyReFE=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type:x-gm-message-state;
 bh=Zf25WDkI2zb3plmZkKXfwECgIYluBiqDgcN6smVIBb4=;
 b=GhgFNt/VykUFgMyPL5+b/1A81CtlRYj1Dg0Q4Ufya2C7RMtO8NinreNUp/jE8bqGwI
 IspZWC3apAuQ8Yi+E7enHqL21HMOlCnI0ESA4/rSLQ4ndFLAUzI+BJnm3ZJYM2+2CJWe
 k1sBBcIKif0z99jLXxGJffqiAoZ+CoDkKhsZhMhiQd20UVHAZcHDT7cKy8xb65KHEUNS
 icSjSbT8qHJBw/FMOe90+JzZGuj7xVB3Gcd9ZFgink9aCDSWjWJQtqBnBC4TX1PBsNg2
 uTeVJk4jZiIc9QK6tCQjt63WIraZIPYwHWxqf8YNl3m77bSK+jSF5RR7Cy0tXH3kAvb/
 g2rQ==
X-Received: by 10.42.120.5 with SMTP id d5mr952945icr.16.1367392386641;
 Wed, 01 May 2013 00:13:06 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.42.120.5 with SMTP id d5mr952942icr.16.1367392386524; Wed,
 01 May 2013 00:13:06 -0700 (PDT)
Received: by 10.50.50.171 with HTTP; Wed, 1 May 2013 00:13:06 -0700 (PDT)
In-Reply-To: <CACLX4jQvYsB344L4DuebRzgCpL6tL0Fcj_Nixeu2iqBFrQsgFQ@mail.gmail.com>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CADKNfhJe7wWOuPjOMEXc7y5BZ1EPJVhqvhcb1HcfDL60rBqJvw@mail.gmail.com>
 <201304301443.18776.vincent.balat@univ-paris-diderot.fr>
 <CADKNfhLArip0chsO9h0zjvt066_zmOM1nuUUFO=o-L4qeJ=xRA@mail.gmail.com>
 <CACLX4jQvYsB344L4DuebRzgCpL6tL0Fcj_Nixeu2iqBFrQsgFQ@mail.gmail.com>
Date: Wed, 1 May 2013 08:13:06 +0100
Message-ID: <CANhEzE4eCus4aQECqNwjC05uzN-kwS2rBO=ThauciREOGRM2ig@mail.gmail.com>
From: Jeremie Dimino <jdimino@janestreet.com>
To: Yaron Minsky <yminsky@janestreet.com>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQmp9PhzfmyXcBLZEOHOGdA2Obfo1N2opwW9tKXUgsdsY70YvWNOY+/VscHTKwk2WVxz6JmV60ommpNZZExcsLiqv1N9WuL59wPaTh9DdBE4vNV8tnMaVSrKJT8A+u2UHW2Qk2diWzX50bmTPCjxF27JVaThOdNOnVboe2dZSmIzOXGYjJk=
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 01 May 2013 07:04:12 -0000

I had thought about that a bit.  So yes it is technically possible,
here is what would need to be done:

- write a Lwt module on top of async: doable
- write an engine for lwt.unix using the async scheduler: should be trivial
- adapt a little bit Lwt_unix for signal handling
- add a few things to async (immediate bind, local storage)

Though in the end there the result will be less efficient than the
default lwt, for instance because there is one more level of boxing
for each thread due to the Or_error.t.

Also just that will provide very basic integration, for example if a
part of your program uses async and another part uses lwt you cannot
pass file descriptors from one to another since the type will still be
different.  With more work it would be possible to get more
integration and to use async's file descriptors in Lwt_unix for
instance.

Anyway I think the first part shouldn't be too much work, it could be
an intern project.

On Wed, May 1, 2013 at 1:48 AM, Yaron Minsky <yminsky@janestreet.com> wrote:
> Jeremie, I have another thought about trying to bring Lwt and Async
> together: knowing the two engines well as you do, do you think it
> makes any technical sense to basically bolt an Lwt skin on top of
> Async?  i.e., create an alternate version of the Lwt module where 'a
> Lwt.t = 'a Or_exn.t Deferred.t, so as to let one share the core
> scheduler.  This could allow code written to Lwt to run on top of
> Async's engine.
>
> I suspect it would be quite a large effort, and perhaps the Lwt
> community would have no interest in using the result of it, so I'm not
> saying it's worth doing.  I'm just wondering if you think it's a
> technically feasible project.

From daniel.buenzli@erratique.ch  Wed May  1 08:28:51 2013
Return-Path: <daniel.buenzli@erratique.ch>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-52.csi.cam.ac.uk (ppsw-52.csi.cam.ac.uk [131.111.8.152])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id CB8CD3C041
 for <wg-parallel@lists.ocaml.org>; Wed,  1 May 2013 08:28:51 +0100 (BST)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.3.2-1477509
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mail6.webfaction.com ([74.55.86.74]:46842
 helo=smtp.webfaction.com)
 by ppsw-52.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtp id 1UXRcD-00022q-DZ (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <daniel.buenzli@erratique.ch>); Wed, 01 May 2013 08:38:14 +0100
Received: from [172.20.10.2] (92.40.253.89.threembb.co.uk [92.40.253.89])
 by smtp.webfaction.com (Postfix) with ESMTP id E18EA20EB499;
 Wed,  1 May 2013 07:38:11 +0000 (UTC)
Date: Wed, 1 May 2013 08:38:07 +0100
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: Yaron Minsky <yminsky@janestreet.com>
Message-ID: <54BC74327EDF42DBAFD8DC141EF2458E@erratique.ch>
In-Reply-To: <CACLX4jTAGFfLPVfa4whs5PAp-qyZ4inzjE8D=AxRFikhEZfCww@mail.gmail.com>
References: <3E7D3178A81143979C47D6C9E012039C@erratique.ch>
 <CACLX4jTsVU=NafyrVxRYYmEGLXQDdBGXs_wZ3ir5ZsPq=EUxiw@mail.gmail.com>
 <910F0F81D8AC41FDBFCE86AFA7DA03AA@erratique.ch>
 <CACLX4jQ9y7oQM0HO_0JioMGqz=CTXT-w1cYwPj6Vtuso1DhOvg@mail.gmail.com>
 <5EAC34FD03C547579C5E6DC1B4FCF9A4@erratique.ch>
 <CACLX4jTAGFfLPVfa4whs5PAp-qyZ4inzjE8D=AxRFikhEZfCww@mail.gmail.com>
X-Mailer: sparrow 1.6.4 (build 1178)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 01 May 2013 07:28:51 -0000

Le mercredi, 1 mai 2013 =C3=A0 04:15, Yaron Minsky a =C3=A9crit :
> Is the code to =46ut available somewhere=3F
It's here https://github.com/dbuenzli/fut/ but be warned that this is unf=
inished and unreleased software. =20

> =46rom a glance, =46ut looks more like a third monadic concurrency
> library, parallel to Async and Lwt, rather than an abstraction layer
> above such libraries. Am I missing something here=3F

No, that's correct, I don't know where you got the idea that it was an ab=
straction layer. =20

Best,

Daniel



From jdimino@janestreet.com  Wed May  1 09:23:31 2013
Return-Path: <jdimino@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-52.csi.cam.ac.uk (ppsw-52.csi.cam.ac.uk [131.111.8.152])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 9283C3C407
 for <wg-parallel@lists.ocaml.org>; Wed,  1 May 2013 09:23:31 +0100 (BST)
X-Cam-SpamDetails: score -2.5 from SpamAssassin-3.3.2-1477509 
 * -2.6 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:36089
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-52.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtp id 1UXST2-0005Gw-EV (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <jdimino@janestreet.com>); Wed, 01 May 2013 09:32:54 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UXSSg-0006jc-1L
 for wg-parallel@lists.ocaml.org; Wed, 01 May 2013 04:32:26 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <jdimino@janestreet.com>) id 1UXSSg-0003Ya-02
 for wg-parallel@lists.ocaml.org; Wed, 01 May 2013 04:32:26 -0400
Received: from mail-oa0-f69.google.com ([209.85.219.69])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <jdimino@janestreet.com>) id 1UXSSf-0004WT-Tp
 for wg-parallel@lists.ocaml.org; Wed, 01 May 2013 04:32:25 -0400
Received: by mail-oa0-f69.google.com with SMTP id l20so8212267oag.4
 for <wg-parallel@lists.ocaml.org>; Wed, 01 May 2013 01:32:25 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type
 :content-transfer-encoding;
 bh=apV/eLUfaWKFMZmMTInKqSBIj0QhyVI5SsWjuUYjQGE=;
 b=URQ5s7wgN1yID/amTuDKMSsmMqUdOeL/bOugIVc5zOCgfMAkYy5iTHbt0XBs+riARe
 Or9ruYkM0gSqPJ5SaSsHMLVFvhfneHIfy793lY2pJXCjQGje7d+DcWA2xPBtaeLlya5c
 X7mbJ2w6/dE4QfeYwK0Aw7GKQQyXq9xaOZ0JM=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type
 :content-transfer-encoding:x-gm-message-state;
 bh=apV/eLUfaWKFMZmMTInKqSBIj0QhyVI5SsWjuUYjQGE=;
 b=CKXg6sQQb83CzQSPumZAaqBqancFr42rf32ib/zYITb1eP9q26luw9VhEPAqVgm2ZW
 Ypdyv146++80k9lYMIMgpXUr9ZG0nM9w9y1/zWyN2cSEzenEnStbG6Kghs0BWWDnASye
 TUgH+amTE3FFS4Tf2KCihtYLUeJS356N9dRnhx1Wi8K0xEB5xmKw5nvH4RqUHhKJGH4F
 wB6x3SRjVF/uk0Zej2f5biKSDYtgu/ouOI556kvuvwFvoMqDsfGTQF8vjVxMRZ7aOXm0
 OSrw1NF5h/IOKN49e7om+vvsL/d+lNlfgoi8T326ympqt4y4QKhT5+Ir63OUqg9YbeaJ
 EeqQ==
X-Received: by 10.50.25.42 with SMTP id z10mr3413395igf.104.1367397145547;
 Wed, 01 May 2013 01:32:25 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.50.25.42 with SMTP id z10mr3413393igf.104.1367397145482;
 Wed, 01 May 2013 01:32:25 -0700 (PDT)
Received: by 10.50.50.171 with HTTP; Wed, 1 May 2013 01:32:25 -0700 (PDT)
In-Reply-To: <3E7D3178A81143979C47D6C9E012039C@erratique.ch>
References: <3E7D3178A81143979C47D6C9E012039C@erratique.ch>
Date: Wed, 1 May 2013 09:32:25 +0100
Message-ID: <CANhEzE78QemdoXtJf+taaPDaVhSLQbuZGyc_o9sciN+ptdeRVA@mail.gmail.com>
From: Jeremie Dimino <jdimino@janestreet.com>
To: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@erratique.ch>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
X-Gm-Message-State: ALoCoQleZDBcLXGKPUGW0PtLs/3gNePcM2zEXvb5OVNpOAjC7IKQoXVMVJdQ0XU/K306K1NnIIJzXi8kKLZC/YO9H9bhCKmO7kpWx/DWQOUXeKUdb/AcB4q0LC74P/SHuCooQ4dt8x7Fu2/Uoo7/951U6faalLcjFxuq0wprUVxOIfkpn+qP4pI=
Cc: wg-parallel@lists.ocaml.org
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 01 May 2013 08:23:31 -0000

On Tue, Apr 30, 2013 at 6:25 PM, Daniel B=FCnzli
<daniel.buenzli@erratique.ch> wrote:
> To be honest I'm neither content with either lwt nor async. I actually to=
yed with my own implementation of these concepts, that may, or not, be rele=
ased in the future. A few hints of what lead me to that are given here [1].

I am not surprised that not everybody is happy with lwt or async, you
are not the first one I know of to try his own implementation.  Also I
am always interested in feedback, so it is interesting to see
different ones.

> That being said I would like to stress that a lot of foundational librari=
es can avoid making a choice *without* functorizing as Yaron (doesn't) sugg=
est.
>
> Notably codecs can be made both lwt and async friendly by following this =
pattern [2] (the repo has a toy example, see the readme), which I already i=
mplemented for Unicode and JSON decoding [3,4]; xmlm will adopt it once I g=
et time to work on the library again; the Vg library on which I'm currently=
 working on [5] also uses that pattern.

Well that works to some extent.  If you are doing no IO or just using
sockets it is easy to provide the user with what he needs to hook into
the asynchronous mechanism of his choice.  But the more you need from
the OS and the harder it gets.

> Given the positions on both sides, I actually think we should take that "=
schism" as a chance rather than a curse. Striving for independence from the=
 concrete asynchronous programming mechanism (with or without functorizing)=
 and cutting down on dependencies in foundational libraries may actually le=
ad to software that is more composable, adaptable and reusable in the long =
term.
>
> My opinion is that most of the time choosing a particular asynchronous pr=
ogramming library should be a choice left to the developer of *applications=
* not to the developer of libraries --- but I have a bias towards small and=
 focused libraries rather than "solve everything frameworks".

I guess the good thing about big integrated frameworks is that it is
quicker to develop applications with them.  You can just import them
and start using what you need without having to worry about
inter-component integration.

That said I agree with you that small independent libraries like yours
are a good thing.

From Dave.Scott@eu.citrix.com  Wed May  1 13:50:53 2013
Return-Path: <Dave.Scott@eu.citrix.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-mx-f.csi.cam.ac.uk [131.111.8.149])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id B26483C046
 for <wg-parallel@lists.ocaml.org>; Wed,  1 May 2013 13:50:53 +0100 (BST)
X-Cam-SpamDetails: score -2.6 from SpamAssassin-3.3.2-1477509 
 * -2.6 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from smtp.eu.citrix.com ([46.33.159.39]:10049)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtp id 1UXWds-0005Nc-7p (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <Dave.Scott@eu.citrix.com>); Wed, 01 May 2013 14:00:16 +0100
X-IronPort-AV: E=Sophos;i="4.87,552,1363132800"; 
   d="scan'208";a="4116698"
Received: from lonpmailmx01.citrite.net ([10.30.203.162])
 by LONPIPO01.EU.CITRIX.COM with ESMTP/TLS/RC4-MD5; 01 May 2013 12:59:47 +0000
Received: from [10.80.239.111] (10.80.239.111) by LONPMAILMX01.citrite.net
 (10.30.203.162) with Microsoft SMTP Server id 8.3.298.1; Wed, 1 May 2013
 14:00:16 +0100
Message-ID: <518111F4.7040800@eu.citrix.com>
Date: Wed, 1 May 2013 14:00:36 +0100
From: David Scott <dave.scott@eu.citrix.com>
User-Agent: Mozilla/5.0 (X11; Linux x86_64;
 rv:17.0) Gecko/20130311 Thunderbird/17.0.4
MIME-Version: 1.0
To: Jeremie Dimino <jdimino@janestreet.com>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CADKNfhJe7wWOuPjOMEXc7y5BZ1EPJVhqvhcb1HcfDL60rBqJvw@mail.gmail.com>
 <201304301443.18776.vincent.balat@univ-paris-diderot.fr>
 <CADKNfhLArip0chsO9h0zjvt066_zmOM1nuUUFO=o-L4qeJ=xRA@mail.gmail.com>
 <CACLX4jQvYsB344L4DuebRzgCpL6tL0Fcj_Nixeu2iqBFrQsgFQ@mail.gmail.com>
 <CANhEzE4eCus4aQECqNwjC05uzN-kwS2rBO=ThauciREOGRM2ig@mail.gmail.com>
In-Reply-To: <CANhEzE4eCus4aQECqNwjC05uzN-kwS2rBO=ThauciREOGRM2ig@mail.gmail.com>
Content-Type: text/plain; charset="ISO-8859-1"; format=flowed
Content-Transfer-Encoding: 7bit
X-Mailman-Approved-At: Wed, 01 May 2013 13:56:37 +0100
Cc: "wg-parallel@lists.ocaml.org" <wg-parallel@lists.ocaml.org>
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 01 May 2013 12:50:53 -0000


Hi,

In the XenServer part of Citrix we're starting to use Core for some 
projects (and no doubt we'll incorporate Async into those soon) and 
we're also using Lwt, mainly via mirage. We haven't invested so much in 
either that it would be impossible to switch, although it will take a 
while: shipping code will often be maintained for around 5 years.

I had a quick look at our development opam repo[1] and, at the package 
level at least, our stuff breaks down roughly into

   * 25% C bindings for bits of Unix; traditional style; potentially 
blocking operations.
   * 25% protocol implementations / format converters. These are a mix 
of traditional style, with some lwt creeping in (often kept separate 
using ocamlfind subpackages)
   * 50% apps / services / tools. I'm expecting both Async and Lwt to 
start creeping in here.

Our apps usually talk to each other via RPC so we can live with a 
mixture of Async apps and Lwt apps but it would obviously be simpler if 
we were able to standardise (eventually) on one API.

The simple Lwt shim on top of Async Jeremie described would potentially 
be useful for us: in some of our less performance-critical apps we could 
clearly live with a bit of extra boxing. We're also not using very much 
of the Lwt library so even a very basic integration would still be useful.

Our performance critical apps will use mirage and its ecosystem of 
libraries, all based on Lwt. If it were possible to port the kernel of 
Async to mirage then we could use the Async engine everywhere, and
slowly port everything over to it.

Cheers,
Dave

[1] https://github.com/xen-org/opam-repo-dev

From yminsky@janestreet.com  Wed May  1 16:27:14 2013
Return-Path: <yminsky@janestreet.com>
X-Original-To: wg-parallel@lists.ocaml.org
Delivered-To: wg-parallel@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 749A33C046
 for <wg-parallel@lists.ocaml.org>; Wed,  1 May 2013 16:27:14 +0100 (BST)
X-Cam-SpamDetails: score -2.5 from SpamAssassin-3.3.2-1477509 
 * -2.6 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 *  0.0 T_DKIM_INVALID DKIM-Signature header exists but is not valid
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx5.janestreet.com ([38.105.200.229]:45693
 helo=tot-dmz-mxout1.janestreet.com)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1UXZ55-0007lb-h6 (Exim 4.80_167-5a66dd3) for
 wg-parallel@lists.ocaml.org
 (return-path <yminsky@janestreet.com>); Wed, 01 May 2013 16:36:38 +0100
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
 by tot-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <yminsky@janestreet.com>) id 1UXZ4g-0007hc-VR
 for wg-parallel@lists.ocaml.org; Wed, 01 May 2013 11:36:06 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14]
 helo=mxgoog2.janestreet.com)
 by tot-smtp with esmtps (TLSv1:AES256-SHA:256) (Exim 4.72)
 (envelope-from <yminsky@janestreet.com>) id 1UXZ4g-0003HW-UF
 for wg-parallel@lists.ocaml.org; Wed, 01 May 2013 11:36:06 -0400
Received: from mail-we0-f200.google.com ([74.125.82.200])
 by mxgoog2.janestreet.com with esmtp (Exim 4.76)
 (envelope-from <yminsky@janestreet.com>) id 1UXZ4g-000358-Pb
 for wg-parallel@lists.ocaml.org; Wed, 01 May 2013 11:36:06 -0400
Received: by mail-we0-f200.google.com with SMTP id s43so2114984wey.11
 for <wg-parallel@lists.ocaml.org>; Wed, 01 May 2013 08:36:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=janestreet.com; s=google;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type;
 bh=LYNDUbcTyxHPSC/LJjoJGn6T5tXbMFWKxVyZit5WfwI=;
 b=UucOjMqvVB7yTHvyO1+5RyPTq629Fzl9I5DBlErRj2JFmcW5MiteLZtXouiyB5+xQi
 iL8SX0f0hEl0mKQ/bZIkgM+LeOvVeHU+q2tqcjfgWqDm+NSG6hBJ17tCHjPxjVr+n2qo
 cfNdAp20MGRGJETvvX9K863JCpTE7Usln1qh0=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=google.com; s=20120113;
 h=x-received:mime-version:x-received:in-reply-to:references:date
 :message-id:subject:from:to:cc:content-type:x-gm-message-state;
 bh=LYNDUbcTyxHPSC/LJjoJGn6T5tXbMFWKxVyZit5WfwI=;
 b=O4OnTvFTp19v+BlxlmThBHjt1vxVJbaAsXFw+ZxoNieHqCP2B0v3WqpcG/VuDyxugw
 xVsZGD6u8lNlAl89WfLGrfT1BczxSkWmHFRYH2nJcYX4RvTaCDqR/r7HVSYByH+AV2kx
 nmgZkKlUMc0aZ/5pzqgThwy2tn8nYP4jx+5vVdkKF8J07Xz5HXRK4723QWhJYc2q0HTH
 6yf9VwPpB501JMz7qT+zioJt0aWa6WL4HEk7qTY5rrTZ9CAgNr5s1Q2HZuD4usOC0qF9
 QcLI/zsUnX5PjX0byArQbGW5Olzu6OsYNI/gf++Dy2FxOfTPEgJUbHZFXuHyerlchPQX
 24Fw==
X-Received: by 10.14.202.201 with SMTP id d49mr9580839eeo.1.1367422566240;
 Wed, 01 May 2013 08:36:06 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.14.202.201 with SMTP id d49mr9580812eeo.1.1367422566091;
 Wed, 01 May 2013 08:36:06 -0700 (PDT)
Received: by 10.223.97.77 with HTTP; Wed, 1 May 2013 08:36:05 -0700 (PDT)
In-Reply-To: <518111F4.7040800@eu.citrix.com>
References: <CANhEzE4MkRhdhdEWJCDbsa_+xhQixpwnEEc_ZbmmGx4rPwWjcw@mail.gmail.com>
 <CADKNfhJe7wWOuPjOMEXc7y5BZ1EPJVhqvhcb1HcfDL60rBqJvw@mail.gmail.com>
 <201304301443.18776.vincent.balat@univ-paris-diderot.fr>
 <CADKNfhLArip0chsO9h0zjvt066_zmOM1nuUUFO=o-L4qeJ=xRA@mail.gmail.com>
 <CACLX4jQvYsB344L4DuebRzgCpL6tL0Fcj_Nixeu2iqBFrQsgFQ@mail.gmail.com>
 <CANhEzE4eCus4aQECqNwjC05uzN-kwS2rBO=ThauciREOGRM2ig@mail.gmail.com>
 <518111F4.7040800@eu.citrix.com>
Date: Wed, 1 May 2013 11:36:05 -0400
Message-ID: <CACLX4jRf3A83ZR5jVX7tVenvoSDHC5NwyFhhWqEUfdV_a6oaLg@mail.gmail.com>
From: Yaron Minsky <yminsky@janestreet.com>
To: David Scott <dave.scott@eu.citrix.com>
Content-Type: text/plain; charset=ISO-8859-1
X-Gm-Message-State: ALoCoQnvKQnOEKRMSWjQZQxbZpYHr4jzuMtK8bJUXre50pKo/UlhoniOPqyyaXa+uLokWlh7QXnGevmVhDZ6D09oBBsHSudXtvViHQQcUPXMiLDwoJsm0FDzO71ZQ3Uzdk8hABIROnlUYGqtdtlbmmF8tGz9ZliqZ/qcyRcCORvwFq4Y2+mzLx8=
Cc: "wg-parallel@lists.ocaml.org" <wg-parallel@lists.ocaml.org>
Subject: Re: [wg-parallel] About Lwt and Async
X-BeenThere: wg-parallel@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: "Working Group: Parallel programming for OCaml"
 <wg-parallel.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/wg-parallel/>
List-Post: <mailto:wg-parallel@lists.ocaml.org>
List-Help: <mailto:wg-parallel-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/wg-parallel>,
 <mailto:wg-parallel-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 01 May 2013 15:27:14 -0000

On Wed, May 1, 2013 at 9:00 AM, David Scott <dave.scott@eu.citrix.com> wrote:
>
> Hi,
>
> In the XenServer part of Citrix we're starting to use Core for some projects
> (and no doubt we'll incorporate Async into those soon) and we're also using
> Lwt, mainly via mirage. We haven't invested so much in either that it would
> be impossible to switch, although it will take a while: shipping code will
> often be maintained for around 5 years.
>
> I had a quick look at our development opam repo[1] and, at the package level
> at least, our stuff breaks down roughly into
>
>   * 25% C bindings for bits of Unix; traditional style; potentially blocking
> operations.
>   * 25% protocol implementations / format converters. These are a mix of
> traditional style, with some lwt creeping in (often kept separate using
> ocamlfind subpackages)
>   * 50% apps / services / tools. I'm expecting both Async and Lwt to start
> creeping in here.
>
> Our apps usually talk to each other via RPC so we can live with a mixture of
> Async apps and Lwt apps but it would obviously be simpler if we were able to
> standardise (eventually) on one API.
>
> The simple Lwt shim on top of Async Jeremie described would potentially be
> useful for us: in some of our less performance-critical apps we could
> clearly live with a bit of extra boxing. We're also not using very much of
> the Lwt library so even a very basic integration would still be useful.
>
> Our performance critical apps will use mirage and its ecosystem of
> libraries, all based on Lwt. If it were possible to port the kernel of Async
> to mirage then we could use the Async engine everywhere, and
> slowly port everything over to it.
>
> Cheers,
> Dave
>
> [1] https://github.com/xen-org/opam-repo-dev

I believe Anil is interested in moving Mirage to Async (Anil, can you
confirm?), and Jeremie and Stephen are going to do the reorganization
of Core so that there is a Core_kernel that's more portable than the
full Core, and Async's core (which we're going to rename to
Async_kernel) is going to depend only on Core_kernel.

As Jeremie said, the Lwt shim seems doable, and we'll look into that
as an intern project this summer.

I should say: I very much endorse Daniel's suggestion that codecs
should when possible be written in such a way as to be adaptible
between multiple engines.

As a side note, it looks like we're not the only community with this
problem.  There are some interesting discussions in the Scala
community about the mismatch between Akka futures and Finagle
futures.  It's all very reminisicent.

https://groups.google.com/forum/#!topic/akka-user/eXiBV5V7ZzE

We're also contemplating having an intern look as to whether Libuv
would be a reasonable way of getting Async to be more portable to
other places, including Windows.

y

