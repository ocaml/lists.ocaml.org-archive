From Christophe.Troestler at umons.ac.be  Sat Mar  1 20:06:35 2014
From: Christophe.Troestler at umons.ac.be (Christophe Troestler)
Date: Sat, 1 Mar 2014 21:06:35 +0100
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <CAHvkLrNFPhiLqmE7bVYO_LFiMA4csGyUaS7r3tF7FGQnMf6TrQ@mail.gmail.com>
References: <20140228.152822.2008424557211558942.Christophe.Troestler@umons.ac.be>
 <D6AF9D31-17A8-49C3-907E-97A623DC703E@cam.ac.uk>
 <CAHvkLrNFPhiLqmE7bVYO_LFiMA4csGyUaS7r3tF7FGQnMf6TrQ@mail.gmail.com>
Message-ID: <20140301.210635.1928553743016148003.Christophe.Troestler@umons.ac.be>

On Fri, 28 Feb 2014 17:07:08 +0100, Fabrice Le Fessant wrote:
> 
> On Fri, Feb 28, 2014 at 4:33 PM, Amir Chaudhry <amc79 at cam.ac.uk> wrote:
> > Firstly, I agree that having license info at the top of each
> > source file is better.  It becomes more clearly visible for people
> > who are contributing solely via the web-based workflow (we've had
> > a number of those now).
> 
> Then, we should have both: headers in files for people contributing
> through the web, and licenses in directories for people contributing
> the Unix way.

I am not sure.  I think this file will likely be overlooked (plus,
does it apply recursively or do you copy it in every sub-directory of,
say, site/ ?  I am also unclear about what is ?unixish? in having a
license file in each subdir.

> > Finally, although this is not purely a licensing issue, I'm
> > concerned about the comment "whoever wants to customize its own
> > version of the website ...".  If this a reference about people
> > (already) wanting to fork the site and maintain other versions
> > then I'm quite concerned.  Licensing shouldn't prevent content
> > re-use but this sounds like the opposite of building a community.
> 
> I don't see a link between preventing other people from creating their
> variant of ocaml.org, and "buiding a community" (which I interpret as
> "growing the OCaml community"). I would prefer having 10 major
> websites about OCaml (one for OCaml under Windows, one for the Chinese
> community, one for OCaml on mobiles, etc.), with 10,000 users behind
> each one, than having just one website with 500 users, which would be
> "the community website".

One can always dream of several 10,000 visitors a day but multiplying
the number of sites will not make it happen.  Python, for all its
followers, does not have several sites that all pretend to be the main
reference.  All other sites talking about python will happily
reference http://python.org/ as the place were python lives.  We have
about 1000 visitors a day ATM and the task force in the community is
not that large.  I think it is more efficient to have all willing
people improve a single (multilingual) web site (which has been
thought from the start to run well on mobiles BTW).

> You might also want to have the equivalent of "Affero GPL" for
> contents (I am not a specialist, but I imagine some CC licenses do
> that): let people use the content of this site, but force them to
> allow you to take back their contributions.

Doesn't CC BY-SA 4.0 do just that (see the "ShareAlike" clause)?
https://creativecommons.org/licenses/by-sa/4.0/

Best,
C.

From Fabrice.Le_fessant at inria.fr  Sat Mar  1 20:29:03 2014
From: Fabrice.Le_fessant at inria.fr (Fabrice Le Fessant)
Date: Sat, 1 Mar 2014 21:29:03 +0100
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <20140301.210635.1928553743016148003.Christophe.Troestler@umons.ac.be>
References: <20140228.152822.2008424557211558942.Christophe.Troestler@umons.ac.be>
 <D6AF9D31-17A8-49C3-907E-97A623DC703E@cam.ac.uk>
 <CAHvkLrNFPhiLqmE7bVYO_LFiMA4csGyUaS7r3tF7FGQnMf6TrQ@mail.gmail.com>
 <20140301.210635.1928553743016148003.Christophe.Troestler@umons.ac.be>
Message-ID: <CAHvkLrP0S-c8KD_Z3wB7Vtk6iQK7U8gfba19zcoBKW2XF=U7Uw@mail.gmail.com>

On Sat, Mar 1, 2014 at 9:06 PM, Christophe Troestler
<Christophe.Troestler at umons.ac.be> wrote:
> I am not sure.  I think this file will likely be overlooked (plus,
> does it apply recursively or do you copy it in every sub-directory of,
> say, site/ ?  I am also unclear about what is "unixish" in having a
> license file in each subdir.

What I meant was: we should try to avoid mixing in the same directory
files with different licenses. Otherwise, there can be only one
license file, listing all the licenses and which directories they
target.

The Unix way meant "not on the web" :-)

> One can always dream of several 10,000 visitors a day but multiplying
> the number of sites will not make it happen.  Python, for all its
> followers, does not have several sites that all pretend to be the main
> reference.  All other sites talking about python will happily
> reference http://python.org/ as the place were python lives.  We have
> about 1000 visitors a day ATM and the task force in the community is
> not that large.  I think it is more efficient to have all willing
> people improve a single (multilingual) web site (which has been
> thought from the start to run well on mobiles BTW).

For Python, following your example, there is a http://www.afpy.org/
for the french community, with its own forums and mailing-lists. I
imagine that there are similar websites for most non-english
countries. For Linux, there are hundred of websites, but only one
community, isn't it ?

I think that saying "it's the only website for the community" is very
dangerous. Other people might want to create websites with different
goals, designs, etc. They might want to have the control over the
content, the moderation, etc. Why would the community belongs to this
website ? There is a very big difference between saying that you are
trying to build a "website for the community" (which is very good
thing to do) and "THE community website", which is what I hear here
all the time (see Amir's comment about his fear of seeing forks of
this website).

Also, you cannot say: everybody who wants to build a website for OCaml
should join this team. It is an utopia. Life is not like that. People
don't gather together even if they have the same goal, there are
hundreds of reasons why people might want _not_ to join this team, and
create their own website instead. Why are there many companies
producing the same thing in the world, and not only one ? Why are
there so many software doing exactly the same thing, instead of just
one ?

> Doesn't CC BY-SA 4.0 do just that (see the "ShareAlike" clause)?
> https://creativecommons.org/licenses/by-sa/4.0/

Indeed ! I didn't check that part of the license, I thought it had
another meaning. That's very good !

--Fabrice

From avsm2 at cl.cam.ac.uk  Sat Mar  1 20:57:58 2014
From: avsm2 at cl.cam.ac.uk (Anil Madhavapeddy)
Date: Sat, 1 Mar 2014 20:57:58 +0000
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <CAHvkLrP0S-c8KD_Z3wB7Vtk6iQK7U8gfba19zcoBKW2XF=U7Uw@mail.gmail.com>
References: <20140228.152822.2008424557211558942.Christophe.Troestler@umons.ac.be>
 <D6AF9D31-17A8-49C3-907E-97A623DC703E@cam.ac.uk>
 <CAHvkLrNFPhiLqmE7bVYO_LFiMA4csGyUaS7r3tF7FGQnMf6TrQ@mail.gmail.com>
 <20140301.210635.1928553743016148003.Christophe.Troestler@umons.ac.be>
 <CAHvkLrP0S-c8KD_Z3wB7Vtk6iQK7U8gfba19zcoBKW2XF=U7Uw@mail.gmail.com>
Message-ID: <7E73C53C-784D-4461-9BB1-5381358C34DB@cl.cam.ac.uk>

On 1 Mar 2014, at 20:29, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:

> For Python, following your example, there is a http://www.afpy.org/
> for the french community, with its own forums and mailing-lists. I
> imagine that there are similar websites for most non-english
> countries. For Linux, there are hundred of websites, but only one
> community, isn't it ?

The http://afpy.org example you show doesn't appear to share any
content with the http://python.org website.  So how is that a fork?

"ocaml.org" consists of a few different pieces:

1) tools
2) content
3) compute infrastructure

1) and 2) are pretty easy to re-use as anyone wants once this licensing
thread is closed.
3) will be quite difficult for other people to just fork, since there's
real resources and effort that goes into keeping it running.

As I see it, OCaml's had a very successful 16 years of distributing
community content all over the Internet.  My goal for ocaml.org is to
see it become a single point of focus that serves OCaml users with
accurate, up-to-date documentation, tutorials and packaging infrastructure.

To date, this focus has been going very well -- in recent months, we've
put the new design live, moved the OPAM infrastructure over to the
subdomain, activated SSL certificates, deployed Rackspace infrastructure
thanks to their generous donations, and got a great Travis testing
workflow going for ongoing testing.

Work has been ongoing to improve opam2web (via opamfu) to further integrate
OPAM package and documentation into the main website, as well as provide a
high-quality French translation as the first major translation. So given
all this great work, we should remain focussed on hitting this goal
and continuing to grow our userbase.

I'm trying to understand what the concrete objection here is.  Is it
to do with the licensing choice for 2)? Bear in mind that forking
infrastructure will always be difficult -- despite the existence of
afpy.org, there's still a far more impressive set of lists at the central
Python mail server: https://mail.python.org/mailman/listinfo

So to my question: is there some group that you feel we aren't serving
adequately at the moment that would benefit from a refinement of our
approach?  It's important to know this before we lock in a decision on
licensing, as that's a difficult decision to reverse.

-anil

From Christophe.Troestler at umons.ac.be  Sat Mar  1 21:00:39 2014
From: Christophe.Troestler at umons.ac.be (Christophe Troestler)
Date: Sat, 1 Mar 2014 22:00:39 +0100
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <CAHvkLrP0S-c8KD_Z3wB7Vtk6iQK7U8gfba19zcoBKW2XF=U7Uw@mail.gmail.com>
References: <CAHvkLrNFPhiLqmE7bVYO_LFiMA4csGyUaS7r3tF7FGQnMf6TrQ@mail.gmail.com>
 <20140301.210635.1928553743016148003.Christophe.Troestler@umons.ac.be>
 <CAHvkLrP0S-c8KD_Z3wB7Vtk6iQK7U8gfba19zcoBKW2XF=U7Uw@mail.gmail.com>
Message-ID: <20140301.220039.994339546095940274.Christophe.Troestler@umons.ac.be>

On Sat, 1 Mar 2014 21:29:03 +0100, Fabrice Le Fessant wrote:
> 
> For Python, following your example, there is a http://www.afpy.org/
> for the french community, with its own forums and mailing-lists.
> [...] I think that saying "it's the only website for the community"
> is very dangerous. Other people might want to create websites with
> different goals, [...]

Agreed.  I did not say that there should not be any other website
about OCaml (there are other ones actually and we are not trying to
merge them), my point is that a language needs a central point of
visibility (and there is no argument that it is http://www.python.org/
for Python, http://www.haskell.org/ for Haskell,...).  In your
example, http://www.afpy.org/ is not trying to be a substitute to
python.org, or a French translation of it, it provides different
services tailored to the French community.

> Also, you cannot say: everybody who wants to build a website for OCaml
> should join this team. It is an utopia. Life is not like that. [...]

Sorry if I was unclear but I did not mean that "everybody who wants to
build a website for OCaml should join this team".  What I meant is
that if somebody wants to build a website that provides the same
services as ocaml.org (for example a translation of it), they would be
well advised to get in touch and see whether they can contribute to
ocaml.org directly.  Providing the same services on a different site
will result in a loss for both parties IMHO.  (Of course, everybody is
free to do what they want, we are lucky enough to live in free countries.)

Hope I was clearer.

Best,
C.

From Fabrice.Le_fessant at inria.fr  Sat Mar  1 21:36:01 2014
From: Fabrice.Le_fessant at inria.fr (Fabrice Le Fessant)
Date: Sat, 1 Mar 2014 22:36:01 +0100
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <7E73C53C-784D-4461-9BB1-5381358C34DB@cl.cam.ac.uk>
References: <20140228.152822.2008424557211558942.Christophe.Troestler@umons.ac.be>
 <D6AF9D31-17A8-49C3-907E-97A623DC703E@cam.ac.uk>
 <CAHvkLrNFPhiLqmE7bVYO_LFiMA4csGyUaS7r3tF7FGQnMf6TrQ@mail.gmail.com>
 <20140301.210635.1928553743016148003.Christophe.Troestler@umons.ac.be>
 <CAHvkLrP0S-c8KD_Z3wB7Vtk6iQK7U8gfba19zcoBKW2XF=U7Uw@mail.gmail.com>
 <7E73C53C-784D-4461-9BB1-5381358C34DB@cl.cam.ac.uk>
Message-ID: <CAHvkLrMb_Yzp4F3tVkK3QKCODmC01E2ASZ7ysbEWyjwb1zWVAQ@mail.gmail.com>

On Sat, Mar 1, 2014 at 9:57 PM, Anil Madhavapeddy <avsm2 at cl.cam.ac.uk> wrote:

> So to my question: is there some group that you feel we aren't serving
> adequately at the moment that would benefit from a refinement of our
> approach?  It's important to know this before we lock in a decision on
> licensing, as that's a difficult decision to reverse.

There is no objection here, I was not discussing the licensing issues
anymore, nor the ambition to create a great website for OCaml.
I was just replying to some comments worrying about the possibility of
a fork. Actually, I was not really thinking about a fork, but more
about websites copying only a few parts of ocaml.org, to provide
things that would be missing here for these people. Of course, people
should be encouraged to contribute to ocaml.org, but for me, instead
of wanting everything to be on ocaml.org, it would be better to
encourage an ecosystem with a galaxy of websites each one referencing
each other and cross-linking the content of the other ones.

--Fabrice

From Christophe.Troestler at umons.ac.be  Sat Mar  1 23:49:10 2014
From: Christophe.Troestler at umons.ac.be (Christophe Troestler)
Date: Sun, 2 Mar 2014 00:49:10 +0100
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <CAHvkLrMb_Yzp4F3tVkK3QKCODmC01E2ASZ7ysbEWyjwb1zWVAQ@mail.gmail.com>
References: <CAHvkLrP0S-c8KD_Z3wB7Vtk6iQK7U8gfba19zcoBKW2XF=U7Uw@mail.gmail.com>
 <7E73C53C-784D-4461-9BB1-5381358C34DB@cl.cam.ac.uk>
 <CAHvkLrMb_Yzp4F3tVkK3QKCODmC01E2ASZ7ysbEWyjwb1zWVAQ@mail.gmail.com>
Message-ID: <20140302.004910.2229501727659484438.Christophe.Troestler@umons.ac.be>

On Sat, 1 Mar 2014 22:36:01 +0100, Fabrice Le Fessant wrote:
> 
> There is no objection here, I was not discussing the licensing issues
> anymore,

Since the license seem to be a solved matter, I created a basic
skeleton to populate files with headers (commit 3ed3a8e).  I am
waiting for your input before pushing the actual headers to the files.

Cheers,
C.

From agarwal1975 at gmail.com  Sat Mar  1 23:51:06 2014
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Sat, 1 Mar 2014 18:51:06 -0500
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <CAHvkLrMb_Yzp4F3tVkK3QKCODmC01E2ASZ7ysbEWyjwb1zWVAQ@mail.gmail.com>
References: <20140228.152822.2008424557211558942.Christophe.Troestler@umons.ac.be>
 <D6AF9D31-17A8-49C3-907E-97A623DC703E@cam.ac.uk>
 <CAHvkLrNFPhiLqmE7bVYO_LFiMA4csGyUaS7r3tF7FGQnMf6TrQ@mail.gmail.com>
 <20140301.210635.1928553743016148003.Christophe.Troestler@umons.ac.be>
 <CAHvkLrP0S-c8KD_Z3wB7Vtk6iQK7U8gfba19zcoBKW2XF=U7Uw@mail.gmail.com>
 <7E73C53C-784D-4461-9BB1-5381358C34DB@cl.cam.ac.uk>
 <CAHvkLrMb_Yzp4F3tVkK3QKCODmC01E2ASZ7ysbEWyjwb1zWVAQ@mail.gmail.com>
Message-ID: <CAMu2m2Kx=Y=B1Vg8H2sarp4tRTuRrs4hWp0LdK3O_bWvQ33bOA@mail.gmail.com>

The conversation about whether other OCaml websites are justified is too
hypothetical. Let's consider it when and if someone is actually proposing
to do so.

In the mean time, the licensing issues have been agreed upon, except what I
consider minor details (e.g. where exactly to state the licenses). I'm
assuming at this point that we can go ahead and apply the licenses.

The next issue is whether we need to ask past contributors to agree to the
new licenses. There are three categories of past contributors:

* People who show up in the git log, i.e. people who contributed since the
ocaml.org project started. It should be easy enough to track this group
down, and we should get their permission.

* Contributors to ocaml-tutorials.org, from which the tutorials were taken.
This content was in the public domain, and I was given permission from the
owner of that site to reuse the content. Thus, I think it's okay for us to
place this content under CC-BY-SA without explicit permission from these
contributors. (Note these contributors do not show up in the git log.)

* Content taken from caml.inria.fr. I had verbal approval for this, but we
should get it in writing. It would be great if someone from Inria can help
with this.




On Sat, Mar 1, 2014 at 4:36 PM, Fabrice Le Fessant <
Fabrice.Le_fessant at inria.fr> wrote:

> On Sat, Mar 1, 2014 at 9:57 PM, Anil Madhavapeddy <avsm2 at cl.cam.ac.uk>
> wrote:
>
> > So to my question: is there some group that you feel we aren't serving
> > adequately at the moment that would benefit from a refinement of our
> > approach?  It's important to know this before we lock in a decision on
> > licensing, as that's a difficult decision to reverse.
>
> There is no objection here, I was not discussing the licensing issues
> anymore, nor the ambition to create a great website for OCaml.
> I was just replying to some comments worrying about the possibility of
> a fork. Actually, I was not really thinking about a fork, but more
> about websites copying only a few parts of ocaml.org, to provide
> things that would be missing here for these people. Of course, people
> should be encouraged to contribute to ocaml.org, but for me, instead
> of wanting everything to be on ocaml.org, it would be better to
> encourage an ecosystem with a galaxy of websites each one referencing
> each other and cross-linking the content of the other ones.
>
> --Fabrice
> _______________________________________________
> Infrastructure mailing list
> Infrastructure at lists.ocaml.org
> http://lists.ocaml.org/listinfo/infrastructure
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/infrastructure/attachments/20140301/4a050138/attachment-0001.html>

From Christophe.Troestler at umons.ac.be  Sun Mar  2 08:54:49 2014
From: Christophe.Troestler at umons.ac.be (Christophe Troestler)
Date: Sun, 2 Mar 2014 09:54:49 +0100
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <20140302.004910.2229501727659484438.Christophe.Troestler@umons.ac.be>
References: <7E73C53C-784D-4461-9BB1-5381358C34DB@cl.cam.ac.uk>
 <CAHvkLrMb_Yzp4F3tVkK3QKCODmC01E2ASZ7ysbEWyjwb1zWVAQ@mail.gmail.com>
 <20140302.004910.2229501727659484438.Christophe.Troestler@umons.ac.be>
Message-ID: <20140302.095449.1630812867575413535.Christophe.Troestler@umons.ac.be>

On Sun, 2 Mar 2014 00:49:10 +0100, Christophe Troestler wrote:
> 
> On Sat, 1 Mar 2014 22:36:01 +0100, Fabrice Le Fessant wrote:
> > 
> > There is no objection here, I was not discussing the licensing issues
> > anymore,
> 
> Since the license seem to be a solved matter, I created a basic
> skeleton to populate files with headers (commit 3ed3a8e).  I am
> waiting for your input before pushing the actual headers to the files.

I have also added LICENSE.md ? see it as a starting point and comment
to improve it!

Best,
C.

From Christophe.Troestler at umons.ac.be  Sun Mar  2 09:07:39 2014
From: Christophe.Troestler at umons.ac.be (Christophe Troestler)
Date: Sun, 2 Mar 2014 10:07:39 +0100
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <CAMu2m2Kx=Y=B1Vg8H2sarp4tRTuRrs4hWp0LdK3O_bWvQ33bOA@mail.gmail.com>
References: <7E73C53C-784D-4461-9BB1-5381358C34DB@cl.cam.ac.uk>
 <CAHvkLrMb_Yzp4F3tVkK3QKCODmC01E2ASZ7ysbEWyjwb1zWVAQ@mail.gmail.com>
 <CAMu2m2Kx=Y=B1Vg8H2sarp4tRTuRrs4hWp0LdK3O_bWvQ33bOA@mail.gmail.com>
Message-ID: <20140302.100739.393073362672362811.Christophe.Troestler@umons.ac.be>

On Sat, 1 Mar 2014 18:51:06 -0500, Ashish Agarwal wrote:
> 
> * People who show up in the git log, i.e. people who contributed since
>   the ocaml.org project started. It should be easy enough to track this
>   group down, and we should get their permission.

I have created an issue for that
https://github.com/ocaml/ocaml.org/issues/429
and will send an email to all contributors in a couple of hours.

From daniel.buenzli at erratique.ch  Sun Mar  2 15:15:06 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Sun, 2 Mar 2014 16:15:06 +0100
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <CAMu2m2Kx=Y=B1Vg8H2sarp4tRTuRrs4hWp0LdK3O_bWvQ33bOA@mail.gmail.com>
References: <20140228.152822.2008424557211558942.Christophe.Troestler@umons.ac.be>
 <D6AF9D31-17A8-49C3-907E-97A623DC703E@cam.ac.uk>
 <CAHvkLrNFPhiLqmE7bVYO_LFiMA4csGyUaS7r3tF7FGQnMf6TrQ@mail.gmail.com>
 <20140301.210635.1928553743016148003.Christophe.Troestler@umons.ac.be>
 <CAHvkLrP0S-c8KD_Z3wB7Vtk6iQK7U8gfba19zcoBKW2XF=U7Uw@mail.gmail.com>
 <7E73C53C-784D-4461-9BB1-5381358C34DB@cl.cam.ac.uk>
 <CAHvkLrMb_Yzp4F3tVkK3QKCODmC01E2ASZ7ysbEWyjwb1zWVAQ@mail.gmail.com>
 <CAMu2m2Kx=Y=B1Vg8H2sarp4tRTuRrs4hWp0LdK3O_bWvQ33bOA@mail.gmail.com>
Message-ID: <42722C6B785544CEAA4E71DE6CD5DF2A@erratique.ch>

Le dimanche, 2 mars 2014 ? 00:51, Ashish Agarwal a ?crit :
> The next issue is whether we need to ask past contributors to agree to the new licenses. There are three categories of past contributors:

There's one more, the content taken from cocan.org. When I mentioned [1] this Ashish quickly side stepped the issue [2]. But if you want to be copyright clean, I think you should also sort out this one. This page [3] says the copyright is owned by the various contributors (it says "listed below", but for sure there was not only Richard Jones contributing to the wiki, he can't claim copyright to the content of the wiki).  

Regarding my content taken for there, it can of course be reused without problem (and no need to mention me in the contributors).  

Best,

Daniel

[1,2]  
https://github.com/ocaml/ocaml.org/issues/376#issuecomment-31218647
https://github.com/ocaml/ocaml.org/issues/376#issuecomment-31279008

[3]
http://mirror.ocamlcore.org/wiki.cocan.org/copyright.html



From agarwal1975 at gmail.com  Sun Mar  2 15:46:41 2014
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Sun, 2 Mar 2014 10:46:41 -0500
Subject: [ocaml-infra] ocaml.org licensing
In-Reply-To: <42722C6B785544CEAA4E71DE6CD5DF2A@erratique.ch>
References: <20140228.152822.2008424557211558942.Christophe.Troestler@umons.ac.be>
 <D6AF9D31-17A8-49C3-907E-97A623DC703E@cam.ac.uk>
 <CAHvkLrNFPhiLqmE7bVYO_LFiMA4csGyUaS7r3tF7FGQnMf6TrQ@mail.gmail.com>
 <20140301.210635.1928553743016148003.Christophe.Troestler@umons.ac.be>
 <CAHvkLrP0S-c8KD_Z3wB7Vtk6iQK7U8gfba19zcoBKW2XF=U7Uw@mail.gmail.com>
 <7E73C53C-784D-4461-9BB1-5381358C34DB@cl.cam.ac.uk>
 <CAHvkLrMb_Yzp4F3tVkK3QKCODmC01E2ASZ7ysbEWyjwb1zWVAQ@mail.gmail.com>
 <CAMu2m2Kx=Y=B1Vg8H2sarp4tRTuRrs4hWp0LdK3O_bWvQ33bOA@mail.gmail.com>
 <42722C6B785544CEAA4E71DE6CD5DF2A@erratique.ch>
Message-ID: <CAMu2m2L2mE+ZZ_z_Wf43FLefiX3R_y7HYNkKXCtbaM7JuriLJg@mail.gmail.com>

According to our records [1], only a few pages were taken from cocan.org.
As I stated, I was told that this content was in the public domain, but the
link you provide seems potentially to contradict that for cocan.org. To be
on the safe side, we can go ahead and ask permission from all contributors
to cocan.org and ocaml-tutorial.org, pointing out to them that content was
pulled from those sites.

The most comprehensive list we have of these contributors is here [2].
Daniel, your name is not listed here, so it is already evident this list
doesn't include contributions to cocan.org. It's the best I can think of.
If anyone knows additional contributors that should be contacted, please
let us know.

[1] https://github.com/ocaml/ocaml.org/blob/master/imported_content.md
[2]
http://mirror.ocamlcore.org/ocaml-tutorial.org/index.html#Acknowledgements


On Sun, Mar 2, 2014 at 10:15 AM, Daniel B?nzli
<daniel.buenzli at erratique.ch>wrote:

> Le dimanche, 2 mars 2014 ? 00:51, Ashish Agarwal a ?crit :
> > The next issue is whether we need to ask past contributors to agree to
> the new licenses. There are three categories of past contributors:
>
> There's one more, the content taken from cocan.org. When I mentioned [1]
> this Ashish quickly side stepped the issue [2]. But if you want to be
> copyright clean, I think you should also sort out this one. This page [3]
> says the copyright is owned by the various contributors (it says "listed
> below", but for sure there was not only Richard Jones contributing to the
> wiki, he can't claim copyright to the content of the wiki).
>
> Regarding my content taken for there, it can of course be reused without
> problem (and no need to mention me in the contributors).
>
> Best,
>
> Daniel
>
> [1,2]
> https://github.com/ocaml/ocaml.org/issues/376#issuecomment-31218647
> https://github.com/ocaml/ocaml.org/issues/376#issuecomment-31279008
>
> [3]
> http://mirror.ocamlcore.org/wiki.cocan.org/copyright.html
>
>
> _______________________________________________
> Infrastructure mailing list
> Infrastructure at lists.ocaml.org
> http://lists.ocaml.org/listinfo/infrastructure
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/infrastructure/attachments/20140302/52e9dc22/attachment.html>

From sheets at alum.mit.edu  Mon Mar 17 11:49:14 2014
From: sheets at alum.mit.edu (David Sheets)
Date: Mon, 17 Mar 2014 11:49:14 +0000
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
Message-ID: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>

Our present deployment workflow unnecessarily relies on a single build
environment running on the same (?) machine as the serving system.

ocaml.org is entirely static with a refresh on the order of minutes. I
propose we take advantage of this feature to move to a fully staged
build and deployment solution.

Specifically, I'd like to see:

1. Generated assets and build logs publicly accessible
2. Build environment specification (e.g. "this stock Ubuntu image").
3. History

I'd like to suggest the following design from back-to-front:

1. Travis CI builds ocaml.org on commit hook to source repository
2. Travis CI pushes successful builds to static asset repository
3. Server checks out static asset repository on commit hook

If we would like to stage development and production, the following may satisfy:

1. Travis CI builds ocaml.org on commit hook to source repository
2. Travis CI pushes successful builds to static assets
3. beta.ocaml.org checks out static asset repository on commit hook to
static assets
4. ocaml.org checks out static asset repository on special commit hook
to static assets

Where "special commit hook" is a commit by a non-Travis user which
contains as its commit message a human/machine-readable description of
the deployment. These commits can themselves be consumed to generate a
site change log which is exposed on the site.

This approach should help us achieve faster iteration on the
mechanical components of the site, ease build debugging, ease build
reproduction, and offer a pre-built image of the site's assets.

What do you think?

David

From anil at recoil.org  Mon Mar 17 11:55:07 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 17 Mar 2014 11:55:07 +0000
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
In-Reply-To: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
References: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
Message-ID: <51BBAB70-F849-4861-AE04-6FD233B03CD5@recoil.org>

On 17 Mar 2014, at 11:49, David Sheets <sheets at alum.mit.edu> wrote:

> Our present deployment workflow unnecessarily relies on a single build
> environment running on the same (?) machine as the serving system.
> 
> ocaml.org is entirely static with a refresh on the order of minutes. I
> propose we take advantage of this feature to move to a fully staged
> build and deployment solution.
> 
> Specifically, I'd like to see:
> 
> 1. Generated assets and build logs publicly accessible
> 2. Build environment specification (e.g. "this stock Ubuntu image").
> 3. History
> 
> I'd like to suggest the following design from back-to-front:
> 
> 1. Travis CI builds ocaml.org on commit hook to source repository
> 2. Travis CI pushes successful builds to static asset repository
> 3. Server checks out static asset repository on commit hook

This seems like a fairly standard workflow for Travis, as long as the
run can always finish within a 50 minute time limit.  I'd be in favour
of splitting the static HTML staging from the generation of the static
HTML for the reasons you list above.

> If we would like to stage development and production, the following may satisfy:
> 
> 1. Travis CI builds ocaml.org on commit hook to source repository
> 2. Travis CI pushes successful builds to static assets
> 3. beta.ocaml.org checks out static asset repository on commit hook to
> static assets
> 4. ocaml.org checks out static asset repository on special commit hook
> to static assets

The only potential issue with this are hardcoded references to http://ocaml.org
within the staged site, which would prevent a beta.ocaml.org site from
working correctly.  If domain names are not hardcoded, then it should be
fine.

> 
> Where "special commit hook" is a commit by a non-Travis user which
> contains as its commit message a human/machine-readable description of
> the deployment. These commits can themselves be consumed to generate a
> site change log which is exposed on the site.
> 
> This approach should help us achieve faster iteration on the
> mechanical components of the site, ease build debugging, ease build
> reproduction, and offer a pre-built image of the site's assets.
> 
> What do you think?

Great idea. I'd very much like to minimise the amount of non-publically
triage-able code on the ocaml.org VMs, in order to lock them down more
and more as time goes on.

-anil

From sheets at alum.mit.edu  Mon Mar 17 12:09:57 2014
From: sheets at alum.mit.edu (David Sheets)
Date: Mon, 17 Mar 2014 12:09:57 +0000
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
In-Reply-To: <51BBAB70-F849-4861-AE04-6FD233B03CD5@recoil.org>
References: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
 <51BBAB70-F849-4861-AE04-6FD233B03CD5@recoil.org>
Message-ID: <CAAWM5TwZL7nKTcxdGP0KJ6e4Y4+Buh++ooO=p_kGc9C2PZqtHQ@mail.gmail.com>

On Mon, Mar 17, 2014 at 11:55 AM, Anil Madhavapeddy <anil at recoil.org> wrote:
> On 17 Mar 2014, at 11:49, David Sheets <sheets at alum.mit.edu> wrote:
>
>> Our present deployment workflow unnecessarily relies on a single build
>> environment running on the same (?) machine as the serving system.
>>
>> ocaml.org is entirely static with a refresh on the order of minutes. I
>> propose we take advantage of this feature to move to a fully staged
>> build and deployment solution.
>>
>> Specifically, I'd like to see:
>>
>> 1. Generated assets and build logs publicly accessible
>> 2. Build environment specification (e.g. "this stock Ubuntu image").
>> 3. History
>>
>> I'd like to suggest the following design from back-to-front:
>>
>> 1. Travis CI builds ocaml.org on commit hook to source repository
>> 2. Travis CI pushes successful builds to static asset repository
>> 3. Server checks out static asset repository on commit hook
>
> This seems like a fairly standard workflow for Travis, as long as the
> run can always finish within a 50 minute time limit.  I'd be in favour
> of splitting the static HTML staging from the generation of the static
> HTML for the reasons you list above.
>
>> If we would like to stage development and production, the following may satisfy:
>>
>> 1. Travis CI builds ocaml.org on commit hook to source repository
>> 2. Travis CI pushes successful builds to static assets
>> 3. beta.ocaml.org checks out static asset repository on commit hook to
>> static assets
>> 4. ocaml.org checks out static asset repository on special commit hook
>> to static assets
>
> The only potential issue with this are hardcoded references to http://ocaml.org
> within the staged site, which would prevent a beta.ocaml.org site from
> working correctly.  If domain names are not hardcoded, then it should be
> fine.

In my opinion, all such references are bugs and beta.ocaml.org would
be operating correctly if these references are misdirected there. One
of the nice things about having an image of the static assets deployed
is that, if we stick to polyglot (X)HTML in our generated pages, we
can trivially check, at any time, for broken links and violations of
link policies like this one.

>>
>> Where "special commit hook" is a commit by a non-Travis user which
>> contains as its commit message a human/machine-readable description of
>> the deployment. These commits can themselves be consumed to generate a
>> site change log which is exposed on the site.
>>
>> This approach should help us achieve faster iteration on the
>> mechanical components of the site, ease build debugging, ease build
>> reproduction, and offer a pre-built image of the site's assets.
>>
>> What do you think?
>
> Great idea. I'd very much like to minimise the amount of non-publically
> triage-able code on the ocaml.org VMs, in order to lock them down more
> and more as time goes on.
>
> -anil

From anil at recoil.org  Mon Mar 17 12:12:00 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 17 Mar 2014 12:12:00 +0000
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
In-Reply-To: <CAAWM5TwZL7nKTcxdGP0KJ6e4Y4+Buh++ooO=p_kGc9C2PZqtHQ@mail.gmail.com>
References: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
 <51BBAB70-F849-4861-AE04-6FD233B03CD5@recoil.org>
 <CAAWM5TwZL7nKTcxdGP0KJ6e4Y4+Buh++ooO=p_kGc9C2PZqtHQ@mail.gmail.com>
Message-ID: <1AA5775E-9DE9-4E94-9EC1-3AF632C726C4@recoil.org>

On 17 Mar 2014, at 12:09, David Sheets <sheets at alum.mit.edu> wrote:
> 
> In my opinion, all such references are bugs and beta.ocaml.org would
> be operating correctly if these references are misdirected there. One
> of the nice things about having an image of the static assets deployed
> is that, if we stick to polyglot (X)HTML in our generated pages, we
> can trivially check, at any time, for broken links and violations of
> link policies like this one.

Agreed.

-anil

From Christophe.Troestler at umons.ac.be  Mon Mar 17 12:26:32 2014
From: Christophe.Troestler at umons.ac.be (Christophe Troestler)
Date: Mon, 17 Mar 2014 13:26:32 +0100
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
In-Reply-To: <1AA5775E-9DE9-4E94-9EC1-3AF632C726C4@recoil.org>
References: <51BBAB70-F849-4861-AE04-6FD233B03CD5@recoil.org>
 <CAAWM5TwZL7nKTcxdGP0KJ6e4Y4+Buh++ooO=p_kGc9C2PZqtHQ@mail.gmail.com>
 <1AA5775E-9DE9-4E94-9EC1-3AF632C726C4@recoil.org>
Message-ID: <20140317.132632.2002213810070313279.Christophe.Troestler@umons.ac.be>

Hi,

On Mon, 17 Mar 2014 12:12:00 +0000, Anil Madhavapeddy wrote:
> 
> On 17 Mar 2014, at 12:09, David Sheets <sheets at alum.mit.edu> wrote:
> > 
> > In my opinion, all such references are bugs and beta.ocaml.org would
> > be operating correctly if these references are misdirected there. One
> > of the nice things about having an image of the static assets deployed
> > is that, if we stick to polyglot (X)HTML in our generated pages, we
> > can trivially check, at any time, for broken links and violations of
> > link policies like this one.
> 
> Agreed.

A quick recursive grep shows there a no such references except in
site/docs/logos.md where they make sense.  (There are of course links
to opam.ocaml.org which is not under consideration for the moment but
maybe it will be integrated one day?)

Best,
C.

From anil at recoil.org  Mon Mar 17 12:32:54 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 17 Mar 2014 12:32:54 +0000
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
In-Reply-To: <20140317.132632.2002213810070313279.Christophe.Troestler@umons.ac.be>
References: <51BBAB70-F849-4861-AE04-6FD233B03CD5@recoil.org>
 <CAAWM5TwZL7nKTcxdGP0KJ6e4Y4+Buh++ooO=p_kGc9C2PZqtHQ@mail.gmail.com>
 <1AA5775E-9DE9-4E94-9EC1-3AF632C726C4@recoil.org>
 <20140317.132632.2002213810070313279.Christophe.Troestler@umons.ac.be>
Message-ID: <04C1B2FD-8F75-4E3F-8DE2-4DAD432FCB45@recoil.org>

On 17 Mar 2014, at 12:26, Christophe Troestler <Christophe.Troestler at umons.ac.be> wrote:

> Hi,
> 
> On Mon, 17 Mar 2014 12:12:00 +0000, Anil Madhavapeddy wrote:
>> 
>> On 17 Mar 2014, at 12:09, David Sheets <sheets at alum.mit.edu> wrote:
>>> 
>>> In my opinion, all such references are bugs and beta.ocaml.org would
>>> be operating correctly if these references are misdirected there. One
>>> of the nice things about having an image of the static assets deployed
>>> is that, if we stick to polyglot (X)HTML in our generated pages, we
>>> can trivially check, at any time, for broken links and violations of
>>> link policies like this one.
>> 
>> Agreed.
> 
> A quick recursive grep shows there a no such references except in
> site/docs/logos.md where they make sense.  (There are of course links
> to opam.ocaml.org which is not under consideration for the moment but
> maybe it will be integrated one day?)

Ah yes, that was indeed the problem last time.  There's no real reason
why opam needs a sub-domain, but moving it to a subdomain of ocaml.org
would require sorting out the templates to match that of the ocaml.org
design.

-anil

From agarwal1975 at gmail.com  Mon Mar 17 14:19:49 2014
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Mon, 17 Mar 2014 10:19:49 -0400
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
In-Reply-To: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
References: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
Message-ID: <CAMu2m2LYBxZ+B1S_M-jV0vDaGAGCFEmbNYnnHLgvM06S8k3RjQ@mail.gmail.com>

On Mon, Mar 17, 2014 at 7:49 AM, David Sheets <sheets at alum.mit.edu> wrote:

Specifically, I'd like to see:
>
> 1. Generated assets and build logs publicly accessible
> 2. Build environment specification (e.g. "this stock Ubuntu image").
> 3. History
>

All of these could be obtained with a single server. Can you explain the
benefits of splitting into a build server and static server. I'm just
wondering why the extra work would be worth it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/infrastructure/attachments/20140317/8b2f7c60/attachment.html>

From sheets at alum.mit.edu  Mon Mar 17 14:42:43 2014
From: sheets at alum.mit.edu (David Sheets)
Date: Mon, 17 Mar 2014 14:42:43 +0000
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
In-Reply-To: <CAMu2m2LYBxZ+B1S_M-jV0vDaGAGCFEmbNYnnHLgvM06S8k3RjQ@mail.gmail.com>
References: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
 <CAMu2m2LYBxZ+B1S_M-jV0vDaGAGCFEmbNYnnHLgvM06S8k3RjQ@mail.gmail.com>
Message-ID: <CAAWM5TxhxdNLpG-LDdTpiQV97J2ggowgoziVh1r=4tdUG6sKng@mail.gmail.com>

On Mon, Mar 17, 2014 at 2:19 PM, Ashish Agarwal <agarwal1975 at gmail.com> wrote:
> On Mon, Mar 17, 2014 at 7:49 AM, David Sheets <sheets at alum.mit.edu> wrote:
>
>> Specifically, I'd like to see:
>>
>> 1. Generated assets and build logs publicly accessible
>> 2. Build environment specification (e.g. "this stock Ubuntu image").
>> 3. History
>
>
> All of these could be obtained with a single server. Can you explain the
> benefits of splitting into a build server and static server. I'm just
> wondering why the extra work would be worth it.

They could be. By splitting the build and serve functions we get:

1. Extremely simple, hard-to-break serving functionality potentially specialized
2. Build environment specification and web server irrelevance

That is, it is nice not having to worry about service interruptions
due to build software updates or misbehaving builds.

We could certainly go down the combined build/server image route but
this seems heavier weight than a stupid simple server which responds
with pre-built files from free, on-demand instances.

With a combined solution, I now need to worry about
downloading/uploading the current server's machine image and running
it manually to test. With a solution that uses on-demand instances, I
only need to request a build of my repository to test.

Of course, both models are possible under a combined model but the
combined image would get even more complicated with the machinery to
monitor repositories, initiate builds, and serve logs and development
sites. There is a fixed amount of complexity in these requirements, I
believe. The question is: where do we push this complexity and whose
problem is it?

David

From anil at recoil.org  Mon Mar 17 14:47:02 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 17 Mar 2014 14:47:02 +0000
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
In-Reply-To: <CAMu2m2LYBxZ+B1S_M-jV0vDaGAGCFEmbNYnnHLgvM06S8k3RjQ@mail.gmail.com>
References: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
 <CAMu2m2LYBxZ+B1S_M-jV0vDaGAGCFEmbNYnnHLgvM06S8k3RjQ@mail.gmail.com>
Message-ID: <565C6188-7ED4-474E-A764-BCAE60D595B8@recoil.org>

On 17 Mar 2014, at 14:19, Ashish Agarwal <agarwal1975 at gmail.com> wrote:

> On Mon, Mar 17, 2014 at 7:49 AM, David Sheets <sheets at alum.mit.edu> wrote:
> 
> Specifically, I'd like to see:
> 
> 1. Generated assets and build logs publicly accessible
> 2. Build environment specification (e.g. "this stock Ubuntu image").
> 3. History
> 
> All of these could be obtained with a single server. Can you explain the benefits of splitting into a build server and static server. I'm just wondering why the extra work would be worth it.

Because the set of people that need to build ocaml.org is higher than the set of deployment services we need to support.  Separating them would let us triage ocaml.org build failures (e.g. the obscure awk issue, or the sorts of problem that Michel or Jacques had as first time contributors), from errors in the deployment system (due to some Git infrastructure or whatever going down).

We currently implicitly support quite a few build environments (e.g. MacOS X in addition to Ubuntu), so gradually adding more CI to ensure all this stays working means less work for us in the long term.  Note that this isn't specifically an ocaml.org issue -- any such CI could also help OPAM package testing expand out beyond Ubuntu x86_64.

-anil


-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/infrastructure/attachments/20140317/1d4d1481/attachment.html>

From agarwal1975 at gmail.com  Mon Mar 17 14:52:08 2014
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Mon, 17 Mar 2014 10:52:08 -0400
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
In-Reply-To: <565C6188-7ED4-474E-A764-BCAE60D595B8@recoil.org>
References: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
 <CAMu2m2LYBxZ+B1S_M-jV0vDaGAGCFEmbNYnnHLgvM06S8k3RjQ@mail.gmail.com>
 <565C6188-7ED4-474E-A764-BCAE60D595B8@recoil.org>
Message-ID: <CAMu2m2JELD_Nvu4ff7vibRjXpNokGN0HUy1b_301_ueRfpnS-g@mail.gmail.com>

Got it. Makes sense.


On Mon, Mar 17, 2014 at 10:47 AM, Anil Madhavapeddy <anil at recoil.org> wrote:

> On 17 Mar 2014, at 14:19, Ashish Agarwal <agarwal1975 at gmail.com> wrote:
>
> On Mon, Mar 17, 2014 at 7:49 AM, David Sheets <sheets at alum.mit.edu> wrote:
>
> Specifically, I'd like to see:
>>
>> 1. Generated assets and build logs publicly accessible
>> 2. Build environment specification (e.g. "this stock Ubuntu image").
>> 3. History
>>
>
> All of these could be obtained with a single server. Can you explain the
> benefits of splitting into a build server and static server. I'm just
> wondering why the extra work would be worth it.
>
>
> Because the set of people that need to build ocaml.org is higher than the
> set of deployment services we need to support.  Separating them would let
> us triage ocaml.org build failures (e.g. the obscure awk issue, or the
> sorts of problem that Michel or Jacques had as first time contributors),
> from errors in the deployment system (due to some Git infrastructure or
> whatever going down).
>
> We currently implicitly support quite a few build environments (e.g. MacOS
> X in addition to Ubuntu), so gradually adding more CI to ensure all this
> stays working means less work for us in the long term.  Note that this
> isn't specifically an ocaml.org issue -- any such CI could also help OPAM
> package testing expand out beyond Ubuntu x86_64.
>
> -anil
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/infrastructure/attachments/20140317/4cc11238/attachment.html>

From philippe.wang at gmail.com  Fri Mar 21 04:16:02 2014
From: philippe.wang at gmail.com (Philippe Wang)
Date: Fri, 21 Mar 2014 04:16:02 +0000
Subject: [ocaml-infra] Staging Build and Deployment of ocaml.org
In-Reply-To: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
References: <CAAWM5Twn3C+wejz1wuSkDXqqkdusXeiVATB061uTrdzXAgYvpQ@mail.gmail.com>
Message-ID: <2283EA67-CFF5-43A2-B81F-8AF5C0FEB8F7@gmail.com>

On 17 Mar 2014, at 11:49 am, David Sheets <sheets at alum.mit.edu> wrote:

> Our present deployment workflow unnecessarily relies on a single build
> environment running on the same (?) machine as the serving system.
> 
> ocaml.org is entirely static with a refresh on the order of minutes. I
> propose we take advantage of this feature to move to a fully staged
> build and deployment solution.
> 
> Specifically, I'd like to see:
> 
> 1. Generated assets and build logs publicly accessible
> 2. Build environment specification (e.g. "this stock Ubuntu image").
> 3. History
> 
> I'd like to suggest the following design from back-to-front:
> 
> 1. Travis CI builds ocaml.org on commit hook to source repository
> 2. Travis CI pushes successful builds to static asset repository
> 3. Server checks out static asset repository on commit hook
> 
> If we would like to stage development and production, the following may satisfy:
> 
> 1. Travis CI builds ocaml.org on commit hook to source repository
> 2. Travis CI pushes successful builds to static assets
> 3. beta.ocaml.org checks out static asset repository on commit hook to
> static assets
> 4. ocaml.org checks out static asset repository on special commit hook
> to static assets
> 
> Where "special commit hook" is a commit by a non-Travis user which
> contains as its commit message a human/machine-readable description of
> the deployment. These commits can themselves be consumed to generate a
> site change log which is exposed on the site.
> 
> This approach should help us achieve faster iteration on the
> mechanical components of the site, ease build debugging, ease build
> reproduction, and offer a pre-built image of the site's assets.
> 
> What do you think?
> 
> David


Basically I agree with all this. :-)

If we don?t want the builds to take ?forever?, we need to think of caching the .opam folder (because the packages take quite some time to build, especially since we use opam2web which brings a lot of dependencies) and the built version of ocaml.org (it?s sort of mandatory to cache some data anyway, e.g., RSS feeds in case the remote server?s unavailable).


Philippe

P.S. 

> $ opam install opam2web
> The following actions will be performed:
>  - install ocamlfind.1.4.0 [required by opam2web]
>  - install cmdliner.0.9.4 [required by opam2web]
>  - install extlib-compat.1.6.1 [required by opam2web]
>  - install lwt.2.4.4 [required by opam2web]
>  - install menhir.20130912 [required by opam2web]
>  - install ocamlgraph.1.8.3 [required by opam2web]
>  - install omd.0.9.7 [required by opam2web]
>  - install ounit.2.0.0 [required by opam2web]
>  - install re.1.2.1 [required by opam2web]
>  - install type_conv.109.60.01 [required by opam2web]
>  - install typerex.1.99.6-beta [required by opam2web]
>  - install ulex.1.1 [required by opam2web]
>  - install xmlm.1.2.0 [required by opam2web]
>  - install js_of_ocaml.1.4.0 [required by opam2web]
>  - install dyntype.0.9.0 [required by opam2web]
>  - install sexplib.111.03.00 [required by opam2web]
>  - install ocp-build.1.99.6-beta [required by opam2web]
>  - install uri.1.4.0 [required by opam2web]
>  - install cudf.0.6.3 [required by opam2web]
>  - install cow.0.8.1 [required by opam2web]
>  - install dose.3.1.2 [required by opam2web]
>  - install opam-lib.1.1.1 [required by opam2web]
>  - install opamfu.0.1.1 [required by opam2web]
>  - install opam2web.1.3.1
> 24 to install | 0 to reinstall | 0 to upgrade | 0 to downgrade | 0 to remove
> Do you want to continue ? [Y/n] 



From daniel.buenzli at erratique.ch  Thu Mar 27 14:13:51 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Thu, 27 Mar 2014 15:13:51 +0100
Subject: [ocaml-infra] Dealing with incompatible releases in opam
Message-ID: <B2982985CF6148D99CCC271435C465B9@erratique.ch>

How do we deal with incompatible releases ? 

I'd like to make an incompatible release of react. Should I just `git grep react` in the opam repository and specify an upper bound with the last release on each occurence of `react` in package deps ? 

Best,

Daniel



From anil at recoil.org  Thu Mar 27 14:23:07 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 27 Mar 2014 14:23:07 +0000
Subject: [ocaml-infra] Dealing with incompatible releases in opam
In-Reply-To: <B2982985CF6148D99CCC271435C465B9@erratique.ch>
References: <B2982985CF6148D99CCC271435C465B9@erratique.ch>
Message-ID: <4162090B-8057-47E4-89CE-E9FFC9EF524D@recoil.org>

[ccing opam-devel -- wrong list?]

On 27 Mar 2014, at 14:13, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:

> How do we deal with incompatible releases ? 
> 
> I'd like to make an incompatible release of react. Should I just `git grep react` in the opam repository and specify an upper bound with the last release on each occurence of `react` in package deps ? 

Yes, that's normally what I do.  It's tediously manual at the moment, sadly...

-anil

From louis.gesbert at ocamlpro.com  Thu Mar 27 14:35:39 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Thu, 27 Mar 2014 15:35:39 +0100
Subject: [ocaml-infra] Dealing with incompatible releases in opam
In-Reply-To: <4162090B-8057-47E4-89CE-E9FFC9EF524D@recoil.org>
References: <B2982985CF6148D99CCC271435C465B9@erratique.ch>
 <4162090B-8057-47E4-89CE-E9FFC9EF524D@recoil.org>
Message-ID: <2512987.q5TCXbY51C@agaric>

I don't see a much better solution at the moment ; we may provide
a function in opam-admin to do it more quickly and reliably though ?

Le jeudi 27 mars 2014, 14:23:07 Anil Madhavapeddy a ?crit :
> [ccing opam-devel -- wrong list?]
> 
> On 27 Mar 2014, at 14:13, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:
> 
> > How do we deal with incompatible releases ? 
> > 
> > I'd like to make an incompatible release of react. Should I just `git grep react` in the opam repository and specify an upper bound with the last release on each occurence of `react` in package deps ? 
> 
> Yes, that's normally what I do.  It's tediously manual at the moment, sadly...
> 
> -anil
> _______________________________________________
> Infrastructure mailing list
> Infrastructure at lists.ocaml.org
> http://lists.ocaml.org/listinfo/infrastructure


From daniel.buenzli at erratique.ch  Thu Mar 27 14:41:55 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Thu, 27 Mar 2014 15:41:55 +0100
Subject: [ocaml-infra] Dealing with incompatible releases in opam
In-Reply-To: <4162090B-8057-47E4-89CE-E9FFC9EF524D@recoil.org>
References: <B2982985CF6148D99CCC271435C465B9@erratique.ch>
 <4162090B-8057-47E4-89CE-E9FFC9EF524D@recoil.org>
Message-ID: <D6AC61E90373409FA6E19D7FE8E6D5F4@erratique.ch>



Le jeudi, 27 mars 2014 ? 15:23, Anil Madhavapeddy a ?crit :

> [ccing opam-devel -- wrong list?]

I was not sure.
  
> Yes, that's normally what I do. It's tediously manual at the moment, sadly...

Yes. That said the problem is quite vicious in fact as it forces every dependent that has dependents in the repo to do a new release even if it doesn't break. For example I spotted that on that chain: react <- zed <- lambda-term

zed compiles fines, but lambda-term doesn't. But lambda term doesn't explicitly depend on react. So zed will have to do a release. Or is lambda-term wrongly specified ?  

Daniel



From anil at recoil.org  Thu Mar 27 14:53:21 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 27 Mar 2014 14:53:21 +0000
Subject: [ocaml-infra] Dealing with incompatible releases in opam
In-Reply-To: <D6AC61E90373409FA6E19D7FE8E6D5F4@erratique.ch>
References: <B2982985CF6148D99CCC271435C465B9@erratique.ch>
 <4162090B-8057-47E4-89CE-E9FFC9EF524D@recoil.org>
 <D6AC61E90373409FA6E19D7FE8E6D5F4@erratique.ch>
Message-ID: <0C45E9B7-DE2A-4421-8166-E594BE02B485@recoil.org>

On 27 Mar 2014, at 14:41, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:

> 
> 
> Le jeudi, 27 mars 2014 ? 15:23, Anil Madhavapeddy a ?crit :
> 
>> [ccing opam-devel -- wrong list?]
> 
> I was not sure. 

Dropping infrastructure to bcc

> 
>> Yes, that's normally what I do. It's tediously manual at the moment, sadly...
> 
> Yes. That said the problem is quite vicious in fact as it forces every dependent that has dependents in the repo to do a new release even if it doesn't break. For example I spotted that on that chain: react <- zed <- lambda-term
> 
> zed compiles fines, but lambda-term doesn't. But lambda term doesn't explicitly depend on react. So zed will have to do a release. Or is lambda-term wrongly specified ?

Lambda-term uses React explicitly via Lwt:

>  BuildDepends: lwt (>= 2.4.0), lwt.unix, lwt.syntax, lwt.react, zed (>= 1.2)

So it should indeed have a direct react dependency in its OPAM file (to ensure that the optional Lwt dependency on react is picked up, thus ensuring Lwt_react is available).

I don't believe any new releases should be necessary for libraries that compile fine now, aside from updating constraints in their OPAM files.

-anil


