From ogunden at phauna.org  Wed Feb  1 00:49:13 2012
From: ogunden at phauna.org (Owen Gunden)
Date: Tue, 31 Jan 2012 19:49:13 -0500
Subject: license
In-Reply-To: <CACLX4jS8m46ihRPnktYjbcLRgEbfiGeVNtCRAVZaPtfE9MKmqA@mail.gmail.com>
References: <CA+LP8rTu-NBPfTT=MFPT-rCbux5pZ9rJp82RxbLj=Htiid1vRg@mail.gmail.com>
	<CACLX4jS8m46ihRPnktYjbcLRgEbfiGeVNtCRAVZaPtfE9MKmqA@mail.gmail.com>
Message-ID: <CA+LP8rT6_SME41W=+68Pbte6hHTYP6Fiyv9CA0Nd_B8fgbRY1g@mail.gmail.com>


Cool, good to know.

Also, hi :)


On Tue, Jan 31, 2012 at 6:11 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Hey Owen! ?Long time no see!
>
> Yup! ?We're currently getting some lawyerly advice, and once we do, we're
> going to clean up the indications of licensing there. ?For the curious, the
> license is the standard LGPL+linking exception (though we may change that
> for something more lenient in the near future.)
>
>
> On Tue, Jan 31, 2012 at 3:49 PM, Owen Gunden <ogunden at phauna.org> wrote:
>>
>> One of the Mlstate developers pointed out that there's no license
>> information readily available in the bitbucket repo. I couldn't find
>> any either.
>>
>> Is that something that can be easily added?
>
>


From markus.mottl at gmail.com  Wed Feb  1 21:39:10 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 1 Feb 2012 16:39:10 -0500
Subject: Trouble building my first program
In-Reply-To: <CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
Message-ID: <CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>


Hi David,

this is a known problem related to Oasis.  It generates incorrect
linking flags (e.g. lib/libbin_prot.a).  This should be fixed any day
now we hope.  Sylvain, any news? :-)

Cheers,
Markus

On Wed, Feb 1, 2012 at 16:34, David House <dmhouse at gmail.com> wrote:
> On 31 January 2012 22:10, Owen Gunden <ogunden at phauna.org> wrote:
>> On Tue, Jan 31, 2012 at 5:08 PM, Owen Gunden <ogunden at phauna.org> wrote:
>>> Try adding -verbose to your ocamlfind call. Check the path to
>>> libcore.a in the gcc call. My guess is that your install is not
>>> getting the path quite right.
>>
>> (Your command line works fine on my machine)
>
> Here's the output of the verbose compilation:
>
> $ ocamlfind ocamlopt -package core -linkpkg -o simple_core
> simple_core.ml -thread -verbose
> Effective set of compiler predicates:
> pkg_unix,pkg_threads.posix,pkg_threads,pkg_variantslib,pkg_camlp4,pkg_type-conv,pkg_variantslib.syntax,pkg_bigarray,pkg_num.core,pkg_num,pkg_sexplib,pkg_sexplib.syntax,pkg_fieldslib,pkg_fieldslib.syntax,pkg_bin_prot,pkg_bin_prot.syntax,pkg_oUnit,pkg_pa_ounit,pkg_pa_pipebang,pkg_res,pkg_core,autolink,mt,mt_posix,native
> + ocamlopt -o simple_core -verbose -thread -I
> /usr/local/lib/ocaml/camlp4 -I /usr/local/lib/ocaml/site-lib/type-conv
> -I /usr/local/lib/ocaml/site-lib/variantslib -I
> /usr/local/lib/ocaml/site-lib/num -I
> /usr/local/lib/ocaml/site-lib/sexplib -I
> /usr/local/lib/ocaml/site-lib/fieldslib -I
> /usr/local/lib/ocaml/site-lib/bin_prot -I
> /usr/local/lib/ocaml/site-lib/oUnit -I
> /usr/local/lib/ocaml/site-lib/pa_ounit -I
> /usr/local/lib/ocaml/site-lib/pa_pipebang -I
> /usr/local/lib/ocaml/site-lib/res -I
> /usr/local/lib/ocaml/site-lib/core /usr/local/lib/ocaml/unix.cmxa
> /usr/local/lib/ocaml/threads/threads.cmxa
> /usr/local/lib/ocaml/site-lib/variantslib/variantslib.cmxa
> /usr/local/lib/ocaml/bigarray.cmxa /usr/local/lib/ocaml/nums.cmxa
> /usr/local/lib/ocaml/site-lib/sexplib/sexplib.cmxa
> /usr/local/lib/ocaml/site-lib/fieldslib/fieldslib.cmxa
> /usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.cmxa
> /usr/local/lib/ocaml/site-lib/oUnit/oUnit.cmxa
> /usr/local/lib/ocaml/site-lib/res/res.cmxa
> /usr/local/lib/ocaml/site-lib/core/core.cmxa simple_core.ml
> + as -o 'simple_core.o' '/tmp/camlasm277805.s'
> + as -o '/tmp/camlstartupcbc06f.o' '/tmp/camlstartup2cf117.s'
> + gcc -o 'simple_core' ? '-L/usr/local/lib/ocaml/camlp4'
> '-L/usr/local/lib/ocaml/site-lib/type-conv'
> '-L/usr/local/lib/ocaml/site-lib/variantslib'
> '-L/usr/local/lib/ocaml/site-lib/num'
> '-L/usr/local/lib/ocaml/site-lib/sexplib'
> '-L/usr/local/lib/ocaml/site-lib/fieldslib'
> '-L/usr/local/lib/ocaml/site-lib/bin_prot'
> '-L/usr/local/lib/ocaml/site-lib/oUnit'
> '-L/usr/local/lib/ocaml/site-lib/pa_ounit'
> '-L/usr/local/lib/ocaml/site-lib/pa_pipebang'
> '-L/usr/local/lib/ocaml/site-lib/res'
> '-L/usr/local/lib/ocaml/site-lib/core'
> '-L/usr/local/lib/ocaml/threads' '-L/usr/local/lib/ocaml'
> '/tmp/camlstartupcbc06f.o' '/usr/local/lib/ocaml/std_exit.o'
> 'simple_core.o' '/usr/local/lib/ocaml/site-lib/core/core.a'
> '/usr/local/lib/ocaml/site-lib/res/res.a'
> '/usr/local/lib/ocaml/site-lib/oUnit/oUnit.a'
> '/usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a'
> '/usr/local/lib/ocaml/site-lib/fieldslib/fieldslib.a'
> '/usr/local/lib/ocaml/site-lib/sexplib/sexplib.a'
> '/usr/local/lib/ocaml/nums.a' '/usr/local/lib/ocaml/bigarray.a'
> '/usr/local/lib/ocaml/site-lib/variantslib/variantslib.a'
> '/usr/local/lib/ocaml/threads/threads.a' '/usr/local/lib/ocaml/unix.a'
> '/usr/local/lib/ocaml/stdlib.a' '-lcore' '-lrt' 'lib/libcore.a'
> '-lbin_prot' 'lib/libbin_prot.a' '-lnums' '-lbigarray' '-lthreadsnat'
> '-lpthread' '-lunix' '/usr/local/lib/ocaml/libasmrun.a' -lm ?-ldl
> gcc: error: lib/libcore.a: No such file or directory
> gcc: error: lib/libbin_prot.a: No such file or directory
> File "caml_startup", line 1, characters 0-1:
> Error: Error during linking
> ocamlopt returned with exit code 2
>
> I'm at a bit of a loss as to what to do.



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Wed Feb  1 21:43:47 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 1 Feb 2012 16:43:47 -0500
Subject: Trouble building my first program
In-Reply-To: <CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
	<CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
Message-ID: <CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>


Installing the development version of Oasis would probably help.  But
I'm still holding my breath for the next release ;)

Cheers,
Markus

On Wed, Feb 1, 2012 at 16:41, David House <dmhouse at gmail.com> wrote:
> On 1 February 2012 21:39, Markus Mottl <markus.mottl at gmail.com> wrote:
>> this is a known problem related to Oasis. ?It generates incorrect
>> linking flags (e.g. lib/libbin_prot.a). ?This should be fixed any day
>> now we hope. ?Sylvain, any news? :-)
>
> Thanks Markus. Is there a workaround?



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Wed Feb  1 22:48:23 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 1 Feb 2012 17:48:23 -0500
Subject: New code!
Message-ID: <CACLX4jSGVo1f-7HsJ9_M1=_oXar=ssj0vGnrCnjtjcMahZ2mcw@mail.gmail.com>

A bunch of new code has just landed in the repo.  This includes some
portability fixes, as well as the change to make platform-dependent
functionality show up as Or_error.t's.  Try it out and report problems!

As a general matter, we're currently doing a big code-review cycle
internally.  That should be done in a few weeks, at which point, we should
be able to cut a proper release, with tarballs and all that goodness.
 Hopefully we can get more portability fixes in as well.

(There's some other fun stuff that lands with this.  One example: Sweeks
did some work to expose the fact that the monomorphic sets and maps, e.g.,
Int.Map.t, and the polymorphic maps, are really the same thing and so can
be acted on polymorphically.  At the same time, he added a phantom type so
that you can't try to do a Set.union or a Map.merge on things that happen
to have the same type, but one was built with polymorphic compare and one
wasn't....)

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120201/39b61c7c/attachment.html>

From dmhouse at gmail.com  Wed Feb  1 21:34:14 2012
From: dmhouse at gmail.com (David House)
Date: Wed, 1 Feb 2012 21:34:14 +0000
Subject: Trouble building my first program
In-Reply-To: <CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
Message-ID: <CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>


On 31 January 2012 22:10, Owen Gunden <ogunden at phauna.org> wrote:
> On Tue, Jan 31, 2012 at 5:08 PM, Owen Gunden <ogunden at phauna.org> wrote:
>> Try adding -verbose to your ocamlfind call. Check the path to
>> libcore.a in the gcc call. My guess is that your install is not
>> getting the path quite right.
>
> (Your command line works fine on my machine)

Here's the output of the verbose compilation:

$ ocamlfind ocamlopt -package core -linkpkg -o simple_core
simple_core.ml -thread -verbose
Effective set of compiler predicates:
pkg_unix,pkg_threads.posix,pkg_threads,pkg_variantslib,pkg_camlp4,pkg_type-conv,pkg_variantslib.syntax,pkg_bigarray,pkg_num.core,pkg_num,pkg_sexplib,pkg_sexplib.syntax,pkg_fieldslib,pkg_fieldslib.syntax,pkg_bin_prot,pkg_bin_prot.syntax,pkg_oUnit,pkg_pa_ounit,pkg_pa_pipebang,pkg_res,pkg_core,autolink,mt,mt_posix,native
+ ocamlopt -o simple_core -verbose -thread -I
/usr/local/lib/ocaml/camlp4 -I /usr/local/lib/ocaml/site-lib/type-conv
-I /usr/local/lib/ocaml/site-lib/variantslib -I
/usr/local/lib/ocaml/site-lib/num -I
/usr/local/lib/ocaml/site-lib/sexplib -I
/usr/local/lib/ocaml/site-lib/fieldslib -I
/usr/local/lib/ocaml/site-lib/bin_prot -I
/usr/local/lib/ocaml/site-lib/oUnit -I
/usr/local/lib/ocaml/site-lib/pa_ounit -I
/usr/local/lib/ocaml/site-lib/pa_pipebang -I
/usr/local/lib/ocaml/site-lib/res -I
/usr/local/lib/ocaml/site-lib/core /usr/local/lib/ocaml/unix.cmxa
/usr/local/lib/ocaml/threads/threads.cmxa
/usr/local/lib/ocaml/site-lib/variantslib/variantslib.cmxa
/usr/local/lib/ocaml/bigarray.cmxa /usr/local/lib/ocaml/nums.cmxa
/usr/local/lib/ocaml/site-lib/sexplib/sexplib.cmxa
/usr/local/lib/ocaml/site-lib/fieldslib/fieldslib.cmxa
/usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.cmxa
/usr/local/lib/ocaml/site-lib/oUnit/oUnit.cmxa
/usr/local/lib/ocaml/site-lib/res/res.cmxa
/usr/local/lib/ocaml/site-lib/core/core.cmxa simple_core.ml
+ as -o 'simple_core.o' '/tmp/camlasm277805.s'
+ as -o '/tmp/camlstartupcbc06f.o' '/tmp/camlstartup2cf117.s'
+ gcc -o 'simple_core'   '-L/usr/local/lib/ocaml/camlp4'
'-L/usr/local/lib/ocaml/site-lib/type-conv'
'-L/usr/local/lib/ocaml/site-lib/variantslib'
'-L/usr/local/lib/ocaml/site-lib/num'
'-L/usr/local/lib/ocaml/site-lib/sexplib'
'-L/usr/local/lib/ocaml/site-lib/fieldslib'
'-L/usr/local/lib/ocaml/site-lib/bin_prot'
'-L/usr/local/lib/ocaml/site-lib/oUnit'
'-L/usr/local/lib/ocaml/site-lib/pa_ounit'
'-L/usr/local/lib/ocaml/site-lib/pa_pipebang'
'-L/usr/local/lib/ocaml/site-lib/res'
'-L/usr/local/lib/ocaml/site-lib/core'
'-L/usr/local/lib/ocaml/threads' '-L/usr/local/lib/ocaml'
'/tmp/camlstartupcbc06f.o' '/usr/local/lib/ocaml/std_exit.o'
'simple_core.o' '/usr/local/lib/ocaml/site-lib/core/core.a'
'/usr/local/lib/ocaml/site-lib/res/res.a'
'/usr/local/lib/ocaml/site-lib/oUnit/oUnit.a'
'/usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a'
'/usr/local/lib/ocaml/site-lib/fieldslib/fieldslib.a'
'/usr/local/lib/ocaml/site-lib/sexplib/sexplib.a'
'/usr/local/lib/ocaml/nums.a' '/usr/local/lib/ocaml/bigarray.a'
'/usr/local/lib/ocaml/site-lib/variantslib/variantslib.a'
'/usr/local/lib/ocaml/threads/threads.a' '/usr/local/lib/ocaml/unix.a'
'/usr/local/lib/ocaml/stdlib.a' '-lcore' '-lrt' 'lib/libcore.a'
'-lbin_prot' 'lib/libbin_prot.a' '-lnums' '-lbigarray' '-lthreadsnat'
'-lpthread' '-lunix' '/usr/local/lib/ocaml/libasmrun.a' -lm  -ldl
gcc: error: lib/libcore.a: No such file or directory
gcc: error: lib/libbin_prot.a: No such file or directory
File "caml_startup", line 1, characters 0-1:
Error: Error during linking
ocamlopt returned with exit code 2

I'm at a bit of a loss as to what to do.


From dmhouse at gmail.com  Wed Feb  1 21:36:36 2012
From: dmhouse at gmail.com (David House)
Date: Wed, 1 Feb 2012 21:36:36 +0000
Subject: Trouble building my first program
In-Reply-To: <CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
Message-ID: <CADy1MavY4nxcFRLwJNoydGJ0EexCe1wjUDDUM+7VwWCY3_kvSA@mail.gmail.com>


On 1 February 2012 21:34, David House <dmhouse at gmail.com> wrote:
> Here's the output of the verbose compilation:

My mail client wrapped a lot of those lines. Here is the raw output:

http://pastebin.com/raw.php?i=wQkpSg77


From dmhouse at gmail.com  Wed Feb  1 21:41:19 2012
From: dmhouse at gmail.com (David House)
Date: Wed, 1 Feb 2012 21:41:19 +0000
Subject: Trouble building my first program
In-Reply-To: <CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
Message-ID: <CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>


On 1 February 2012 21:39, Markus Mottl <markus.mottl at gmail.com> wrote:
> this is a known problem related to Oasis. ?It generates incorrect
> linking flags (e.g. lib/libbin_prot.a). ?This should be fixed any day
> now we hope. ?Sylvain, any news? :-)

Thanks Markus. Is there a workaround?


From dmhouse at gmail.com  Wed Feb  1 22:04:28 2012
From: dmhouse at gmail.com (David House)
Date: Wed, 1 Feb 2012 22:04:28 +0000
Subject: Trouble building my first program
In-Reply-To: <CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
	<CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
	<CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>
Message-ID: <CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>


On 1 February 2012 21:43, Markus Mottl <markus.mottl at gmail.com> wrote:
> Installing the development version of Oasis would probably help. ?But
> I'm still holding my breath for the next release ;)

Nothing seems to change if I install oasis 0.2.1.

On the other hand, compiling with ocamlc works, which is probably good
enough for me for now.


From markus.mottl at gmail.com  Thu Feb  2 03:21:43 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 1 Feb 2012 22:21:43 -0500
Subject: Code review
Message-ID: <CAP_800opEzQB-7UX5O6ZHBLm0NsjVd816=r9=nX+SiUC91W29w@mail.gmail.com>


Hi,

is it meaningful for outside contributors to put CRs in the sources?
If so, it might be a good idea to explain on the Wiki how to do that
(syntax, conventions, etc.) and who might be a suitable receiver for
different parts of the code.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Thu Feb  2 03:42:35 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 1 Feb 2012 22:42:35 -0500
Subject: Code review
In-Reply-To: <CAP_800opEzQB-7UX5O6ZHBLm0NsjVd816=r9=nX+SiUC91W29w@mail.gmail.com>
References: <CAP_800opEzQB-7UX5O6ZHBLm0NsjVd816=r9=nX+SiUC91W29w@mail.gmail.com>
Message-ID: <CACLX4jQFQUj+10bohmbDrza2wXKHrE1ZOUorDtQr5U7m+V0ueA@mail.gmail.com>

Not at the moment.  We'd like to try to use bitbucket's issue-tracker for
communication with outside developers.

y

On Wed, Feb 1, 2012 at 10:21 PM, Markus Mottl <markus.mottl at gmail.com>wrote:

> Hi,
>
> is it meaningful for outside contributors to put CRs in the sources?
> If so, it might be a good idea to explain on the Wiki how to do that
> (syntax, conventions, etc.) and who might be a suitable receiver for
> different parts of the code.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120201/77748553/attachment.html>

From markus.mottl at gmail.com  Thu Feb  2 04:37:47 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 1 Feb 2012 23:37:47 -0500
Subject: New code!
In-Reply-To: <CACLX4jSGVo1f-7HsJ9_M1=_oXar=ssj0vGnrCnjtjcMahZ2mcw@mail.gmail.com>
References: <CACLX4jSGVo1f-7HsJ9_M1=_oXar=ssj0vGnrCnjtjcMahZ2mcw@mail.gmail.com>
Message-ID: <CAP_800p0pA=xKPnTduJP9HNkEJfo4O_w8hb0t42iW2GJ0cbXCw@mail.gmail.com>


Seems to work fine for me, except for the still lingering Oasis
linking bug.  I have merged the changes into my fork, which did
luckily cause two easily fixed merge conflicts only.  The fork is
up-to-date on bitbucket so feel free to pull the recent
type-conv/sexplib/bin-prot patches.

Cheers,
Markus

On Wed, Feb 1, 2012 at 17:48, Yaron Minsky <yminsky at janestreet.com> wrote:
> A bunch of new code has just landed in the repo. ?This includes some
> portability fixes, as well as the change to make platform-dependent
> functionality show up as Or_error.t's. ?Try it out and report problems!
>
> As a general matter, we're currently doing a big code-review cycle
> internally. ?That should be done in a few weeks, at which point, we should
> be able to cut a proper release, with tarballs and all that goodness.
> ?Hopefully we can get more portability fixes in as well.
>
> (There's some other fun stuff that lands with this. ?One example: Sweeks did
> some work to expose the fact that the monomorphic sets and maps, e.g.,
> Int.Map.t, and the polymorphic maps, are really the same thing and so can be
> acted on polymorphically. ?At the same time, he added a phantom type so that
> you can't try to do a Set.union or a Map.merge on things that happen to have
> the same type, but one was built with polymorphic compare and one
> wasn't....)
>
> y



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From seanmcl at gmail.com  Fri Feb  3 19:39:49 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Fri, 3 Feb 2012 14:39:49 -0500
Subject: New code!
In-Reply-To: <CAP_800p0pA=xKPnTduJP9HNkEJfo4O_w8hb0t42iW2GJ0cbXCw@mail.gmail.com>
References: <CACLX4jSGVo1f-7HsJ9_M1=_oXar=ssj0vGnrCnjtjcMahZ2mcw@mail.gmail.com>
	<CAP_800p0pA=xKPnTduJP9HNkEJfo4O_w8hb0t42iW2GJ0cbXCw@mail.gmail.com>
Message-ID: <CAO4dZbfwSWtNwOaWjdJgqES1wp4p+bjUNaWGnhQbytabff2dQg@mail.gmail.com>


The combined packages failed to build for me on my work machine.

$ ./buildjs.sh ~/tmp/js
Building ocaml-3.12.1...
Building findlib-1.2.7...
Building ounit-1.1.0...
Building type-conv-2.3.0...
Building fieldslib-107.01...
============
FAIL: could not build fieldslib-107.01
============
core not installed
core_extended not installed
bin_prot not installed
fieldslib not installed
oUnit not installed
pcre not installed
res not installed
sexplib not installed
type-conv not installed
variantslib not installed
async not installed


It looks like ocamlfind needs to be able to create the lib directory.

ocamlfind: Bad configuration: Cannot mkdir
/home/smclaughlin/lib/ocaml-site-lib/type-conv because a path
component does not exist or is not a directory
E: Command '/home/smclaughlin/tmp/js/bin/ocamlfind install type-conv
lib/META /home/smclaughlin/tmp/janestreet-oss-20111122-2/build-32430/type-conv-2.3.0/_build/lib/pa_type_conv.cmi
/home/smclaughlin/tmp/janestreet-oss-20111122-2/build-32430/type-conv-2.3.0/_build/lib/pa_type_conv.cma
lib/pa_type_conv.mli' terminated with error code 2


On Wed, Feb 1, 2012 at 11:37 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> Seems to work fine for me, except for the still lingering Oasis
> linking bug. ?I have merged the changes into my fork, which did
> luckily cause two easily fixed merge conflicts only. ?The fork is
> up-to-date on bitbucket so feel free to pull the recent
> type-conv/sexplib/bin-prot patches.
>
> Cheers,
> Markus
>
> On Wed, Feb 1, 2012 at 17:48, Yaron Minsky <yminsky at janestreet.com> wrote:
>> A bunch of new code has just landed in the repo. ?This includes some
>> portability fixes, as well as the change to make platform-dependent
>> functionality show up as Or_error.t's. ?Try it out and report problems!
>>
>> As a general matter, we're currently doing a big code-review cycle
>> internally. ?That should be done in a few weeks, at which point, we should
>> be able to cut a proper release, with tarballs and all that goodness.
>> ?Hopefully we can get more portability fixes in as well.
>>
>> (There's some other fun stuff that lands with this. ?One example: Sweeks did
>> some work to expose the fact that the monomorphic sets and maps, e.g.,
>> Int.Map.t, and the polymorphic maps, are really the same thing and so can be
>> acted on polymorphically. ?At the same time, he added a phantom type so that
>> you can't try to do a Set.union or a Map.merge on things that happen to have
>> the same type, but one was built with polymorphic compare and one
>> wasn't....)
>>
>> y
>
>
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From ocaml-core at googlegroups.com  Tue Feb  7 02:32:58 2012
From: ocaml-core at googlegroups.com (ocaml-core at googlegroups.com)
Date: Tue, 07 Feb 2012 02:32:58 +0000
Subject: Moderator's spam report for ocaml-core@googlegroups.com
Message-ID: <0016367fb4c7e0f19804b856981f@google.com>


This message is being sent to you because you are a moderator of the group ocaml-core.

The following suspicious messages were sent to your group, but are being held in your moderation queue because they are classified as likely spam messages.

If you take no action, all the messages below will be discarded automatically as spam.

However, if you see any messages that are not spam below, you may approve them individually by going to:

http://groups.google.com/group/ocaml-core/pendmsg

Please do not mark this notification as spam; this is a service for group moderators. If you do not wish to receive these notifications in the future, you may change your preferences by going to:

http://groups.google.com/group/ocaml-core/manage_post


------- 1 of 1  -------
Subject: Verisign hacked numerous times, are you really protected?
>From: "Security News" <securitynews at mythinkrealestate.com>
Date: Feb 06 01:23PM -0500

Reports state that Verisign was hacked multiple times back in 2010 and it might have compromised on some vital information.
The security staff at VeriSign failed to inform higher management about the hacking.
See the full articles on this late

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=9112252888751365281


For more information about this message, please visit:
http://groups.google.com/support/bin/answer.py?hl=en&answer=165806



From datkin at gmail.com  Thu Feb  9 13:53:07 2012
From: datkin at gmail.com (Drew)
Date: Thu, 9 Feb 2012 05:53:07 -0800 (PST)
Subject: Trouble building my first program
In-Reply-To: <CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
 <CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
 <CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
 <CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
 <CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
 <CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
 <CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com> <CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>
Message-ID: <8f43a0c5-6df3-4525-9725-81215e6b9b29@w4g2000vbc.googlegroups.com>


On Feb 1, 5:04?pm, David House <dmho... at gmail.com> wrote:
> Nothing seems to change if I install oasis 0.2.1.
>
> On the other hand, compiling with ocamlc works, which is probably good
> enough for me for now.

I just ran into the same issue. If I understand correctly, the problem
with oasis surfaced when you built core, and a bad flag got packed
into the bytecode library. Eg, on my machine:

~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/core/core.cma | grep
'\.a'
Extra C object files: -lcore -lrt lib/libcore.a

~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/*/*.cma | grep '\.a'
Extra C object files: -lbin_prot lib/libbin_prot.a
Extra C object files: -lcore -lrt lib/libcore.a
Extra C object files: -lcore_extended lib/libcore_extended.a

The only workaround I've found is adding symlinks in the directory I'm
building from. So using oasis, I've got the following in '_build':

_build $ ls -l lib/lib*.a
lrwxrwxrwx 1 datkin datkin    49 2012-02-04 20:11 lib/libbin_prot.a -
> /usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a
lrwxrwxrwx 1 datkin datkin    41 2012-02-05 09:42 lib/libcore.a -> /
usr/local/lib/ocaml/site-lib/core/core.a
lrwxrwxrwx 1 datkin datkin    59 2012-02-04 20:11 lib/
libcore_extended.a -> /usr/local/lib/ocaml/site-lib/core_extended/
core_extended.a

My understanding of what's going on here is pretty limited, but I
don't know how else to get around this. As long as the .cma files
reference these paths, isn't ocamlc going to pass them to gcc? David,
do you have a different/better workaround? It sounds like you have a
solution that works with ocamlc but not oasis.


From seanmcl at gmail.com  Thu Feb  9 13:48:58 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Thu, 9 Feb 2012 08:48:58 -0500
Subject: ocamlspotter
Message-ID: <CAO4dZbcMJWCXERG_6-cw19fM-T15OqH+njiy6KNvwq-bhDymLA@mail.gmail.com>


Why aren't we including ocamlspotter in our code bundle?


From yminsky at janestreet.com  Thu Feb  9 14:02:01 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 9 Feb 2012 09:02:01 -0500
Subject: ocamlspotter
In-Reply-To: <CAO4dZbcMJWCXERG_6-cw19fM-T15OqH+njiy6KNvwq-bhDymLA@mail.gmail.com>
References: <CAO4dZbcMJWCXERG_6-cw19fM-T15OqH+njiy6KNvwq-bhDymLA@mail.gmail.com>
Message-ID: <CACLX4jTEZKXLVzmGvgqLbDbzteWW50Jm4c8Nw-SJLWS6SfO-Aw@mail.gmail.com>

ocamlspotter is a compiler patch, maintained by Jun Furuse.  We use it
internally, but it's not required by Core, and really isn't a natural
add-on, since it is a compiler patch.

y

On Thu, Feb 9, 2012 at 8:48 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:

> Why aren't we including ocamlspotter in our code bundle?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120209/410d8d21/attachment.html>

From seanmcl at gmail.com  Thu Feb  9 14:31:33 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Thu, 9 Feb 2012 09:31:33 -0500
Subject: blog post request: using macros
Message-ID: <CAO4dZbeDQppjP0fs6btspXQsZaSVR8a5-KYXbpPFqrrRP3LVTw@mail.gmail.com>


It would be nice to have a blog post that explains how to use sexplib,
fieldslib etc,
and, very important, how to build the code that uses them.  (e.g. what
do you give
to the -pp option to ocamlopt?  Or is it the -ppopt flag to ocamlfind ocamlopt?)


From yminsky at janestreet.com  Thu Feb  9 14:57:13 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 9 Feb 2012 09:57:13 -0500
Subject: blog post request: using macros
In-Reply-To: <CAO4dZbeDQppjP0fs6btspXQsZaSVR8a5-KYXbpPFqrrRP3LVTw@mail.gmail.com>
References: <CAO4dZbeDQppjP0fs6btspXQsZaSVR8a5-KYXbpPFqrrRP3LVTw@mail.gmail.com>
Message-ID: <CACLX4jTWGJT2-Chsu7m08-zMadVGT1EfbHkzxah3BO1jrrgCdw@mail.gmail.com>

A good point.  I'm thinking about that anyway, so I'll try to put together
a blog post in the near term.

I'm also way overdue for a blog post on how to effectively use first-class
modules...

y

On Thu, Feb 9, 2012 at 9:31 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:

> It would be nice to have a blog post that explains how to use sexplib,
> fieldslib etc,
> and, very important, how to build the code that uses them.  (e.g. what
> do you give
> to the -pp option to ocamlopt?  Or is it the -ppopt flag to ocamlfind
> ocamlopt?)
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120209/e90c6fc0/attachment.html>

From ocaml-core at googlegroups.com  Fri Feb 10 02:32:39 2012
From: ocaml-core at googlegroups.com (ocaml-core at googlegroups.com)
Date: Fri, 10 Feb 2012 02:32:39 +0000
Subject: Moderator's spam report for ocaml-core@googlegroups.com
Message-ID: <00504502e40a45ca6604b892f1bf@google.com>


This message is being sent to you because you are a moderator of the group ocaml-core.

The following suspicious messages were sent to your group, but are being held in your moderation queue because they are classified as likely spam messages.

If you take no action, all the messages below will be discarded automatically as spam.

However, if you see any messages that are not spam below, you may approve them individually by going to:

http://groups.google.com/group/ocaml-core/pendmsg

Please do not mark this notification as spam; this is a service for group moderators. If you do not wish to receive these notifications in the future, you may change your preferences by going to:

http://groups.google.com/group/ocaml-core/manage_post


------- 1 of 1  -------
Subject: Hello
>From: DORIS KHALIFA <khalifa_doris2011 at yahoo.co.uk>
Date: Feb 07 08:34PM

*Hello
My Name is Doris am a  young girl, I saw your profile today in this site
and i like  it. I want you to know that i will be interested to know you
better because you sound very sweet and nice in your profile so i will like

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=2487369260688361832


For more information about this message, please visit:
http://groups.google.com/support/bin/answer.py?hl=en&answer=165806



From seanmcl at gmail.com  Fri Feb 17 05:14:08 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Fri, 17 Feb 2012 00:14:08 -0500
Subject: Trouble building my first program
In-Reply-To: <8f43a0c5-6df3-4525-9725-81215e6b9b29@w4g2000vbc.googlegroups.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
	<CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
	<CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>
	<CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>
	<8f43a0c5-6df3-4525-9725-81215e6b9b29@w4g2000vbc.googlegroups.com>
Message-ID: <CAO4dZbeCoS48Dq3jRWcqYeLuVFtC1E27_Bk5Q+J8F9FTqc65bg@mail.gmail.com>


Thanks Drew.  I hit this same problem, and used your symlink trick for
the time being.  Not pretty, but at least it compiles.

On Thu, Feb 9, 2012 at 8:53 AM, Drew <datkin at gmail.com> wrote:
> On Feb 1, 5:04?pm, David House <dmho... at gmail.com> wrote:
>> Nothing seems to change if I install oasis 0.2.1.
>>
>> On the other hand,  with ocamlc works, which is probably good
>> enough for me for now.
>
> I just ran into the same issue. If I understand correctly, the problem
> with oasis surfaced when you built core, and a bad flag got packed
> into the bytecode library. Eg, on my machine:
>
> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/core/core.cma | grep
> '\.a'
> Extra C object files: -lcore -lrt lib/libcore.a
>
> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/*/*.cma | grep '\.a'
> Extra C object files: -lbin_prot lib/libbin_prot.a
> Extra C object files: -lcore -lrt lib/libcore.a
> Extra C object files: -lcore_extended lib/libcore_extended.a
>
> The only workaround I've found is adding symlinks in the directory I'm
> building from. So using oasis, I've got the following in '_build':
>
> _build $ ls -l lib/lib*.a
> lrwxrwxrwx 1 datkin datkin ? ?49 2012-02-04 20:11 lib/libbin_prot.a -
>> /usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a
> lrwxrwxrwx 1 datkin datkin ? ?41 2012-02-05 09:42 lib/libcore.a -> /
> usr/local/lib/ocaml/site-lib/core/core.a
> lrwxrwxrwx 1 datkin datkin ? ?59 2012-02-04 20:11 lib/
> libcore_extended.a -> /usr/local/lib/ocaml/site-lib/core_extended/
> core_extended.a
>
> My understanding of what's going on here is pretty limited, but I
> don't know how else to get around this. As long as the .cma files
> reference these paths, isn't ocamlc going to pass them to gcc? David,
> do you have a different/better workaround? It sounds like you have a
> solution that works with ocamlc but not oasis.


From zqeyhy5ees at gmail.com  Mon Feb 20 12:29:55 2012
From: zqeyhy5ees at gmail.com (zQEYHY5eEs zQEYHY5eEs)
Date: Mon, 20 Feb 2012 04:29:55 -0800 (PST)
Subject: Linsanity - Learn Chinese (Mandarin) faster by using flashcards with pictures
Message-ID: <708468a1-1cf0-4a89-9f8f-9a4c654deb41@og8g2000pbb.googlegroups.com>


http://www.ichineseflashcards.com will help you learn Chinese
(Mandarin) faster by using flashcards with pictures, thanks


From seanmcl at gmail.com  Tue Feb 21 19:22:33 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Tue, 21 Feb 2012 14:22:33 -0500
Subject: Trouble building my first program
In-Reply-To: <CAO4dZbeCoS48Dq3jRWcqYeLuVFtC1E27_Bk5Q+J8F9FTqc65bg@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
	<CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
	<CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>
	<CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>
	<8f43a0c5-6df3-4525-9725-81215e6b9b29@w4g2000vbc.googlegroups.com>
	<CAO4dZbeCoS48Dq3jRWcqYeLuVFtC1E27_Bk5Q+J8F9FTqc65bg@mail.gmail.com>
Message-ID: <CAO4dZbdH2voJrQKb1EyB8=VW5RupvTPk-XRTwV+v+cOFY9cCJQ@mail.gmail.com>


Hi,

Is someone working on this issue?  I'm copying symlinks to every
directory where I build something.

Thanks,

Sean

On Fri, Feb 17, 2012 at 12:14 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Thanks Drew. ?I hit this same problem, and used your symlink trick for
> the time being. ?Not pretty, but at least it compiles.
>
> On Thu, Feb 9, 2012 at 8:53 AM, Drew <datkin at gmail.com> wrote:
>> On Feb 1, 5:04?pm, David House <dmho... at gmail.com> wrote:
>>> Nothing seems to change if I install oasis 0.2.1.
>>>
>>> On the other hand, ?with ocamlc works, which is probably good
>>> enough for me for now.
>>
>> I just ran into the same issue. If I understand correctly, the problem
>> with oasis surfaced when you built core, and a bad flag got packed
>> into the bytecode library. Eg, on my machine:
>>
>> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/core/core.cma | grep
>> '\.a'
>> Extra C object files: -lcore -lrt lib/libcore.a
>>
>> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/*/*.cma | grep '\.a'
>> Extra C object files: -lbin_prot lib/libbin_prot.a
>> Extra C object files: -lcore -lrt lib/libcore.a
>> Extra C object files: -lcore_extended lib/libcore_extended.a
>>
>> The only workaround I've found is adding symlinks in the directory I'm
>> building from. So using oasis, I've got the following in '_build':
>>
>> _build $ ls -l lib/lib*.a
>> lrwxrwxrwx 1 datkin datkin ? ?49 2012-02-04 20:11 lib/libbin_prot.a -
>>> /usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a
>> lrwxrwxrwx 1 datkin datkin ? ?41 2012-02-05 09:42 lib/libcore.a -> /
>> usr/local/lib/ocaml/site-lib/core/core.a
>> lrwxrwxrwx 1 datkin datkin ? ?59 2012-02-04 20:11 lib/
>> libcore_extended.a -> /usr/local/lib/ocaml/site-lib/core_extended/
>> core_extended.a
>>
>> My understanding of what's going on here is pretty limited, but I
>> don't know how else to get around this. As long as the .cma files
>> reference these paths, isn't ocamlc going to pass them to gcc? David,
>> do you have a different/better workaround? It sounds like you have a
>> solution that works with ocamlc but not oasis.


From yminsky at janestreet.com  Tue Feb 21 21:45:08 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 21 Feb 2012 16:45:08 -0500
Subject: Trouble building my first program
In-Reply-To: <CAO4dZbdH2voJrQKb1EyB8=VW5RupvTPk-XRTwV+v+cOFY9cCJQ@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
	<CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
	<CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>
	<CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>
	<8f43a0c5-6df3-4525-9725-81215e6b9b29@w4g2000vbc.googlegroups.com>
	<CAO4dZbeCoS48Dq3jRWcqYeLuVFtC1E27_Bk5Q+J8F9FTqc65bg@mail.gmail.com>
	<CAO4dZbdH2voJrQKb1EyB8=VW5RupvTPk-XRTwV+v+cOFY9cCJQ@mail.gmail.com>
Message-ID: <CACLX4jSaO_iUo=_GHp7EJ3rpg8SnyUKMV5ut=3pKqUoaSAB52A@mail.gmail.com>

Sylvain says he'll have something Real Soon Now...

y

On Tue, Feb 21, 2012 at 2:22 PM, Sean McLaughlin <seanmcl at gmail.com> wrote:

> Hi,
>
> Is someone working on this issue?  I'm copying symlinks to every
> directory where I build something.
>
> Thanks,
>
> Sean
>
> On Fri, Feb 17, 2012 at 12:14 AM, Sean McLaughlin <seanmcl at gmail.com>
> wrote:
> > Thanks Drew.  I hit this same problem, and used your symlink trick for
> > the time being.  Not pretty, but at least it compiles.
> >
> > On Thu, Feb 9, 2012 at 8:53 AM, Drew <datkin at gmail.com> wrote:
> >> On Feb 1, 5:04 pm, David House <dmho... at gmail.com> wrote:
> >>> Nothing seems to change if I install oasis 0.2.1.
> >>>
> >>> On the other hand,  with ocamlc works, which is probably good
> >>> enough for me for now.
> >>
> >> I just ran into the same issue. If I understand correctly, the problem
> >> with oasis surfaced when you built core, and a bad flag got packed
> >> into the bytecode library. Eg, on my machine:
> >>
> >> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/core/core.cma | grep
> >> '\.a'
> >> Extra C object files: -lcore -lrt lib/libcore.a
> >>
> >> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/*/*.cma | grep '\.a'
> >> Extra C object files: -lbin_prot lib/libbin_prot.a
> >> Extra C object files: -lcore -lrt lib/libcore.a
> >> Extra C object files: -lcore_extended lib/libcore_extended.a
> >>
> >> The only workaround I've found is adding symlinks in the directory I'm
> >> building from. So using oasis, I've got the following in '_build':
> >>
> >> _build $ ls -l lib/lib*.a
> >> lrwxrwxrwx 1 datkin datkin    49 2012-02-04 20:11 lib/libbin_prot.a -
> >>> /usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a
> >> lrwxrwxrwx 1 datkin datkin    41 2012-02-05 09:42 lib/libcore.a -> /
> >> usr/local/lib/ocaml/site-lib/core/core.a
> >> lrwxrwxrwx 1 datkin datkin    59 2012-02-04 20:11 lib/
> >> libcore_extended.a -> /usr/local/lib/ocaml/site-lib/core_extended/
> >> core_extended.a
> >>
> >> My understanding of what's going on here is pretty limited, but I
> >> don't know how else to get around this. As long as the .cma files
> >> reference these paths, isn't ocamlc going to pass them to gcc? David,
> >> do you have a different/better workaround? It sounds like you have a
> >> solution that works with ocamlc but not oasis.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120221/a942bc16/attachment.html>

From yury.sulsky at gmail.com  Thu Feb 23 15:32:59 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 23 Feb 2012 10:32:59 -0500
Subject: Building the tree on Debian
Message-ID: <CAEDxudwYs2qwJWXFFnegtff9XB2imNVsc-ytK5wmrTXbWHEMaw@mail.gmail.com>


Hey all, I thought it may be useful to write down the steps for
building the tree on my Debian system (amd64, unstable). It was very
straight-forward:

1) install the ocaml base system
$ sudo aptitude install oasis ocaml-findlib

2) install some additional required libs
$ sudo aptitude install libres-ocaml-dev libounit-ocaml-dev libpcre-ocaml-dev

3) clone the tree
$ hg clone https://bitbucket.org/yminsky/ocaml-core

4) build-and-install
$ cd ocaml-core && sudo ./build-and-install

5) test it out (bytecode-only right now).
$ ocaml
# #use "topfind";;
# #thread;;
# #require "async";;
# open Core.Std;;
# open Async.Std;;
# Clock.every (sec 1.0) (fun () -> print_endline "hello from async!");;
# Clock.after (sec 10.0) >>> fun () -> shutdown 0;;
# Scheduler.go ();;


From markus.weissmann at cs.tum.edu  Fri Feb 24 19:01:05 2012
From: markus.weissmann at cs.tum.edu (=?iso-8859-1?Q?=22Markus_W=2E_Wei=DFmann=22?=)
Date: Fri, 24 Feb 2012 20:01:05 +0100
Subject: bin-prot compile error on OS X 10.7/clang-llvm 3.0/OCaml 3.12.1
Message-ID: <AC2BBE7F-9CEB-43AC-9CBC-94A000CE7466@cs.tum.edu>


Hello there,

I'm not sure if this is the right place to report bugs but I couldn't find anything else on the JaneStreet homepage (btw. the link to this mailing list looks broken):
bin-prot fails to compile (since recently) on OS X 10.7.3 with the latest XCode/clang compiler, OCaml 3.12.1.
This is a clean install of MacPorts and I am the maintainer of both OCaml and bin-prot there.

1.) An array-out-of-bounds warning is generated which makes the code fail due to -Werror bein enabled:
It seems as if bin-prot tries to access the 2nd element of a 1-sized C-array defined in OCaml's bigarray.h

- - - - - 8< - - - - -
+ ocamlfind ocamlc -ccopt -DOS_DARWIN -ccopt -pipe -ccopt -g -ccopt -fPIC -ccopt -O2 -ccopt -fomit-frame-pointer -ccopt -fsigned-char -ccopt -Wall -ccopt -pedantic -ccopt -Wextra -ccopt -Wunused -ccopt -Wno-long-long -c lib/write_stubs.c
clang: warning: argument unused during compilation: '-fno-defer-pop'
clang: warning: argument unused during compilation: '-no-cpp-precomp'
lib/write_stubs.c:482:1: warning: array index of '1' indexes past the end of an array (that contains 1 elements) [-Warray-bounds]
MK_VEC_MAT_WRITERS(float32, float)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/write_stubs.c:473:42: note: instantiated from:
    unsigned long dim2 = (unsigned long) mat->dim[1]; \
                                         ^        ~
/opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
  ^
lib/write_stubs.c:483:1: warning: array index of '1' indexes past the end of an array (that contains 1 elements) [-Warray-bounds]
MK_VEC_MAT_WRITERS(float64, double)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/write_stubs.c:473:42: note: instantiated from:
    unsigned long dim2 = (unsigned long) mat->dim[1]; \
                                         ^        ~
/opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
  ^
2 warnings generated.
- - - - - >8 - - - - -

2.) If I disable -Werror the linker finally gives up on me -- which I can't make a clue of. As a wild guess I would say that the llvm-people made their C-Compiler more strict and less gcc-compatible:

- - - - - 8< - - - - -
+ ocamlfind ocamlopt -g -I lib -linkpkg -package unix -package type-conv -package oUnit -package camlp4.quotations -package camlp4.lib -package bigarray syntax/pa_bin_prot.cmxa lib/bin_prot.cmxa lib/bin_prot.cmx lib_test/bin_prot_test.cmx lib_test/test.cmx lib_test/test_runner.cmx -o lib_test/test_runner.native
Undefined symbols for architecture x86_64:
  "_write_float_stub", referenced from:
      .L1602 in bin_prot_test.o
      .L151 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float_stub)
  "_get_buf_ptr_stub", referenced from:
      .L1606 in bin_prot_test.o
      .L1631 in bin_prot_test.o
      .L1660 in bin_prot_test.o
      .L1686 in bin_prot_test.o
      .L1710 in bin_prot_test.o
      .L1734 in bin_prot_test.o
      .L1774 in bin_prot_test.o
      ...
  "_read_float_stub", referenced from:
      .L1619 in bin_prot_test.o
      .L1627 in bin_prot_test.o
      .L154 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_float_stub)
  "_write_variant_tag_stub", referenced from:
      .L1842 in bin_prot_test.o
      .L1841 in bin_prot_test.o
      .L1840 in bin_prot_test.o
      .L125 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_variant_tag_stub)
  "_get_buf_pos_stub", referenced from:
      .L114 in bin_prot.o
      _camlBin_prot__Unsafe_common__1 in bin_prot.o
  "_read_bigstring_stub", referenced from:
      .L132 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_bigstring_stub)
  "_read_float32_mat_stub", referenced from:
      .L138 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_float32_mat_stub)
  "_read_float32_vec_stub", referenced from:
      .L144 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_float32_vec_stub)
  "_read_float64_mat_stub", referenced from:
      .L134 in bin_prot.o
      .L136 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_float64_mat_stub)
  "_read_float64_vec_stub", referenced from:
      .L140 in bin_prot.o
      .L142 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_float64_vec_stub)
  "_read_int64_bits_stub", referenced from:
      .L116 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_int64_bits_stub)
  "_read_int_64bit_stub", referenced from:
      .L118 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_int_64bit_stub)
  "_read_network16_int_stub", referenced from:
      .L114 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_network16_int_stub)
  "_read_network32_int32_stub", referenced from:
      .L110 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_network32_int32_stub)
  "_read_network32_int_stub", referenced from:
      .L112 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_network32_int_stub)
  "_read_network64_int64_stub", referenced from:
      .L106 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_network64_int64_stub)
  "_read_network64_int_stub", referenced from:
      .L108 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_network64_int_stub)
  "_read_raw_string_stub", referenced from:
      .L227 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
  "_write_bigstring_stub", referenced from:
      .L129 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_bigstring_stub)
  "_write_float32_mat_stub", referenced from:
      .L135 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float32_mat_stub)
  "_write_float32_vec_stub", referenced from:
      .L141 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float32_vec_stub)
  "_write_float64_mat_stub", referenced from:
      .L131 in bin_prot.o
      .L133 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float64_mat_stub)
  "_write_float64_vec_stub", referenced from:
      .L137 in bin_prot.o
      .L139 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float64_vec_stub)
  "_write_float_array_stub", referenced from:
      .L127 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float_array_stub)
  "_write_int64_bits_stub", referenced from:
      .L115 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_int64_bits_stub)
  "_write_network16_int_stub", referenced from:
      .L113 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_network16_int_stub)
  "_write_network32_int32_stub", referenced from:
      .L109 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_network32_int32_stub)
  "_write_network32_int_stub", referenced from:
      .L111 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_network32_int_stub)
  "_write_network64_int64_stub", referenced from:
      .L105 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_network64_int64_stub)
  "_write_network64_int_stub", referenced from:
      .L107 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_network64_int_stub)
  "_write_raw_string_stub", referenced from:
      .L206 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
File "caml_startup", line 1, characters 0-1:
Error: Error during linking
Command exited with code 2.
- - - - - >8 - - - - -


Best Regards

-Markus

-- 
Markus Wei?mann, M.Sc.
Technische Universit?t M?nchen
Institut f?r Informatik
Boltzmannstr. 3
D-85748 Garching
Germany
Tel. +49 (89) 2 89-1 81 05
Fax +49 (89) 2 89-1 81 07
http://wwwknoll.in.tum.de/



From yminsky at janestreet.com  Sat Feb 25 19:09:54 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 25 Feb 2012 14:09:54 -0500
Subject: bin-prot compile error on OS X 10.7/clang-llvm 3.0/OCaml 3.12.1
In-Reply-To: <AC2BBE7F-9CEB-43AC-9CBC-94A000CE7466@cs.tum.edu>
References: <AC2BBE7F-9CEB-43AC-9CBC-94A000CE7466@cs.tum.edu>
Message-ID: <CACLX4jSNDjfTP8We-+4WBN8TVVF01DZLSm_zY_J3Ri7x7QnpoQ@mail.gmail.com>

On Fri, Feb 24, 2012 at 2:01 PM, "Markus W. Wei?mann" <
markus.weissmann at cs.tum.edu> wrote:

> Hello there,
>
> I'm not sure if this is the right place to report bugs but I couldn't find
> anything else on the JaneStreet homepage (btw. the link to this mailing
> list looks broken):
>

This is a fine place to report bugs.

Which link is broken?  The "code" link on our ocaml blog page leads you
here:

   https://bitbucket.org/yminsky/ocaml-core/wiki/Home

and the link from there to the mailing list seems to work.


> bin-prot fails to compile (since recently) on OS X 10.7.3 with the latest
> XCode/clang compiler, OCaml 3.12.1.
> This is a clean install of MacPorts and I am the maintainer of both OCaml
> and bin-prot there.
>
> 1.) An array-out-of-bounds warning is generated which makes the code fail
> due to -Werror bein enabled:
> It seems as if bin-prot tries to access the 2nd element of a 1-sized
> C-array defined in OCaml's bigarray.h
>


> - - - - - 8< - - - - -
> + ocamlfind ocamlc -ccopt -DOS_DARWIN -ccopt -pipe -ccopt -g -ccopt -fPIC
> -ccopt -O2 -ccopt -fomit-frame-pointer -ccopt -fsigned-char -ccopt -Wall
> -ccopt -pedantic -ccopt -Wextra -ccopt -Wunused -ccopt -Wno-long-long -c
> lib/write_stubs.c
> clang: warning: argument unused during compilation: '-fno-defer-pop'
> clang: warning: argument unused during compilation: '-no-cpp-precomp'
> lib/write_stubs.c:482:1: warning: array index of '1' indexes past the end
> of an array (that contains 1 elements) [-Warray-bounds]
> MK_VEC_MAT_WRITERS(float32, float)
> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> lib/write_stubs.c:473:42: note: instantiated from:
>    unsigned long dim2 = (unsigned long) mat->dim[1]; \
>                                         ^        ~
> /opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
>  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
>  ^
> lib/write_stubs.c:483:1: warning: array index of '1' indexes past the end
> of an array (that contains 1 elements) [-Warray-bounds]
> MK_VEC_MAT_WRITERS(float64, double)
> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> lib/write_stubs.c:473:42: note: instantiated from:
>    unsigned long dim2 = (unsigned long) mat->dim[1]; \
>                                         ^        ~
> /opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
>  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
>  ^
> 2 warnings generated.
> - - - - - >8 - - - - -
>
> 2.) If I disable -Werror the linker finally gives up on me -- which I
> can't make a clue of. As a wild guess I would say that the llvm-people made
> their C-Compiler more strict and less gcc-compatible:
>
> - - - - - 8< - - - - -
> + ocamlfind ocamlopt -g -I lib -linkpkg -package unix -package type-conv
> -package oUnit -package camlp4.quotations -package camlp4.lib -package
> bigarray syntax/pa_bin_prot.cmxa lib/bin_prot.cmxa lib/bin_prot.cmx
> lib_test/bin_prot_test.cmx lib_test/test.cmx lib_test/test_runner.cmx -o
> lib_test/test_runner.native
> Undefined symbols for architecture x86_64:
>  "_write_float_stub", referenced from:
>      .L1602 in bin_prot_test.o
>      .L151 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float_stub)
>  "_get_buf_ptr_stub", referenced from:
>      .L1606 in bin_prot_test.o
>      .L1631 in bin_prot_test.o
>      .L1660 in bin_prot_test.o
>      .L1686 in bin_prot_test.o
>      .L1710 in bin_prot_test.o
>      .L1734 in bin_prot_test.o
>      .L1774 in bin_prot_test.o
>      ...
>  "_read_float_stub", referenced from:
>      .L1619 in bin_prot_test.o
>      .L1627 in bin_prot_test.o
>      .L154 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float_stub)
>  "_write_variant_tag_stub", referenced from:
>      .L1842 in bin_prot_test.o
>      .L1841 in bin_prot_test.o
>      .L1840 in bin_prot_test.o
>      .L125 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_variant_tag_stub)
>  "_get_buf_pos_stub", referenced from:
>      .L114 in bin_prot.o
>      _camlBin_prot__Unsafe_common__1 in bin_prot.o
>  "_read_bigstring_stub", referenced from:
>      .L132 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_bigstring_stub)
>  "_read_float32_mat_stub", referenced from:
>      .L138 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float32_mat_stub)
>  "_read_float32_vec_stub", referenced from:
>      .L144 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float32_vec_stub)
>  "_read_float64_mat_stub", referenced from:
>      .L134 in bin_prot.o
>      .L136 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float64_mat_stub)
>  "_read_float64_vec_stub", referenced from:
>      .L140 in bin_prot.o
>      .L142 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float64_vec_stub)
>  "_read_int64_bits_stub", referenced from:
>      .L116 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_int64_bits_stub)
>  "_read_int_64bit_stub", referenced from:
>      .L118 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_int_64bit_stub)
>  "_read_network16_int_stub", referenced from:
>      .L114 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network16_int_stub)
>  "_read_network32_int32_stub", referenced from:
>      .L110 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network32_int32_stub)
>  "_read_network32_int_stub", referenced from:
>      .L112 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network32_int_stub)
>  "_read_network64_int64_stub", referenced from:
>      .L106 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network64_int64_stub)
>  "_read_network64_int_stub", referenced from:
>      .L108 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network64_int_stub)
>  "_read_raw_string_stub", referenced from:
>      .L227 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>  "_write_bigstring_stub", referenced from:
>      .L129 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_bigstring_stub)
>  "_write_float32_mat_stub", referenced from:
>      .L135 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float32_mat_stub)
>  "_write_float32_vec_stub", referenced from:
>      .L141 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float32_vec_stub)
>  "_write_float64_mat_stub", referenced from:
>      .L131 in bin_prot.o
>      .L133 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float64_mat_stub)
>  "_write_float64_vec_stub", referenced from:
>      .L137 in bin_prot.o
>      .L139 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float64_vec_stub)
>  "_write_float_array_stub", referenced from:
>      .L127 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float_array_stub)
>  "_write_int64_bits_stub", referenced from:
>      .L115 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_int64_bits_stub)
>  "_write_network16_int_stub", referenced from:
>      .L113 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network16_int_stub)
>  "_write_network32_int32_stub", referenced from:
>      .L109 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network32_int32_stub)
>  "_write_network32_int_stub", referenced from:
>      .L111 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network32_int_stub)
>  "_write_network64_int64_stub", referenced from:
>      .L105 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network64_int64_stub)
>  "_write_network64_int_stub", referenced from:
>      .L107 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network64_int_stub)
>  "_write_raw_string_stub", referenced from:
>      .L206 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
> ld: symbol(s) not found for architecture x86_64
> clang: error: linker command failed with exit code 1 (use -v to see
> invocation)
> File "caml_startup", line 1, characters 0-1:
> Error: Error during linking
> Command exited with code 2.
> - - - - - >8 - - - - -
>
>
> Best Regards
>
> -Markus
>
> --
> Markus Wei?mann, M.Sc.
> Technische Universit?t M?nchen
> Institut f?r Informatik
> Boltzmannstr. 3
> D-85748 Garching
> Germany
> Tel. +49 (89) 2 89-1 81 05
> Fax +49 (89) 2 89-1 81 07
> http://wwwknoll.in.tum.de/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120225/8145e871/attachment.html>

From yminsky at janestreet.com  Sat Feb 25 19:17:02 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 25 Feb 2012 14:17:02 -0500
Subject: Bug tracker and other news
Message-ID: <CACLX4jR+yXR1AwQNim=ofch-YvnK6-KfWb6KLZR6sb1FuViWxQ@mail.gmail.com>

Speaking of bugs, let's start using the bug-tracker for bug-reports.  When
you have a bug you want to report about Core, please post it here:

   https://bitbucket.org/yminsky/ocaml-core/issues

In other news, we're very close to a couple bits of progress:

   - We've pretty much finished up our internal code review process for
   Core, which means that we should be able to cut tarballs for a real release
   - We're close to have a CLA (Contributor License Agreement), so we can
   start accepting external contributions (at least, from those who sign the
   CLA)

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120225/cf950340/attachment.html>

From anil at recoil.org  Sat Feb 25 19:17:36 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 25 Feb 2012 19:17:36 +0000
Subject: bin-prot compile error on OS X 10.7/clang-llvm 3.0/OCaml 3.12.1
In-Reply-To: <AC2BBE7F-9CEB-43AC-9CBC-94A000CE7466@cs.tum.edu>
References: <AC2BBE7F-9CEB-43AC-9CBC-94A000CE7466@cs.tum.edu>
Message-ID: <4F0306E9-C2F5-4781-BAD5-8DF21F1ECED7@recoil.org>


I just ran into this too while updating, and noticed that Markus has reported it upstream already.
http://caml.inria.fr/mantis/view.php?id=5516

-anil

On 24 Feb 2012, at 19:01, Markus W. Wei?mann wrote:

> Hello there,
> 
> I'm not sure if this is the right place to report bugs but I couldn't find anything else on the JaneStreet homepage (btw. the link to this mailing list looks broken):
> bin-prot fails to compile (since recently) on OS X 10.7.3 with the latest XCode/clang compiler, OCaml 3.12.1.
> This is a clean install of MacPorts and I am the maintainer of both OCaml and bin-prot there.
> 
> 1.) An array-out-of-bounds warning is generated which makes the code fail due to -Werror bein enabled:
> It seems as if bin-prot tries to access the 2nd element of a 1-sized C-array defined in OCaml's bigarray.h
> 
> - - - - - 8< - - - - -
> + ocamlfind ocamlc -ccopt -DOS_DARWIN -ccopt -pipe -ccopt -g -ccopt -fPIC -ccopt -O2 -ccopt -fomit-frame-pointer -ccopt -fsigned-char -ccopt -Wall -ccopt -pedantic -ccopt -Wextra -ccopt -Wunused -ccopt -Wno-long-long -c lib/write_stubs.c
> clang: warning: argument unused during compilation: '-fno-defer-pop'
> clang: warning: argument unused during compilation: '-no-cpp-precomp'
> lib/write_stubs.c:482:1: warning: array index of '1' indexes past the end of an array (that contains 1 elements) [-Warray-bounds]
> MK_VEC_MAT_WRITERS(float32, float)
> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> lib/write_stubs.c:473:42: note: instantiated from:
>    unsigned long dim2 = (unsigned long) mat->dim[1]; \
>                                         ^        ~
> /opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
>  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
>  ^
> lib/write_stubs.c:483:1: warning: array index of '1' indexes past the end of an array (that contains 1 elements) [-Warray-bounds]
> MK_VEC_MAT_WRITERS(float64, double)
> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> lib/write_stubs.c:473:42: note: instantiated from:
>    unsigned long dim2 = (unsigned long) mat->dim[1]; \
>                                         ^        ~
> /opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
>  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
>  ^
> 2 warnings generated.
> - - - - - >8 - - - - -
> 
> 2.) If I disable -Werror the linker finally gives up on me -- which I can't make a clue of. As a wild guess I would say that the llvm-people made their C-Compiler more strict and less gcc-compatible:
> 
> - - - - - 8< - - - - -
> + ocamlfind ocamlopt -g -I lib -linkpkg -package unix -package type-conv -package oUnit -package camlp4.quotations -package camlp4.lib -package bigarray syntax/pa_bin_prot.cmxa lib/bin_prot.cmxa lib/bin_prot.cmx lib_test/bin_prot_test.cmx lib_test/test.cmx lib_test/test_runner.cmx -o lib_test/test_runner.native
> Undefined symbols for architecture x86_64:
>  "_write_float_stub", referenced from:
>      .L1602 in bin_prot_test.o
>      .L151 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float_stub)
>  "_get_buf_ptr_stub", referenced from:
>      .L1606 in bin_prot_test.o
>      .L1631 in bin_prot_test.o
>      .L1660 in bin_prot_test.o
>      .L1686 in bin_prot_test.o
>      .L1710 in bin_prot_test.o
>      .L1734 in bin_prot_test.o
>      .L1774 in bin_prot_test.o
>      ...
>  "_read_float_stub", referenced from:
>      .L1619 in bin_prot_test.o
>      .L1627 in bin_prot_test.o
>      .L154 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float_stub)
>  "_write_variant_tag_stub", referenced from:
>      .L1842 in bin_prot_test.o
>      .L1841 in bin_prot_test.o
>      .L1840 in bin_prot_test.o
>      .L125 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_variant_tag_stub)
>  "_get_buf_pos_stub", referenced from:
>      .L114 in bin_prot.o
>      _camlBin_prot__Unsafe_common__1 in bin_prot.o
>  "_read_bigstring_stub", referenced from:
>      .L132 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_bigstring_stub)
>  "_read_float32_mat_stub", referenced from:
>      .L138 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float32_mat_stub)
>  "_read_float32_vec_stub", referenced from:
>      .L144 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float32_vec_stub)
>  "_read_float64_mat_stub", referenced from:
>      .L134 in bin_prot.o
>      .L136 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float64_mat_stub)
>  "_read_float64_vec_stub", referenced from:
>      .L140 in bin_prot.o
>      .L142 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float64_vec_stub)
>  "_read_int64_bits_stub", referenced from:
>      .L116 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_int64_bits_stub)
>  "_read_int_64bit_stub", referenced from:
>      .L118 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_int_64bit_stub)
>  "_read_network16_int_stub", referenced from:
>      .L114 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network16_int_stub)
>  "_read_network32_int32_stub", referenced from:
>      .L110 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network32_int32_stub)
>  "_read_network32_int_stub", referenced from:
>      .L112 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network32_int_stub)
>  "_read_network64_int64_stub", referenced from:
>      .L106 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network64_int64_stub)
>  "_read_network64_int_stub", referenced from:
>      .L108 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network64_int_stub)
>  "_read_raw_string_stub", referenced from:
>      .L227 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>  "_write_bigstring_stub", referenced from:
>      .L129 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_bigstring_stub)
>  "_write_float32_mat_stub", referenced from:
>      .L135 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float32_mat_stub)
>  "_write_float32_vec_stub", referenced from:
>      .L141 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float32_vec_stub)
>  "_write_float64_mat_stub", referenced from:
>      .L131 in bin_prot.o
>      .L133 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float64_mat_stub)
>  "_write_float64_vec_stub", referenced from:
>      .L137 in bin_prot.o
>      .L139 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float64_vec_stub)
>  "_write_float_array_stub", referenced from:
>      .L127 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float_array_stub)
>  "_write_int64_bits_stub", referenced from:
>      .L115 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_int64_bits_stub)
>  "_write_network16_int_stub", referenced from:
>      .L113 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network16_int_stub)
>  "_write_network32_int32_stub", referenced from:
>      .L109 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network32_int32_stub)
>  "_write_network32_int_stub", referenced from:
>      .L111 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network32_int_stub)
>  "_write_network64_int64_stub", referenced from:
>      .L105 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network64_int64_stub)
>  "_write_network64_int_stub", referenced from:
>      .L107 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network64_int_stub)
>  "_write_raw_string_stub", referenced from:
>      .L206 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
> ld: symbol(s) not found for architecture x86_64
> clang: error: linker command failed with exit code 1 (use -v to see invocation)
> File "caml_startup", line 1, characters 0-1:
> Error: Error during linking
> Command exited with code 2.
> - - - - - >8 - - - - -
> 
> 
> Best Regards
> 
> -Markus
> 
> -- 
> Markus Wei?mann, M.Sc.
> Technische Universit?t M?nchen
> Institut f?r Informatik
> Boltzmannstr. 3
> D-85748 Garching
> Germany
> Tel. +49 (89) 2 89-1 81 05
> Fax +49 (89) 2 89-1 81 07
> http://wwwknoll.in.tum.de/
> 



From anil at recoil.org  Wed Feb 29 11:43:40 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Wed, 29 Feb 2012 11:43:40 +0000
Subject: pa_ounit outside of Core
Message-ID: <20120229114339.GB17748@dark.recoil.org>


I ran across Till's very-useful pa_ounit, and would really like to use
this in our libraries to make adding oUnit tests easier.  There seem to be
two different versions; the Github one at:
https://github.com/till-varoquaux/pa_ounit
...and the version in the Core distribution.

I've integrated the Core one pretty easily into some of our local
libraries, and tests are generated as expected. However, the OMake rules
for extracting and collecting the tests into an executable don't seem to
be present in the distribution.

What I'd like to do is to only generate the tests during a testing build,
and for production use have them disappear from the installed binary or
library. However, there doesn't appear to be a switch in pa_ounit.ml to
ignore the extra keywords. Do existing pa_ounit consumers just compile the
tests in with the final library at the moment?

(More generally, the topic of multiple camlp4 options is quite tricky, as
the same situation exists with pa_lwt generating debug code for mapping
Lwt threads to backtraces, and it's hard to keep track of what modules
were built with some set of p4 options).

-anil


From ogunden at phauna.org  Wed Feb  1 00:49:13 2012
From: ogunden at phauna.org (Owen Gunden)
Date: Tue, 31 Jan 2012 19:49:13 -0500
Subject: license
In-Reply-To: <CACLX4jS8m46ihRPnktYjbcLRgEbfiGeVNtCRAVZaPtfE9MKmqA@mail.gmail.com>
References: <CA+LP8rTu-NBPfTT=MFPT-rCbux5pZ9rJp82RxbLj=Htiid1vRg@mail.gmail.com>
	<CACLX4jS8m46ihRPnktYjbcLRgEbfiGeVNtCRAVZaPtfE9MKmqA@mail.gmail.com>
Message-ID: <CA+LP8rT6_SME41W=+68Pbte6hHTYP6Fiyv9CA0Nd_B8fgbRY1g@mail.gmail.com>


Cool, good to know.

Also, hi :)


On Tue, Jan 31, 2012 at 6:11 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Hey Owen! ?Long time no see!
>
> Yup! ?We're currently getting some lawyerly advice, and once we do, we're
> going to clean up the indications of licensing there. ?For the curious, the
> license is the standard LGPL+linking exception (though we may change that
> for something more lenient in the near future.)
>
>
> On Tue, Jan 31, 2012 at 3:49 PM, Owen Gunden <ogunden at phauna.org> wrote:
>>
>> One of the Mlstate developers pointed out that there's no license
>> information readily available in the bitbucket repo. I couldn't find
>> any either.
>>
>> Is that something that can be easily added?
>
>


From markus.mottl at gmail.com  Wed Feb  1 21:39:10 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 1 Feb 2012 16:39:10 -0500
Subject: Trouble building my first program
In-Reply-To: <CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
Message-ID: <CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>


Hi David,

this is a known problem related to Oasis.  It generates incorrect
linking flags (e.g. lib/libbin_prot.a).  This should be fixed any day
now we hope.  Sylvain, any news? :-)

Cheers,
Markus

On Wed, Feb 1, 2012 at 16:34, David House <dmhouse at gmail.com> wrote:
> On 31 January 2012 22:10, Owen Gunden <ogunden at phauna.org> wrote:
>> On Tue, Jan 31, 2012 at 5:08 PM, Owen Gunden <ogunden at phauna.org> wrote:
>>> Try adding -verbose to your ocamlfind call. Check the path to
>>> libcore.a in the gcc call. My guess is that your install is not
>>> getting the path quite right.
>>
>> (Your command line works fine on my machine)
>
> Here's the output of the verbose compilation:
>
> $ ocamlfind ocamlopt -package core -linkpkg -o simple_core
> simple_core.ml -thread -verbose
> Effective set of compiler predicates:
> pkg_unix,pkg_threads.posix,pkg_threads,pkg_variantslib,pkg_camlp4,pkg_type-conv,pkg_variantslib.syntax,pkg_bigarray,pkg_num.core,pkg_num,pkg_sexplib,pkg_sexplib.syntax,pkg_fieldslib,pkg_fieldslib.syntax,pkg_bin_prot,pkg_bin_prot.syntax,pkg_oUnit,pkg_pa_ounit,pkg_pa_pipebang,pkg_res,pkg_core,autolink,mt,mt_posix,native
> + ocamlopt -o simple_core -verbose -thread -I
> /usr/local/lib/ocaml/camlp4 -I /usr/local/lib/ocaml/site-lib/type-conv
> -I /usr/local/lib/ocaml/site-lib/variantslib -I
> /usr/local/lib/ocaml/site-lib/num -I
> /usr/local/lib/ocaml/site-lib/sexplib -I
> /usr/local/lib/ocaml/site-lib/fieldslib -I
> /usr/local/lib/ocaml/site-lib/bin_prot -I
> /usr/local/lib/ocaml/site-lib/oUnit -I
> /usr/local/lib/ocaml/site-lib/pa_ounit -I
> /usr/local/lib/ocaml/site-lib/pa_pipebang -I
> /usr/local/lib/ocaml/site-lib/res -I
> /usr/local/lib/ocaml/site-lib/core /usr/local/lib/ocaml/unix.cmxa
> /usr/local/lib/ocaml/threads/threads.cmxa
> /usr/local/lib/ocaml/site-lib/variantslib/variantslib.cmxa
> /usr/local/lib/ocaml/bigarray.cmxa /usr/local/lib/ocaml/nums.cmxa
> /usr/local/lib/ocaml/site-lib/sexplib/sexplib.cmxa
> /usr/local/lib/ocaml/site-lib/fieldslib/fieldslib.cmxa
> /usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.cmxa
> /usr/local/lib/ocaml/site-lib/oUnit/oUnit.cmxa
> /usr/local/lib/ocaml/site-lib/res/res.cmxa
> /usr/local/lib/ocaml/site-lib/core/core.cmxa simple_core.ml
> + as -o 'simple_core.o' '/tmp/camlasm277805.s'
> + as -o '/tmp/camlstartupcbc06f.o' '/tmp/camlstartup2cf117.s'
> + gcc -o 'simple_core' ? '-L/usr/local/lib/ocaml/camlp4'
> '-L/usr/local/lib/ocaml/site-lib/type-conv'
> '-L/usr/local/lib/ocaml/site-lib/variantslib'
> '-L/usr/local/lib/ocaml/site-lib/num'
> '-L/usr/local/lib/ocaml/site-lib/sexplib'
> '-L/usr/local/lib/ocaml/site-lib/fieldslib'
> '-L/usr/local/lib/ocaml/site-lib/bin_prot'
> '-L/usr/local/lib/ocaml/site-lib/oUnit'
> '-L/usr/local/lib/ocaml/site-lib/pa_ounit'
> '-L/usr/local/lib/ocaml/site-lib/pa_pipebang'
> '-L/usr/local/lib/ocaml/site-lib/res'
> '-L/usr/local/lib/ocaml/site-lib/core'
> '-L/usr/local/lib/ocaml/threads' '-L/usr/local/lib/ocaml'
> '/tmp/camlstartupcbc06f.o' '/usr/local/lib/ocaml/std_exit.o'
> 'simple_core.o' '/usr/local/lib/ocaml/site-lib/core/core.a'
> '/usr/local/lib/ocaml/site-lib/res/res.a'
> '/usr/local/lib/ocaml/site-lib/oUnit/oUnit.a'
> '/usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a'
> '/usr/local/lib/ocaml/site-lib/fieldslib/fieldslib.a'
> '/usr/local/lib/ocaml/site-lib/sexplib/sexplib.a'
> '/usr/local/lib/ocaml/nums.a' '/usr/local/lib/ocaml/bigarray.a'
> '/usr/local/lib/ocaml/site-lib/variantslib/variantslib.a'
> '/usr/local/lib/ocaml/threads/threads.a' '/usr/local/lib/ocaml/unix.a'
> '/usr/local/lib/ocaml/stdlib.a' '-lcore' '-lrt' 'lib/libcore.a'
> '-lbin_prot' 'lib/libbin_prot.a' '-lnums' '-lbigarray' '-lthreadsnat'
> '-lpthread' '-lunix' '/usr/local/lib/ocaml/libasmrun.a' -lm ?-ldl
> gcc: error: lib/libcore.a: No such file or directory
> gcc: error: lib/libbin_prot.a: No such file or directory
> File "caml_startup", line 1, characters 0-1:
> Error: Error during linking
> ocamlopt returned with exit code 2
>
> I'm at a bit of a loss as to what to do.



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Wed Feb  1 21:43:47 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 1 Feb 2012 16:43:47 -0500
Subject: Trouble building my first program
In-Reply-To: <CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
	<CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
Message-ID: <CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>


Installing the development version of Oasis would probably help.  But
I'm still holding my breath for the next release ;)

Cheers,
Markus

On Wed, Feb 1, 2012 at 16:41, David House <dmhouse at gmail.com> wrote:
> On 1 February 2012 21:39, Markus Mottl <markus.mottl at gmail.com> wrote:
>> this is a known problem related to Oasis. ?It generates incorrect
>> linking flags (e.g. lib/libbin_prot.a). ?This should be fixed any day
>> now we hope. ?Sylvain, any news? :-)
>
> Thanks Markus. Is there a workaround?



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Wed Feb  1 22:48:23 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 1 Feb 2012 17:48:23 -0500
Subject: New code!
Message-ID: <CACLX4jSGVo1f-7HsJ9_M1=_oXar=ssj0vGnrCnjtjcMahZ2mcw@mail.gmail.com>

A bunch of new code has just landed in the repo.  This includes some
portability fixes, as well as the change to make platform-dependent
functionality show up as Or_error.t's.  Try it out and report problems!

As a general matter, we're currently doing a big code-review cycle
internally.  That should be done in a few weeks, at which point, we should
be able to cut a proper release, with tarballs and all that goodness.
 Hopefully we can get more portability fixes in as well.

(There's some other fun stuff that lands with this.  One example: Sweeks
did some work to expose the fact that the monomorphic sets and maps, e.g.,
Int.Map.t, and the polymorphic maps, are really the same thing and so can
be acted on polymorphically.  At the same time, he added a phantom type so
that you can't try to do a Set.union or a Map.merge on things that happen
to have the same type, but one was built with polymorphic compare and one
wasn't....)

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120201/39b61c7c/attachment-0001.html>

From dmhouse at gmail.com  Wed Feb  1 21:34:14 2012
From: dmhouse at gmail.com (David House)
Date: Wed, 1 Feb 2012 21:34:14 +0000
Subject: Trouble building my first program
In-Reply-To: <CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
Message-ID: <CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>


On 31 January 2012 22:10, Owen Gunden <ogunden at phauna.org> wrote:
> On Tue, Jan 31, 2012 at 5:08 PM, Owen Gunden <ogunden at phauna.org> wrote:
>> Try adding -verbose to your ocamlfind call. Check the path to
>> libcore.a in the gcc call. My guess is that your install is not
>> getting the path quite right.
>
> (Your command line works fine on my machine)

Here's the output of the verbose compilation:

$ ocamlfind ocamlopt -package core -linkpkg -o simple_core
simple_core.ml -thread -verbose
Effective set of compiler predicates:
pkg_unix,pkg_threads.posix,pkg_threads,pkg_variantslib,pkg_camlp4,pkg_type-conv,pkg_variantslib.syntax,pkg_bigarray,pkg_num.core,pkg_num,pkg_sexplib,pkg_sexplib.syntax,pkg_fieldslib,pkg_fieldslib.syntax,pkg_bin_prot,pkg_bin_prot.syntax,pkg_oUnit,pkg_pa_ounit,pkg_pa_pipebang,pkg_res,pkg_core,autolink,mt,mt_posix,native
+ ocamlopt -o simple_core -verbose -thread -I
/usr/local/lib/ocaml/camlp4 -I /usr/local/lib/ocaml/site-lib/type-conv
-I /usr/local/lib/ocaml/site-lib/variantslib -I
/usr/local/lib/ocaml/site-lib/num -I
/usr/local/lib/ocaml/site-lib/sexplib -I
/usr/local/lib/ocaml/site-lib/fieldslib -I
/usr/local/lib/ocaml/site-lib/bin_prot -I
/usr/local/lib/ocaml/site-lib/oUnit -I
/usr/local/lib/ocaml/site-lib/pa_ounit -I
/usr/local/lib/ocaml/site-lib/pa_pipebang -I
/usr/local/lib/ocaml/site-lib/res -I
/usr/local/lib/ocaml/site-lib/core /usr/local/lib/ocaml/unix.cmxa
/usr/local/lib/ocaml/threads/threads.cmxa
/usr/local/lib/ocaml/site-lib/variantslib/variantslib.cmxa
/usr/local/lib/ocaml/bigarray.cmxa /usr/local/lib/ocaml/nums.cmxa
/usr/local/lib/ocaml/site-lib/sexplib/sexplib.cmxa
/usr/local/lib/ocaml/site-lib/fieldslib/fieldslib.cmxa
/usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.cmxa
/usr/local/lib/ocaml/site-lib/oUnit/oUnit.cmxa
/usr/local/lib/ocaml/site-lib/res/res.cmxa
/usr/local/lib/ocaml/site-lib/core/core.cmxa simple_core.ml
+ as -o 'simple_core.o' '/tmp/camlasm277805.s'
+ as -o '/tmp/camlstartupcbc06f.o' '/tmp/camlstartup2cf117.s'
+ gcc -o 'simple_core'   '-L/usr/local/lib/ocaml/camlp4'
'-L/usr/local/lib/ocaml/site-lib/type-conv'
'-L/usr/local/lib/ocaml/site-lib/variantslib'
'-L/usr/local/lib/ocaml/site-lib/num'
'-L/usr/local/lib/ocaml/site-lib/sexplib'
'-L/usr/local/lib/ocaml/site-lib/fieldslib'
'-L/usr/local/lib/ocaml/site-lib/bin_prot'
'-L/usr/local/lib/ocaml/site-lib/oUnit'
'-L/usr/local/lib/ocaml/site-lib/pa_ounit'
'-L/usr/local/lib/ocaml/site-lib/pa_pipebang'
'-L/usr/local/lib/ocaml/site-lib/res'
'-L/usr/local/lib/ocaml/site-lib/core'
'-L/usr/local/lib/ocaml/threads' '-L/usr/local/lib/ocaml'
'/tmp/camlstartupcbc06f.o' '/usr/local/lib/ocaml/std_exit.o'
'simple_core.o' '/usr/local/lib/ocaml/site-lib/core/core.a'
'/usr/local/lib/ocaml/site-lib/res/res.a'
'/usr/local/lib/ocaml/site-lib/oUnit/oUnit.a'
'/usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a'
'/usr/local/lib/ocaml/site-lib/fieldslib/fieldslib.a'
'/usr/local/lib/ocaml/site-lib/sexplib/sexplib.a'
'/usr/local/lib/ocaml/nums.a' '/usr/local/lib/ocaml/bigarray.a'
'/usr/local/lib/ocaml/site-lib/variantslib/variantslib.a'
'/usr/local/lib/ocaml/threads/threads.a' '/usr/local/lib/ocaml/unix.a'
'/usr/local/lib/ocaml/stdlib.a' '-lcore' '-lrt' 'lib/libcore.a'
'-lbin_prot' 'lib/libbin_prot.a' '-lnums' '-lbigarray' '-lthreadsnat'
'-lpthread' '-lunix' '/usr/local/lib/ocaml/libasmrun.a' -lm  -ldl
gcc: error: lib/libcore.a: No such file or directory
gcc: error: lib/libbin_prot.a: No such file or directory
File "caml_startup", line 1, characters 0-1:
Error: Error during linking
ocamlopt returned with exit code 2

I'm at a bit of a loss as to what to do.


From dmhouse at gmail.com  Wed Feb  1 21:36:36 2012
From: dmhouse at gmail.com (David House)
Date: Wed, 1 Feb 2012 21:36:36 +0000
Subject: Trouble building my first program
In-Reply-To: <CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
Message-ID: <CADy1MavY4nxcFRLwJNoydGJ0EexCe1wjUDDUM+7VwWCY3_kvSA@mail.gmail.com>


On 1 February 2012 21:34, David House <dmhouse at gmail.com> wrote:
> Here's the output of the verbose compilation:

My mail client wrapped a lot of those lines. Here is the raw output:

http://pastebin.com/raw.php?i=wQkpSg77


From dmhouse at gmail.com  Wed Feb  1 21:41:19 2012
From: dmhouse at gmail.com (David House)
Date: Wed, 1 Feb 2012 21:41:19 +0000
Subject: Trouble building my first program
In-Reply-To: <CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
Message-ID: <CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>


On 1 February 2012 21:39, Markus Mottl <markus.mottl at gmail.com> wrote:
> this is a known problem related to Oasis. ?It generates incorrect
> linking flags (e.g. lib/libbin_prot.a). ?This should be fixed any day
> now we hope. ?Sylvain, any news? :-)

Thanks Markus. Is there a workaround?


From dmhouse at gmail.com  Wed Feb  1 22:04:28 2012
From: dmhouse at gmail.com (David House)
Date: Wed, 1 Feb 2012 22:04:28 +0000
Subject: Trouble building my first program
In-Reply-To: <CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
	<CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
	<CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>
Message-ID: <CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>


On 1 February 2012 21:43, Markus Mottl <markus.mottl at gmail.com> wrote:
> Installing the development version of Oasis would probably help. ?But
> I'm still holding my breath for the next release ;)

Nothing seems to change if I install oasis 0.2.1.

On the other hand, compiling with ocamlc works, which is probably good
enough for me for now.


From markus.mottl at gmail.com  Thu Feb  2 03:21:43 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 1 Feb 2012 22:21:43 -0500
Subject: Code review
Message-ID: <CAP_800opEzQB-7UX5O6ZHBLm0NsjVd816=r9=nX+SiUC91W29w@mail.gmail.com>


Hi,

is it meaningful for outside contributors to put CRs in the sources?
If so, it might be a good idea to explain on the Wiki how to do that
(syntax, conventions, etc.) and who might be a suitable receiver for
different parts of the code.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Thu Feb  2 03:42:35 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 1 Feb 2012 22:42:35 -0500
Subject: Code review
In-Reply-To: <CAP_800opEzQB-7UX5O6ZHBLm0NsjVd816=r9=nX+SiUC91W29w@mail.gmail.com>
References: <CAP_800opEzQB-7UX5O6ZHBLm0NsjVd816=r9=nX+SiUC91W29w@mail.gmail.com>
Message-ID: <CACLX4jQFQUj+10bohmbDrza2wXKHrE1ZOUorDtQr5U7m+V0ueA@mail.gmail.com>

Not at the moment.  We'd like to try to use bitbucket's issue-tracker for
communication with outside developers.

y

On Wed, Feb 1, 2012 at 10:21 PM, Markus Mottl <markus.mottl at gmail.com>wrote:

> Hi,
>
> is it meaningful for outside contributors to put CRs in the sources?
> If so, it might be a good idea to explain on the Wiki how to do that
> (syntax, conventions, etc.) and who might be a suitable receiver for
> different parts of the code.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120201/77748553/attachment-0001.html>

From markus.mottl at gmail.com  Thu Feb  2 04:37:47 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 1 Feb 2012 23:37:47 -0500
Subject: New code!
In-Reply-To: <CACLX4jSGVo1f-7HsJ9_M1=_oXar=ssj0vGnrCnjtjcMahZ2mcw@mail.gmail.com>
References: <CACLX4jSGVo1f-7HsJ9_M1=_oXar=ssj0vGnrCnjtjcMahZ2mcw@mail.gmail.com>
Message-ID: <CAP_800p0pA=xKPnTduJP9HNkEJfo4O_w8hb0t42iW2GJ0cbXCw@mail.gmail.com>


Seems to work fine for me, except for the still lingering Oasis
linking bug.  I have merged the changes into my fork, which did
luckily cause two easily fixed merge conflicts only.  The fork is
up-to-date on bitbucket so feel free to pull the recent
type-conv/sexplib/bin-prot patches.

Cheers,
Markus

On Wed, Feb 1, 2012 at 17:48, Yaron Minsky <yminsky at janestreet.com> wrote:
> A bunch of new code has just landed in the repo. ?This includes some
> portability fixes, as well as the change to make platform-dependent
> functionality show up as Or_error.t's. ?Try it out and report problems!
>
> As a general matter, we're currently doing a big code-review cycle
> internally. ?That should be done in a few weeks, at which point, we should
> be able to cut a proper release, with tarballs and all that goodness.
> ?Hopefully we can get more portability fixes in as well.
>
> (There's some other fun stuff that lands with this. ?One example: Sweeks did
> some work to expose the fact that the monomorphic sets and maps, e.g.,
> Int.Map.t, and the polymorphic maps, are really the same thing and so can be
> acted on polymorphically. ?At the same time, he added a phantom type so that
> you can't try to do a Set.union or a Map.merge on things that happen to have
> the same type, but one was built with polymorphic compare and one
> wasn't....)
>
> y



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From seanmcl at gmail.com  Fri Feb  3 19:39:49 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Fri, 3 Feb 2012 14:39:49 -0500
Subject: New code!
In-Reply-To: <CAP_800p0pA=xKPnTduJP9HNkEJfo4O_w8hb0t42iW2GJ0cbXCw@mail.gmail.com>
References: <CACLX4jSGVo1f-7HsJ9_M1=_oXar=ssj0vGnrCnjtjcMahZ2mcw@mail.gmail.com>
	<CAP_800p0pA=xKPnTduJP9HNkEJfo4O_w8hb0t42iW2GJ0cbXCw@mail.gmail.com>
Message-ID: <CAO4dZbfwSWtNwOaWjdJgqES1wp4p+bjUNaWGnhQbytabff2dQg@mail.gmail.com>


The combined packages failed to build for me on my work machine.

$ ./buildjs.sh ~/tmp/js
Building ocaml-3.12.1...
Building findlib-1.2.7...
Building ounit-1.1.0...
Building type-conv-2.3.0...
Building fieldslib-107.01...
============
FAIL: could not build fieldslib-107.01
============
core not installed
core_extended not installed
bin_prot not installed
fieldslib not installed
oUnit not installed
pcre not installed
res not installed
sexplib not installed
type-conv not installed
variantslib not installed
async not installed


It looks like ocamlfind needs to be able to create the lib directory.

ocamlfind: Bad configuration: Cannot mkdir
/home/smclaughlin/lib/ocaml-site-lib/type-conv because a path
component does not exist or is not a directory
E: Command '/home/smclaughlin/tmp/js/bin/ocamlfind install type-conv
lib/META /home/smclaughlin/tmp/janestreet-oss-20111122-2/build-32430/type-conv-2.3.0/_build/lib/pa_type_conv.cmi
/home/smclaughlin/tmp/janestreet-oss-20111122-2/build-32430/type-conv-2.3.0/_build/lib/pa_type_conv.cma
lib/pa_type_conv.mli' terminated with error code 2


On Wed, Feb 1, 2012 at 11:37 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> Seems to work fine for me, except for the still lingering Oasis
> linking bug. ?I have merged the changes into my fork, which did
> luckily cause two easily fixed merge conflicts only. ?The fork is
> up-to-date on bitbucket so feel free to pull the recent
> type-conv/sexplib/bin-prot patches.
>
> Cheers,
> Markus
>
> On Wed, Feb 1, 2012 at 17:48, Yaron Minsky <yminsky at janestreet.com> wrote:
>> A bunch of new code has just landed in the repo. ?This includes some
>> portability fixes, as well as the change to make platform-dependent
>> functionality show up as Or_error.t's. ?Try it out and report problems!
>>
>> As a general matter, we're currently doing a big code-review cycle
>> internally. ?That should be done in a few weeks, at which point, we should
>> be able to cut a proper release, with tarballs and all that goodness.
>> ?Hopefully we can get more portability fixes in as well.
>>
>> (There's some other fun stuff that lands with this. ?One example: Sweeks did
>> some work to expose the fact that the monomorphic sets and maps, e.g.,
>> Int.Map.t, and the polymorphic maps, are really the same thing and so can be
>> acted on polymorphically. ?At the same time, he added a phantom type so that
>> you can't try to do a Set.union or a Map.merge on things that happen to have
>> the same type, but one was built with polymorphic compare and one
>> wasn't....)
>>
>> y
>
>
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From ocaml-core at googlegroups.com  Tue Feb  7 02:32:58 2012
From: ocaml-core at googlegroups.com (ocaml-core at googlegroups.com)
Date: Tue, 07 Feb 2012 02:32:58 +0000
Subject: Moderator's spam report for ocaml-core@googlegroups.com
Message-ID: <0016367fb4c7e0f19804b856981f@google.com>


This message is being sent to you because you are a moderator of the group ocaml-core.

The following suspicious messages were sent to your group, but are being held in your moderation queue because they are classified as likely spam messages.

If you take no action, all the messages below will be discarded automatically as spam.

However, if you see any messages that are not spam below, you may approve them individually by going to:

http://groups.google.com/group/ocaml-core/pendmsg

Please do not mark this notification as spam; this is a service for group moderators. If you do not wish to receive these notifications in the future, you may change your preferences by going to:

http://groups.google.com/group/ocaml-core/manage_post


------- 1 of 1  -------
Subject: Verisign hacked numerous times, are you really protected?
>From: "Security News" <securitynews at mythinkrealestate.com>
Date: Feb 06 01:23PM -0500

Reports state that Verisign was hacked multiple times back in 2010 and it might have compromised on some vital information.
The security staff at VeriSign failed to inform higher management about the hacking.
See the full articles on this late

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=9112252888751365281


For more information about this message, please visit:
http://groups.google.com/support/bin/answer.py?hl=en&answer=165806



From datkin at gmail.com  Thu Feb  9 13:53:07 2012
From: datkin at gmail.com (Drew)
Date: Thu, 9 Feb 2012 05:53:07 -0800 (PST)
Subject: Trouble building my first program
In-Reply-To: <CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
 <CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
 <CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
 <CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
 <CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
 <CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
 <CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com> <CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>
Message-ID: <8f43a0c5-6df3-4525-9725-81215e6b9b29@w4g2000vbc.googlegroups.com>


On Feb 1, 5:04?pm, David House <dmho... at gmail.com> wrote:
> Nothing seems to change if I install oasis 0.2.1.
>
> On the other hand, compiling with ocamlc works, which is probably good
> enough for me for now.

I just ran into the same issue. If I understand correctly, the problem
with oasis surfaced when you built core, and a bad flag got packed
into the bytecode library. Eg, on my machine:

~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/core/core.cma | grep
'\.a'
Extra C object files: -lcore -lrt lib/libcore.a

~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/*/*.cma | grep '\.a'
Extra C object files: -lbin_prot lib/libbin_prot.a
Extra C object files: -lcore -lrt lib/libcore.a
Extra C object files: -lcore_extended lib/libcore_extended.a

The only workaround I've found is adding symlinks in the directory I'm
building from. So using oasis, I've got the following in '_build':

_build $ ls -l lib/lib*.a
lrwxrwxrwx 1 datkin datkin    49 2012-02-04 20:11 lib/libbin_prot.a -
> /usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a
lrwxrwxrwx 1 datkin datkin    41 2012-02-05 09:42 lib/libcore.a -> /
usr/local/lib/ocaml/site-lib/core/core.a
lrwxrwxrwx 1 datkin datkin    59 2012-02-04 20:11 lib/
libcore_extended.a -> /usr/local/lib/ocaml/site-lib/core_extended/
core_extended.a

My understanding of what's going on here is pretty limited, but I
don't know how else to get around this. As long as the .cma files
reference these paths, isn't ocamlc going to pass them to gcc? David,
do you have a different/better workaround? It sounds like you have a
solution that works with ocamlc but not oasis.


From seanmcl at gmail.com  Thu Feb  9 13:48:58 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Thu, 9 Feb 2012 08:48:58 -0500
Subject: ocamlspotter
Message-ID: <CAO4dZbcMJWCXERG_6-cw19fM-T15OqH+njiy6KNvwq-bhDymLA@mail.gmail.com>


Why aren't we including ocamlspotter in our code bundle?


From yminsky at janestreet.com  Thu Feb  9 14:02:01 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 9 Feb 2012 09:02:01 -0500
Subject: ocamlspotter
In-Reply-To: <CAO4dZbcMJWCXERG_6-cw19fM-T15OqH+njiy6KNvwq-bhDymLA@mail.gmail.com>
References: <CAO4dZbcMJWCXERG_6-cw19fM-T15OqH+njiy6KNvwq-bhDymLA@mail.gmail.com>
Message-ID: <CACLX4jTEZKXLVzmGvgqLbDbzteWW50Jm4c8Nw-SJLWS6SfO-Aw@mail.gmail.com>

ocamlspotter is a compiler patch, maintained by Jun Furuse.  We use it
internally, but it's not required by Core, and really isn't a natural
add-on, since it is a compiler patch.

y

On Thu, Feb 9, 2012 at 8:48 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:

> Why aren't we including ocamlspotter in our code bundle?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120209/410d8d21/attachment-0001.html>

From seanmcl at gmail.com  Thu Feb  9 14:31:33 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Thu, 9 Feb 2012 09:31:33 -0500
Subject: blog post request: using macros
Message-ID: <CAO4dZbeDQppjP0fs6btspXQsZaSVR8a5-KYXbpPFqrrRP3LVTw@mail.gmail.com>


It would be nice to have a blog post that explains how to use sexplib,
fieldslib etc,
and, very important, how to build the code that uses them.  (e.g. what
do you give
to the -pp option to ocamlopt?  Or is it the -ppopt flag to ocamlfind ocamlopt?)


From yminsky at janestreet.com  Thu Feb  9 14:57:13 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 9 Feb 2012 09:57:13 -0500
Subject: blog post request: using macros
In-Reply-To: <CAO4dZbeDQppjP0fs6btspXQsZaSVR8a5-KYXbpPFqrrRP3LVTw@mail.gmail.com>
References: <CAO4dZbeDQppjP0fs6btspXQsZaSVR8a5-KYXbpPFqrrRP3LVTw@mail.gmail.com>
Message-ID: <CACLX4jTWGJT2-Chsu7m08-zMadVGT1EfbHkzxah3BO1jrrgCdw@mail.gmail.com>

A good point.  I'm thinking about that anyway, so I'll try to put together
a blog post in the near term.

I'm also way overdue for a blog post on how to effectively use first-class
modules...

y

On Thu, Feb 9, 2012 at 9:31 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:

> It would be nice to have a blog post that explains how to use sexplib,
> fieldslib etc,
> and, very important, how to build the code that uses them.  (e.g. what
> do you give
> to the -pp option to ocamlopt?  Or is it the -ppopt flag to ocamlfind
> ocamlopt?)
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120209/e90c6fc0/attachment-0001.html>

From ocaml-core at googlegroups.com  Fri Feb 10 02:32:39 2012
From: ocaml-core at googlegroups.com (ocaml-core at googlegroups.com)
Date: Fri, 10 Feb 2012 02:32:39 +0000
Subject: Moderator's spam report for ocaml-core@googlegroups.com
Message-ID: <00504502e40a45ca6604b892f1bf@google.com>


This message is being sent to you because you are a moderator of the group ocaml-core.

The following suspicious messages were sent to your group, but are being held in your moderation queue because they are classified as likely spam messages.

If you take no action, all the messages below will be discarded automatically as spam.

However, if you see any messages that are not spam below, you may approve them individually by going to:

http://groups.google.com/group/ocaml-core/pendmsg

Please do not mark this notification as spam; this is a service for group moderators. If you do not wish to receive these notifications in the future, you may change your preferences by going to:

http://groups.google.com/group/ocaml-core/manage_post


------- 1 of 1  -------
Subject: Hello
>From: DORIS KHALIFA <khalifa_doris2011 at yahoo.co.uk>
Date: Feb 07 08:34PM

*Hello
My Name is Doris am a  young girl, I saw your profile today in this site
and i like  it. I want you to know that i will be interested to know you
better because you sound very sweet and nice in your profile so i will like

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=2487369260688361832


For more information about this message, please visit:
http://groups.google.com/support/bin/answer.py?hl=en&answer=165806



From seanmcl at gmail.com  Fri Feb 17 05:14:08 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Fri, 17 Feb 2012 00:14:08 -0500
Subject: Trouble building my first program
In-Reply-To: <8f43a0c5-6df3-4525-9725-81215e6b9b29@w4g2000vbc.googlegroups.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
	<CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
	<CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>
	<CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>
	<8f43a0c5-6df3-4525-9725-81215e6b9b29@w4g2000vbc.googlegroups.com>
Message-ID: <CAO4dZbeCoS48Dq3jRWcqYeLuVFtC1E27_Bk5Q+J8F9FTqc65bg@mail.gmail.com>


Thanks Drew.  I hit this same problem, and used your symlink trick for
the time being.  Not pretty, but at least it compiles.

On Thu, Feb 9, 2012 at 8:53 AM, Drew <datkin at gmail.com> wrote:
> On Feb 1, 5:04?pm, David House <dmho... at gmail.com> wrote:
>> Nothing seems to change if I install oasis 0.2.1.
>>
>> On the other hand,  with ocamlc works, which is probably good
>> enough for me for now.
>
> I just ran into the same issue. If I understand correctly, the problem
> with oasis surfaced when you built core, and a bad flag got packed
> into the bytecode library. Eg, on my machine:
>
> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/core/core.cma | grep
> '\.a'
> Extra C object files: -lcore -lrt lib/libcore.a
>
> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/*/*.cma | grep '\.a'
> Extra C object files: -lbin_prot lib/libbin_prot.a
> Extra C object files: -lcore -lrt lib/libcore.a
> Extra C object files: -lcore_extended lib/libcore_extended.a
>
> The only workaround I've found is adding symlinks in the directory I'm
> building from. So using oasis, I've got the following in '_build':
>
> _build $ ls -l lib/lib*.a
> lrwxrwxrwx 1 datkin datkin ? ?49 2012-02-04 20:11 lib/libbin_prot.a -
>> /usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a
> lrwxrwxrwx 1 datkin datkin ? ?41 2012-02-05 09:42 lib/libcore.a -> /
> usr/local/lib/ocaml/site-lib/core/core.a
> lrwxrwxrwx 1 datkin datkin ? ?59 2012-02-04 20:11 lib/
> libcore_extended.a -> /usr/local/lib/ocaml/site-lib/core_extended/
> core_extended.a
>
> My understanding of what's going on here is pretty limited, but I
> don't know how else to get around this. As long as the .cma files
> reference these paths, isn't ocamlc going to pass them to gcc? David,
> do you have a different/better workaround? It sounds like you have a
> solution that works with ocamlc but not oasis.


From zqeyhy5ees at gmail.com  Mon Feb 20 12:29:55 2012
From: zqeyhy5ees at gmail.com (zQEYHY5eEs zQEYHY5eEs)
Date: Mon, 20 Feb 2012 04:29:55 -0800 (PST)
Subject: Linsanity - Learn Chinese (Mandarin) faster by using flashcards with pictures
Message-ID: <708468a1-1cf0-4a89-9f8f-9a4c654deb41@og8g2000pbb.googlegroups.com>


http://www.ichineseflashcards.com will help you learn Chinese
(Mandarin) faster by using flashcards with pictures, thanks


From seanmcl at gmail.com  Tue Feb 21 19:22:33 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Tue, 21 Feb 2012 14:22:33 -0500
Subject: Trouble building my first program
In-Reply-To: <CAO4dZbeCoS48Dq3jRWcqYeLuVFtC1E27_Bk5Q+J8F9FTqc65bg@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
	<CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
	<CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>
	<CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>
	<8f43a0c5-6df3-4525-9725-81215e6b9b29@w4g2000vbc.googlegroups.com>
	<CAO4dZbeCoS48Dq3jRWcqYeLuVFtC1E27_Bk5Q+J8F9FTqc65bg@mail.gmail.com>
Message-ID: <CAO4dZbdH2voJrQKb1EyB8=VW5RupvTPk-XRTwV+v+cOFY9cCJQ@mail.gmail.com>


Hi,

Is someone working on this issue?  I'm copying symlinks to every
directory where I build something.

Thanks,

Sean

On Fri, Feb 17, 2012 at 12:14 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Thanks Drew. ?I hit this same problem, and used your symlink trick for
> the time being. ?Not pretty, but at least it compiles.
>
> On Thu, Feb 9, 2012 at 8:53 AM, Drew <datkin at gmail.com> wrote:
>> On Feb 1, 5:04?pm, David House <dmho... at gmail.com> wrote:
>>> Nothing seems to change if I install oasis 0.2.1.
>>>
>>> On the other hand, ?with ocamlc works, which is probably good
>>> enough for me for now.
>>
>> I just ran into the same issue. If I understand correctly, the problem
>> with oasis surfaced when you built core, and a bad flag got packed
>> into the bytecode library. Eg, on my machine:
>>
>> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/core/core.cma | grep
>> '\.a'
>> Extra C object files: -lcore -lrt lib/libcore.a
>>
>> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/*/*.cma | grep '\.a'
>> Extra C object files: -lbin_prot lib/libbin_prot.a
>> Extra C object files: -lcore -lrt lib/libcore.a
>> Extra C object files: -lcore_extended lib/libcore_extended.a
>>
>> The only workaround I've found is adding symlinks in the directory I'm
>> building from. So using oasis, I've got the following in '_build':
>>
>> _build $ ls -l lib/lib*.a
>> lrwxrwxrwx 1 datkin datkin ? ?49 2012-02-04 20:11 lib/libbin_prot.a -
>>> /usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a
>> lrwxrwxrwx 1 datkin datkin ? ?41 2012-02-05 09:42 lib/libcore.a -> /
>> usr/local/lib/ocaml/site-lib/core/core.a
>> lrwxrwxrwx 1 datkin datkin ? ?59 2012-02-04 20:11 lib/
>> libcore_extended.a -> /usr/local/lib/ocaml/site-lib/core_extended/
>> core_extended.a
>>
>> My understanding of what's going on here is pretty limited, but I
>> don't know how else to get around this. As long as the .cma files
>> reference these paths, isn't ocamlc going to pass them to gcc? David,
>> do you have a different/better workaround? It sounds like you have a
>> solution that works with ocamlc but not oasis.


From yminsky at janestreet.com  Tue Feb 21 21:45:08 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 21 Feb 2012 16:45:08 -0500
Subject: Trouble building my first program
In-Reply-To: <CAO4dZbdH2voJrQKb1EyB8=VW5RupvTPk-XRTwV+v+cOFY9cCJQ@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
	<CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>
	<CADy1Matgu42EGxmXVRd7erbHLXg2FGOOEU=1sw4n5ZX=BE0xWA@mail.gmail.com>
	<CAP_800oScnOa=0B_u7zGVy1KV==VMhiyEz1kD-K8hO1dgMHfDQ@mail.gmail.com>
	<CADy1MatipopP4T3BWAKMpxzj-GVhLN=Q+WUGFKy59Y8_9QbMDw@mail.gmail.com>
	<CAP_800oUvabkS3=cQ7SJTX8ZBWghdH=yaEcCa8djAvOnzDx9sA@mail.gmail.com>
	<CADy1Mauf+21dU7eY_spdjiYioeCo54m1=_OosC6dud+YBOgT0Q@mail.gmail.com>
	<8f43a0c5-6df3-4525-9725-81215e6b9b29@w4g2000vbc.googlegroups.com>
	<CAO4dZbeCoS48Dq3jRWcqYeLuVFtC1E27_Bk5Q+J8F9FTqc65bg@mail.gmail.com>
	<CAO4dZbdH2voJrQKb1EyB8=VW5RupvTPk-XRTwV+v+cOFY9cCJQ@mail.gmail.com>
Message-ID: <CACLX4jSaO_iUo=_GHp7EJ3rpg8SnyUKMV5ut=3pKqUoaSAB52A@mail.gmail.com>

Sylvain says he'll have something Real Soon Now...

y

On Tue, Feb 21, 2012 at 2:22 PM, Sean McLaughlin <seanmcl at gmail.com> wrote:

> Hi,
>
> Is someone working on this issue?  I'm copying symlinks to every
> directory where I build something.
>
> Thanks,
>
> Sean
>
> On Fri, Feb 17, 2012 at 12:14 AM, Sean McLaughlin <seanmcl at gmail.com>
> wrote:
> > Thanks Drew.  I hit this same problem, and used your symlink trick for
> > the time being.  Not pretty, but at least it compiles.
> >
> > On Thu, Feb 9, 2012 at 8:53 AM, Drew <datkin at gmail.com> wrote:
> >> On Feb 1, 5:04 pm, David House <dmho... at gmail.com> wrote:
> >>> Nothing seems to change if I install oasis 0.2.1.
> >>>
> >>> On the other hand,  with ocamlc works, which is probably good
> >>> enough for me for now.
> >>
> >> I just ran into the same issue. If I understand correctly, the problem
> >> with oasis surfaced when you built core, and a bad flag got packed
> >> into the bytecode library. Eg, on my machine:
> >>
> >> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/core/core.cma | grep
> >> '\.a'
> >> Extra C object files: -lcore -lrt lib/libcore.a
> >>
> >> ~ $ ocamlobjinfo /usr/local/lib/ocaml/site-lib/*/*.cma | grep '\.a'
> >> Extra C object files: -lbin_prot lib/libbin_prot.a
> >> Extra C object files: -lcore -lrt lib/libcore.a
> >> Extra C object files: -lcore_extended lib/libcore_extended.a
> >>
> >> The only workaround I've found is adding symlinks in the directory I'm
> >> building from. So using oasis, I've got the following in '_build':
> >>
> >> _build $ ls -l lib/lib*.a
> >> lrwxrwxrwx 1 datkin datkin    49 2012-02-04 20:11 lib/libbin_prot.a -
> >>> /usr/local/lib/ocaml/site-lib/bin_prot/bin_prot.a
> >> lrwxrwxrwx 1 datkin datkin    41 2012-02-05 09:42 lib/libcore.a -> /
> >> usr/local/lib/ocaml/site-lib/core/core.a
> >> lrwxrwxrwx 1 datkin datkin    59 2012-02-04 20:11 lib/
> >> libcore_extended.a -> /usr/local/lib/ocaml/site-lib/core_extended/
> >> core_extended.a
> >>
> >> My understanding of what's going on here is pretty limited, but I
> >> don't know how else to get around this. As long as the .cma files
> >> reference these paths, isn't ocamlc going to pass them to gcc? David,
> >> do you have a different/better workaround? It sounds like you have a
> >> solution that works with ocamlc but not oasis.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120221/a942bc16/attachment-0001.html>

From yury.sulsky at gmail.com  Thu Feb 23 15:32:59 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 23 Feb 2012 10:32:59 -0500
Subject: Building the tree on Debian
Message-ID: <CAEDxudwYs2qwJWXFFnegtff9XB2imNVsc-ytK5wmrTXbWHEMaw@mail.gmail.com>


Hey all, I thought it may be useful to write down the steps for
building the tree on my Debian system (amd64, unstable). It was very
straight-forward:

1) install the ocaml base system
$ sudo aptitude install oasis ocaml-findlib

2) install some additional required libs
$ sudo aptitude install libres-ocaml-dev libounit-ocaml-dev libpcre-ocaml-dev

3) clone the tree
$ hg clone https://bitbucket.org/yminsky/ocaml-core

4) build-and-install
$ cd ocaml-core && sudo ./build-and-install

5) test it out (bytecode-only right now).
$ ocaml
# #use "topfind";;
# #thread;;
# #require "async";;
# open Core.Std;;
# open Async.Std;;
# Clock.every (sec 1.0) (fun () -> print_endline "hello from async!");;
# Clock.after (sec 10.0) >>> fun () -> shutdown 0;;
# Scheduler.go ();;


From markus.weissmann at cs.tum.edu  Fri Feb 24 19:01:05 2012
From: markus.weissmann at cs.tum.edu (=?iso-8859-1?Q?=22Markus_W=2E_Wei=DFmann=22?=)
Date: Fri, 24 Feb 2012 20:01:05 +0100
Subject: bin-prot compile error on OS X 10.7/clang-llvm 3.0/OCaml 3.12.1
Message-ID: <AC2BBE7F-9CEB-43AC-9CBC-94A000CE7466@cs.tum.edu>


Hello there,

I'm not sure if this is the right place to report bugs but I couldn't find anything else on the JaneStreet homepage (btw. the link to this mailing list looks broken):
bin-prot fails to compile (since recently) on OS X 10.7.3 with the latest XCode/clang compiler, OCaml 3.12.1.
This is a clean install of MacPorts and I am the maintainer of both OCaml and bin-prot there.

1.) An array-out-of-bounds warning is generated which makes the code fail due to -Werror bein enabled:
It seems as if bin-prot tries to access the 2nd element of a 1-sized C-array defined in OCaml's bigarray.h

- - - - - 8< - - - - -
+ ocamlfind ocamlc -ccopt -DOS_DARWIN -ccopt -pipe -ccopt -g -ccopt -fPIC -ccopt -O2 -ccopt -fomit-frame-pointer -ccopt -fsigned-char -ccopt -Wall -ccopt -pedantic -ccopt -Wextra -ccopt -Wunused -ccopt -Wno-long-long -c lib/write_stubs.c
clang: warning: argument unused during compilation: '-fno-defer-pop'
clang: warning: argument unused during compilation: '-no-cpp-precomp'
lib/write_stubs.c:482:1: warning: array index of '1' indexes past the end of an array (that contains 1 elements) [-Warray-bounds]
MK_VEC_MAT_WRITERS(float32, float)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/write_stubs.c:473:42: note: instantiated from:
    unsigned long dim2 = (unsigned long) mat->dim[1]; \
                                         ^        ~
/opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
  ^
lib/write_stubs.c:483:1: warning: array index of '1' indexes past the end of an array (that contains 1 elements) [-Warray-bounds]
MK_VEC_MAT_WRITERS(float64, double)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
lib/write_stubs.c:473:42: note: instantiated from:
    unsigned long dim2 = (unsigned long) mat->dim[1]; \
                                         ^        ~
/opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
  ^
2 warnings generated.
- - - - - >8 - - - - -

2.) If I disable -Werror the linker finally gives up on me -- which I can't make a clue of. As a wild guess I would say that the llvm-people made their C-Compiler more strict and less gcc-compatible:

- - - - - 8< - - - - -
+ ocamlfind ocamlopt -g -I lib -linkpkg -package unix -package type-conv -package oUnit -package camlp4.quotations -package camlp4.lib -package bigarray syntax/pa_bin_prot.cmxa lib/bin_prot.cmxa lib/bin_prot.cmx lib_test/bin_prot_test.cmx lib_test/test.cmx lib_test/test_runner.cmx -o lib_test/test_runner.native
Undefined symbols for architecture x86_64:
  "_write_float_stub", referenced from:
      .L1602 in bin_prot_test.o
      .L151 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float_stub)
  "_get_buf_ptr_stub", referenced from:
      .L1606 in bin_prot_test.o
      .L1631 in bin_prot_test.o
      .L1660 in bin_prot_test.o
      .L1686 in bin_prot_test.o
      .L1710 in bin_prot_test.o
      .L1734 in bin_prot_test.o
      .L1774 in bin_prot_test.o
      ...
  "_read_float_stub", referenced from:
      .L1619 in bin_prot_test.o
      .L1627 in bin_prot_test.o
      .L154 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_float_stub)
  "_write_variant_tag_stub", referenced from:
      .L1842 in bin_prot_test.o
      .L1841 in bin_prot_test.o
      .L1840 in bin_prot_test.o
      .L125 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_variant_tag_stub)
  "_get_buf_pos_stub", referenced from:
      .L114 in bin_prot.o
      _camlBin_prot__Unsafe_common__1 in bin_prot.o
  "_read_bigstring_stub", referenced from:
      .L132 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_bigstring_stub)
  "_read_float32_mat_stub", referenced from:
      .L138 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_float32_mat_stub)
  "_read_float32_vec_stub", referenced from:
      .L144 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_float32_vec_stub)
  "_read_float64_mat_stub", referenced from:
      .L134 in bin_prot.o
      .L136 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_float64_mat_stub)
  "_read_float64_vec_stub", referenced from:
      .L140 in bin_prot.o
      .L142 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_float64_vec_stub)
  "_read_int64_bits_stub", referenced from:
      .L116 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_int64_bits_stub)
  "_read_int_64bit_stub", referenced from:
      .L118 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_int_64bit_stub)
  "_read_network16_int_stub", referenced from:
      .L114 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_network16_int_stub)
  "_read_network32_int32_stub", referenced from:
      .L110 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_network32_int32_stub)
  "_read_network32_int_stub", referenced from:
      .L112 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_network32_int_stub)
  "_read_network64_int64_stub", referenced from:
      .L106 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_network64_int64_stub)
  "_read_network64_int_stub", referenced from:
      .L108 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
     (maybe you meant: _ml_read_network64_int_stub)
  "_read_raw_string_stub", referenced from:
      .L227 in bin_prot.o
      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
  "_write_bigstring_stub", referenced from:
      .L129 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_bigstring_stub)
  "_write_float32_mat_stub", referenced from:
      .L135 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float32_mat_stub)
  "_write_float32_vec_stub", referenced from:
      .L141 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float32_vec_stub)
  "_write_float64_mat_stub", referenced from:
      .L131 in bin_prot.o
      .L133 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float64_mat_stub)
  "_write_float64_vec_stub", referenced from:
      .L137 in bin_prot.o
      .L139 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float64_vec_stub)
  "_write_float_array_stub", referenced from:
      .L127 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_float_array_stub)
  "_write_int64_bits_stub", referenced from:
      .L115 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_int64_bits_stub)
  "_write_network16_int_stub", referenced from:
      .L113 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_network16_int_stub)
  "_write_network32_int32_stub", referenced from:
      .L109 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_network32_int32_stub)
  "_write_network32_int_stub", referenced from:
      .L111 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_network32_int_stub)
  "_write_network64_int64_stub", referenced from:
      .L105 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_network64_int64_stub)
  "_write_network64_int_stub", referenced from:
      .L107 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
     (maybe you meant: _ml_write_network64_int_stub)
  "_write_raw_string_stub", referenced from:
      .L206 in bin_prot.o
      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
File "caml_startup", line 1, characters 0-1:
Error: Error during linking
Command exited with code 2.
- - - - - >8 - - - - -


Best Regards

-Markus

-- 
Markus Wei?mann, M.Sc.
Technische Universit?t M?nchen
Institut f?r Informatik
Boltzmannstr. 3
D-85748 Garching
Germany
Tel. +49 (89) 2 89-1 81 05
Fax +49 (89) 2 89-1 81 07
http://wwwknoll.in.tum.de/



From yminsky at janestreet.com  Sat Feb 25 19:09:54 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 25 Feb 2012 14:09:54 -0500
Subject: bin-prot compile error on OS X 10.7/clang-llvm 3.0/OCaml 3.12.1
In-Reply-To: <AC2BBE7F-9CEB-43AC-9CBC-94A000CE7466@cs.tum.edu>
References: <AC2BBE7F-9CEB-43AC-9CBC-94A000CE7466@cs.tum.edu>
Message-ID: <CACLX4jSNDjfTP8We-+4WBN8TVVF01DZLSm_zY_J3Ri7x7QnpoQ@mail.gmail.com>

On Fri, Feb 24, 2012 at 2:01 PM, "Markus W. Wei?mann" <
markus.weissmann at cs.tum.edu> wrote:

> Hello there,
>
> I'm not sure if this is the right place to report bugs but I couldn't find
> anything else on the JaneStreet homepage (btw. the link to this mailing
> list looks broken):
>

This is a fine place to report bugs.

Which link is broken?  The "code" link on our ocaml blog page leads you
here:

   https://bitbucket.org/yminsky/ocaml-core/wiki/Home

and the link from there to the mailing list seems to work.


> bin-prot fails to compile (since recently) on OS X 10.7.3 with the latest
> XCode/clang compiler, OCaml 3.12.1.
> This is a clean install of MacPorts and I am the maintainer of both OCaml
> and bin-prot there.
>
> 1.) An array-out-of-bounds warning is generated which makes the code fail
> due to -Werror bein enabled:
> It seems as if bin-prot tries to access the 2nd element of a 1-sized
> C-array defined in OCaml's bigarray.h
>


> - - - - - 8< - - - - -
> + ocamlfind ocamlc -ccopt -DOS_DARWIN -ccopt -pipe -ccopt -g -ccopt -fPIC
> -ccopt -O2 -ccopt -fomit-frame-pointer -ccopt -fsigned-char -ccopt -Wall
> -ccopt -pedantic -ccopt -Wextra -ccopt -Wunused -ccopt -Wno-long-long -c
> lib/write_stubs.c
> clang: warning: argument unused during compilation: '-fno-defer-pop'
> clang: warning: argument unused during compilation: '-no-cpp-precomp'
> lib/write_stubs.c:482:1: warning: array index of '1' indexes past the end
> of an array (that contains 1 elements) [-Warray-bounds]
> MK_VEC_MAT_WRITERS(float32, float)
> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> lib/write_stubs.c:473:42: note: instantiated from:
>    unsigned long dim2 = (unsigned long) mat->dim[1]; \
>                                         ^        ~
> /opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
>  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
>  ^
> lib/write_stubs.c:483:1: warning: array index of '1' indexes past the end
> of an array (that contains 1 elements) [-Warray-bounds]
> MK_VEC_MAT_WRITERS(float64, double)
> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> lib/write_stubs.c:473:42: note: instantiated from:
>    unsigned long dim2 = (unsigned long) mat->dim[1]; \
>                                         ^        ~
> /opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
>  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
>  ^
> 2 warnings generated.
> - - - - - >8 - - - - -
>
> 2.) If I disable -Werror the linker finally gives up on me -- which I
> can't make a clue of. As a wild guess I would say that the llvm-people made
> their C-Compiler more strict and less gcc-compatible:
>
> - - - - - 8< - - - - -
> + ocamlfind ocamlopt -g -I lib -linkpkg -package unix -package type-conv
> -package oUnit -package camlp4.quotations -package camlp4.lib -package
> bigarray syntax/pa_bin_prot.cmxa lib/bin_prot.cmxa lib/bin_prot.cmx
> lib_test/bin_prot_test.cmx lib_test/test.cmx lib_test/test_runner.cmx -o
> lib_test/test_runner.native
> Undefined symbols for architecture x86_64:
>  "_write_float_stub", referenced from:
>      .L1602 in bin_prot_test.o
>      .L151 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float_stub)
>  "_get_buf_ptr_stub", referenced from:
>      .L1606 in bin_prot_test.o
>      .L1631 in bin_prot_test.o
>      .L1660 in bin_prot_test.o
>      .L1686 in bin_prot_test.o
>      .L1710 in bin_prot_test.o
>      .L1734 in bin_prot_test.o
>      .L1774 in bin_prot_test.o
>      ...
>  "_read_float_stub", referenced from:
>      .L1619 in bin_prot_test.o
>      .L1627 in bin_prot_test.o
>      .L154 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float_stub)
>  "_write_variant_tag_stub", referenced from:
>      .L1842 in bin_prot_test.o
>      .L1841 in bin_prot_test.o
>      .L1840 in bin_prot_test.o
>      .L125 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_variant_tag_stub)
>  "_get_buf_pos_stub", referenced from:
>      .L114 in bin_prot.o
>      _camlBin_prot__Unsafe_common__1 in bin_prot.o
>  "_read_bigstring_stub", referenced from:
>      .L132 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_bigstring_stub)
>  "_read_float32_mat_stub", referenced from:
>      .L138 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float32_mat_stub)
>  "_read_float32_vec_stub", referenced from:
>      .L144 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float32_vec_stub)
>  "_read_float64_mat_stub", referenced from:
>      .L134 in bin_prot.o
>      .L136 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float64_mat_stub)
>  "_read_float64_vec_stub", referenced from:
>      .L140 in bin_prot.o
>      .L142 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float64_vec_stub)
>  "_read_int64_bits_stub", referenced from:
>      .L116 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_int64_bits_stub)
>  "_read_int_64bit_stub", referenced from:
>      .L118 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_int_64bit_stub)
>  "_read_network16_int_stub", referenced from:
>      .L114 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network16_int_stub)
>  "_read_network32_int32_stub", referenced from:
>      .L110 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network32_int32_stub)
>  "_read_network32_int_stub", referenced from:
>      .L112 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network32_int_stub)
>  "_read_network64_int64_stub", referenced from:
>      .L106 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network64_int64_stub)
>  "_read_network64_int_stub", referenced from:
>      .L108 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network64_int_stub)
>  "_read_raw_string_stub", referenced from:
>      .L227 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>  "_write_bigstring_stub", referenced from:
>      .L129 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_bigstring_stub)
>  "_write_float32_mat_stub", referenced from:
>      .L135 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float32_mat_stub)
>  "_write_float32_vec_stub", referenced from:
>      .L141 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float32_vec_stub)
>  "_write_float64_mat_stub", referenced from:
>      .L131 in bin_prot.o
>      .L133 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float64_mat_stub)
>  "_write_float64_vec_stub", referenced from:
>      .L137 in bin_prot.o
>      .L139 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float64_vec_stub)
>  "_write_float_array_stub", referenced from:
>      .L127 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float_array_stub)
>  "_write_int64_bits_stub", referenced from:
>      .L115 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_int64_bits_stub)
>  "_write_network16_int_stub", referenced from:
>      .L113 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network16_int_stub)
>  "_write_network32_int32_stub", referenced from:
>      .L109 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network32_int32_stub)
>  "_write_network32_int_stub", referenced from:
>      .L111 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network32_int_stub)
>  "_write_network64_int64_stub", referenced from:
>      .L105 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network64_int64_stub)
>  "_write_network64_int_stub", referenced from:
>      .L107 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network64_int_stub)
>  "_write_raw_string_stub", referenced from:
>      .L206 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
> ld: symbol(s) not found for architecture x86_64
> clang: error: linker command failed with exit code 1 (use -v to see
> invocation)
> File "caml_startup", line 1, characters 0-1:
> Error: Error during linking
> Command exited with code 2.
> - - - - - >8 - - - - -
>
>
> Best Regards
>
> -Markus
>
> --
> Markus Wei?mann, M.Sc.
> Technische Universit?t M?nchen
> Institut f?r Informatik
> Boltzmannstr. 3
> D-85748 Garching
> Germany
> Tel. +49 (89) 2 89-1 81 05
> Fax +49 (89) 2 89-1 81 07
> http://wwwknoll.in.tum.de/
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120225/8145e871/attachment-0001.html>

From yminsky at janestreet.com  Sat Feb 25 19:17:02 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 25 Feb 2012 14:17:02 -0500
Subject: Bug tracker and other news
Message-ID: <CACLX4jR+yXR1AwQNim=ofch-YvnK6-KfWb6KLZR6sb1FuViWxQ@mail.gmail.com>

Speaking of bugs, let's start using the bug-tracker for bug-reports.  When
you have a bug you want to report about Core, please post it here:

   https://bitbucket.org/yminsky/ocaml-core/issues

In other news, we're very close to a couple bits of progress:

   - We've pretty much finished up our internal code review process for
   Core, which means that we should be able to cut tarballs for a real release
   - We're close to have a CLA (Contributor License Agreement), so we can
   start accepting external contributions (at least, from those who sign the
   CLA)

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120225/cf950340/attachment-0001.html>

From anil at recoil.org  Sat Feb 25 19:17:36 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 25 Feb 2012 19:17:36 +0000
Subject: bin-prot compile error on OS X 10.7/clang-llvm 3.0/OCaml 3.12.1
In-Reply-To: <AC2BBE7F-9CEB-43AC-9CBC-94A000CE7466@cs.tum.edu>
References: <AC2BBE7F-9CEB-43AC-9CBC-94A000CE7466@cs.tum.edu>
Message-ID: <4F0306E9-C2F5-4781-BAD5-8DF21F1ECED7@recoil.org>


I just ran into this too while updating, and noticed that Markus has reported it upstream already.
http://caml.inria.fr/mantis/view.php?id=5516

-anil

On 24 Feb 2012, at 19:01, Markus W. Wei?mann wrote:

> Hello there,
> 
> I'm not sure if this is the right place to report bugs but I couldn't find anything else on the JaneStreet homepage (btw. the link to this mailing list looks broken):
> bin-prot fails to compile (since recently) on OS X 10.7.3 with the latest XCode/clang compiler, OCaml 3.12.1.
> This is a clean install of MacPorts and I am the maintainer of both OCaml and bin-prot there.
> 
> 1.) An array-out-of-bounds warning is generated which makes the code fail due to -Werror bein enabled:
> It seems as if bin-prot tries to access the 2nd element of a 1-sized C-array defined in OCaml's bigarray.h
> 
> - - - - - 8< - - - - -
> + ocamlfind ocamlc -ccopt -DOS_DARWIN -ccopt -pipe -ccopt -g -ccopt -fPIC -ccopt -O2 -ccopt -fomit-frame-pointer -ccopt -fsigned-char -ccopt -Wall -ccopt -pedantic -ccopt -Wextra -ccopt -Wunused -ccopt -Wno-long-long -c lib/write_stubs.c
> clang: warning: argument unused during compilation: '-fno-defer-pop'
> clang: warning: argument unused during compilation: '-no-cpp-precomp'
> lib/write_stubs.c:482:1: warning: array index of '1' indexes past the end of an array (that contains 1 elements) [-Warray-bounds]
> MK_VEC_MAT_WRITERS(float32, float)
> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> lib/write_stubs.c:473:42: note: instantiated from:
>    unsigned long dim2 = (unsigned long) mat->dim[1]; \
>                                         ^        ~
> /opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
>  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
>  ^
> lib/write_stubs.c:483:1: warning: array index of '1' indexes past the end of an array (that contains 1 elements) [-Warray-bounds]
> MK_VEC_MAT_WRITERS(float64, double)
> ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> lib/write_stubs.c:473:42: note: instantiated from:
>    unsigned long dim2 = (unsigned long) mat->dim[1]; \
>                                         ^        ~
> /opt/local/lib/ocaml/caml/bigarray.h:76:3: note: array 'dim' declared here
>  intnat dim[1] /*[num_dims]*/; /* Size in each dimension */
>  ^
> 2 warnings generated.
> - - - - - >8 - - - - -
> 
> 2.) If I disable -Werror the linker finally gives up on me -- which I can't make a clue of. As a wild guess I would say that the llvm-people made their C-Compiler more strict and less gcc-compatible:
> 
> - - - - - 8< - - - - -
> + ocamlfind ocamlopt -g -I lib -linkpkg -package unix -package type-conv -package oUnit -package camlp4.quotations -package camlp4.lib -package bigarray syntax/pa_bin_prot.cmxa lib/bin_prot.cmxa lib/bin_prot.cmx lib_test/bin_prot_test.cmx lib_test/test.cmx lib_test/test_runner.cmx -o lib_test/test_runner.native
> Undefined symbols for architecture x86_64:
>  "_write_float_stub", referenced from:
>      .L1602 in bin_prot_test.o
>      .L151 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float_stub)
>  "_get_buf_ptr_stub", referenced from:
>      .L1606 in bin_prot_test.o
>      .L1631 in bin_prot_test.o
>      .L1660 in bin_prot_test.o
>      .L1686 in bin_prot_test.o
>      .L1710 in bin_prot_test.o
>      .L1734 in bin_prot_test.o
>      .L1774 in bin_prot_test.o
>      ...
>  "_read_float_stub", referenced from:
>      .L1619 in bin_prot_test.o
>      .L1627 in bin_prot_test.o
>      .L154 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float_stub)
>  "_write_variant_tag_stub", referenced from:
>      .L1842 in bin_prot_test.o
>      .L1841 in bin_prot_test.o
>      .L1840 in bin_prot_test.o
>      .L125 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_variant_tag_stub)
>  "_get_buf_pos_stub", referenced from:
>      .L114 in bin_prot.o
>      _camlBin_prot__Unsafe_common__1 in bin_prot.o
>  "_read_bigstring_stub", referenced from:
>      .L132 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_bigstring_stub)
>  "_read_float32_mat_stub", referenced from:
>      .L138 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float32_mat_stub)
>  "_read_float32_vec_stub", referenced from:
>      .L144 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float32_vec_stub)
>  "_read_float64_mat_stub", referenced from:
>      .L134 in bin_prot.o
>      .L136 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float64_mat_stub)
>  "_read_float64_vec_stub", referenced from:
>      .L140 in bin_prot.o
>      .L142 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_float64_vec_stub)
>  "_read_int64_bits_stub", referenced from:
>      .L116 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_int64_bits_stub)
>  "_read_int_64bit_stub", referenced from:
>      .L118 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_int_64bit_stub)
>  "_read_network16_int_stub", referenced from:
>      .L114 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network16_int_stub)
>  "_read_network32_int32_stub", referenced from:
>      .L110 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network32_int32_stub)
>  "_read_network32_int_stub", referenced from:
>      .L112 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network32_int_stub)
>  "_read_network64_int64_stub", referenced from:
>      .L106 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network64_int64_stub)
>  "_read_network64_int_stub", referenced from:
>      .L108 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>     (maybe you meant: _ml_read_network64_int_stub)
>  "_read_raw_string_stub", referenced from:
>      .L227 in bin_prot.o
>      _camlBin_prot__Unsafe_read_c__48 in bin_prot.o
>  "_write_bigstring_stub", referenced from:
>      .L129 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_bigstring_stub)
>  "_write_float32_mat_stub", referenced from:
>      .L135 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float32_mat_stub)
>  "_write_float32_vec_stub", referenced from:
>      .L141 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float32_vec_stub)
>  "_write_float64_mat_stub", referenced from:
>      .L131 in bin_prot.o
>      .L133 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float64_mat_stub)
>  "_write_float64_vec_stub", referenced from:
>      .L137 in bin_prot.o
>      .L139 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float64_vec_stub)
>  "_write_float_array_stub", referenced from:
>      .L127 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_float_array_stub)
>  "_write_int64_bits_stub", referenced from:
>      .L115 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_int64_bits_stub)
>  "_write_network16_int_stub", referenced from:
>      .L113 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network16_int_stub)
>  "_write_network32_int32_stub", referenced from:
>      .L109 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network32_int32_stub)
>  "_write_network32_int_stub", referenced from:
>      .L111 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network32_int_stub)
>  "_write_network64_int64_stub", referenced from:
>      .L105 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network64_int64_stub)
>  "_write_network64_int_stub", referenced from:
>      .L107 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
>     (maybe you meant: _ml_write_network64_int_stub)
>  "_write_raw_string_stub", referenced from:
>      .L206 in bin_prot.o
>      _camlBin_prot__Unsafe_write_c__44 in bin_prot.o
> ld: symbol(s) not found for architecture x86_64
> clang: error: linker command failed with exit code 1 (use -v to see invocation)
> File "caml_startup", line 1, characters 0-1:
> Error: Error during linking
> Command exited with code 2.
> - - - - - >8 - - - - -
> 
> 
> Best Regards
> 
> -Markus
> 
> -- 
> Markus Wei?mann, M.Sc.
> Technische Universit?t M?nchen
> Institut f?r Informatik
> Boltzmannstr. 3
> D-85748 Garching
> Germany
> Tel. +49 (89) 2 89-1 81 05
> Fax +49 (89) 2 89-1 81 07
> http://wwwknoll.in.tum.de/
> 



From anil at recoil.org  Wed Feb 29 11:43:40 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Wed, 29 Feb 2012 11:43:40 +0000
Subject: pa_ounit outside of Core
Message-ID: <20120229114339.GB17748@dark.recoil.org>


I ran across Till's very-useful pa_ounit, and would really like to use
this in our libraries to make adding oUnit tests easier.  There seem to be
two different versions; the Github one at:
https://github.com/till-varoquaux/pa_ounit
...and the version in the Core distribution.

I've integrated the Core one pretty easily into some of our local
libraries, and tests are generated as expected. However, the OMake rules
for extracting and collecting the tests into an executable don't seem to
be present in the distribution.

What I'd like to do is to only generate the tests during a testing build,
and for production use have them disappear from the installed binary or
library. However, there doesn't appear to be a switch in pa_ounit.ml to
ignore the extra keywords. Do existing pa_ounit consumers just compile the
tests in with the final library at the moment?

(More generally, the topic of multiple camlp4 options is quite tricky, as
the same situation exists with pa_lwt generating debug code for mapping
Lwt threads to backtraces, and it's hard to keep track of what modules
were built with some set of p4 options).

-anil


