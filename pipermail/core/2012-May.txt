From markus.mottl at gmail.com  Fri May  4 18:42:04 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 4 May 2012 13:42:04 -0400
Subject: Release schedule?
Message-ID: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>


Hi,

it's been a while since the development tree has been released, and I
just wondered whether an official release is imminent.  If it's still
in the more distant future, I was thinking of maybe releasing my
modified fork of ocaml-core in Godi, e.g. as "janestreet-core-mm" to
make the distinction obvious.  I'd then also remove any conflicting or
broken packages from Godi and update dependencies.

I'd rather avoid churn, which would also affect users, which is why
I'd prefer your official release.  Please let me know if a release can
be expected soon or whether there are any other reasons (e.g.
significant incompatibilities with your intended release) why such a
package should not yet be added to Godi.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yury.sulsky at gmail.com  Fri May  4 19:01:22 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Fri, 4 May 2012 14:01:22 -0400
Subject: Release schedule?
In-Reply-To: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
References: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
Message-ID: <CAEDxudyqUOAAfgVgtWDJ7q=X-GGZNvWNTq1K88sapjpt=9WdVw@mail.gmail.com>


Hi Markus,

We're planning on making a release of the current state of the tree
soon, including your changes. But we don't have any support for
creating godi packages right now in the tree. Do you already have the
build scripts to generate packages? It'd be great to include those in
this release.

On Fri, May 4, 2012 at 1:42 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> Hi,
>
> it's been a while since the development tree has been released, and I
> just wondered whether an official release is imminent. ?If it's still
> in the more distant future, I was thinking of maybe releasing my
> modified fork of ocaml-core in Godi, e.g. as "janestreet-core-mm" to
> make the distinction obvious. ?I'd then also remove any conflicting or
> broken packages from Godi and update dependencies.
>
> I'd rather avoid churn, which would also affect users, which is why
> I'd prefer your official release. ?Please let me know if a release can
> be expected soon or whether there are any other reasons (e.g.
> significant incompatibilities with your intended release) why such a
> package should not yet be added to Godi.
>
> Regards,
> Markus
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri May  4 19:15:35 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 4 May 2012 14:15:35 -0400
Subject: Release schedule?
In-Reply-To: <CAEDxudyqUOAAfgVgtWDJ7q=X-GGZNvWNTq1K88sapjpt=9WdVw@mail.gmail.com>
References: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
	<CAEDxudyqUOAAfgVgtWDJ7q=X-GGZNvWNTq1K88sapjpt=9WdVw@mail.gmail.com>
Message-ID: <CAP_800qkS0EVhAMzV1WojGPhDQjZAXU3n5zEtzeb22BdPZ4OGw@mail.gmail.com>


Hi Yury,

On Fri, May 4, 2012 at 2:01 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> We're planning on making a release of the current state of the tree
> soon, including your changes. But we don't have any support for
> creating godi packages right now in the tree. Do you already have the
> build scripts to generate packages? It'd be great to include those in
> this release.

I unfortunately don't have such scripts.  We would likely have to
pre-generate the build files with Oasis due to some otherwise cyclic
dependencies (type_conv, etc.).  Creating the Godi packages may not be
too difficult manually, I guess.

Since you are apparently really close to a release, I'll hold off on
any Godi stuff then.  Maybe Sylvain can help with generating Godi
package files from Oasis specifications?

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri May  4 19:18:44 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 4 May 2012 14:18:44 -0400
Subject: Release schedule?
In-Reply-To: <CAOCAUGPgOo6r9zrE7MR-zFM0OtCMpVdxPEzXZL5fq68ca32yaw@mail.gmail.com>
References: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
	<CAOCAUGPgOo6r9zrE7MR-zFM0OtCMpVdxPEzXZL5fq68ca32yaw@mail.gmail.com>
Message-ID: <CAP_800r3q4fARshpE9-X-WnnicOQ_aeZULZmhWYmhaj8qkf9WA@mail.gmail.com>


On Fri, May 4, 2012 at 2:02 PM, Sylvain Le Gall <gildor478 at gmail.com> wrote:
> Just FYI, oasis 0.3 release could happen when you want. The latest release
> match my expectation. I am working on packaging stuff to have a coordinated
> release, but if you need a release, ping me. It is still untested on
> windows, but you are not concerned.

I guess you might want to coordinate this with Jane Street.  Having
the most stable Oasis-generated build files in their release is
probably a good idea.

Cheers,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From gildor478 at gmail.com  Fri May  4 19:02:44 2012
From: gildor478 at gmail.com (Sylvain Le Gall)
Date: Fri, 4 May 2012 20:02:44 +0200
Subject: Release schedule?
In-Reply-To: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
References: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
Message-ID: <CAOCAUGPgOo6r9zrE7MR-zFM0OtCMpVdxPEzXZL5fq68ca32yaw@mail.gmail.com>

Hello,

Just FYI, oasis 0.3 release could happen when you want. The latest release
match my expectation. I am working on packaging stuff to have a coordinated
release, but if you need a release, ping me. It is still untested on
windows, but you are not concerned.

Cheers
Sylvain
Le 4 mai 2012 19:42, "Markus Mottl" <markus.mottl at gmail.com> a ?crit :

> Hi,
>
> it's been a while since the development tree has been released, and I
> just wondered whether an official release is imminent.  If it's still
> in the more distant future, I was thinking of maybe releasing my
> modified fork of ocaml-core in Godi, e.g. as "janestreet-core-mm" to
> make the distinction obvious.  I'd then also remove any conflicting or
> broken packages from Godi and update dependencies.
>
> I'd rather avoid churn, which would also affect users, which is why
> I'd prefer your official release.  Please let me know if a release can
> be expected soon or whether there are any other reasons (e.g.
> significant incompatibilities with your intended release) why such a
> package should not yet be added to Godi.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120504/9307f909/attachment.html>

From markus.mottl at gmail.com  Sun May 13 19:52:01 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 13 May 2012 14:52:01 -0400
Subject: Merging repositories safe?
Message-ID: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>


Hi,

I just wondered whether it is deemed safe to merge the new patches in
your repository.  Last time there were still outstanding issues with
accepting contributions from repositories that were merged with yours.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yury.sulsky at gmail.com  Sun May 13 20:57:18 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Sun, 13 May 2012 15:57:18 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
Message-ID: <CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>

Hi Markus,

The issue is that, since the repo is a subset of our internal tree, some
information is lost when merges of internal revisions are done in the
bitbucket repo. It's safest to not pull in merge nodes at all, but to be
precise, as long as the incoming merge nodes are descending from a single
revision that has already been pulled in, it's okay.

In this case, if all of the incoming revisions are descending from Ron's
(or my) changers, merge nodes are safe to pull.
On May 13, 2012 2:52 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:

> Hi,
>
> I just wondered whether it is deemed safe to merge the new patches in
> your repository.  Last time there were still outstanding issues with
> accepting contributions from repositories that were merged with yours.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120513/b2fcccf0/attachment.html>

From markus.mottl at gmail.com  Sun May 13 23:32:07 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 13 May 2012 18:32:07 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
Message-ID: <CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>


Hi Yury,

Let me rephrase that to make sure I understand: if I clone your tree,
make and commit some changes to my tree, and pull again from you, I
should never merge if the incoming changesets contain one of your
internal merges?  But it would always be ok for me to merge changesets
that aren't internal merges?

Given that one can easily miss such an internal merge, am I right then
to assume that the safest way of contributing would be to delay
committing my own changes to my tree?  I.e. I should rather maintain
some sort of patch queue and "rebase" to be on the safe side and
coordinate with you when it's time to actually commit my patches so
that you can pull them right away before potentially breaking stuff
with an intermittent internal merge?  I'm not quite sure I fully
understand all the limitations of your current environment.  I'm just
trying to find the safest, most straightforward development workflow,
and my impression so far is that contributing is a little tricky.

Please let me know if you have found an easier workflow that is always
safe to apply without having to e.g. eyeball incoming changesets.
Btw., is my fork still in good order for you?  Just making sure you
can actually merge it...

Regards,
Markus

On Sun, May 13, 2012 at 3:57 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> Hi Markus,
>
> The issue is that, since the repo is a subset of our internal tree, some
> information is lost when merges of internal revisions are done in the
> bitbucket repo. It's safest to not pull in merge nodes at all, but to be
> precise, as long as the incoming merge nodes are descending from a single
> revision that has already been pulled in, it's okay.
>
> In this case, if all of the incoming revisions are descending from Ron's (or
> my) changers, merge nodes are safe to pull.
>
> On May 13, 2012 2:52 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:
>>
>> Hi,
>>
>> I just wondered whether it is deemed safe to merge the new patches in
>> your repository. ?Last time there were still outstanding issues with
>> accepting contributions from repositories that were merged with yours.
>>
>> Regards,
>> Markus
>>
>> --
>> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yury.sulsky at gmail.com  Mon May 14 00:46:30 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Sun, 13 May 2012 19:46:30 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
Message-ID: <CAEDxudzoLs7ypyd-w6bvq16+NCZ=keNE4-dex-vUeYKg5HhoUg@mail.gmail.com>


Hi Markus,

On Sun, May 13, 2012 at 6:32 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> Let me rephrase that to make sure I understand: if I clone your tree,
> make and commit some changes to my tree, and pull again from you, I
> should never merge if the incoming changesets contain one of your
> internal merges? ?But it would always be ok for me to merge changesets
> that aren't internal merges?

That's almost right, but the problem isn't restricted to internal
merge nodes. For any two incoming changesets, if they are descending
from different internal revisions, they can only be merged safely in
the internal tree.

> Given that one can easily miss such an internal merge, am I right then
> to assume that the safest way of contributing would be to delay
> committing my own changes to my tree? ?I.e. I should rather maintain
> some sort of patch queue and "rebase" to be on the safe side and
> coordinate with you when it's time to actually commit my patches so
> that you can pull them right away before potentially breaking stuff
> with an intermittent internal merge? ?I'm not quite sure I fully
> understand all the limitations of your current environment. ?I'm just
> trying to find the safest, most straightforward development workflow,
> and my impression so far is that contributing is a little tricky.

Pulling in merge nodes is always tricky because it requires knowing
which changesets we have already converted to our internal tree. So I
would say that the best approach is to simply avoid pulling from our
tree until we've merged in your changesets. Then merge nodes are fine,
because they will all be descending from a single internal revision.

> Please let me know if you have found an easier workflow that is always
> safe to apply without having to e.g. eyeball incoming changesets.
> Btw., is my fork still in good order for you? ?Just making sure you
> can actually merge it...

I'm merging in your pull request (56aabace38ce) right now. Outside of
that, your tree has one merge node (90256188e5fd), but that one should
be fine to pull in.


From yminsky at janestreet.com  Mon May 14 03:57:09 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 13 May 2012 22:57:09 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
Message-ID: <CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>


For what it's worth, this is for sure an annoying restriction, but it
is pretty hard to work around.

If your changesets are rebased on the tip of our branch, it's always safe.

More generally, if your changesets are descended from a single
revision in our branch, it's safe.

We're going to try to make the turn-around for submissions faster,
which should reduce the pain associated with all of this.  We just
pulled in all of your latest pull request, and if you have more you'd
like to submit, you can add it in and we should be able to get it in
pretty quickly.

We're also on the verge of releasing a tarball that should be MUCH
easier to install.  In particular, you will no longer need to install
Oasis: you can just download a single tarball and install.  We'll also
put out individual tarballs for all the sub-libraries, for those who
wish to pick and choose.

(It's actually on the bitbucket download site now, but I want to put
in a useful README before encouraging people to try it out.  That
should happen tomorrow.)

y

On Sun, May 13, 2012 at 6:32 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> Hi Yury,
>
> Let me rephrase that to make sure I understand: if I clone your tree,
> make and commit some changes to my tree, and pull again from you, I
> should never merge if the incoming changesets contain one of your
> internal merges? ?But it would always be ok for me to merge changesets
> that aren't internal merges?
>
> Given that one can easily miss such an internal merge, am I right then
> to assume that the safest way of contributing would be to delay
> committing my own changes to my tree? ?I.e. I should rather maintain
> some sort of patch queue and "rebase" to be on the safe side and
> coordinate with you when it's time to actually commit my patches so
> that you can pull them right away before potentially breaking stuff
> with an intermittent internal merge? ?I'm not quite sure I fully
> understand all the limitations of your current environment. ?I'm just
> trying to find the safest, most straightforward development workflow,
> and my impression so far is that contributing is a little tricky.
>
> Please let me know if you have found an easier workflow that is always
> safe to apply without having to e.g. eyeball incoming changesets.
> Btw., is my fork still in good order for you? ?Just making sure you
> can actually merge it...
>
> Regards,
> Markus
>
> On Sun, May 13, 2012 at 3:57 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>> Hi Markus,
>>
>> The issue is that, since the repo is a subset of our internal tree, some
>> information is lost when merges of internal revisions are done in the
>> bitbucket repo. It's safest to not pull in merge nodes at all, but to be
>> precise, as long as the incoming merge nodes are descending from a single
>> revision that has already been pulled in, it's okay.
>>
>> In this case, if all of the incoming revisions are descending from Ron's (or
>> my) changers, merge nodes are safe to pull.
>>
>> On May 13, 2012 2:52 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:
>>>
>>> Hi,
>>>
>>> I just wondered whether it is deemed safe to merge the new patches in
>>> your repository. ?Last time there were still outstanding issues with
>>> accepting contributions from repositories that were merged with yours.
>>>
>>> Regards,
>>> Markus
>>>
>>> --
>>> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com
>
>
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Mon May 14 04:33:26 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 13 May 2012 23:33:26 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAEDxudzoLs7ypyd-w6bvq16+NCZ=keNE4-dex-vUeYKg5HhoUg@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
	<CAEDxudzoLs7ypyd-w6bvq16+NCZ=keNE4-dex-vUeYKg5HhoUg@mail.gmail.com>
Message-ID: <CAP_800pP88oZT7DgsfCYxqpK76OMBTwybdksayguVg8UZbzt5Q@mail.gmail.com>


Hi Yury,

On Sun, May 13, 2012 at 7:46 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> Pulling in merge nodes is always tricky because it requires knowing
> which changesets we have already converted to our internal tree. So I
> would say that the best approach is to simply avoid pulling from our
> tree until we've merged in your changesets. Then merge nodes are fine,
> because they will all be descending from a single internal revision.

I guess it's probably best if I just keep following this advice...

> I'm merging in your pull request (56aabace38ce) right now. Outside of
> that, your tree has one merge node (90256188e5fd), but that one should
> be fine to pull in.

Great, I'll create another pull request for the outstanding patches
then.  There are apparently only four merge conflicts: a trivial one
in .hgignore, the remaining three in oasis.sh files.  I had made some
compilation warnings stricter, which may be recommended for improving
code quality in contributions.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Mon May 14 04:46:28 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 13 May 2012 23:46:28 -0400
Subject: Merging repositories safe?
In-Reply-To: <CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
	<CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>
Message-ID: <CAP_800r9ORsc=SAVja0eAbuTwzSKw=chx6PYkfQmzdsX+Bs2hA@mail.gmail.com>


On Sun, May 13, 2012 at 10:57 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> For what it's worth, this is for sure an annoying restriction, but it
> is pretty hard to work around.
>
> If your changesets are rebased on the tip of our branch, it's always safe.
>
> More generally, if your changesets are descended from a single
> revision in our branch, it's safe.

I guess contributors could use some tricks to make life easier, but in
the end I prefer a predictable workflow that avoids pitfalls.

I assume you have considered some sort of "forest" approach with
sub-repositories for open source code in your tree?  I have never
tried those myself, but it presumably didn't work for you.  At least
conceptually it would seem like a good solution.

> We're going to try to make the turn-around for submissions faster,
> which should reduce the pain associated with all of this. ?We just
> pulled in all of your latest pull request, and if you have more you'd
> like to submit, you can add it in and we should be able to get it in
> pretty quickly.

I'll do so right away.  It's mostly the new sexplib features (record
field defaults, new comment syntax, etc.).

> We're also on the verge of releasing a tarball that should be MUCH
> easier to install. ?In particular, you will no longer need to install
> Oasis: you can just download a single tarball and install. ?We'll also
> put out individual tarballs for all the sub-libraries, for those who
> wish to pick and choose.

Sounds good, this will surely lower the barrier for people unfamiliar
with Oasis.

> (It's actually on the bitbucket download site now, but I want to put
> in a useful README before encouraging people to try it out. ?That
> should happen tomorrow.)

Great, I'm looking forward to that.

Btw., I'm about to rewrite the READMEs of all my libraries in the
Bitbucket compatible markdown format (Python markdown with some
extensions).  It's unfortunately not compatible with pandoc, but seems
pretty nice anyway.  Are you considering switching to this format,
too, for your open source libraries?  I especially like that it
supports syntax highlighting for OCaml code in markdown files.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Mon May 14 14:47:53 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 14 May 2012 09:47:53 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAP_800r9ORsc=SAVja0eAbuTwzSKw=chx6PYkfQmzdsX+Bs2hA@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
	<CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>
	<CAP_800r9ORsc=SAVja0eAbuTwzSKw=chx6PYkfQmzdsX+Bs2hA@mail.gmail.com>
Message-ID: <CACLX4jTB6BMPgR545cs+Mbv=DFJReQ9wz9e1brg6QoSf5Wtg3Q@mail.gmail.com>


On Sun, May 13, 2012 at 11:46 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Sun, May 13, 2012 at 10:57 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> For what it's worth, this is for sure an annoying restriction, but it
>> is pretty hard to work around.
>>
>> If your changesets are rebased on the tip of our branch, it's always safe.
>>
>> More generally, if your changesets are descended from a single
>> revision in our branch, it's safe.
>
> I guess contributors could use some tricks to make life easier, but in
> the end I prefer a predictable workflow that avoids pitfalls.
>
> I assume you have considered some sort of "forest" approach with
> sub-repositories for open source code in your tree? ?I have never
> tried those myself, but it presumably didn't work for you. ?At least
> conceptually it would seem like a good solution.

Yeah, we considered it, but it was just too painful for internal
reasons.

>> We're going to try to make the turn-around for submissions faster,
>> which should reduce the pain associated with all of this. ?We just
>> pulled in all of your latest pull request, and if you have more you'd
>> like to submit, you can add it in and we should be able to get it in
>> pretty quickly.
>
> I'll do so right away. ?It's mostly the new sexplib features (record
> field defaults, new comment syntax, etc.).

Where did we end up on the record field defaults?  Had we settled on a
feature-set there?  I guess I'll just look at the docs in the README
to refresh myself.

>> We're also on the verge of releasing a tarball that should be MUCH
>> easier to install. ?In particular, you will no longer need to install
>> Oasis: you can just download a single tarball and install. ?We'll also
>> put out individual tarballs for all the sub-libraries, for those who
>> wish to pick and choose.
>
> Sounds good, this will surely lower the barrier for people unfamiliar
> with Oasis.

Indeed.

>> (It's actually on the bitbucket download site now, but I want to put
>> in a useful README before encouraging people to try it out. ?That
>> should happen tomorrow.)
>
> Great, I'm looking forward to that.
>
> Btw., I'm about to rewrite the READMEs of all my libraries in the
> Bitbucket compatible markdown format (Python markdown with some
> extensions). ?It's unfortunately not compatible with pandoc, but seems
> pretty nice anyway. ?Are you considering switching to this format,
> too, for your open source libraries? ?I especially like that it
> supports syntax highlighting for OCaml code in markdown files.

I'd much prefer to stick to something compatible with pandoc.  We use
it for all of our internal document generation.  Is there any reason
to prefer this python library?


From markus.mottl at gmail.com  Mon May 14 15:43:17 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Mon, 14 May 2012 10:43:17 -0400
Subject: Merging repositories safe?
In-Reply-To: <CACLX4jTB6BMPgR545cs+Mbv=DFJReQ9wz9e1brg6QoSf5Wtg3Q@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
	<CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>
	<CAP_800r9ORsc=SAVja0eAbuTwzSKw=chx6PYkfQmzdsX+Bs2hA@mail.gmail.com>
	<CACLX4jTB6BMPgR545cs+Mbv=DFJReQ9wz9e1brg6QoSf5Wtg3Q@mail.gmail.com>
Message-ID: <CAP_800rB_n9f42nJ-3HQL8hB6QePBG5g14Xd3LqP1YmwcTLd2Q@mail.gmail.com>


On Mon, May 14, 2012 at 9:47 AM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Where did we end up on the record field defaults? ?Had we settled on a
> feature-set there? ?I guess I'll just look at the docs in the README
> to refresh myself.

I have just added a final patch to improve function names in the
type_conv API and documentation and updated my pull request.

The README file in sexplib describes the new features.  Note that the
"default" extension is really part of type_conv and can be queried
from many different code generators.  Sexplib uses it for parsing
records that omit fields.  Maybe one of you wants to write another
simple extension that generates functions with default arguments to
create fresh records.  This would seem quite convenient.

> I'd much prefer to stick to something compatible with pandoc. ?We use
> it for all of our internal document generation. ?Is there any reason
> to prefer this python library?

I have researched this a bit and have come to the conclusion that I'll
probably have to use different markdown tools depending on context.
Bitbucket uses the "Python markdown" library for rendering READMEs,
which is sadly not quite compatible with pandoc.  They also support
some other formats, but I prefer markdown.  I think it's a low price
to pay to make an exception for READMEs.  Being able to have
well-formatted documentation with properly syntax-highlighted OCaml
code examples on the project home page seems like an awesome feature
to attract new users to a library.

Btw., here is the link to the Bitbucket documentation on rendering READMEs:

  http://confluence.atlassian.com/display/BITBUCKET/Displaying+README+Text+on+the+Overview

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Mon May 14 18:21:18 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 14 May 2012 13:21:18 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAP_800rB_n9f42nJ-3HQL8hB6QePBG5g14Xd3LqP1YmwcTLd2Q@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
	<CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>
	<CAP_800r9ORsc=SAVja0eAbuTwzSKw=chx6PYkfQmzdsX+Bs2hA@mail.gmail.com>
	<CACLX4jTB6BMPgR545cs+Mbv=DFJReQ9wz9e1brg6QoSf5Wtg3Q@mail.gmail.com>
	<CAP_800rB_n9f42nJ-3HQL8hB6QePBG5g14Xd3LqP1YmwcTLd2Q@mail.gmail.com>
Message-ID: <CACLX4jS2D2vjOKhWLGdZfPb1Pvnzf0YpRR3JMs2nY1H+C6KDHA@mail.gmail.com>


On Mon, May 14, 2012 at 10:43 AM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Mon, May 14, 2012 at 9:47 AM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> Where did we end up on the record field defaults? ?Had we settled on a
>> feature-set there? ?I guess I'll just look at the docs in the README
>> to refresh myself.
>
> I have just added a final patch to improve function names in the
> type_conv API and documentation and updated my pull request.
>
> The README file in sexplib describes the new features. ?Note that the
> "default" extension is really part of type_conv and can be queried
> from many different code generators. ?Sexplib uses it for parsing
> records that omit fields. ?Maybe one of you wants to write another
> simple extension that generates functions with default arguments to
> create fresh records. ?This would seem quite convenient.
>
>> I'd much prefer to stick to something compatible with pandoc. ?We use
>> it for all of our internal document generation. ?Is there any reason
>> to prefer this python library?
>
> I have researched this a bit and have come to the conclusion that I'll
> probably have to use different markdown tools depending on context.
> Bitbucket uses the "Python markdown" library for rendering READMEs,
> which is sadly not quite compatible with pandoc. ?They also support
> some other formats, but I prefer markdown. ?I think it's a low price
> to pay to make an exception for READMEs. ?Being able to have
> well-formatted documentation with properly syntax-highlighted OCaml
> code examples on the project home page seems like an awesome feature
> to attract new users to a library.

Got it.  That seems like a wholly valid reason for the READMEs to be a
little different.  I do wish the markdown world would standardize,
but, oh well...

> Btw., here is the link to the Bitbucket documentation on rendering READMEs:
>
> ?http://confluence.atlassian.com/display/BITBUCKET/Displaying+README+Text+on+the+Overview
>
> Regards,
> Markus
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Tue May 15 01:44:15 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 14 May 2012 20:44:15 -0400
Subject: [ANN]: 108.00-pre2 pre-release of Core suite
Message-ID: <CACLX4jRGgg+z3BcCQx2U6SrE2tK0Kf5vVVjJYo0QAX_5wWWMgg@mail.gmail.com>


I'm pleased to announce the 108.00-pre2 pre-release of the Core suite
of libraries.  Core is an industrial strength alternative to OCaml's
standard library.  The tarball can be found here:

   https://bitbucket.org/yminsky/ocaml-core/downloads

The Core suite includes a variety of useful libraries, including:

- Core: the heart of the standard library.
- Several useful syntax extensions
  - type-conv: a library for building type-driven syntax extensions
  - sexplib: a library for handling s-expressions, and a syntax
    extension for auto-generating conversions between OCaml types and
    s-expressions
  - bin-prot: a syntax-extensions for generating
  - pipebang
  - variantslib
  - comparelib
  - fieldslib
- Async: a monadic concurrency library.
- Core_extended: extra components that are not as closely vetted or as
  stable as Core.  This includes, Shell, an interface for interacting
  with the UNIX shell, and Command, a command-line parsing library.

Many of these libraries have been released separately in the past, but
we're now releasing them as a single tarball.

The release does not depend on Oasis to build, so it should be easier
to build and install than installing from the hg repo.

Feedback is greatly appreciated!

y


From yminsky at janestreet.com  Tue May 15 02:43:24 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 14 May 2012 21:43:24 -0400
Subject: [Caml-list] [ANN]: 108.00-pre2 pre-release of Core suite
Message-ID: <CACLX4jQ1Gc4KzCR9cOTe8khStB94R+SQkZpjjTgmdPMqVosk1w@mail.gmail.com>


I'm pleased to announce the 108.00-pre2 pre-release of the Core suite
of libraries.  Core is an industrial strength alternative to OCaml's
standard library.  The tarball can be found here:

  https://bitbucket.org/yminsky/ocaml-core/downloads

The Core suite includes a variety of useful libraries, including:

- Core: the heart of the standard library.
- Several useful syntax extensions
 - type-conv: a library for building type-driven syntax extensions
 - sexplib: a library for handling s-expressions, and a syntax
   extension for auto-generating conversions between OCaml types and
   s-expressions
 - bin-prot: a syntax-extensions for generating
 - pipebang
 - variantslib
 - comparelib
 - fieldslib
- Async: a monadic concurrency library.
- Core_extended: extra components that are not as closely vetted or as
 stable as Core.  This includes, Shell, an interface for interacting
 with the UNIX shell, and Command, a command-line parsing library.

Many of these libraries have been released separately in the past, but
we're now releasing them as a single tarball.

The release does not depend on Oasis to build, so it should be easier
to build and install than installing from the hg repo.

Feedback is greatly appreciated!  You can join the core mailing list here:

   https://groups.google.com/forum/?fromgroups#!forum/ocaml-core

-- 
Caml-list mailing list.  Subscription management and archives:
https://sympa-roc.inria.fr/wws/info/caml-list
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
Bug reports: http://caml.inria.fr/bin/caml-bugs



From yminsky at janestreet.com  Tue May 15 14:09:37 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 15 May 2012 09:09:37 -0400
Subject: Releasing individual tarballs
Message-ID: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>


Do people feel strongly about how we cut the release tarballs?  Right
now, we have one big tarball that contains a sub-directory for each
sub-project.  You can of course convert these back into individual
tarballs, but it struck me as excessive to post 16 separate
tarballs...

y


From yminsky at janestreet.com  Tue May 15 14:26:07 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 15 May 2012 09:26:07 -0400
Subject: Releasing individual tarballs
In-Reply-To: <CAK=fH+iXNwA3AMHfUHjwRDbNiYVUM3S3-84LcVCxxy8KjwpuoA@mail.gmail.com>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
	<CAK=fH+iXNwA3AMHfUHjwRDbNiYVUM3S3-84LcVCxxy8KjwpuoA@mail.gmail.com>
Message-ID: <CACLX4jQqNEibH8nWVHS040NOryfgb+PZvF6KUmF+SugqiCSK4A@mail.gmail.com>


On Tue, May 15, 2012 at 9:20 AM, David House <dhouse at janestreet.com> wrote:
> On Tue, May 15, 2012 at 2:09 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> Do people feel strongly about how we cut the release tarballs? ?Right
>> now, we have one big tarball that contains a sub-directory for each
>> sub-project. ?You can of course convert these back into individual
>> tarballs, but it struck me as excessive to post 16 separate
>> tarballs...
>
> Doesn't seem that excessive. We could always include on the web page a
> wget command that you could copy-paste into a terminal in order to
> download them all.

I think including a single tarball is useful as well --- that's at
least what I would prefer.

But I don't mind uploading all 16 tarballs.

y


From yury.sulsky at gmail.com  Tue May 15 14:29:06 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Tue, 15 May 2012 09:29:06 -0400
Subject: Releasing individual tarballs
In-Reply-To: <CACLX4jQqNEibH8nWVHS040NOryfgb+PZvF6KUmF+SugqiCSK4A@mail.gmail.com>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
	<CAK=fH+iXNwA3AMHfUHjwRDbNiYVUM3S3-84LcVCxxy8KjwpuoA@mail.gmail.com>
	<CACLX4jQqNEibH8nWVHS040NOryfgb+PZvF6KUmF+SugqiCSK4A@mail.gmail.com>
Message-ID: <CAEDxudy885GJDkWhb-Z239YV=XiNh-a8Zyp3CUYNFJ57SVSJ5Q@mail.gmail.com>


I also think the individual tarballs will be necessary to get them
packaged up in the various Linux distros.

On Tue, May 15, 2012 at 9:26 AM, Yaron Minsky <yminsky at janestreet.com> wrote:
> On Tue, May 15, 2012 at 9:20 AM, David House <dhouse at janestreet.com> wrote:
>> On Tue, May 15, 2012 at 2:09 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>>> Do people feel strongly about how we cut the release tarballs? ?Right
>>> now, we have one big tarball that contains a sub-directory for each
>>> sub-project. ?You can of course convert these back into individual
>>> tarballs, but it struck me as excessive to post 16 separate
>>> tarballs...
>>
>> Doesn't seem that excessive. We could always include on the web page a
>> wget command that you could copy-paste into a terminal in order to
>> download them all.
>
> I think including a single tarball is useful as well --- that's at
> least what I would prefer.
>
> But I don't mind uploading all 16 tarballs.
>
> y


From yminsky at janestreet.com  Tue May 15 14:33:10 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 15 May 2012 09:33:10 -0400
Subject: Releasing individual tarballs
In-Reply-To: <4FB259CB.3020308@glondu.net>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
	<4FB259CB.3020308@glondu.net>
Message-ID: <CACLX4jROheguG6s9Y_b0-0cMvPgha91EDUM7_iJ-HV5WryUaJA@mail.gmail.com>


On Tue, May 15, 2012 at 9:27 AM, St?phane Glondu <steph at glondu.net> wrote:
> Le 15/05/2012 15:09, Yaron Minsky a ?crit :
>> Do people feel strongly about how we cut the release tarballs? ?Right
>> now, we have one big tarball that contains a sub-directory for each
>> sub-project. ?You can of course convert these back into individual
>> tarballs, but it struck me as excessive to post 16 separate
>> tarballs...
>
> Cannot you provide both? Market it as "bundle" and "individual components".

I think we'll do just that.

>
> Cheers,
>
> --
> St?phane


From yminsky at janestreet.com  Tue May 15 18:34:53 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 15 May 2012 13:34:53 -0400
Subject: ARCH_SIXTYFOUR and ARCH_INT64_TYPE
Message-ID: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>


I have a question about bin-prot.  We noticed that there are two
preprocessor variables that seem almost the same: ARCH_INT64_TYPE and
ARCH_SIXTYFOUR.  What is the intended difference in semantics between
them?

y


From markus.mottl at gmail.com  Tue May 15 18:56:51 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Tue, 15 May 2012 13:56:51 -0400
Subject: ARCH_SIXTYFOUR and ARCH_INT64_TYPE
In-Reply-To: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>
References: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>
Message-ID: <CAP_800qGXnkMqUpe+0AXTkN94Qb-UXOeGZNN-qeLaKCMB-_Afg@mail.gmail.com>


On Tue, May 15, 2012 at 1:34 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> I have a question about bin-prot. ?We noticed that there are two
> preprocessor variables that seem almost the same: ARCH_INT64_TYPE and
> ARCH_SIXTYFOUR. ?What is the intended difference in semantics between
> them?

Both come from the OCaml configuration header files.  It is possible
that some platform doesn't support 64bit integers (ARCH_INT64_TYPE)
even though pointers are that wide (ARCH_SIXTYFOUR) .  Not sure this
is still relevant these days, but it may have been an issue with past
platforms.  If 64bit integers are not natively supported, the OCaml
compiler will use emulation to support the int64 type, and so will
bin_prot.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Tue May 15 19:02:43 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Tue, 15 May 2012 14:02:43 -0400
Subject: ARCH_SIXTYFOUR and ARCH_INT64_TYPE
In-Reply-To: <CAMr3DCPsFwoqd5_H_d=dDvTgESjCpOGWDq_PoJ7vJtGS+EhQTA@mail.gmail.com>
References: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>
	<CAMr3DCPsFwoqd5_H_d=dDvTgESjCpOGWDq_PoJ7vJtGS+EhQTA@mail.gmail.com>
Message-ID: <CAP_800oq1BPb8WNhsJZG7wH7meOV_KC+cdxRJ_6Z04SJg-zRYA@mail.gmail.com>


Right.  Note, too, that GCC emulated "long long" on 32bit platforms.
OCaml would only fall back on its own integer emulation if the
C-compiler did not provide it.

On Tue, May 15, 2012 at 1:56 PM, Benedikt Grundmann
<benedikt.grundmann at googlemail.com> wrote:
> These are defined by ocamls configure script:
>
> http://caml.inria.fr/svn/ocaml/trunk/config/m-templ.h
>
> the comments explain it all
>
> On 15 May 2012 18:34, Yaron Minsky <yminsky at janestreet.com> wrote:
>> I have a question about bin-prot. ?We noticed that there are two
>> preprocessor variables that seem almost the same: ARCH_INT64_TYPE and
>> ARCH_SIXTYFOUR. ?What is the intended difference in semantics between
>> them?
>>
>> y
>
>
>
> --
> Calvin: I try to make everyone's day a little more
> surreal.
>
> (From Calvin & Hobbes)



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From dhouse at janestreet.com  Tue May 15 14:20:28 2012
From: dhouse at janestreet.com (David House)
Date: Tue, 15 May 2012 14:20:28 +0100
Subject: Releasing individual tarballs
In-Reply-To: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
Message-ID: <CAK=fH+iXNwA3AMHfUHjwRDbNiYVUM3S3-84LcVCxxy8KjwpuoA@mail.gmail.com>


On Tue, May 15, 2012 at 2:09 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Do people feel strongly about how we cut the release tarballs? ?Right
> now, we have one big tarball that contains a sub-directory for each
> sub-project. ?You can of course convert these back into individual
> tarballs, but it struck me as excessive to post 16 separate
> tarballs...

Doesn't seem that excessive. We could always include on the web page a
wget command that you could copy-paste into a terminal in order to
download them all.


From sylvain at le-gall.net  Tue May 15 14:17:26 2012
From: sylvain at le-gall.net (Sylvain Le Gall)
Date: Tue, 15 May 2012 15:17:26 +0200
Subject: Releasing individual tarballs
In-Reply-To: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
Message-ID: <CAOCAUGMCENvS3k4YyJLh9+OVnBXKAh7Kfi1UXcFFTiAWnBP9WA@mail.gmail.com>

Hi,


2012/5/15 Yaron Minsky <yminsky at janestreet.com>

> Do people feel strongly about how we cut the release tarballs?  Right
> now, we have one big tarball that contains a sub-directory for each
> sub-project.  You can of course convert these back into individual
> tarballs, but it struck me as excessive to post 16 separate
> tarballs...
>
>
I was just writing a mail about that. Since each sub directories is/was a
project on its own, it makes sense to cut them.

Moreover, I use sexplib/type-conv in some of my projects and don't want to
ask people to download/compile the whole ocaml-core just for that.

The most simple simple solution is to have 16 separate tarballs (well to be
honest, just split sexplib/type-conv/bin-prot/fieldslib, I don't care about
the rest).

Side notes: oasis-db will have a hard time figuring out what is the right
_oasis among the 16 presents in the big tarball.

Regards
Sylvain
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120515/9d96c031/attachment.html>

From steph at glondu.net  Tue May 15 14:27:39 2012
From: steph at glondu.net (=?ISO-8859-1?Q?St=E9phane_Glondu?=)
Date: Tue, 15 May 2012 15:27:39 +0200
Subject: Releasing individual tarballs
In-Reply-To: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
Message-ID: <4FB259CB.3020308@glondu.net>


Le 15/05/2012 15:09, Yaron Minsky a ?crit :
> Do people feel strongly about how we cut the release tarballs?  Right
> now, we have one big tarball that contains a sub-directory for each
> sub-project.  You can of course convert these back into individual
> tarballs, but it struck me as excessive to post 16 separate
> tarballs...

Cannot you provide both? Market it as "bundle" and "individual components".


Cheers,

-- 
St?phane


From benedikt.grundmann at googlemail.com  Tue May 15 18:56:59 2012
From: benedikt.grundmann at googlemail.com (Benedikt Grundmann)
Date: Tue, 15 May 2012 18:56:59 +0100
Subject: ARCH_SIXTYFOUR and ARCH_INT64_TYPE
In-Reply-To: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>
References: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>
Message-ID: <CAMr3DCPsFwoqd5_H_d=dDvTgESjCpOGWDq_PoJ7vJtGS+EhQTA@mail.gmail.com>


These are defined by ocamls configure script:

http://caml.inria.fr/svn/ocaml/trunk/config/m-templ.h

the comments explain it all

On 15 May 2012 18:34, Yaron Minsky <yminsky at janestreet.com> wrote:
> I have a question about bin-prot. ?We noticed that there are two
> preprocessor variables that seem almost the same: ARCH_INT64_TYPE and
> ARCH_SIXTYFOUR. ?What is the intended difference in semantics between
> them?
>
> y



-- 
Calvin: I try to make everyone's day a little more
surreal.

(From Calvin & Hobbes)


From yminsky at janestreet.com  Fri May 18 10:25:12 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 18 May 2012 05:25:12 -0400
Subject: Feedback on pre-release
Message-ID: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>


If anyone has any feedback on the pre-release, please tell us.  If
not, we'll put up the actual release on Monday or Tuesday.

y


From thelema314 at gmail.com  Fri May 18 13:55:43 2012
From: thelema314 at gmail.com (Edgar Friendly)
Date: Fri, 18 May 2012 08:55:43 -0400
Subject: Feedback on pre-release
In-Reply-To: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
Message-ID: <4FB646CF.4050005@gmail.com>


On 05/18/2012 05:25 AM, Yaron Minsky wrote:
> If anyone has any feedback on the pre-release, please tell us.  If
> not, we'll put up the actual release on Monday or Tuesday.
>
> y

Did the many-small-tarballs version of the pre-release ever get 
generated?  I've been watching here:

https://bitbucket.org/yminsky/ocaml-core/downloads

and only see the monolithic installer.  If there are individual tarballs 
for components, I can make a package file for odb.ml to install them all 
easily.  Even better, if they get uploaded to oasis-db, more than likely 
it will handle all the metadata generation.

E.


From yury.sulsky at gmail.com  Fri May 18 14:13:11 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Fri, 18 May 2012 09:13:11 -0400
Subject: Feedback on pre-release
In-Reply-To: <CAOCAUGMjiFo0--D_+GocDvt=fn18TpO+hECF=thuDa_FpZfy2Q@mail.gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
	<CAOCAUGMjiFo0--D_+GocDvt=fn18TpO+hECF=thuDa_FpZfy2Q@mail.gmail.com>
Message-ID: <CAEDxudxA0fjRTPhxXM6JdHfRqD=rH=FfP3cAkuxRDjvUHmXDxg@mail.gmail.com>


Hi Sylvain,
I think the packages included in the released tarball were generated
with oasis 0.3.0 rc5.

Yury

On Fri, May 18, 2012 at 6:02 AM, Sylvain Le Gall <gildor478 at gmail.com> wrote:
> Please use oasis 0.3.0 rc5 to generate the setup.ml. This is almost the
> release...
>
> Cheers
> Sylvain
>
> Le 18 mai 2012 11:25, "Yaron Minsky" <yminsky at janestreet.com> a ?crit?:
>
>> If anyone has any feedback on the pre-release, please tell us. ?If
>> not, we'll put up the actual release on Monday or Tuesday.
>>
>> y


From yminsky at janestreet.com  Fri May 18 14:55:09 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 18 May 2012 09:55:09 -0400
Subject: Feedback on pre-release
In-Reply-To: <4FB646CF.4050005@gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
	<4FB646CF.4050005@gmail.com>
Message-ID: <CACLX4jTCgW-wWjUFVCepAMoSWRCM4GH0+4YaQh+jFF_7PHA_Mw@mail.gmail.com>


I didn't upload them, but the big tarball has all the little tarballs
unpacked on the inside, so I thought that would be adequate for
testing.  If people prefer, we can upload the little tarballs now.

y

On Fri, May 18, 2012 at 8:55 AM, Edgar Friendly <thelema314 at gmail.com> wrote:
> On 05/18/2012 05:25 AM, Yaron Minsky wrote:
>>
>> If anyone has any feedback on the pre-release, please tell us. ?If
>> not, we'll put up the actual release on Monday or Tuesday.
>>
>> y
>
>
> Did the many-small-tarballs version of the pre-release ever get generated?
> ?I've been watching here:
>
> https://bitbucket.org/yminsky/ocaml-core/downloads
>
> and only see the monolithic installer. ?If there are individual tarballs for
> components, I can make a package file for odb.ml to install them all easily.
> ?Even better, if they get uploaded to oasis-db, more than likely it will
> handle all the metadata generation.
>
> E.


From markus.mottl at gmail.com  Fri May 18 15:05:42 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 18 May 2012 10:05:42 -0400
Subject: Feedback on pre-release
In-Reply-To: <CACLX4jTCgW-wWjUFVCepAMoSWRCM4GH0+4YaQh+jFF_7PHA_Mw@mail.gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
	<4FB646CF.4050005@gmail.com>
	<CACLX4jTCgW-wWjUFVCepAMoSWRCM4GH0+4YaQh+jFF_7PHA_Mw@mail.gmail.com>
Message-ID: <CAP_800rzme8HJ0nFqUcbwo1mTgiYKMMfZ5g2eD0SZ4nTqz=4iQ@mail.gmail.com>


On Fri, May 18, 2012 at 9:55 AM, Yaron Minsky <yminsky at janestreet.com> wrote:
> I didn't upload them, but the big tarball has all the little tarballs
> unpacked on the inside, so I thought that would be adequate for
> testing. ?If people prefer, we can upload the little tarballs now.

For testing purposes it seems to be sufficient to just provide one
tarball.  I'd rather not have to download so many different packages.
In fact, I'd be happy just checking out the developer repository.  A
Mercurial tag for the release candidate would be perfect.

The separate tarballs, however, are extremely useful for Godi
integration.  Lets say you provide a bugfix for just one sub-package.
If there were only one tarball, the non-affected sub-packages would
also have to be recompiled.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From gildor478 at gmail.com  Fri May 18 11:02:40 2012
From: gildor478 at gmail.com (Sylvain Le Gall)
Date: Fri, 18 May 2012 12:02:40 +0200
Subject: Feedback on pre-release
In-Reply-To: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
Message-ID: <CAOCAUGMjiFo0--D_+GocDvt=fn18TpO+hECF=thuDa_FpZfy2Q@mail.gmail.com>

Please use oasis 0.3.0 rc5 to generate the setup.ml. This is almost the
release...

Cheers
Sylvain
Le 18 mai 2012 11:25, "Yaron Minsky" <yminsky at janestreet.com> a ?crit :

> If anyone has any feedback on the pre-release, please tell us.  If
> not, we'll put up the actual release on Monday or Tuesday.
>
> y
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120518/5bf41f70/attachment.html>

From thelema314 at gmail.com  Fri May 18 21:14:12 2012
From: thelema314 at gmail.com (Edgar Friendly)
Date: Fri, 18 May 2012 16:14:12 -0400
Subject: Feedback on pre-release
In-Reply-To: <CACLX4jTCgW-wWjUFVCepAMoSWRCM4GH0+4YaQh+jFF_7PHA_Mw@mail.gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com> <4FB646CF.4050005@gmail.com> <CACLX4jTCgW-wWjUFVCepAMoSWRCM4GH0+4YaQh+jFF_7PHA_Mw@mail.gmail.com>
Message-ID: <4FB6AD94.2030807@gmail.com>


On 05/18/2012 09:55 AM, Yaron Minsky wrote:
> I didn't upload them, but the big tarball has all the little tarballs
> unpacked on the inside, so I thought that would be adequate for
> testing.  If people prefer, we can upload the little tarballs now.
>
> y

I made my own set of little tarballs, and odb is able to automate the 
installation of all the sub-packages without problem.  If these tarballs 
were made available via http (or ftp), they could be auto-installed with 
a single command.  When oasis-db supports oasis 0.3 files, it would be 
able to serve as both the file server and the metadata server for 
dependencies and tarball urls.

E.



From yoriyuki.y at gmail.com  Sun May 20 16:04:43 2012
From: yoriyuki.y at gmail.com (Yoriyuki Yamagata)
Date: Sun, 20 May 2012 08:04:43 -0700 (PDT)
Subject: Good example of Async and the best practice of handling error in
 Async
Message-ID: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>

Hi, list,

I began to read the code of Async, but I'm not sure what is the best way to 
handle errors caused by IO.  Simply throw an exception is okay?

What I am doing is to design error handling of code converter in ulib, a 
next generation Unicode library for OCaml which I'm working.  I want to 
integrate ulib seamlessly to async and core lib.

Any suggestion is appreciated.

Best,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120520/7c04873a/attachment.html>

From sdefabbiakane at gmail.com  Mon May 21 04:04:25 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Sun, 20 May 2012 20:04:25 -0700 (PDT)
Subject: Good example of Async and the best practice of handling error
 in Async
In-Reply-To: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
Message-ID: <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>

If you're dealing with exceptions in Async, you want the Monitor 
module--throwing exceptions is fine, but catching them would (without 
Monitor) be tricky. You can start out with Monitor.try_with (see the .mli 
for details: 
https://bitbucket.org/yminsky/ocaml-core/src/2c2e24978da2/base/async/core/lib/monitor.mli), 
which lets you pass a function to run, and a function to function to handle 
the result value/error.

On Sunday, May 20, 2012 11:04:43 AM UTC-4, Yoriyuki Yamagata wrote:
>
> Hi, list,
>
> I began to read the code of Async, but I'm not sure what is the best way 
> to handle errors caused by IO.  Simply throw an exception is okay?
>
> What I am doing is to design error handling of code converter in ulib, a 
> next generation Unicode library for OCaml which I'm working.  I want to 
> integrate ulib seamlessly to async and core lib.
>
> Any suggestion is appreciated.
>
> Best,
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120520/98c58a5e/attachment.html>

From sdefabbiakane at gmail.com  Mon May 21 17:23:47 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Mon, 21 May 2012 09:23:47 -0700 (PDT)
Subject: Good example of Async and the best practice of handling error
 in Async
In-Reply-To: <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com> <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
 <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
Message-ID: <89926670-1762-485a-9c5f-4fe1e7ffe225@googlegroups.com>

Oh, sorry, I misunderstood. If you want to throw an exception during 
reading/writing I believe that's fine (although I'm not 100% sure there 
aren't edge cases I don't know about). Exact behavior likely depends on 
what functions are being used. The with_file functions of both 
Reader/Writer will, for example, close the files properly even if an 
exception is thrown in the function you pass it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120521/44a555f1/attachment.html>

From yminsky at janestreet.com  Mon May 21 18:46:05 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 21 May 2012 13:46:05 -0400
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
	<406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
	<CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
Message-ID: <CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>


On Mon, May 21, 2012 at 9:24 AM, Yoriyuki Yamagata <yoriyuki.y at gmail.com> wrote:
> Hi, thank you for commenting, Sam.
>
> 2012/5/21 Sam <sdefabbiakane at gmail.com>:
>> If you're dealing with exceptions in Async, you want the Monitor
>> module--throwing exceptions is fine, but catching them would (without
>> Monitor) be tricky.
>
> I am aware of Monitor module. ?But one thing that I am not sure is
> whether it is okay or not if the Reader or Writer throw exception
> during reading or writing operations. ?Also, I also want to know what
> are supposed behaviors of Reader/Writer after exceptions. ?They are
> not apparent from the source, I think.

I'm a little unsure what you mean here.  Async is generally
exception-safe, although even more than with non-concurrent programs,
exceptions can lead to confusing control-flow.  The code for Writer
itself does sometimes throw exceptions in some circumstances, for
example.  But when code that uses a writer throws an exception, that
doesn't necessarily cause that writer to close (much as code using an
In_channel.t doesn't cause a close when it throws an exception.)

Maybe you could write a simple code snippet showing a case where
you're unsure what the right behavior is?  That might help us focus in
on answering the right question.

y


From yminsky at janestreet.com  Tue May 22 03:10:37 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 21 May 2012 22:10:37 -0400
Subject: 108.00 release up on bitbucket
Message-ID: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>


I've now uploaded all the original tarballs.  They are basically
unchanged from the pre-release.  The all-in-one tarball is called
"core-suite-108.00.tgz".

y


From yoriyuki.y at gmail.com  Mon May 21 14:24:27 2012
From: yoriyuki.y at gmail.com (Yoriyuki Yamagata)
Date: Mon, 21 May 2012 22:24:27 +0900
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com> <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
Message-ID: <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>


Hi, thank you for commenting, Sam.

2012/5/21 Sam <sdefabbiakane at gmail.com>:
> If you're dealing with exceptions in Async, you want the Monitor
> module--throwing exceptions is fine, but catching them would (without
> Monitor) be tricky.

I am aware of Monitor module.  But one thing that I am not sure is
whether it is okay or not if the Reader or Writer throw exception
during reading or writing operations.  Also, I also want to know what
are supposed behaviors of Reader/Writer after exceptions.  They are
not apparent from the source, I think.

-- 
Yoriyuki?Yamagata
yoriyuki.y at gmail.com


From yury.sulsky at gmail.com  Wed May 23 15:49:00 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Wed, 23 May 2012 10:49:00 -0400
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <CALdQWQ6+YVk8zJBWfD8FzqTbBtwTHyQy23WfGFYEyqBNby7EpA@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
	<406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
	<CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
	<CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>
	<CALdQWQ6+YVk8zJBWfD8FzqTbBtwTHyQy23WfGFYEyqBNby7EpA@mail.gmail.com>
Message-ID: <CAEDxudzq1Z_x18=pGensOexJdGpEKQdWROpKgSUg47QvESeGtQ@mail.gmail.com>


Hi Yoriyuki,

Since Pipe.map doesn't handle exceptions, the situation you describe
won't occur. The exception will stop the iteration of Pipe.map and
bubble up to you. Here's an example program. Note that the exception
bubbles up to whatever monitor was in effect when the call to Pipe.map
took place.

# open Core.Std;;
# open Async.Std;;
# let r, w = Pipe.create ();;
# let rec loop = function
    | 10 -> return ()
    |  x -> Pipe.write w x >>= fun () -> loop (x + 1)
  in whenever (loop 0);;
# let f i = if i > 5 then failwithf "too big: %d" i () else i;;
# Monitor.try_with (fun () ->
    let r' = Pipe.map ~f r in
    Pipe.iter_without_pushback r' ~f:(printf "*** read %d\n"))
  >>| function
    | Ok () -> ()
    | Error exn -> printf "*** caught exn %s\n" (Exn.to_string exn);;
# Scheduler.go ();;
*** read 0
*** read 1
*** read 2
*** read 3
*** read 4
*** read 5
*** caught exn (monitor.ml.Error_
  ((exn (Failure "too big: 6"))
    (backtrace
      ("Raised at file \"pervasives.ml\", line 22, characters 22-33"
        "Called from file \"core_queue.ml\", line 60, characters 35-38"
        "Called from file \"queue.ml\", line 134, characters 6-20"
        "Called from file \"core_queue.ml\", line 60, characters 2-40"
        "Called from file \"pipe.ml\", line 584, characters 52-62"
        "Called from file \"scheduler.ml\", line 65, characters 12-23" ""))
    (monitor
      (((name_opt (try_with)) (id 2) (has_seen_error true)
         (someone_is_listening true))
        ((name_opt (main)) (id 1) (has_seen_error false)
          (someone_is_listening false))))))

On Wed, May 23, 2012 at 9:27 AM, Yoriyuki Yamagata <yoriyuki.y at gmail.com> wrote:
> Hi, list.
>
> 2012/5/22 Yaron Minsky <yminsky at janestreet.com>:
>> Maybe you could write a simple code snippet showing a case where
>> you're unsure what the right behavior is? ?That might help us focus in
>> on answering the right question.
>
> How about this one?
>
> let f c = if Char.code c < 0x80 then c else raise Out_of_bound in
> reader' = ?Pipe.map reader ~f
>
> I think Pipe's reader does not handle the exception, so reader' just
> skips non-Ascii character after raising exception. ?Am I correct?
>
> If f is more complex (say, it has internal states), such behavior
> would cause a strange result (all outputs from reader are garbage
> after the exception, for example). ? So any alternatives? ?Maybe we
> make f return char option, but I feel it too heavy.
>
> Best,
>
> --
> Yoriyuki?Yamagata
> yoriyuki.y at gmail.com


From yury.sulsky at gmail.com  Thu May 24 00:35:52 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Wed, 23 May 2012 19:35:52 -0400
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <CALdQWQ6hcsPCzdQJ0DE6DfH=8n9ZGKyk2DrDvXJj-RmfZCqGWg@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
	<406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
	<CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
	<CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>
	<CALdQWQ6+YVk8zJBWfD8FzqTbBtwTHyQy23WfGFYEyqBNby7EpA@mail.gmail.com>
	<CAEDxudzq1Z_x18=pGensOexJdGpEKQdWROpKgSUg47QvESeGtQ@mail.gmail.com>
	<CALdQWQ6hcsPCzdQJ0DE6DfH=8n9ZGKyk2DrDvXJj-RmfZCqGWg@mail.gmail.com>
Message-ID: <CAEDxudzBDLa1QCkBwVK32u0Y4KVUKTAUvvoEDq+4bp3W4czLvg@mail.gmail.com>


It should be okay to raise exceptions, but keep in mind that all of
the normal exception-handling caveats apply (i.e. you are responsible
for unwinding the resources that aren't garbage-collected, such as
file handles).

I find that exception handling is always a little tricky to think
about in Async. It's a matter of taste, but I usually prefer to turn
exceptions into Result.t's at a low level, and deal with code that
won't raise exceptions through the rest of my program.

On Wed, May 23, 2012 at 6:08 PM, Yoriyuki Yamagata <yoriyuki.y at gmail.com> wrote:
> Hi, Yury
>
> 2012/5/23 Yury Sulsky <yury.sulsky at gmail.com>:
>> Hi Yoriyuki,
>>
>> Since Pipe.map doesn't handle exceptions, the situation you describe
>> won't occur. The exception will stop the iteration of Pipe.map and
>> bubble up to you. Here's an example program. Note that the exception
>> bubbles up to whatever monitor was in effect when the call to Pipe.map
>> took place.
>
> I see. ?My mistake.
>
> So, does it means that it is okay to raise exceptions during IO, as
> long as you run the IO inside an appropriate monitor?
> --
> Yoriyuki?Yamagata
> yoriyuki.y at gmail.com


From yoriyuki.y at gmail.com  Wed May 23 14:27:59 2012
From: yoriyuki.y at gmail.com (Yoriyuki Yamagata)
Date: Wed, 23 May 2012 22:27:59 +0900
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
 <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com> <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
 <CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>
Message-ID: <CALdQWQ6+YVk8zJBWfD8FzqTbBtwTHyQy23WfGFYEyqBNby7EpA@mail.gmail.com>


Hi, list.

2012/5/22 Yaron Minsky <yminsky at janestreet.com>:
> Maybe you could write a simple code snippet showing a case where
> you're unsure what the right behavior is?  That might help us focus in
> on answering the right question.

How about this one?

let f c = if Char.code c < 0x80 then c else raise Out_of_bound in
reader' =  Pipe.map reader ~f

I think Pipe's reader does not handle the exception, so reader' just
skips non-Ascii character after raising exception.  Am I correct?

If f is more complex (say, it has internal states), such behavior
would cause a strange result (all outputs from reader are garbage
after the exception, for example).   So any alternatives?  Maybe we
make f return char option, but I feel it too heavy.

Best,

-- 
Yoriyuki?Yamagata
yoriyuki.y at gmail.com


From yoriyuki.y at gmail.com  Wed May 23 23:08:15 2012
From: yoriyuki.y at gmail.com (Yoriyuki Yamagata)
Date: Thu, 24 May 2012 07:08:15 +0900
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <CAEDxudzq1Z_x18=pGensOexJdGpEKQdWROpKgSUg47QvESeGtQ@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
 <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com> <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
 <CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>
 <CALdQWQ6+YVk8zJBWfD8FzqTbBtwTHyQy23WfGFYEyqBNby7EpA@mail.gmail.com> <CAEDxudzq1Z_x18=pGensOexJdGpEKQdWROpKgSUg47QvESeGtQ@mail.gmail.com>
Message-ID: <CALdQWQ6hcsPCzdQJ0DE6DfH=8n9ZGKyk2DrDvXJj-RmfZCqGWg@mail.gmail.com>


Hi, Yury

2012/5/23 Yury Sulsky <yury.sulsky at gmail.com>:
> Hi Yoriyuki,
>
> Since Pipe.map doesn't handle exceptions, the situation you describe
> won't occur. The exception will stop the iteration of Pipe.map and
> bubble up to you. Here's an example program. Note that the exception
> bubbles up to whatever monitor was in effect when the call to Pipe.map
> took place.

I see.  My mistake.

So, does it means that it is okay to raise exceptions during IO, as
long as you run the IO inside an appropriate monitor?
-- 
Yoriyuki?Yamagata
yoriyuki.y at gmail.com


From thelema314 at gmail.com  Thu May 24 18:40:05 2012
From: thelema314 at gmail.com (Edgar Friendly)
Date: Thu, 24 May 2012 13:40:05 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
Message-ID: <4FBE7275.5040200@gmail.com>


On 05/21/2012 10:10 PM, Yaron Minsky wrote:
> I've now uploaded all the original tarballs.  They are basically
> unchanged from the pre-release.  The all-in-one tarball is called
> "core-suite-108.00.tgz".
>
> y

Odb.ml supports auto-install of the core suite (by default into a user's 
home dir, but also system wide with --sudo or --have-perms) using the 
following command:

ocaml odb.ml --package http://paste.debian.net/plain/170991

Instead of using paste.debian.net to host the metadata, it could be put 
into some project web space.  My first preference is that core keep this 
file, but if you don't, I'll make it available in the odb project.

E.


From thelema314 at gmail.com  Thu May 24 19:22:46 2012
From: thelema314 at gmail.com (Edgar Friendly)
Date: Thu, 24 May 2012 14:22:46 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <CAAHaHtnA=QArqpkU-hpeEStY2sXH_KN-7AwKLbzvsU5EchWEQA@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com> <4FBE7275.5040200@gmail.com> <CAAHaHtnA=QArqpkU-hpeEStY2sXH_KN-7AwKLbzvsU5EchWEQA@mail.gmail.com>
Message-ID: <4FBE7C76.1090904@gmail.com>


Oh yeah, dlls.  You'll have to let ocamlfind know where to find .so 
files installed by odb.  Any of the following should work:

1) echo $HOME/.odb/lib/stublibs | sudo tee -a `ocamlc -where`/ld.conf
2) export CAML_LD_LIBRARY_PATH=$HOME/.odb/lib/stublibs

Modify #2 if you're not using bash; iirc, it's not the default shell on osx.

I've thought about detecting whether this is set properly so I can warn 
the user that it needs to be set, but don't have a good solution for 
this.  Any suggestions?

E.


On 05/24/2012 02:14 PM, orbitz wrote:
> This failed for me with the following error:
>
> + ocamlfind ocamldep -package variantslib.syntax -package variantslib
> -package unix -package threads -package sexplib.syntax -package sexplib
> -package res -package pa_pipebang -package pa_ounit -package
> fieldslib.syntax -package fieldslib -package bin_prot.syntax -package
> bin_prot -package bigarray -syntax camlp4o -modules
> lib/agnostic_mutex.mli > lib/agnostic_mutex.mli.depends
> Camlp4: Uncaught exception: DynLoader.Error
> ("/Users/orbitz/.odb/lib/bin_prot/bin_prot.cma", "error loading shared
> library: dllbin_prot_stubs.so: dlopen(dllbin_prot_stubs.so, 138): image
> not found")
>
> Preprocessing error on file lib/agnostic_mutex.mli
> Command exited with code 2.
> Compilation unsuccessful after building 20 targets (0 cached) in 00:00:02.
> E: Failure("Command '/Users/orbitz/bin/ocaml-3.12.1/bin/ocamlbuild
> lib/libcore_stubs.a lib/dllcore_stubs.so lib/core.cma lib/core.cmxs
> lib/core.cmxa lib/core.a top/core_top.cma top/core_top.cmxs
> top/core_top.cmxa top/core_top.a -tag debug' terminated with error code 10")
> Exception: Failure "Could not build core".
>
>
> I am on a Mac.  Any thoughts?
>
>
> On Thu, May 24, 2012 at 7:40 PM, Edgar Friendly <thelema314 at gmail.com
> <mailto:thelema314 at gmail.com>> wrote:
>
>     On 05/21/2012 10:10 PM, Yaron Minsky wrote:
>
>         I've now uploaded all the original tarballs.  They are basically
>         unchanged from the pre-release.  The all-in-one tarball is called
>         "core-suite-108.00.tgz".
>
>         y
>
>
>     Odb.ml supports auto-install of the core suite (by default into a
>     user's home dir, but also system wide with --sudo or --have-perms)
>     using the following command:
>
>     ocaml odb.ml <http://odb.ml> --package
>     http://paste.debian.net/plain/__170991
>     <http://paste.debian.net/plain/170991>
>
>     Instead of using paste.debian.net <http://paste.debian.net> to host
>     the metadata, it could be put into some project web space.  My first
>     preference is that core keep this file, but if you don't, I'll make
>     it available in the odb project.
>
>     E.
>
>



From fermin.reig at gmail.com  Thu May 24 23:29:45 2012
From: fermin.reig at gmail.com (fermin.reig at gmail.com)
Date: Thu, 24 May 2012 15:29:45 -0700 (PDT)
Subject: 108.00 release up on bitbucket
In-Reply-To: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
Message-ID: <ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>


I've downloaded the all-in-one tarball, and tried to build with 
./build-and-install -s. First I had to edit  build-common.sh, to delete 
"-pre2" in all the names. After that, I get this error:

 % ./build-and-install -s
=> type_conv-108.00
   * configuring
   * compiling
ocaml setup.ml -build 
ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend 
-syntax camlp4o -modules lib/pa_type_conv.ml > lib/pa_type_conv.ml.depends
+ ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend 
-syntax camlp4o -modules lib/pa_type_conv.ml > lib/pa_type_conv.ml.depends
File "lib/pa_type_conv.ml", line 329, characters 23-29:
While expanding quotation "module_type" in a position of "patt":
  Parse error: illegal begin of quotation of module type

Preprocessing error on file lib/pa_type_conv.ml
Command exited with code 2.
E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag debug' 
terminated with error code 10")
make: *** [build] Error 1
*** ERROR: Couldn't compile type_conv

This is the relevant output of #list;; in ocaml:

...
findlib             (version: 1.2.7)
num                 (version: [distributed with Ocaml])
num-top             (version: 1.2.7)
num.core            (version: [internal])
oUnit               (version: 1.1.0)
ocamlbuild          (version: [distributed with Ocaml])
pcre                (version: 6.2.2)
res                 (version: 3.2.0)
...

I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/460aee48/attachment.html>

From orbitz at gmail.com  Thu May 24 19:14:02 2012
From: orbitz at gmail.com (orbitz)
Date: Thu, 24 May 2012 20:14:02 +0200
Subject: 108.00 release up on bitbucket
In-Reply-To: <4FBE7275.5040200@gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<4FBE7275.5040200@gmail.com>
Message-ID: <CAAHaHtnA=QArqpkU-hpeEStY2sXH_KN-7AwKLbzvsU5EchWEQA@mail.gmail.com>

This failed for me with the following error:

+ ocamlfind ocamldep -package variantslib.syntax -package variantslib
-package unix -package threads -package sexplib.syntax -package sexplib
-package res -package pa_pipebang -package pa_ounit -package
fieldslib.syntax -package fieldslib -package bin_prot.syntax -package
bin_prot -package bigarray -syntax camlp4o -modules lib/agnostic_mutex.mli
> lib/agnostic_mutex.mli.depends
Camlp4: Uncaught exception: DynLoader.Error
("/Users/orbitz/.odb/lib/bin_prot/bin_prot.cma", "error loading shared
library: dllbin_prot_stubs.so: dlopen(dllbin_prot_stubs.so, 138): image not
found")

Preprocessing error on file lib/agnostic_mutex.mli
Command exited with code 2.
Compilation unsuccessful after building 20 targets (0 cached) in 00:00:02.
E: Failure("Command '/Users/orbitz/bin/ocaml-3.12.1/bin/ocamlbuild
lib/libcore_stubs.a lib/dllcore_stubs.so lib/core.cma lib/core.cmxs
lib/core.cmxa lib/core.a top/core_top.cma top/core_top.cmxs
top/core_top.cmxa top/core_top.a -tag debug' terminated with error code 10")
Exception: Failure "Could not build core".


I am on a Mac.  Any thoughts?


On Thu, May 24, 2012 at 7:40 PM, Edgar Friendly <thelema314 at gmail.com>wrote:

> On 05/21/2012 10:10 PM, Yaron Minsky wrote:
>
>> I've now uploaded all the original tarballs.  They are basically
>> unchanged from the pre-release.  The all-in-one tarball is called
>> "core-suite-108.00.tgz".
>>
>> y
>>
>
> Odb.ml supports auto-install of the core suite (by default into a user's
> home dir, but also system wide with --sudo or --have-perms) using the
> following command:
>
> ocaml odb.ml --package http://paste.debian.net/plain/**170991<http://paste.debian.net/plain/170991>
>
> Instead of using paste.debian.net to host the metadata, it could be put
> into some project web space.  My first preference is that core keep this
> file, but if you don't, I'll make it available in the odb project.
>
> E.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/c780ec54/attachment.html>

From orbitz at gmail.com  Thu May 24 21:19:21 2012
From: orbitz at gmail.com (orbitz)
Date: Thu, 24 May 2012 22:19:21 +0200
Subject: 108.00 release up on bitbucket
In-Reply-To: <4FBE7C76.1090904@gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<4FBE7275.5040200@gmail.com>
	<CAAHaHtnA=QArqpkU-hpeEStY2sXH_KN-7AwKLbzvsU5EchWEQA@mail.gmail.com>
	<4FBE7C76.1090904@gmail.com>
Message-ID: <CAAHaHt=X0zD75RNhNBK2G1exs8raxOW25M=0uABmnKqf1xjJsQ@mail.gmail.com>

That works like a charm.  I have been trying to get Core installing on my
Mac for almost a week without success, many thank you's.

On Thu, May 24, 2012 at 8:22 PM, Edgar Friendly <thelema314 at gmail.com>wrote:

> Oh yeah, dlls.  You'll have to let ocamlfind know where to find .so files
> installed by odb.  Any of the following should work:
>
> 1) echo $HOME/.odb/lib/stublibs | sudo tee -a `ocamlc -where`/ld.conf
> 2) export CAML_LD_LIBRARY_PATH=$HOME/.**odb/lib/stublibs
>
> Modify #2 if you're not using bash; iirc, it's not the default shell on
> osx.
>
> I've thought about detecting whether this is set properly so I can warn
> the user that it needs to be set, but don't have a good solution for this.
>  Any suggestions?
>
> E.
>
>
>
> On 05/24/2012 02:14 PM, orbitz wrote:
>
>> This failed for me with the following error:
>>
>> + ocamlfind ocamldep -package variantslib.syntax -package variantslib
>> -package unix -package threads -package sexplib.syntax -package sexplib
>> -package res -package pa_pipebang -package pa_ounit -package
>> fieldslib.syntax -package fieldslib -package bin_prot.syntax -package
>> bin_prot -package bigarray -syntax camlp4o -modules
>> lib/agnostic_mutex.mli > lib/agnostic_mutex.mli.depends
>> Camlp4: Uncaught exception: DynLoader.Error
>> ("/Users/orbitz/.odb/lib/bin_**prot/bin_prot.cma", "error loading shared
>> library: dllbin_prot_stubs.so: dlopen(dllbin_prot_stubs.so, 138): image
>> not found")
>>
>> Preprocessing error on file lib/agnostic_mutex.mli
>> Command exited with code 2.
>> Compilation unsuccessful after building 20 targets (0 cached) in 00:00:02.
>> E: Failure("Command '/Users/orbitz/bin/ocaml-3.12.**1/bin/ocamlbuild
>> lib/libcore_stubs.a lib/dllcore_stubs.so lib/core.cma lib/core.cmxs
>> lib/core.cmxa lib/core.a top/core_top.cma top/core_top.cmxs
>> top/core_top.cmxa top/core_top.a -tag debug' terminated with error code
>> 10")
>> Exception: Failure "Could not build core".
>>
>>
>> I am on a Mac.  Any thoughts?
>>
>>
>> On Thu, May 24, 2012 at 7:40 PM, Edgar Friendly <thelema314 at gmail.com
>> <mailto:thelema314 at gmail.com>> wrote:
>>
>>    On 05/21/2012 10:10 PM, Yaron Minsky wrote:
>>
>>        I've now uploaded all the original tarballs.  They are basically
>>        unchanged from the pre-release.  The all-in-one tarball is called
>>        "core-suite-108.00.tgz".
>>
>>        y
>>
>>
>>    Odb.ml supports auto-install of the core suite (by default into a
>>    user's home dir, but also system wide with --sudo or --have-perms)
>>    using the following command:
>>
>>    ocaml odb.ml <http://odb.ml> --package
>>    http://paste.debian.net/plain/**__170991<http://paste.debian.net/plain/__170991>
>>    <http://paste.debian.net/**plain/170991<http://paste.debian.net/plain/170991>
>> >
>>
>>    Instead of using paste.debian.net <http://paste.debian.net> to host
>>
>>    the metadata, it could be put into some project web space.  My first
>>    preference is that core keep this file, but if you don't, I'll make
>>    it available in the odb project.
>>
>>    E.
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/c46382ee/attachment.html>

From yminsky at janestreet.com  Fri May 25 03:57:16 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 24 May 2012 22:57:16 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
Message-ID: <CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>

Urgh.  The -pre2 mistake is mine.  I'll get that fixed.

As for the other mistake, I'll see if we can replicate.

y

On Thu, May 24, 2012 at 6:29 PM, <fermin.reig at gmail.com> wrote:

>
> I've downloaded the all-in-one tarball, and tried to build with
> ./build-and-install -s. First I had to edit  build-common.sh, to delete
> "-pre2" in all the names. After that, I get this error:
>
>  % ./build-and-install -s
> => type_conv-108.00
>    * configuring
>    * compiling
> ocaml setup.ml -build
> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
> -syntax camlp4o -modules lib/pa_type_conv.ml > lib/pa_type_conv.ml.depends
> + ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
> -syntax camlp4o -modules lib/pa_type_conv.ml > lib/pa_type_conv.ml.depends
> File "lib/pa_type_conv.ml", line 329, characters 23-29:
> While expanding quotation "module_type" in a position of "patt":
>   Parse error: illegal begin of quotation of module type
>
> Preprocessing error on file lib/pa_type_conv.ml
> Command exited with code 2.
> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag debug'
> terminated with error code 10")
> make: *** [build] Error 1
> *** ERROR: Couldn't compile type_conv
>
> This is the relevant output of #list;; in ocaml:
>
> ...
> findlib             (version: 1.2.7)
> num                 (version: [distributed with Ocaml])
> num-top             (version: 1.2.7)
> num.core            (version: [internal])
> oUnit               (version: 1.1.0)
> ocamlbuild          (version: [distributed with Ocaml])
> pcre                (version: 6.2.2)
> res                 (version: 3.2.0)
> ...
>
> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/015f6bad/attachment.html>

From yminsky at janestreet.com  Fri May 25 04:04:03 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 24 May 2012 23:04:03 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
	<CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
Message-ID: <CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>

I just uploaded a tarball that fixes the build-common.sh bug.

One question about your setup: which version of OCaml are you using?

y

On Thu, May 24, 2012 at 10:57 PM, Yaron Minsky <yminsky at janestreet.com>wrote:

> Urgh.  The -pre2 mistake is mine.  I'll get that fixed.
>
> As for the other mistake, I'll see if we can replicate.
>
> y
>
>
> On Thu, May 24, 2012 at 6:29 PM, <fermin.reig at gmail.com> wrote:
>
>>
>> I've downloaded the all-in-one tarball, and tried to build with
>> ./build-and-install -s. First I had to edit  build-common.sh, to delete
>> "-pre2" in all the names. After that, I get this error:
>>
>>  % ./build-and-install -s
>> => type_conv-108.00
>>    * configuring
>>    * compiling
>> ocaml setup.ml -build
>> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>> lib/pa_type_conv.ml.depends
>> + ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>> lib/pa_type_conv.ml.depends
>> File "lib/pa_type_conv.ml", line 329, characters 23-29:
>> While expanding quotation "module_type" in a position of "patt":
>>   Parse error: illegal begin of quotation of module type
>>
>> Preprocessing error on file lib/pa_type_conv.ml
>> Command exited with code 2.
>> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag debug'
>> terminated with error code 10")
>> make: *** [build] Error 1
>> *** ERROR: Couldn't compile type_conv
>>
>> This is the relevant output of #list;; in ocaml:
>>
>> ...
>> findlib             (version: 1.2.7)
>> num                 (version: [distributed with Ocaml])
>> num-top             (version: 1.2.7)
>> num.core            (version: [internal])
>> oUnit               (version: 1.1.0)
>> ocamlbuild          (version: [distributed with Ocaml])
>> pcre                (version: 6.2.2)
>> res                 (version: 3.2.0)
>> ...
>>
>> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/6d00f398/attachment.html>

From yminsky at janestreet.com  Fri May 25 04:07:05 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 24 May 2012 23:07:05 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
	<CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
	<CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>
Message-ID: <CACLX4jTz0gwHL5QyQBQxLFuNKvgM2PE-mOY4YjtuVTj61K7v0g@mail.gmail.com>

>From looking here:

   https://launchpad.net/ubuntu/oneiric/i386/ocaml-base

it looks like ubuntu 11.10 runs 3.12.0.  That's a very buggy release when
it comes to camlp4, and I suspect those bugs prevent the versions of
type-conv in core-108.00 from compiling.  If you upgrade to 3.12.1, I would
expect things to work fine.

y

On Thu, May 24, 2012 at 11:04 PM, Yaron Minsky <yminsky at janestreet.com>wrote:

> I just uploaded a tarball that fixes the build-common.sh bug.
>
> One question about your setup: which version of OCaml are you using?
>
> y
>
>
> On Thu, May 24, 2012 at 10:57 PM, Yaron Minsky <yminsky at janestreet.com>wrote:
>
>> Urgh.  The -pre2 mistake is mine.  I'll get that fixed.
>>
>> As for the other mistake, I'll see if we can replicate.
>>
>> y
>>
>>
>> On Thu, May 24, 2012 at 6:29 PM, <fermin.reig at gmail.com> wrote:
>>
>>>
>>> I've downloaded the all-in-one tarball, and tried to build with
>>> ./build-and-install -s. First I had to edit  build-common.sh, to delete
>>> "-pre2" in all the names. After that, I get this error:
>>>
>>>  % ./build-and-install -s
>>> => type_conv-108.00
>>>    * configuring
>>>    * compiling
>>> ocaml setup.ml -build
>>> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>>> lib/pa_type_conv.ml.depends
>>> + ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>>> lib/pa_type_conv.ml.depends
>>> File "lib/pa_type_conv.ml", line 329, characters 23-29:
>>> While expanding quotation "module_type" in a position of "patt":
>>>   Parse error: illegal begin of quotation of module type
>>>
>>> Preprocessing error on file lib/pa_type_conv.ml
>>> Command exited with code 2.
>>> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag
>>> debug' terminated with error code 10")
>>> make: *** [build] Error 1
>>> *** ERROR: Couldn't compile type_conv
>>>
>>> This is the relevant output of #list;; in ocaml:
>>>
>>> ...
>>> findlib             (version: 1.2.7)
>>> num                 (version: [distributed with Ocaml])
>>> num-top             (version: 1.2.7)
>>> num.core            (version: [internal])
>>> oUnit               (version: 1.1.0)
>>> ocamlbuild          (version: [distributed with Ocaml])
>>> pcre                (version: 6.2.2)
>>> res                 (version: 3.2.0)
>>> ...
>>>
>>> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/c49abb45/attachment.html>

From fermin.reig at gmail.com  Fri May 25 17:31:10 2012
From: fermin.reig at gmail.com (fermin.reig at gmail.com)
Date: Fri, 25 May 2012 09:31:10 -0700 (PDT)
Subject: 108.00 release up on bitbucket
In-Reply-To: <CACLX4jTz0gwHL5QyQBQxLFuNKvgM2PE-mOY4YjtuVTj61K7v0g@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
 <ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
 <CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
 <CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>
 <CACLX4jTz0gwHL5QyQBQxLFuNKvgM2PE-mOY4YjtuVTj61K7v0g@mail.gmail.com>
Message-ID: <10198a3f-d1dc-4dac-b302-675f862b1023@googlegroups.com>

You're right, I'm on 3.12.0. I'll upgrade and try that. 
Thanks

On Friday, 25 May 2012 04:07:05 UTC+1, Yaron Minsky wrote:
>
> From looking here:
>
>    https://launchpad.net/ubuntu/oneiric/i386/ocaml-base
>
> it looks like ubuntu 11.10 runs 3.12.0.  That's a very buggy release when 
> it comes to camlp4, and I suspect those bugs prevent the versions of 
> type-conv in core-108.00 from compiling.  If you upgrade to 3.12.1, I would 
> expect things to work fine.
>
> y
>
> On Thu, May 24, 2012 at 11:04 PM, Yaron Minsky wrote:
>
>> I just uploaded a tarball that fixes the build-common.sh bug.
>>
>> One question about your setup: which version of OCaml are you using?
>>
>> y
>>
>>
>> On Thu, May 24, 2012 at 10:57 PM, Yaron Minsky  wrote:
>>
>>> Urgh.  The -pre2 mistake is mine.  I'll get that fixed.
>>>
>>> As for the other mistake, I'll see if we can replicate.
>>>
>>> y
>>>
>>>
>>> On Thu, May 24, 2012 at 6:29 PM, Fermin Reig wrote:
>>>
>>>>
>>>> I've downloaded the all-in-one tarball, and tried to build with 
>>>> ./build-and-install -s. First I had to edit  build-common.sh, to delete 
>>>> "-pre2" in all the names. After that, I get this error:
>>>>
>>>>  % ./build-and-install -s
>>>> => type_conv-108.00
>>>>    * configuring
>>>>    * compiling
>>>> ocaml setup.ml -build 
>>>> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend 
>>>> -syntax camlp4o -modules lib/pa_type_conv.ml > 
>>>> lib/pa_type_conv.ml.depends
>>>> + ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend 
>>>> -syntax camlp4o -modules lib/pa_type_conv.ml > 
>>>> lib/pa_type_conv.ml.depends
>>>> File "lib/pa_type_conv.ml", line 329, characters 23-29:
>>>> While expanding quotation "module_type" in a position of "patt":
>>>>   Parse error: illegal begin of quotation of module type
>>>>
>>>> Preprocessing error on file lib/pa_type_conv.ml
>>>> Command exited with code 2.
>>>> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag 
>>>> debug' terminated with error code 10")
>>>> make: *** [build] Error 1
>>>> *** ERROR: Couldn't compile type_conv
>>>>
>>>> This is the relevant output of #list;; in ocaml:
>>>>
>>>> ...
>>>> findlib             (version: 1.2.7)
>>>> num                 (version: [distributed with Ocaml])
>>>> num-top             (version: 1.2.7)
>>>> num.core            (version: [internal])
>>>> oUnit               (version: 1.1.0)
>>>> ocamlbuild          (version: [distributed with Ocaml])
>>>> pcre                (version: 6.2.2)
>>>> res                 (version: 3.2.0)
>>>> ...
>>>>
>>>> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>>>>
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120525/f9172e53/attachment.html>

From kakadu.hafanana at gmail.com  Fri May 25 20:39:39 2012
From: kakadu.hafanana at gmail.com (Kakadu)
Date: Fri, 25 May 2012 12:39:39 -0700 (PDT)
Subject: Compilation problem on 32bit machine
Message-ID: <dc64b13a-d76a-4bb0-9b92-69361f27f1da@googlegroups.com>

Hi all!

I've cloned https://bitbucket.org/yminsky/ocaml-core and executed 
./build-and-install script. It seems that compilation of core package uses 
some features of 64bit systems. http://paste.in.ua/4284/#5 Any ideas?

Best wishes,
Kakadu

kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ make
ocaml setup.ml -build 
Finished, 0 targets (0 cached) in 00:00:00.
+ ocamlfind ocamlc -ccopt -D_LARGEFILE64_SOURCE -ccopt -pipe -ccopt -g 
-ccopt -fPIC -ccopt -O2 -ccopt -fomit-frame-pointer -ccopt -fsigned-char 
-ccopt -Wall -ccopt -pedantic -ccopt -Wextra -ccopt -Wunused -ccopt 
-Wno-long-long -c lib/backtrace_stubs.c
lib/backtrace_stubs.c:19:4: error: #error "backtrace_stubs.c is for x86-64 
only"
Command exited with code 2.
Compilation unsuccessful after building 1 target (0 cached) in 00:00:00.
E: Failure("Command '/usr/bin/ocamlbuild lib/libcore_stubs.a 
lib/dllcore_stubs.so lib/core.cma lib/core.cmxs lib/core.cmxa lib/core.a 
top/core_top.cma top/core_top.cmxs top/core_top.cmxa top/core_top.a -tag 
debug' terminated with error code 10")
make: *** [build] Error 1
kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ head lib/backtrace_stubs.c -n 
20
/* Dumping of OCaml stack backtraces for x86-64.

   Much of this module is taken from the OCaml source.
*/

#include "config.h"
#ifdef JSC_LINUX_EXT

#include <caml/memory.h>
#include <caml/misc.h>
#include <caml/mlvalues.h>
#include <caml/alloc.h>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>

#ifndef __x86_64__
  #error "backtrace_stubs.c is for x86-64 only"
#endif
kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ uname -a
Linux uebuntu 3.2.0-24-generic-pae #37-Ubuntu SMP Wed Apr 25 10:47:59 UTC 
2012 i686 i686 i386 GNU/Linux
kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ cat setup.data
ocamlfind="/usr/bin/ocamlfind"
ocamlc="/usr/bin/ocamlc.opt"
ocamlopt="/usr/bin/ocamlopt.opt"
ocamlbuild="/usr/bin/ocamlbuild"
pkg_name="core"
pkg_version="108.00-pre2"
os_type="Unix"
system="linux_elf"
architecture="i386"
ccomp_type="cc"
ocaml_version="3.12.1"
standard_library_default="/usr/lib/ocaml"
standard_library="/usr/lib/ocaml"
standard_runtime="/usr/bin/ocamlrun"
bytecomp_c_compiler="gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT -fPIC"
native_c_compiler="gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT"
model="default"
ext_obj=".o"
ext_asm=".s"
ext_lib=".a"
ext_dll=".so"
default_executable_name="a.out"
systhread_supported="true"
prefix="/usr/local"
exec_prefix="$prefix"
bindir="$exec_prefix/bin"
sbindir="$exec_prefix/sbin"
libexecdir="$exec_prefix/libexec"
sysconfdir="$prefix/etc"
sharedstatedir="$prefix/com"
localstatedir="$prefix/var"
libdir="$exec_prefix/lib"
datarootdir="$prefix/share"
datadir="$datarootdir"
infodir="$datarootdir/info"
localedir="$datarootdir/locale"
mandir="$datarootdir/man"
docdir="$datarootdir/doc/$pkg_name"
htmldir="$docdir"
dvidir="$docdir"
pdfdir="$docdir"
psdir="$docdir"
findlib_version="1.2.7"
is_native="true"
suffix_program=""
rm="rm -f"
rmdir="rm -rf"
debug="true"
profile="false"
native_dynlink="true"
ocamlbuildflags=""
linux="true"
posix_timers="true"
docs="true"
tests="false"
ocaml_version_ge_3_12="3.12.1"
findlib_version_ge_1_2_7="1.2.7"
pkg_variantslib="/usr/local/lib/ocaml/3.12.1/variantslib"
pkg_variantslib_syntax="/usr/local/lib/ocaml/3.12.1/variantslib"
pkg_sexplib_syntax="/usr/local/lib/ocaml/3.12.1/sexplib"
pkg_sexplib="/usr/local/lib/ocaml/3.12.1/sexplib"
pkg_fieldslib_syntax="/usr/local/lib/ocaml/3.12.1/fieldslib"
pkg_fieldslib="/usr/local/lib/ocaml/3.12.1/fieldslib"
pkg_bin_prot="/usr/local/lib/ocaml/3.12.1/bin_prot"
pkg_bin_prot_syntax="/usr/local/lib/ocaml/3.12.1/bin_prot"
pkg_bigarray="/usr/lib/ocaml"
pkg_pa_ounit="/usr/local/lib/ocaml/3.12.1/pa_ounit"
pkg_pa_pipebang="/usr/local/lib/ocaml/3.12.1/pa_pipebang"
pkg_res="/usr/lib/ocaml/res"
pkg_unix="/usr/lib/ocaml"
pkg_threads="/usr/lib/ocaml"
ocamldoc="/usr/bin/ocamldoc"
kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ 




-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120525/f76895b8/attachment.html>

From kakadu.hafanana at gmail.com  Fri May 25 21:42:47 2012
From: kakadu.hafanana at gmail.com (Kakadu)
Date: Fri, 25 May 2012 13:42:47 -0700 (PDT)
Subject: Compilation problem on 32bit machine
In-Reply-To: <CAEDxudwT9huL8SLPr6nswtqYKP0wiMhokjsffWQXq6bMnXmvNQ@mail.gmail.com>
References: <dc64b13a-d76a-4bb0-9b92-69361f27f1da@googlegroups.com>
 <CAEDxudwT9huL8SLPr6nswtqYKP0wiMhokjsffWQXq6bMnXmvNQ@mail.gmail.com>
Message-ID: <e8707063-a934-438c-99b6-eb10d5be2215@googlegroups.com>


it's OK now.

On Saturday, May 26, 2012 12:22:00 AM UTC+4, Yury wrote:
>
>
> Could you 
> try changing the second line in that file to "#if (defined 
> JSC_LINUX_EXT && defined JSC_ARCH_x86_64)" 
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120525/3bdbf269/attachment.html>

From yury.sulsky at gmail.com  Fri May 25 21:22:00 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Fri, 25 May 2012 16:22:00 -0400
Subject: Compilation problem on 32bit machine
In-Reply-To: <dc64b13a-d76a-4bb0-9b92-69361f27f1da@googlegroups.com>
References: <dc64b13a-d76a-4bb0-9b92-69361f27f1da@googlegroups.com>
Message-ID: <CAEDxudwT9huL8SLPr6nswtqYKP0wiMhokjsffWQXq6bMnXmvNQ@mail.gmail.com>


Thanks Kakadu!

We'll make sure we don't try to build that on 32-bit linux. Could you
try changing the second line in that file to "#if (defined
JSC_LINUX_EXT && defined JSC_ARCH_x86_64)" and let us know if there
are any other issues building on 32-bit linux?

Thanks,
Yury

On Fri, May 25, 2012 at 3:39 PM, Kakadu <kakadu.hafanana at gmail.com> wrote:
> Hi all!
>
> I've cloned https://bitbucket.org/yminsky/ocaml-core and executed
> ./build-and-install script. It seems that compilation of core package uses
> some features of 64bit systems. http://paste.in.ua/4284/#5 Any ideas?
>
> Best wishes,
> Kakadu
>
> kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ make
> ocaml setup.ml -build
> Finished, 0 targets (0 cached) in 00:00:00.
> + ocamlfind ocamlc -ccopt -D_LARGEFILE64_SOURCE -ccopt -pipe -ccopt -g
> -ccopt -fPIC -ccopt -O2 -ccopt -fomit-frame-pointer -ccopt -fsigned-char
> -ccopt -Wall -ccopt -pedantic -ccopt -Wextra -ccopt -Wunused -ccopt
> -Wno-long-long -c lib/backtrace_stubs.c
> lib/backtrace_stubs.c:19:4: error: #error "backtrace_stubs.c is for x86-64
> only"
> Command exited with code 2.
> Compilation unsuccessful after building 1 target (0 cached) in 00:00:00.
> E: Failure("Command '/usr/bin/ocamlbuild lib/libcore_stubs.a
> lib/dllcore_stubs.so lib/core.cma lib/core.cmxs lib/core.cmxa lib/core.a
> top/core_top.cma top/core_top.cmxs top/core_top.cmxa top/core_top.a -tag
> debug' terminated with error code 10")
> make: *** [build] Error 1
> kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ head lib/backtrace_stubs.c -n
> 20
> /* Dumping of OCaml stack backtraces for x86-64.
>
> ?? Much of this module is taken from the OCaml source.
> */
>
> #include "config.h"
> #ifdef JSC_LINUX_EXT
>
> #include <caml/memory.h>
> #include <caml/misc.h>
> #include <caml/mlvalues.h>
> #include <caml/alloc.h>
> #include <string.h>
> #include <stdio.h>
> #include <stdlib.h>
> #include <stdarg.h>
>
> #ifndef __x86_64__
> ? #error "backtrace_stubs.c is for x86-64 only"
> #endif
> kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ uname -a
> Linux uebuntu 3.2.0-24-generic-pae #37-Ubuntu SMP Wed Apr 25 10:47:59 UTC
> 2012 i686 i686 i386 GNU/Linux
> kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ cat setup.data
> ocamlfind="/usr/bin/ocamlfind"
> ocamlc="/usr/bin/ocamlc.opt"
> ocamlopt="/usr/bin/ocamlopt.opt"
> ocamlbuild="/usr/bin/ocamlbuild"
> pkg_name="core"
> pkg_version="108.00-pre2"
> os_type="Unix"
> system="linux_elf"
> architecture="i386"
> ccomp_type="cc"
> ocaml_version="3.12.1"
> standard_library_default="/usr/lib/ocaml"
> standard_library="/usr/lib/ocaml"
> standard_runtime="/usr/bin/ocamlrun"
> bytecomp_c_compiler="gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT -fPIC"
> native_c_compiler="gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT"
> model="default"
> ext_obj=".o"
> ext_asm=".s"
> ext_lib=".a"
> ext_dll=".so"
> default_executable_name="a.out"
> systhread_supported="true"
> prefix="/usr/local"
> exec_prefix="$prefix"
> bindir="$exec_prefix/bin"
> sbindir="$exec_prefix/sbin"
> libexecdir="$exec_prefix/libexec"
> sysconfdir="$prefix/etc"
> sharedstatedir="$prefix/com"
> localstatedir="$prefix/var"
> libdir="$exec_prefix/lib"
> datarootdir="$prefix/share"
> datadir="$datarootdir"
> infodir="$datarootdir/info"
> localedir="$datarootdir/locale"
> mandir="$datarootdir/man"
> docdir="$datarootdir/doc/$pkg_name"
> htmldir="$docdir"
> dvidir="$docdir"
> pdfdir="$docdir"
> psdir="$docdir"
> findlib_version="1.2.7"
> is_native="true"
> suffix_program=""
> rm="rm -f"
> rmdir="rm -rf"
> debug="true"
> profile="false"
> native_dynlink="true"
> ocamlbuildflags=""
> linux="true"
> posix_timers="true"
> docs="true"
> tests="false"
> ocaml_version_ge_3_12="3.12.1"
> findlib_version_ge_1_2_7="1.2.7"
> pkg_variantslib="/usr/local/lib/ocaml/3.12.1/variantslib"
> pkg_variantslib_syntax="/usr/local/lib/ocaml/3.12.1/variantslib"
> pkg_sexplib_syntax="/usr/local/lib/ocaml/3.12.1/sexplib"
> pkg_sexplib="/usr/local/lib/ocaml/3.12.1/sexplib"
> pkg_fieldslib_syntax="/usr/local/lib/ocaml/3.12.1/fieldslib"
> pkg_fieldslib="/usr/local/lib/ocaml/3.12.1/fieldslib"
> pkg_bin_prot="/usr/local/lib/ocaml/3.12.1/bin_prot"
> pkg_bin_prot_syntax="/usr/local/lib/ocaml/3.12.1/bin_prot"
> pkg_bigarray="/usr/lib/ocaml"
> pkg_pa_ounit="/usr/local/lib/ocaml/3.12.1/pa_ounit"
> pkg_pa_pipebang="/usr/local/lib/ocaml/3.12.1/pa_pipebang"
> pkg_res="/usr/lib/ocaml/res"
> pkg_unix="/usr/lib/ocaml"
> pkg_threads="/usr/lib/ocaml"
> ocamldoc="/usr/bin/ocamldoc"
> kakaduqt at uebuntu:~/prog/ocaml-core/base/core$
>
>
>
>


From yury.sulsky at gmail.com  Sat May 26 00:35:38 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Fri, 25 May 2012 19:35:38 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <10198a3f-d1dc-4dac-b302-675f862b1023@googlegroups.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
	<CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
	<CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>
	<CACLX4jTz0gwHL5QyQBQxLFuNKvgM2PE-mOY4YjtuVTj61K7v0g@mail.gmail.com>
	<10198a3f-d1dc-4dac-b302-675f862b1023@googlegroups.com>
Message-ID: <CAEDxudzu2GzUJsan7uQadhRH5NUR9VP-__wZVjYKhec9agnfkQ@mail.gmail.com>

Thanks Fermin, we'll update the required ocaml version in our packages to
be >= 3.12.1.

Yury
On May 25, 2012 6:59 PM, <fermin.reig at gmail.com> wrote:

> You're right, I'm on 3.12.0. I'll upgrade and try that.
> Thanks
>
> On Friday, 25 May 2012 04:07:05 UTC+1, Yaron Minsky wrote:
>>
>> From looking here:
>>
>>    https://launchpad.net/ubuntu/**oneiric/i386/ocaml-base<https://launchpad.net/ubuntu/oneiric/i386/ocaml-base>
>>
>> it looks like ubuntu 11.10 runs 3.12.0.  That's a very buggy release when
>> it comes to camlp4, and I suspect those bugs prevent the versions of
>> type-conv in core-108.00 from compiling.  If you upgrade to 3.12.1, I would
>> expect things to work fine.
>>
>> y
>>
>> On Thu, May 24, 2012 at 11:04 PM, Yaron Minsky wrote:
>>
>>> I just uploaded a tarball that fixes the build-common.sh bug.
>>>
>>> One question about your setup: which version of OCaml are you using?
>>>
>>> y
>>>
>>>
>>> On Thu, May 24, 2012 at 10:57 PM, Yaron Minsky  wrote:
>>>
>>>> Urgh.  The -pre2 mistake is mine.  I'll get that fixed.
>>>>
>>>> As for the other mistake, I'll see if we can replicate.
>>>>
>>>> y
>>>>
>>>>
>>>> On Thu, May 24, 2012 at 6:29 PM, Fermin Reig wrote:
>>>>
>>>>>
>>>>> I've downloaded the all-in-one tarball, and tried to build with
>>>>> ./build-and-install -s. First I had to edit  build-common.sh, to delete
>>>>> "-pre2" in all the names. After that, I get this error:
>>>>>
>>>>>  % ./build-and-install -s
>>>>> => type_conv-108.00
>>>>>    * configuring
>>>>>    * compiling
>>>>> ocaml setup.ml -build
>>>>> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>>>>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>>>>> lib/pa_type_conv.ml.depends
>>>>> + ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>>>>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>>>>> lib/pa_type_conv.ml.depends
>>>>> File "lib/pa_type_conv.ml", line 329, characters 23-29:
>>>>> While expanding quotation "module_type" in a position of "patt":
>>>>>   Parse error: illegal begin of quotation of module type
>>>>>
>>>>> Preprocessing error on file lib/pa_type_conv.ml
>>>>> Command exited with code 2.
>>>>> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag
>>>>> debug' terminated with error code 10")
>>>>> make: *** [build] Error 1
>>>>> *** ERROR: Couldn't compile type_conv
>>>>>
>>>>> This is the relevant output of #list;; in ocaml:
>>>>>
>>>>> ...
>>>>> findlib             (version: 1.2.7)
>>>>> num                 (version: [distributed with Ocaml])
>>>>> num-top             (version: 1.2.7)
>>>>> num.core            (version: [internal])
>>>>> oUnit               (version: 1.1.0)
>>>>> ocamlbuild          (version: [distributed with Ocaml])
>>>>> pcre                (version: 6.2.2)
>>>>> res                 (version: 3.2.0)
>>>>> ...
>>>>>
>>>>> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>>>>>
>>>>
>>>>
>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120525/d06ce8ba/attachment.html>

From yminsky at janestreet.com  Sat May 26 02:42:35 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 25 May 2012 21:42:35 -0400
Subject: 108.00.01 Released
Message-ID: <CACLX4jSnBa2h1sHvte7XE8LmMQuN+3mTa6Nre1cEmseLtfY25Q@mail.gmail.com>

This is a minor tweak on top of 108.00; 108.00.01 contains just some small
build fixes for 64-bit platforms.

Tarballs are on the bitbucket site.

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120525/e7038820/attachment.html>

From dapilki at gmail.com  Sat May 26 18:33:24 2012
From: dapilki at gmail.com (Alexandre Pilkiewicz)
Date: Sat, 26 May 2012 10:33:24 -0700 (PDT)
Subject: Licensing
In-Reply-To: <CACLX4jS7TwoszkbM1__-izpfsB6JJaA6KAbSK2CGBiZdMUn4Jg@mail.gmail.com>
References: <CACLX4jS7TwoszkbM1__-izpfsB6JJaA6KAbSK2CGBiZdMUn4Jg@mail.gmail.com>
Message-ID: <11fdcc8b-7aac-491c-82dd-dc7004d11927@googlegroups.com>

Hi!

On Wednesday, March 7, 2012 5:40:10 PM UTC-5, Yaron Minsky wrote:
>
>
> First, we've decided to relicense the Core suite under the Apache license.
>
>  This is a great news! You should probably update this 
page: https://ocaml.janestreet.com/?q=node/13

Cheers,
Alex
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120526/c1833747/attachment.html>

From yminsky at janestreet.com  Sat May 26 19:46:07 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 26 May 2012 14:46:07 -0400
Subject: Licensing
In-Reply-To: <11fdcc8b-7aac-491c-82dd-dc7004d11927@googlegroups.com>
References: <CACLX4jS7TwoszkbM1__-izpfsB6JJaA6KAbSK2CGBiZdMUn4Jg@mail.gmail.com>
	<11fdcc8b-7aac-491c-82dd-dc7004d11927@googlegroups.com>
Message-ID: <CACLX4jS0PkiwiURvQtc3H87+ZHWd5-kjx2bP=MtUJYN2RwoC-w@mail.gmail.com>

Done.  I just updated it to be a pointer to our bitbucket site.

y

On Sat, May 26, 2012 at 1:33 PM, Alexandre Pilkiewicz <dapilki at gmail.com>wrote:

> Hi!
>
>
> On Wednesday, March 7, 2012 5:40:10 PM UTC-5, Yaron Minsky wrote:
>>
>>
>> First, we've decided to relicense the Core suite under the Apache license.
>>
>>  This is a great news! You should probably update this page:
> https://ocaml.janestreet.com/?q=node/13
>
> Cheers,
> Alex
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120526/a99f7bf1/attachment.html>

From alexandre.pilkiewicz at polytechnique.org  Sat May 26 19:48:11 2012
From: alexandre.pilkiewicz at polytechnique.org (Alexandre Pilkiewicz)
Date: Sat, 26 May 2012 14:48:11 -0400
Subject: Licensing
In-Reply-To: <CACLX4jS0PkiwiURvQtc3H87+ZHWd5-kjx2bP=MtUJYN2RwoC-w@mail.gmail.com>
References: <CACLX4jS7TwoszkbM1__-izpfsB6JJaA6KAbSK2CGBiZdMUn4Jg@mail.gmail.com>
 <11fdcc8b-7aac-491c-82dd-dc7004d11927@googlegroups.com> <CACLX4jS0PkiwiURvQtc3H87+ZHWd5-kjx2bP=MtUJYN2RwoC-w@mail.gmail.com>
Message-ID: <CAH2fdNbrhiakz_TBSf1thR2H81n7LhxhxTU2z3rLR2L0ZiLNgw@mail.gmail.com>


On Sat, May 26, 2012 at 2:46 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Done. ?I just updated it to be a pointer to our bitbucket site.

Thanks!


From fermin.reig at gmail.com  Mon May 28 09:12:20 2012
From: fermin.reig at gmail.com (Fermin Reig)
Date: Mon, 28 May 2012 01:12:20 -0700 (PDT)
Subject: 108.00 release up on bitbucket
In-Reply-To: <CAEDxudzu2GzUJsan7uQadhRH5NUR9VP-__wZVjYKhec9agnfkQ@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
 <ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
 <CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
 <CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>
 <CACLX4jTz0gwHL5QyQBQxLFuNKvgM2PE-mOY4YjtuVTj61K7v0g@mail.gmail.com>
 <10198a3f-d1dc-4dac-b302-675f862b1023@googlegroups.com>
 <CAEDxudzu2GzUJsan7uQadhRH5NUR9VP-__wZVjYKhec9agnfkQ@mail.gmail.com>
Message-ID: <5a2717c8-c338-4927-890b-80601e92bccc@googlegroups.com>

Great, thanks. I've been able to build core 108.00.01 on ubuntu 11.10 with 
ocaml 3.12.1. One other question: the current build script on bitbucket 
doesn't support building a local copy of the docs, or does it? If so, can 
you tell me how? (and perhaps it could also be mentioned in the README 
file).

Thanks

On Saturday, 26 May 2012 00:35:38 UTC+1, Yury wrote:
>
> Thanks Fermin, we'll update the required ocaml version in our packages to 
> be >= 3.12.1.
>
> Yury 
> On May 25, 2012 6:59 PM, Fermin Reig wrote:
>
>> You're right, I'm on 3.12.0. I'll upgrade and try that. 
>> Thanks
>>
>> On Friday, 25 May 2012 04:07:05 UTC+1, Yaron Minsky wrote:
>>>
>>> From looking here:
>>>
>>>    https://launchpad.net/ubuntu/**oneiric/i386/ocaml-base<https://launchpad.net/ubuntu/oneiric/i386/ocaml-base>
>>>
>>> it looks like ubuntu 11.10 runs 3.12.0.  That's a very buggy release 
>>> when it comes to camlp4, and I suspect those bugs prevent the versions of 
>>> type-conv in core-108.00 from compiling.  If you upgrade to 3.12.1, I would 
>>> expect things to work fine.
>>>
>>> y
>>>
>>> On Thu, May 24, 2012 at 11:04 PM, Yaron Minsky wrote:
>>>
>>>> I just uploaded a tarball that fixes the build-common.sh bug.
>>>>
>>>> One question about your setup: which version of OCaml are you using?
>>>>
>>>> y
>>>>
>>>>
>>>> On Thu, May 24, 2012 at 10:57 PM, Yaron Minsky  wrote:
>>>>
>>>>> Urgh.  The -pre2 mistake is mine.  I'll get that fixed.
>>>>>
>>>>> As for the other mistake, I'll see if we can replicate.
>>>>>
>>>>> y
>>>>>
>>>>>
>>>>> On Thu, May 24, 2012 at 6:29 PM, Fermin Reig wrote:
>>>>>
>>>>>>
>>>>>> I've downloaded the all-in-one tarball, and tried to build with 
>>>>>> ./build-and-install -s. First I had to edit  build-common.sh, to delete 
>>>>>> "-pre2" in all the names. After that, I get this error:
>>>>>>
>>>>>>  % ./build-and-install -s
>>>>>> => type_conv-108.00
>>>>>>    * configuring
>>>>>>    * compiling
>>>>>> ocaml setup.ml -build 
>>>>>> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend 
>>>>>> -syntax camlp4o -modules lib/pa_type_conv.ml > 
>>>>>> lib/pa_type_conv.ml.depends
>>>>>> + ocamlfind ocamldep -package camlp4.quotations -package 
>>>>>> camlp4.extend -syntax camlp4o -modules lib/pa_type_conv.ml > 
>>>>>> lib/pa_type_conv.ml.depends
>>>>>> File "lib/pa_type_conv.ml", line 329, characters 23-29:
>>>>>> While expanding quotation "module_type" in a position of "patt":
>>>>>>   Parse error: illegal begin of quotation of module type
>>>>>>
>>>>>> Preprocessing error on file lib/pa_type_conv.ml
>>>>>> Command exited with code 2.
>>>>>> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag 
>>>>>> debug' terminated with error code 10")
>>>>>> make: *** [build] Error 1
>>>>>> *** ERROR: Couldn't compile type_conv
>>>>>>
>>>>>> This is the relevant output of #list;; in ocaml:
>>>>>>
>>>>>> ...
>>>>>> findlib             (version: 1.2.7)
>>>>>> num                 (version: [distributed with Ocaml])
>>>>>> num-top             (version: 1.2.7)
>>>>>> num.core            (version: [internal])
>>>>>> oUnit               (version: 1.1.0)
>>>>>> ocamlbuild          (version: [distributed with Ocaml])
>>>>>> pcre                (version: 6.2.2)
>>>>>> res                 (version: 3.2.0)
>>>>>> ...
>>>>>>
>>>>>> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>>>>>>
>>>>>
>>>>>
>>>>
>>>  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120528/c233b707/attachment.html>

From kakadu.hafanana at gmail.com  Wed May 30 10:49:38 2012
From: kakadu.hafanana at gmail.com (Kakadu)
Date: Wed, 30 May 2012 02:49:38 -0700 (PDT)
Subject: My linking issue with unix_stubs
Message-ID: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>

Hallo, list!

I have problem with using core. It seems that solution is very simple but I 
haven't found it yet.

Best wishes,
Kakadu

$ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt -lrt 
main.ml
/usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function 
`unix_clock_gettime':
/home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823: 
undefined reference to `clock_gettime'
/usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function 
`unix_clock_settime':
/home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834: 
undefined reference to `clock_settime'
/usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function 
`unix_clock_getres':
/home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842: 
undefined reference to `clock_getres'
collect2: ld returned 1 exit status
File "caml_startup", line 1, characters 0-1:
Error: Error during linking

$ cat main.ml
open Core.Linux_ext 

let f = Clock.get_time

$

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120530/3489d6ca/attachment.html>

From kakadu.hafanana at gmail.com  Wed May 30 12:20:16 2012
From: kakadu.hafanana at gmail.com (Kakadu)
Date: Wed, 30 May 2012 04:20:16 -0700 (PDT)
Subject: My linking issue with unix_stubs
In-Reply-To: <CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
 <CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
Message-ID: <bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>

 Ubuntu 12.04 32bit. Core from bitbucket. OCaml from ubuntu.

Best wishes,
Kakadu


On Wednesday, May 30, 2012 2:54:22 PM UTC+4, Yaron Minsky wrote:
>
> More details please!  What platform are you running on? 
>
> On Wed, May 30, 2012 at 5:49 AM, Kakadu <kakadu.hafanana at gmail.com> 
> wrote: 
> > Hallo, list! 
> > 
> > I have problem with using core. It seems that solution is very simple 
> but I 
> > haven't found it yet. 
> > 
> > Best wishes, 
> > Kakadu 
> > 
> > $ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt -lrt 
> > main.ml 
> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> function 
> > `unix_clock_gettime': 
> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823: 
> > undefined reference to `clock_gettime' 
> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> function 
> > `unix_clock_settime': 
> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834: 
> > undefined reference to `clock_settime' 
> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> function 
> > `unix_clock_getres': 
> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842: 
> > undefined reference to `clock_getres' 
> > collect2: ld returned 1 exit status 
> > File "caml_startup", line 1, characters 0-1: 
> > Error: Error during linking 
> > 
> > $ cat main.ml 
> > open Core.Linux_ext 
> > 
> > let f = Clock.get_time 
> > 
> > $ 
> > 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120530/9f5b84ee/attachment.html>

From yminsky at janestreet.com  Wed May 30 11:54:22 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 30 May 2012 06:54:22 -0400
Subject: My linking issue with unix_stubs
In-Reply-To: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
Message-ID: <CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>


More details please!  What platform are you running on?

On Wed, May 30, 2012 at 5:49 AM, Kakadu <kakadu.hafanana at gmail.com> wrote:
> Hallo, list!
>
> I have problem with using core. It seems that solution is very simple but I
> haven't found it yet.
>
> Best wishes,
> Kakadu
>
> $ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt -lrt
> main.ml
> /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function
> `unix_clock_gettime':
> /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823:
> undefined reference to `clock_gettime'
> /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function
> `unix_clock_settime':
> /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834:
> undefined reference to `clock_settime'
> /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function
> `unix_clock_getres':
> /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842:
> undefined reference to `clock_getres'
> collect2: ld returned 1 exit status
> File "caml_startup", line 1, characters 0-1:
> Error: Error during linking
>
> $ cat main.ml
> open Core.Linux_ext
>
> let f = Clock.get_time
>
> $
>


From kakadu.hafanana at gmail.com  Wed May 30 17:18:24 2012
From: kakadu.hafanana at gmail.com (Kakadu)
Date: Wed, 30 May 2012 09:18:24 -0700 (PDT)
Subject: My linking issue with unix_stubs
In-Reply-To: <CACLX4jQbQkGxGEsDeiCwLr+Kef2MB8rVL1+1csnJczc50PDD1w@mail.gmail.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
 <CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
 <bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>
 <CACLX4jQbQkGxGEsDeiCwLr+Kef2MB8rVL1+1csnJczc50PDD1w@mail.gmail.com>
Message-ID: <da428317-453f-4f6e-bd71-80842f48521e@googlegroups.com>

Yaron,

The same with tarballs. Btw, I've discoverd that it is 32bit only bug.

Kakadu

On Wednesday, May 30, 2012 5:29:57 PM UTC+4, Yaron Minsky wrote:
>
> Have you tried the release tarballs?  Do they build and install cleanly? 
>
> y 
>
> On Wed, May 30, 2012 at 7:20 AM, Kakadu <kakadu.hafanana at gmail.com> 
> wrote: 
> >  Ubuntu 12.04 32bit. Core from bitbucket. OCaml from ubuntu. 
> > 
> > Best wishes, 
> > Kakadu 
> > 
> > 
> > 
> > On Wednesday, May 30, 2012 2:54:22 PM UTC+4, Yaron Minsky wrote: 
> >> 
> >> More details please!  What platform are you running on? 
> >> 
> >> On Wed, May 30, 2012 at 5:49 AM, Kakadu <kakadu.hafanana at gmail.com> 
> wrote: 
> >> > Hallo, list! 
> >> > 
> >> > I have problem with using core. It seems that solution is very simple 
> >> > but I 
> >> > haven't found it yet. 
> >> > 
> >> > Best wishes, 
> >> > Kakadu 
> >> > 
> >> > $ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt 
> -lrt 
> >> > main.ml 
> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> >> > function 
> >> > `unix_clock_gettime': 
> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823: 
> >> > undefined reference to `clock_gettime' 
> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> >> > function 
> >> > `unix_clock_settime': 
> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834: 
> >> > undefined reference to `clock_settime' 
> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> >> > function 
> >> > `unix_clock_getres': 
> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842: 
> >> > undefined reference to `clock_getres' 
> >> > collect2: ld returned 1 exit status 
> >> > File "caml_startup", line 1, characters 0-1: 
> >> > Error: Error during linking 
> >> > 
> >> > $ cat main.ml 
> >> > open Core.Linux_ext 
> >> > 
> >> > let f = Clock.get_time 
> >> > 
> >> > $ 
> >> > 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120530/cbf6d5be/attachment.html>

From yminsky at janestreet.com  Wed May 30 14:29:57 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 30 May 2012 09:29:57 -0400
Subject: My linking issue with unix_stubs
In-Reply-To: <bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
	<CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
	<bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>
Message-ID: <CACLX4jQbQkGxGEsDeiCwLr+Kef2MB8rVL1+1csnJczc50PDD1w@mail.gmail.com>


Have you tried the release tarballs?  Do they build and install cleanly?

y

On Wed, May 30, 2012 at 7:20 AM, Kakadu <kakadu.hafanana at gmail.com> wrote:
> ?Ubuntu 12.04 32bit. Core from bitbucket. OCaml from ubuntu.
>
> Best wishes,
> Kakadu
>
>
>
> On Wednesday, May 30, 2012 2:54:22 PM UTC+4, Yaron Minsky wrote:
>>
>> More details please! ?What platform are you running on?
>>
>> On Wed, May 30, 2012 at 5:49 AM, Kakadu <kakadu.hafanana at gmail.com> wrote:
>> > Hallo, list!
>> >
>> > I have problem with using core. It seems that solution is very simple
>> > but I
>> > haven't found it yet.
>> >
>> > Best wishes,
>> > Kakadu
>> >
>> > $ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt -lrt
>> > main.ml
>> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> > function
>> > `unix_clock_gettime':
>> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823:
>> > undefined reference to `clock_gettime'
>> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> > function
>> > `unix_clock_settime':
>> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834:
>> > undefined reference to `clock_settime'
>> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> > function
>> > `unix_clock_getres':
>> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842:
>> > undefined reference to `clock_getres'
>> > collect2: ld returned 1 exit status
>> > File "caml_startup", line 1, characters 0-1:
>> > Error: Error during linking
>> >
>> > $ cat main.ml
>> > open Core.Linux_ext
>> >
>> > let f = Clock.get_time
>> >
>> > $
>> >


From markus.mottl at gmail.com  Wed May 30 17:35:59 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 30 May 2012 12:35:59 -0400
Subject: Bitbucket patch queues
Message-ID: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>


Hi,

have you guys thought about creating a central patch queue for
ocaml-core?  I think the merge-related issues discussed previously
could be solved most easily if you maintained a central patch queue
repository.

I've just played around with my own Bitbucket patch queue of my fork,
and it seems to work just fine.  This allows me to avoid merging with
your repo by "rebasing", i.e. doing a "hg qpop -a", "hg pull -u" (from
your repo), "hg qpush -a".

But one problem still remains: how to submit patches to your
repository.  In the moment I commit my patches to my tree for you to
pull, there might be a race condition where you change your tree, thus
forcing a potentially bad merge.  This will eventually become a major
problem as the number of contributors grows.  Accepting pull requests
will obviously change your tree and thus increase chances for race
conditions with others.

The improved workflow would make sure that people never commit changes
to the main repository.  Instead they:

  * Fork your central patch queue instead of the ocaml-core repo.  You
will never accept pull requests for the latter!
  * Add new patches with "qnew".
  * Update them with "qrefresh" as they keep improving them.
  * Pull from your patch queue (rebasing their patches).
  * Commit their patches to their patch repository via "hg commit --mq"
  * Push them to their fork of your patch queue (hg push --mq)
  * Send pull requests to your central patch queue

Contributors will never run "qfinish" to apply patches to the main
repo.  Applying the patches will be your privilege after accepting
pull requests for the patch queue repo.  I think this will also make
your job of merging patches easier, because it is trivial to verify
that the main repository is untouched, i.e. that only the patch repo
contains changes.

I haven't tested the whole workflow yet, but it worked as expected for
me for those parts that I did test.  Please let me know if you want to
create a patch queue and test this approach with me.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Wed May 30 22:52:40 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 30 May 2012 17:52:40 -0400
Subject: Bitbucket patch queues
In-Reply-To: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>
References: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>
Message-ID: <CACLX4jRVN=W5dQy+sHKtrzz+yxuHNckr_d7TxPCwFDtxqC2VCA@mail.gmail.com>


On Wed, May 30, 2012 at 12:35 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> Hi,
>
> have you guys thought about creating a central patch queue for
> ocaml-core? ?I think the merge-related issues discussed previously
> could be solved most easily if you maintained a central patch queue
> repository.

No, but it does seem like a good idea.

> I've just played around with my own Bitbucket patch queue of my fork,
> and it seems to work just fine. ?This allows me to avoid merging with
> your repo by "rebasing", i.e. doing a "hg qpop -a", "hg pull -u" (from
> your repo), "hg qpush -a".

That makes a lot of sense.

> But one problem still remains: how to submit patches to your
> repository. ?In the moment I commit my patches to my tree for you to
> pull, there might be a race condition where you change your tree, thus
> forcing a potentially bad merge. ?This will eventually become a major
> problem as the number of contributors grows. ?Accepting pull requests
> will obviously change your tree and thus increase chances for race
> conditions with others.

This isn't a problem unless you pull in again from the main tree and
do a merge on your side.  Us adding patches on its own doesn't hurt
anything.

That said, it's an error prone process, and patch-queues are in some
sense much more natural.  I quite like the idea, really.

> The improved workflow would make sure that people never commit changes
> to the main repository. ?Instead they:
>
> ?* Fork your central patch queue instead of the ocaml-core repo. ?You
> will never accept pull requests for the latter!
> ?* Add new patches with "qnew".
> ?* Update them with "qrefresh" as they keep improving them.
> ?* Pull from your patch queue (rebasing their patches).
> ?* Commit their patches to their patch repository via "hg commit --mq"
> ?* Push them to their fork of your patch queue (hg push --mq)
> ?* Send pull requests to your central patch queue
>
> Contributors will never run "qfinish" to apply patches to the main
> repo. ?Applying the patches will be your privilege after accepting
> pull requests for the patch queue repo. ?I think this will also make
> your job of merging patches easier, because it is trivial to verify
> that the main repository is untouched, i.e. that only the patch repo
> contains changes.
>
> I haven't tested the whole workflow yet, but it worked as expected for
> me for those parts that I did test. ?Please let me know if you want to
> create a patch queue and test this approach with me.

Yes, let's do it.  Give me a couple of days to set it up.

y

> Regards,
> Markus
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Wed May 30 23:46:14 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 30 May 2012 18:46:14 -0400
Subject: Bitbucket patch queues
In-Reply-To: <CACLX4jRVN=W5dQy+sHKtrzz+yxuHNckr_d7TxPCwFDtxqC2VCA@mail.gmail.com>
References: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>
	<CACLX4jRVN=W5dQy+sHKtrzz+yxuHNckr_d7TxPCwFDtxqC2VCA@mail.gmail.com>
Message-ID: <CAP_800owLyUv8SbsKLV9E=r0VvpGfDhkM_7ECqQMVgp_abu+HA@mail.gmail.com>


On Wed, May 30, 2012 at 5:52 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Yes, let's do it. ?Give me a couple of days to set it up.

Great, thanks!

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at gmail.com  Thu May 31 01:03:39 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Wed, 30 May 2012 20:03:39 -0400
Subject: Bitbucket patch queues
In-Reply-To: <CAP_800owLyUv8SbsKLV9E=r0VvpGfDhkM_7ECqQMVgp_abu+HA@mail.gmail.com>
References: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>
	<CACLX4jRVN=W5dQy+sHKtrzz+yxuHNckr_d7TxPCwFDtxqC2VCA@mail.gmail.com>
	<CAP_800owLyUv8SbsKLV9E=r0VvpGfDhkM_7ECqQMVgp_abu+HA@mail.gmail.com>
Message-ID: <CADKNfhK9j=V1DtQL+Q07dV7G5fhphEtwRx7XXzWdNebCdQdbNw@mail.gmail.com>

Well, that was easy enough.  I just created it.  So, the next step is a
pull request, I suppose?

y

On Wed, May 30, 2012 at 6:46 PM, Markus Mottl <markus.mottl at gmail.com>wrote:

> On Wed, May 30, 2012 at 5:52 PM, Yaron Minsky <yminsky at janestreet.com>
> wrote:
> > Yes, let's do it.  Give me a couple of days to set it up.
>
> Great, thanks!
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120530/47bad580/attachment.html>

From yminsky at gmail.com  Thu May 31 01:24:31 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Wed, 30 May 2012 20:24:31 -0400
Subject: Bitbucket patch queues
In-Reply-To: <CADKNfhK9j=V1DtQL+Q07dV7G5fhphEtwRx7XXzWdNebCdQdbNw@mail.gmail.com>
References: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>
	<CACLX4jRVN=W5dQy+sHKtrzz+yxuHNckr_d7TxPCwFDtxqC2VCA@mail.gmail.com>
	<CAP_800owLyUv8SbsKLV9E=r0VvpGfDhkM_7ECqQMVgp_abu+HA@mail.gmail.com>
	<CADKNfhK9j=V1DtQL+Q07dV7G5fhphEtwRx7XXzWdNebCdQdbNw@mail.gmail.com>
Message-ID: <CADKNfhJXgM-YXSwwSK97L=KPxi-YNiRRNzLytRbeskusV0WfOQ@mail.gmail.com>

Here's the link to the patch queue, by the way.

   https://bitbucket.org/yminsky/ocaml-core-submissions

y

On Wed, May 30, 2012 at 8:03 PM, Yaron Minsky <yminsky at gmail.com> wrote:

> Well, that was easy enough.  I just created it.  So, the next step is a
> pull request, I suppose?
>
> y
>
>
> On Wed, May 30, 2012 at 6:46 PM, Markus Mottl <markus.mottl at gmail.com>wrote:
>
>> On Wed, May 30, 2012 at 5:52 PM, Yaron Minsky <yminsky at janestreet.com>
>> wrote:
>> > Yes, let's do it.  Give me a couple of days to set it up.
>>
>> Great, thanks!
>>
>> Regards,
>> Markus
>>
>> --
>> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120530/3ec5a760/attachment.html>

From yury.sulsky at gmail.com  Thu May 31 21:59:32 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 31 May 2012 16:59:32 -0400
Subject: My linking issue with unix_stubs
In-Reply-To: <da428317-453f-4f6e-bd71-80842f48521e@googlegroups.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
	<CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
	<bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>
	<CACLX4jQbQkGxGEsDeiCwLr+Kef2MB8rVL1+1csnJczc50PDD1w@mail.gmail.com>
	<da428317-453f-4f6e-bd71-80842f48521e@googlegroups.com>
Message-ID: <CAEDxudz33Js21FvOS2yKRRcjvizszFoHv3vZEGOEySJfDrAntg@mail.gmail.com>


Thanks very much Kadaku! If you look at:

$ ocamlobjinfo $(ocamlfind query core)/core.cma|grep 'Extra C object files'
Extra C object files: -lrt -lcore_stubs

Which is the wrong order. I wonder if gcc or ld have become stricter
in this respect. We'll push a patch to fix this. In the meantime, you
can apply this one:

--- a/base/core/myocamlbuild.ml 2012-05-31 16:57:05.000000000 -0400
+++ b/base/core/myocamlbuild.ml 2012-05-31 16:55:52.000000000 -0400
@@ -656,12 +656,12 @@
     flag ["mlh"; "ocaml"; "ocamldep"] (S[A"-ppopt"; A"-Ilib/"]);
     flag ["mlh"; "ocaml"; "compile"]  (S[A"-ppopt"; A"-Ilib/"]);

+    dispatch_default e;
+
     if test "ld -lrt -shared -o /dev/null 2>/dev/null" then begin
       flag ["ocamlmklib"; "c"]                      (S[A"-lrt"]);
       flag ["use_libcore_stubs"; "link"] (S[A"-cclib"; A"-lrt"]);
-    end;
-
-    dispatch_default e;
+    end
   | e -> dispatch_default e

 let () = Ocamlbuild_plugin.dispatch dispatch


On Wed, May 30, 2012 at 12:18 PM, Kakadu <kakadu.hafanana at gmail.com> wrote:
> Yaron,
>
> The same with tarballs. Btw, I've discoverd that it is 32bit only bug.
>
> Kakadu
>
>
> On Wednesday, May 30, 2012 5:29:57 PM UTC+4, Yaron Minsky wrote:
>>
>> Have you tried the release tarballs? ?Do they build and install cleanly?
>>
>> y
>>
>> On Wed, May 30, 2012 at 7:20 AM, Kakadu <kakadu.hafanana at gmail.com> wrote:
>> > ?Ubuntu 12.04 32bit. Core from bitbucket. OCaml from ubuntu.
>> >
>> > Best wishes,
>> > Kakadu
>> >
>> >
>> >
>> > On Wednesday, May 30, 2012 2:54:22 PM UTC+4, Yaron Minsky wrote:
>> >>
>> >> More details please! ?What platform are you running on?
>> >>
>> >> On Wed, May 30, 2012 at 5:49 AM, Kakadu <kakadu.hafanana at gmail.com>
>> >> wrote:
>> >> > Hallo, list!
>> >> >
>> >> > I have problem with using core. It seems that solution is very simple
>> >> > but I
>> >> > haven't found it yet.
>> >> >
>> >> > Best wishes,
>> >> > Kakadu
>> >> >
>> >> > $ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt
>> >> > -lrt
>> >> > main.ml
>> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> >> > function
>> >> > `unix_clock_gettime':
>> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823:
>> >> > undefined reference to `clock_gettime'
>> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> >> > function
>> >> > `unix_clock_settime':
>> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834:
>> >> > undefined reference to `clock_settime'
>> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> >> > function
>> >> > `unix_clock_getres':
>> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842:
>> >> > undefined reference to `clock_getres'
>> >> > collect2: ld returned 1 exit status
>> >> > File "caml_startup", line 1, characters 0-1:
>> >> > Error: Error during linking
>> >> >
>> >> > $ cat main.ml
>> >> > open Core.Linux_ext
>> >> >
>> >> > let f = Clock.get_time
>> >> >
>> >> > $
>> >> >


From markus.mottl at gmail.com  Thu May 31 22:45:59 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 31 May 2012 17:45:59 -0400
Subject: My linking issue with unix_stubs
In-Reply-To: <CAEDxudz33Js21FvOS2yKRRcjvizszFoHv3vZEGOEySJfDrAntg@mail.gmail.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
	<CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
	<bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>
	<CACLX4jQbQkGxGEsDeiCwLr+Kef2MB8rVL1+1csnJczc50PDD1w@mail.gmail.com>
	<da428317-453f-4f6e-bd71-80842f48521e@googlegroups.com>
	<CAEDxudz33Js21FvOS2yKRRcjvizszFoHv3vZEGOEySJfDrAntg@mail.gmail.com>
Message-ID: <CAP_800r4FCMhYS0-PRq26GX49xw1XX+xG8hHYSx9JigzS5wJUg@mail.gmail.com>


On Thu, May 31, 2012 at 4:59 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> Which is the wrong order. I wonder if gcc or ld have become stricter
> in this respect.

Yes, they have:

  http://stackoverflow.com/questions/7826448/linking-libraries-with-gcc-order-of-arguments

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri May  4 18:42:04 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 4 May 2012 13:42:04 -0400
Subject: Release schedule?
Message-ID: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>


Hi,

it's been a while since the development tree has been released, and I
just wondered whether an official release is imminent.  If it's still
in the more distant future, I was thinking of maybe releasing my
modified fork of ocaml-core in Godi, e.g. as "janestreet-core-mm" to
make the distinction obvious.  I'd then also remove any conflicting or
broken packages from Godi and update dependencies.

I'd rather avoid churn, which would also affect users, which is why
I'd prefer your official release.  Please let me know if a release can
be expected soon or whether there are any other reasons (e.g.
significant incompatibilities with your intended release) why such a
package should not yet be added to Godi.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yury.sulsky at gmail.com  Fri May  4 19:01:22 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Fri, 4 May 2012 14:01:22 -0400
Subject: Release schedule?
In-Reply-To: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
References: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
Message-ID: <CAEDxudyqUOAAfgVgtWDJ7q=X-GGZNvWNTq1K88sapjpt=9WdVw@mail.gmail.com>


Hi Markus,

We're planning on making a release of the current state of the tree
soon, including your changes. But we don't have any support for
creating godi packages right now in the tree. Do you already have the
build scripts to generate packages? It'd be great to include those in
this release.

On Fri, May 4, 2012 at 1:42 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> Hi,
>
> it's been a while since the development tree has been released, and I
> just wondered whether an official release is imminent. ?If it's still
> in the more distant future, I was thinking of maybe releasing my
> modified fork of ocaml-core in Godi, e.g. as "janestreet-core-mm" to
> make the distinction obvious. ?I'd then also remove any conflicting or
> broken packages from Godi and update dependencies.
>
> I'd rather avoid churn, which would also affect users, which is why
> I'd prefer your official release. ?Please let me know if a release can
> be expected soon or whether there are any other reasons (e.g.
> significant incompatibilities with your intended release) why such a
> package should not yet be added to Godi.
>
> Regards,
> Markus
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri May  4 19:15:35 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 4 May 2012 14:15:35 -0400
Subject: Release schedule?
In-Reply-To: <CAEDxudyqUOAAfgVgtWDJ7q=X-GGZNvWNTq1K88sapjpt=9WdVw@mail.gmail.com>
References: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
	<CAEDxudyqUOAAfgVgtWDJ7q=X-GGZNvWNTq1K88sapjpt=9WdVw@mail.gmail.com>
Message-ID: <CAP_800qkS0EVhAMzV1WojGPhDQjZAXU3n5zEtzeb22BdPZ4OGw@mail.gmail.com>


Hi Yury,

On Fri, May 4, 2012 at 2:01 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> We're planning on making a release of the current state of the tree
> soon, including your changes. But we don't have any support for
> creating godi packages right now in the tree. Do you already have the
> build scripts to generate packages? It'd be great to include those in
> this release.

I unfortunately don't have such scripts.  We would likely have to
pre-generate the build files with Oasis due to some otherwise cyclic
dependencies (type_conv, etc.).  Creating the Godi packages may not be
too difficult manually, I guess.

Since you are apparently really close to a release, I'll hold off on
any Godi stuff then.  Maybe Sylvain can help with generating Godi
package files from Oasis specifications?

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri May  4 19:18:44 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 4 May 2012 14:18:44 -0400
Subject: Release schedule?
In-Reply-To: <CAOCAUGPgOo6r9zrE7MR-zFM0OtCMpVdxPEzXZL5fq68ca32yaw@mail.gmail.com>
References: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
	<CAOCAUGPgOo6r9zrE7MR-zFM0OtCMpVdxPEzXZL5fq68ca32yaw@mail.gmail.com>
Message-ID: <CAP_800r3q4fARshpE9-X-WnnicOQ_aeZULZmhWYmhaj8qkf9WA@mail.gmail.com>


On Fri, May 4, 2012 at 2:02 PM, Sylvain Le Gall <gildor478 at gmail.com> wrote:
> Just FYI, oasis 0.3 release could happen when you want. The latest release
> match my expectation. I am working on packaging stuff to have a coordinated
> release, but if you need a release, ping me. It is still untested on
> windows, but you are not concerned.

I guess you might want to coordinate this with Jane Street.  Having
the most stable Oasis-generated build files in their release is
probably a good idea.

Cheers,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From gildor478 at gmail.com  Fri May  4 19:02:44 2012
From: gildor478 at gmail.com (Sylvain Le Gall)
Date: Fri, 4 May 2012 20:02:44 +0200
Subject: Release schedule?
In-Reply-To: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
References: <CAP_800o1vo0gd3hJ8x42s1AUioUmVtOBchrqmafg6fETqHkpHw@mail.gmail.com>
Message-ID: <CAOCAUGPgOo6r9zrE7MR-zFM0OtCMpVdxPEzXZL5fq68ca32yaw@mail.gmail.com>

Hello,

Just FYI, oasis 0.3 release could happen when you want. The latest release
match my expectation. I am working on packaging stuff to have a coordinated
release, but if you need a release, ping me. It is still untested on
windows, but you are not concerned.

Cheers
Sylvain
Le 4 mai 2012 19:42, "Markus Mottl" <markus.mottl at gmail.com> a ?crit :

> Hi,
>
> it's been a while since the development tree has been released, and I
> just wondered whether an official release is imminent.  If it's still
> in the more distant future, I was thinking of maybe releasing my
> modified fork of ocaml-core in Godi, e.g. as "janestreet-core-mm" to
> make the distinction obvious.  I'd then also remove any conflicting or
> broken packages from Godi and update dependencies.
>
> I'd rather avoid churn, which would also affect users, which is why
> I'd prefer your official release.  Please let me know if a release can
> be expected soon or whether there are any other reasons (e.g.
> significant incompatibilities with your intended release) why such a
> package should not yet be added to Godi.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120504/9307f909/attachment-0001.html>

From markus.mottl at gmail.com  Sun May 13 19:52:01 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 13 May 2012 14:52:01 -0400
Subject: Merging repositories safe?
Message-ID: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>


Hi,

I just wondered whether it is deemed safe to merge the new patches in
your repository.  Last time there were still outstanding issues with
accepting contributions from repositories that were merged with yours.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yury.sulsky at gmail.com  Sun May 13 20:57:18 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Sun, 13 May 2012 15:57:18 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
Message-ID: <CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>

Hi Markus,

The issue is that, since the repo is a subset of our internal tree, some
information is lost when merges of internal revisions are done in the
bitbucket repo. It's safest to not pull in merge nodes at all, but to be
precise, as long as the incoming merge nodes are descending from a single
revision that has already been pulled in, it's okay.

In this case, if all of the incoming revisions are descending from Ron's
(or my) changers, merge nodes are safe to pull.
On May 13, 2012 2:52 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:

> Hi,
>
> I just wondered whether it is deemed safe to merge the new patches in
> your repository.  Last time there were still outstanding issues with
> accepting contributions from repositories that were merged with yours.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120513/b2fcccf0/attachment-0001.html>

From markus.mottl at gmail.com  Sun May 13 23:32:07 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 13 May 2012 18:32:07 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
Message-ID: <CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>


Hi Yury,

Let me rephrase that to make sure I understand: if I clone your tree,
make and commit some changes to my tree, and pull again from you, I
should never merge if the incoming changesets contain one of your
internal merges?  But it would always be ok for me to merge changesets
that aren't internal merges?

Given that one can easily miss such an internal merge, am I right then
to assume that the safest way of contributing would be to delay
committing my own changes to my tree?  I.e. I should rather maintain
some sort of patch queue and "rebase" to be on the safe side and
coordinate with you when it's time to actually commit my patches so
that you can pull them right away before potentially breaking stuff
with an intermittent internal merge?  I'm not quite sure I fully
understand all the limitations of your current environment.  I'm just
trying to find the safest, most straightforward development workflow,
and my impression so far is that contributing is a little tricky.

Please let me know if you have found an easier workflow that is always
safe to apply without having to e.g. eyeball incoming changesets.
Btw., is my fork still in good order for you?  Just making sure you
can actually merge it...

Regards,
Markus

On Sun, May 13, 2012 at 3:57 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> Hi Markus,
>
> The issue is that, since the repo is a subset of our internal tree, some
> information is lost when merges of internal revisions are done in the
> bitbucket repo. It's safest to not pull in merge nodes at all, but to be
> precise, as long as the incoming merge nodes are descending from a single
> revision that has already been pulled in, it's okay.
>
> In this case, if all of the incoming revisions are descending from Ron's (or
> my) changers, merge nodes are safe to pull.
>
> On May 13, 2012 2:52 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:
>>
>> Hi,
>>
>> I just wondered whether it is deemed safe to merge the new patches in
>> your repository. ?Last time there were still outstanding issues with
>> accepting contributions from repositories that were merged with yours.
>>
>> Regards,
>> Markus
>>
>> --
>> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yury.sulsky at gmail.com  Mon May 14 00:46:30 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Sun, 13 May 2012 19:46:30 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
Message-ID: <CAEDxudzoLs7ypyd-w6bvq16+NCZ=keNE4-dex-vUeYKg5HhoUg@mail.gmail.com>


Hi Markus,

On Sun, May 13, 2012 at 6:32 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> Let me rephrase that to make sure I understand: if I clone your tree,
> make and commit some changes to my tree, and pull again from you, I
> should never merge if the incoming changesets contain one of your
> internal merges? ?But it would always be ok for me to merge changesets
> that aren't internal merges?

That's almost right, but the problem isn't restricted to internal
merge nodes. For any two incoming changesets, if they are descending
from different internal revisions, they can only be merged safely in
the internal tree.

> Given that one can easily miss such an internal merge, am I right then
> to assume that the safest way of contributing would be to delay
> committing my own changes to my tree? ?I.e. I should rather maintain
> some sort of patch queue and "rebase" to be on the safe side and
> coordinate with you when it's time to actually commit my patches so
> that you can pull them right away before potentially breaking stuff
> with an intermittent internal merge? ?I'm not quite sure I fully
> understand all the limitations of your current environment. ?I'm just
> trying to find the safest, most straightforward development workflow,
> and my impression so far is that contributing is a little tricky.

Pulling in merge nodes is always tricky because it requires knowing
which changesets we have already converted to our internal tree. So I
would say that the best approach is to simply avoid pulling from our
tree until we've merged in your changesets. Then merge nodes are fine,
because they will all be descending from a single internal revision.

> Please let me know if you have found an easier workflow that is always
> safe to apply without having to e.g. eyeball incoming changesets.
> Btw., is my fork still in good order for you? ?Just making sure you
> can actually merge it...

I'm merging in your pull request (56aabace38ce) right now. Outside of
that, your tree has one merge node (90256188e5fd), but that one should
be fine to pull in.


From yminsky at janestreet.com  Mon May 14 03:57:09 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 13 May 2012 22:57:09 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
Message-ID: <CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>


For what it's worth, this is for sure an annoying restriction, but it
is pretty hard to work around.

If your changesets are rebased on the tip of our branch, it's always safe.

More generally, if your changesets are descended from a single
revision in our branch, it's safe.

We're going to try to make the turn-around for submissions faster,
which should reduce the pain associated with all of this.  We just
pulled in all of your latest pull request, and if you have more you'd
like to submit, you can add it in and we should be able to get it in
pretty quickly.

We're also on the verge of releasing a tarball that should be MUCH
easier to install.  In particular, you will no longer need to install
Oasis: you can just download a single tarball and install.  We'll also
put out individual tarballs for all the sub-libraries, for those who
wish to pick and choose.

(It's actually on the bitbucket download site now, but I want to put
in a useful README before encouraging people to try it out.  That
should happen tomorrow.)

y

On Sun, May 13, 2012 at 6:32 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> Hi Yury,
>
> Let me rephrase that to make sure I understand: if I clone your tree,
> make and commit some changes to my tree, and pull again from you, I
> should never merge if the incoming changesets contain one of your
> internal merges? ?But it would always be ok for me to merge changesets
> that aren't internal merges?
>
> Given that one can easily miss such an internal merge, am I right then
> to assume that the safest way of contributing would be to delay
> committing my own changes to my tree? ?I.e. I should rather maintain
> some sort of patch queue and "rebase" to be on the safe side and
> coordinate with you when it's time to actually commit my patches so
> that you can pull them right away before potentially breaking stuff
> with an intermittent internal merge? ?I'm not quite sure I fully
> understand all the limitations of your current environment. ?I'm just
> trying to find the safest, most straightforward development workflow,
> and my impression so far is that contributing is a little tricky.
>
> Please let me know if you have found an easier workflow that is always
> safe to apply without having to e.g. eyeball incoming changesets.
> Btw., is my fork still in good order for you? ?Just making sure you
> can actually merge it...
>
> Regards,
> Markus
>
> On Sun, May 13, 2012 at 3:57 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>> Hi Markus,
>>
>> The issue is that, since the repo is a subset of our internal tree, some
>> information is lost when merges of internal revisions are done in the
>> bitbucket repo. It's safest to not pull in merge nodes at all, but to be
>> precise, as long as the incoming merge nodes are descending from a single
>> revision that has already been pulled in, it's okay.
>>
>> In this case, if all of the incoming revisions are descending from Ron's (or
>> my) changers, merge nodes are safe to pull.
>>
>> On May 13, 2012 2:52 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:
>>>
>>> Hi,
>>>
>>> I just wondered whether it is deemed safe to merge the new patches in
>>> your repository. ?Last time there were still outstanding issues with
>>> accepting contributions from repositories that were merged with yours.
>>>
>>> Regards,
>>> Markus
>>>
>>> --
>>> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com
>
>
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Mon May 14 04:33:26 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 13 May 2012 23:33:26 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAEDxudzoLs7ypyd-w6bvq16+NCZ=keNE4-dex-vUeYKg5HhoUg@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
	<CAEDxudzoLs7ypyd-w6bvq16+NCZ=keNE4-dex-vUeYKg5HhoUg@mail.gmail.com>
Message-ID: <CAP_800pP88oZT7DgsfCYxqpK76OMBTwybdksayguVg8UZbzt5Q@mail.gmail.com>


Hi Yury,

On Sun, May 13, 2012 at 7:46 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> Pulling in merge nodes is always tricky because it requires knowing
> which changesets we have already converted to our internal tree. So I
> would say that the best approach is to simply avoid pulling from our
> tree until we've merged in your changesets. Then merge nodes are fine,
> because they will all be descending from a single internal revision.

I guess it's probably best if I just keep following this advice...

> I'm merging in your pull request (56aabace38ce) right now. Outside of
> that, your tree has one merge node (90256188e5fd), but that one should
> be fine to pull in.

Great, I'll create another pull request for the outstanding patches
then.  There are apparently only four merge conflicts: a trivial one
in .hgignore, the remaining three in oasis.sh files.  I had made some
compilation warnings stricter, which may be recommended for improving
code quality in contributions.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Mon May 14 04:46:28 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 13 May 2012 23:46:28 -0400
Subject: Merging repositories safe?
In-Reply-To: <CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
	<CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>
Message-ID: <CAP_800r9ORsc=SAVja0eAbuTwzSKw=chx6PYkfQmzdsX+Bs2hA@mail.gmail.com>


On Sun, May 13, 2012 at 10:57 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> For what it's worth, this is for sure an annoying restriction, but it
> is pretty hard to work around.
>
> If your changesets are rebased on the tip of our branch, it's always safe.
>
> More generally, if your changesets are descended from a single
> revision in our branch, it's safe.

I guess contributors could use some tricks to make life easier, but in
the end I prefer a predictable workflow that avoids pitfalls.

I assume you have considered some sort of "forest" approach with
sub-repositories for open source code in your tree?  I have never
tried those myself, but it presumably didn't work for you.  At least
conceptually it would seem like a good solution.

> We're going to try to make the turn-around for submissions faster,
> which should reduce the pain associated with all of this. ?We just
> pulled in all of your latest pull request, and if you have more you'd
> like to submit, you can add it in and we should be able to get it in
> pretty quickly.

I'll do so right away.  It's mostly the new sexplib features (record
field defaults, new comment syntax, etc.).

> We're also on the verge of releasing a tarball that should be MUCH
> easier to install. ?In particular, you will no longer need to install
> Oasis: you can just download a single tarball and install. ?We'll also
> put out individual tarballs for all the sub-libraries, for those who
> wish to pick and choose.

Sounds good, this will surely lower the barrier for people unfamiliar
with Oasis.

> (It's actually on the bitbucket download site now, but I want to put
> in a useful README before encouraging people to try it out. ?That
> should happen tomorrow.)

Great, I'm looking forward to that.

Btw., I'm about to rewrite the READMEs of all my libraries in the
Bitbucket compatible markdown format (Python markdown with some
extensions).  It's unfortunately not compatible with pandoc, but seems
pretty nice anyway.  Are you considering switching to this format,
too, for your open source libraries?  I especially like that it
supports syntax highlighting for OCaml code in markdown files.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Mon May 14 14:47:53 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 14 May 2012 09:47:53 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAP_800r9ORsc=SAVja0eAbuTwzSKw=chx6PYkfQmzdsX+Bs2hA@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
	<CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>
	<CAP_800r9ORsc=SAVja0eAbuTwzSKw=chx6PYkfQmzdsX+Bs2hA@mail.gmail.com>
Message-ID: <CACLX4jTB6BMPgR545cs+Mbv=DFJReQ9wz9e1brg6QoSf5Wtg3Q@mail.gmail.com>


On Sun, May 13, 2012 at 11:46 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Sun, May 13, 2012 at 10:57 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> For what it's worth, this is for sure an annoying restriction, but it
>> is pretty hard to work around.
>>
>> If your changesets are rebased on the tip of our branch, it's always safe.
>>
>> More generally, if your changesets are descended from a single
>> revision in our branch, it's safe.
>
> I guess contributors could use some tricks to make life easier, but in
> the end I prefer a predictable workflow that avoids pitfalls.
>
> I assume you have considered some sort of "forest" approach with
> sub-repositories for open source code in your tree? ?I have never
> tried those myself, but it presumably didn't work for you. ?At least
> conceptually it would seem like a good solution.

Yeah, we considered it, but it was just too painful for internal
reasons.

>> We're going to try to make the turn-around for submissions faster,
>> which should reduce the pain associated with all of this. ?We just
>> pulled in all of your latest pull request, and if you have more you'd
>> like to submit, you can add it in and we should be able to get it in
>> pretty quickly.
>
> I'll do so right away. ?It's mostly the new sexplib features (record
> field defaults, new comment syntax, etc.).

Where did we end up on the record field defaults?  Had we settled on a
feature-set there?  I guess I'll just look at the docs in the README
to refresh myself.

>> We're also on the verge of releasing a tarball that should be MUCH
>> easier to install. ?In particular, you will no longer need to install
>> Oasis: you can just download a single tarball and install. ?We'll also
>> put out individual tarballs for all the sub-libraries, for those who
>> wish to pick and choose.
>
> Sounds good, this will surely lower the barrier for people unfamiliar
> with Oasis.

Indeed.

>> (It's actually on the bitbucket download site now, but I want to put
>> in a useful README before encouraging people to try it out. ?That
>> should happen tomorrow.)
>
> Great, I'm looking forward to that.
>
> Btw., I'm about to rewrite the READMEs of all my libraries in the
> Bitbucket compatible markdown format (Python markdown with some
> extensions). ?It's unfortunately not compatible with pandoc, but seems
> pretty nice anyway. ?Are you considering switching to this format,
> too, for your open source libraries? ?I especially like that it
> supports syntax highlighting for OCaml code in markdown files.

I'd much prefer to stick to something compatible with pandoc.  We use
it for all of our internal document generation.  Is there any reason
to prefer this python library?


From markus.mottl at gmail.com  Mon May 14 15:43:17 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Mon, 14 May 2012 10:43:17 -0400
Subject: Merging repositories safe?
In-Reply-To: <CACLX4jTB6BMPgR545cs+Mbv=DFJReQ9wz9e1brg6QoSf5Wtg3Q@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
	<CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>
	<CAP_800r9ORsc=SAVja0eAbuTwzSKw=chx6PYkfQmzdsX+Bs2hA@mail.gmail.com>
	<CACLX4jTB6BMPgR545cs+Mbv=DFJReQ9wz9e1brg6QoSf5Wtg3Q@mail.gmail.com>
Message-ID: <CAP_800rB_n9f42nJ-3HQL8hB6QePBG5g14Xd3LqP1YmwcTLd2Q@mail.gmail.com>


On Mon, May 14, 2012 at 9:47 AM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Where did we end up on the record field defaults? ?Had we settled on a
> feature-set there? ?I guess I'll just look at the docs in the README
> to refresh myself.

I have just added a final patch to improve function names in the
type_conv API and documentation and updated my pull request.

The README file in sexplib describes the new features.  Note that the
"default" extension is really part of type_conv and can be queried
from many different code generators.  Sexplib uses it for parsing
records that omit fields.  Maybe one of you wants to write another
simple extension that generates functions with default arguments to
create fresh records.  This would seem quite convenient.

> I'd much prefer to stick to something compatible with pandoc. ?We use
> it for all of our internal document generation. ?Is there any reason
> to prefer this python library?

I have researched this a bit and have come to the conclusion that I'll
probably have to use different markdown tools depending on context.
Bitbucket uses the "Python markdown" library for rendering READMEs,
which is sadly not quite compatible with pandoc.  They also support
some other formats, but I prefer markdown.  I think it's a low price
to pay to make an exception for READMEs.  Being able to have
well-formatted documentation with properly syntax-highlighted OCaml
code examples on the project home page seems like an awesome feature
to attract new users to a library.

Btw., here is the link to the Bitbucket documentation on rendering READMEs:

  http://confluence.atlassian.com/display/BITBUCKET/Displaying+README+Text+on+the+Overview

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Mon May 14 18:21:18 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 14 May 2012 13:21:18 -0400
Subject: Merging repositories safe?
In-Reply-To: <CAP_800rB_n9f42nJ-3HQL8hB6QePBG5g14Xd3LqP1YmwcTLd2Q@mail.gmail.com>
References: <CAP_800r4N+M0KqvmPSDZy+Aba1Ud7h+5k-TOUvd8ALRqFiHq3w@mail.gmail.com>
	<CAEDxudyv6U7e-ACw760hU-xSm849wVWxJ9nHmK-R+nbr4qnt=g@mail.gmail.com>
	<CAP_800p5p4P4HsAkQRQDMHOkxD-2b19+Vi3W8Hk1PLxnxrTmmA@mail.gmail.com>
	<CACLX4jT05juoNm+LmpiViPv7LvWwhqd2PFALNc_LgH-dOS97DQ@mail.gmail.com>
	<CAP_800r9ORsc=SAVja0eAbuTwzSKw=chx6PYkfQmzdsX+Bs2hA@mail.gmail.com>
	<CACLX4jTB6BMPgR545cs+Mbv=DFJReQ9wz9e1brg6QoSf5Wtg3Q@mail.gmail.com>
	<CAP_800rB_n9f42nJ-3HQL8hB6QePBG5g14Xd3LqP1YmwcTLd2Q@mail.gmail.com>
Message-ID: <CACLX4jS2D2vjOKhWLGdZfPb1Pvnzf0YpRR3JMs2nY1H+C6KDHA@mail.gmail.com>


On Mon, May 14, 2012 at 10:43 AM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Mon, May 14, 2012 at 9:47 AM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> Where did we end up on the record field defaults? ?Had we settled on a
>> feature-set there? ?I guess I'll just look at the docs in the README
>> to refresh myself.
>
> I have just added a final patch to improve function names in the
> type_conv API and documentation and updated my pull request.
>
> The README file in sexplib describes the new features. ?Note that the
> "default" extension is really part of type_conv and can be queried
> from many different code generators. ?Sexplib uses it for parsing
> records that omit fields. ?Maybe one of you wants to write another
> simple extension that generates functions with default arguments to
> create fresh records. ?This would seem quite convenient.
>
>> I'd much prefer to stick to something compatible with pandoc. ?We use
>> it for all of our internal document generation. ?Is there any reason
>> to prefer this python library?
>
> I have researched this a bit and have come to the conclusion that I'll
> probably have to use different markdown tools depending on context.
> Bitbucket uses the "Python markdown" library for rendering READMEs,
> which is sadly not quite compatible with pandoc. ?They also support
> some other formats, but I prefer markdown. ?I think it's a low price
> to pay to make an exception for READMEs. ?Being able to have
> well-formatted documentation with properly syntax-highlighted OCaml
> code examples on the project home page seems like an awesome feature
> to attract new users to a library.

Got it.  That seems like a wholly valid reason for the READMEs to be a
little different.  I do wish the markdown world would standardize,
but, oh well...

> Btw., here is the link to the Bitbucket documentation on rendering READMEs:
>
> ?http://confluence.atlassian.com/display/BITBUCKET/Displaying+README+Text+on+the+Overview
>
> Regards,
> Markus
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Tue May 15 01:44:15 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 14 May 2012 20:44:15 -0400
Subject: [ANN]: 108.00-pre2 pre-release of Core suite
Message-ID: <CACLX4jRGgg+z3BcCQx2U6SrE2tK0Kf5vVVjJYo0QAX_5wWWMgg@mail.gmail.com>


I'm pleased to announce the 108.00-pre2 pre-release of the Core suite
of libraries.  Core is an industrial strength alternative to OCaml's
standard library.  The tarball can be found here:

   https://bitbucket.org/yminsky/ocaml-core/downloads

The Core suite includes a variety of useful libraries, including:

- Core: the heart of the standard library.
- Several useful syntax extensions
  - type-conv: a library for building type-driven syntax extensions
  - sexplib: a library for handling s-expressions, and a syntax
    extension for auto-generating conversions between OCaml types and
    s-expressions
  - bin-prot: a syntax-extensions for generating
  - pipebang
  - variantslib
  - comparelib
  - fieldslib
- Async: a monadic concurrency library.
- Core_extended: extra components that are not as closely vetted or as
  stable as Core.  This includes, Shell, an interface for interacting
  with the UNIX shell, and Command, a command-line parsing library.

Many of these libraries have been released separately in the past, but
we're now releasing them as a single tarball.

The release does not depend on Oasis to build, so it should be easier
to build and install than installing from the hg repo.

Feedback is greatly appreciated!

y


From yminsky at janestreet.com  Tue May 15 02:43:24 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 14 May 2012 21:43:24 -0400
Subject: [Caml-list] [ANN]: 108.00-pre2 pre-release of Core suite
Message-ID: <CACLX4jQ1Gc4KzCR9cOTe8khStB94R+SQkZpjjTgmdPMqVosk1w@mail.gmail.com>


I'm pleased to announce the 108.00-pre2 pre-release of the Core suite
of libraries.  Core is an industrial strength alternative to OCaml's
standard library.  The tarball can be found here:

  https://bitbucket.org/yminsky/ocaml-core/downloads

The Core suite includes a variety of useful libraries, including:

- Core: the heart of the standard library.
- Several useful syntax extensions
 - type-conv: a library for building type-driven syntax extensions
 - sexplib: a library for handling s-expressions, and a syntax
   extension for auto-generating conversions between OCaml types and
   s-expressions
 - bin-prot: a syntax-extensions for generating
 - pipebang
 - variantslib
 - comparelib
 - fieldslib
- Async: a monadic concurrency library.
- Core_extended: extra components that are not as closely vetted or as
 stable as Core.  This includes, Shell, an interface for interacting
 with the UNIX shell, and Command, a command-line parsing library.

Many of these libraries have been released separately in the past, but
we're now releasing them as a single tarball.

The release does not depend on Oasis to build, so it should be easier
to build and install than installing from the hg repo.

Feedback is greatly appreciated!  You can join the core mailing list here:

   https://groups.google.com/forum/?fromgroups#!forum/ocaml-core

-- 
Caml-list mailing list.  Subscription management and archives:
https://sympa-roc.inria.fr/wws/info/caml-list
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
Bug reports: http://caml.inria.fr/bin/caml-bugs



From yminsky at janestreet.com  Tue May 15 14:09:37 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 15 May 2012 09:09:37 -0400
Subject: Releasing individual tarballs
Message-ID: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>


Do people feel strongly about how we cut the release tarballs?  Right
now, we have one big tarball that contains a sub-directory for each
sub-project.  You can of course convert these back into individual
tarballs, but it struck me as excessive to post 16 separate
tarballs...

y


From yminsky at janestreet.com  Tue May 15 14:26:07 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 15 May 2012 09:26:07 -0400
Subject: Releasing individual tarballs
In-Reply-To: <CAK=fH+iXNwA3AMHfUHjwRDbNiYVUM3S3-84LcVCxxy8KjwpuoA@mail.gmail.com>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
	<CAK=fH+iXNwA3AMHfUHjwRDbNiYVUM3S3-84LcVCxxy8KjwpuoA@mail.gmail.com>
Message-ID: <CACLX4jQqNEibH8nWVHS040NOryfgb+PZvF6KUmF+SugqiCSK4A@mail.gmail.com>


On Tue, May 15, 2012 at 9:20 AM, David House <dhouse at janestreet.com> wrote:
> On Tue, May 15, 2012 at 2:09 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> Do people feel strongly about how we cut the release tarballs? ?Right
>> now, we have one big tarball that contains a sub-directory for each
>> sub-project. ?You can of course convert these back into individual
>> tarballs, but it struck me as excessive to post 16 separate
>> tarballs...
>
> Doesn't seem that excessive. We could always include on the web page a
> wget command that you could copy-paste into a terminal in order to
> download them all.

I think including a single tarball is useful as well --- that's at
least what I would prefer.

But I don't mind uploading all 16 tarballs.

y


From yury.sulsky at gmail.com  Tue May 15 14:29:06 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Tue, 15 May 2012 09:29:06 -0400
Subject: Releasing individual tarballs
In-Reply-To: <CACLX4jQqNEibH8nWVHS040NOryfgb+PZvF6KUmF+SugqiCSK4A@mail.gmail.com>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
	<CAK=fH+iXNwA3AMHfUHjwRDbNiYVUM3S3-84LcVCxxy8KjwpuoA@mail.gmail.com>
	<CACLX4jQqNEibH8nWVHS040NOryfgb+PZvF6KUmF+SugqiCSK4A@mail.gmail.com>
Message-ID: <CAEDxudy885GJDkWhb-Z239YV=XiNh-a8Zyp3CUYNFJ57SVSJ5Q@mail.gmail.com>


I also think the individual tarballs will be necessary to get them
packaged up in the various Linux distros.

On Tue, May 15, 2012 at 9:26 AM, Yaron Minsky <yminsky at janestreet.com> wrote:
> On Tue, May 15, 2012 at 9:20 AM, David House <dhouse at janestreet.com> wrote:
>> On Tue, May 15, 2012 at 2:09 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>>> Do people feel strongly about how we cut the release tarballs? ?Right
>>> now, we have one big tarball that contains a sub-directory for each
>>> sub-project. ?You can of course convert these back into individual
>>> tarballs, but it struck me as excessive to post 16 separate
>>> tarballs...
>>
>> Doesn't seem that excessive. We could always include on the web page a
>> wget command that you could copy-paste into a terminal in order to
>> download them all.
>
> I think including a single tarball is useful as well --- that's at
> least what I would prefer.
>
> But I don't mind uploading all 16 tarballs.
>
> y


From yminsky at janestreet.com  Tue May 15 14:33:10 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 15 May 2012 09:33:10 -0400
Subject: Releasing individual tarballs
In-Reply-To: <4FB259CB.3020308@glondu.net>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
	<4FB259CB.3020308@glondu.net>
Message-ID: <CACLX4jROheguG6s9Y_b0-0cMvPgha91EDUM7_iJ-HV5WryUaJA@mail.gmail.com>


On Tue, May 15, 2012 at 9:27 AM, St?phane Glondu <steph at glondu.net> wrote:
> Le 15/05/2012 15:09, Yaron Minsky a ?crit :
>> Do people feel strongly about how we cut the release tarballs? ?Right
>> now, we have one big tarball that contains a sub-directory for each
>> sub-project. ?You can of course convert these back into individual
>> tarballs, but it struck me as excessive to post 16 separate
>> tarballs...
>
> Cannot you provide both? Market it as "bundle" and "individual components".

I think we'll do just that.

>
> Cheers,
>
> --
> St?phane


From yminsky at janestreet.com  Tue May 15 18:34:53 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 15 May 2012 13:34:53 -0400
Subject: ARCH_SIXTYFOUR and ARCH_INT64_TYPE
Message-ID: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>


I have a question about bin-prot.  We noticed that there are two
preprocessor variables that seem almost the same: ARCH_INT64_TYPE and
ARCH_SIXTYFOUR.  What is the intended difference in semantics between
them?

y


From markus.mottl at gmail.com  Tue May 15 18:56:51 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Tue, 15 May 2012 13:56:51 -0400
Subject: ARCH_SIXTYFOUR and ARCH_INT64_TYPE
In-Reply-To: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>
References: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>
Message-ID: <CAP_800qGXnkMqUpe+0AXTkN94Qb-UXOeGZNN-qeLaKCMB-_Afg@mail.gmail.com>


On Tue, May 15, 2012 at 1:34 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> I have a question about bin-prot. ?We noticed that there are two
> preprocessor variables that seem almost the same: ARCH_INT64_TYPE and
> ARCH_SIXTYFOUR. ?What is the intended difference in semantics between
> them?

Both come from the OCaml configuration header files.  It is possible
that some platform doesn't support 64bit integers (ARCH_INT64_TYPE)
even though pointers are that wide (ARCH_SIXTYFOUR) .  Not sure this
is still relevant these days, but it may have been an issue with past
platforms.  If 64bit integers are not natively supported, the OCaml
compiler will use emulation to support the int64 type, and so will
bin_prot.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Tue May 15 19:02:43 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Tue, 15 May 2012 14:02:43 -0400
Subject: ARCH_SIXTYFOUR and ARCH_INT64_TYPE
In-Reply-To: <CAMr3DCPsFwoqd5_H_d=dDvTgESjCpOGWDq_PoJ7vJtGS+EhQTA@mail.gmail.com>
References: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>
	<CAMr3DCPsFwoqd5_H_d=dDvTgESjCpOGWDq_PoJ7vJtGS+EhQTA@mail.gmail.com>
Message-ID: <CAP_800oq1BPb8WNhsJZG7wH7meOV_KC+cdxRJ_6Z04SJg-zRYA@mail.gmail.com>


Right.  Note, too, that GCC emulated "long long" on 32bit platforms.
OCaml would only fall back on its own integer emulation if the
C-compiler did not provide it.

On Tue, May 15, 2012 at 1:56 PM, Benedikt Grundmann
<benedikt.grundmann at googlemail.com> wrote:
> These are defined by ocamls configure script:
>
> http://caml.inria.fr/svn/ocaml/trunk/config/m-templ.h
>
> the comments explain it all
>
> On 15 May 2012 18:34, Yaron Minsky <yminsky at janestreet.com> wrote:
>> I have a question about bin-prot. ?We noticed that there are two
>> preprocessor variables that seem almost the same: ARCH_INT64_TYPE and
>> ARCH_SIXTYFOUR. ?What is the intended difference in semantics between
>> them?
>>
>> y
>
>
>
> --
> Calvin: I try to make everyone's day a little more
> surreal.
>
> (From Calvin & Hobbes)



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From dhouse at janestreet.com  Tue May 15 14:20:28 2012
From: dhouse at janestreet.com (David House)
Date: Tue, 15 May 2012 14:20:28 +0100
Subject: Releasing individual tarballs
In-Reply-To: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
Message-ID: <CAK=fH+iXNwA3AMHfUHjwRDbNiYVUM3S3-84LcVCxxy8KjwpuoA@mail.gmail.com>


On Tue, May 15, 2012 at 2:09 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Do people feel strongly about how we cut the release tarballs? ?Right
> now, we have one big tarball that contains a sub-directory for each
> sub-project. ?You can of course convert these back into individual
> tarballs, but it struck me as excessive to post 16 separate
> tarballs...

Doesn't seem that excessive. We could always include on the web page a
wget command that you could copy-paste into a terminal in order to
download them all.


From sylvain at le-gall.net  Tue May 15 14:17:26 2012
From: sylvain at le-gall.net (Sylvain Le Gall)
Date: Tue, 15 May 2012 15:17:26 +0200
Subject: Releasing individual tarballs
In-Reply-To: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
Message-ID: <CAOCAUGMCENvS3k4YyJLh9+OVnBXKAh7Kfi1UXcFFTiAWnBP9WA@mail.gmail.com>

Hi,


2012/5/15 Yaron Minsky <yminsky at janestreet.com>

> Do people feel strongly about how we cut the release tarballs?  Right
> now, we have one big tarball that contains a sub-directory for each
> sub-project.  You can of course convert these back into individual
> tarballs, but it struck me as excessive to post 16 separate
> tarballs...
>
>
I was just writing a mail about that. Since each sub directories is/was a
project on its own, it makes sense to cut them.

Moreover, I use sexplib/type-conv in some of my projects and don't want to
ask people to download/compile the whole ocaml-core just for that.

The most simple simple solution is to have 16 separate tarballs (well to be
honest, just split sexplib/type-conv/bin-prot/fieldslib, I don't care about
the rest).

Side notes: oasis-db will have a hard time figuring out what is the right
_oasis among the 16 presents in the big tarball.

Regards
Sylvain
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120515/9d96c031/attachment-0001.html>

From steph at glondu.net  Tue May 15 14:27:39 2012
From: steph at glondu.net (=?ISO-8859-1?Q?St=E9phane_Glondu?=)
Date: Tue, 15 May 2012 15:27:39 +0200
Subject: Releasing individual tarballs
In-Reply-To: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
References: <CACLX4jTrP1LaW6XQKgqYQhPv3nfLi3kShpir_siegmKhv4uy5g@mail.gmail.com>
Message-ID: <4FB259CB.3020308@glondu.net>


Le 15/05/2012 15:09, Yaron Minsky a ?crit :
> Do people feel strongly about how we cut the release tarballs?  Right
> now, we have one big tarball that contains a sub-directory for each
> sub-project.  You can of course convert these back into individual
> tarballs, but it struck me as excessive to post 16 separate
> tarballs...

Cannot you provide both? Market it as "bundle" and "individual components".


Cheers,

-- 
St?phane


From benedikt.grundmann at googlemail.com  Tue May 15 18:56:59 2012
From: benedikt.grundmann at googlemail.com (Benedikt Grundmann)
Date: Tue, 15 May 2012 18:56:59 +0100
Subject: ARCH_SIXTYFOUR and ARCH_INT64_TYPE
In-Reply-To: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>
References: <CACLX4jThmPjHE2aMTtt-XUopmaJRPXonEn0mikGmEmAvuLEsYg@mail.gmail.com>
Message-ID: <CAMr3DCPsFwoqd5_H_d=dDvTgESjCpOGWDq_PoJ7vJtGS+EhQTA@mail.gmail.com>


These are defined by ocamls configure script:

http://caml.inria.fr/svn/ocaml/trunk/config/m-templ.h

the comments explain it all

On 15 May 2012 18:34, Yaron Minsky <yminsky at janestreet.com> wrote:
> I have a question about bin-prot. ?We noticed that there are two
> preprocessor variables that seem almost the same: ARCH_INT64_TYPE and
> ARCH_SIXTYFOUR. ?What is the intended difference in semantics between
> them?
>
> y



-- 
Calvin: I try to make everyone's day a little more
surreal.

(From Calvin & Hobbes)


From yminsky at janestreet.com  Fri May 18 10:25:12 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 18 May 2012 05:25:12 -0400
Subject: Feedback on pre-release
Message-ID: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>


If anyone has any feedback on the pre-release, please tell us.  If
not, we'll put up the actual release on Monday or Tuesday.

y


From thelema314 at gmail.com  Fri May 18 13:55:43 2012
From: thelema314 at gmail.com (Edgar Friendly)
Date: Fri, 18 May 2012 08:55:43 -0400
Subject: Feedback on pre-release
In-Reply-To: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
Message-ID: <4FB646CF.4050005@gmail.com>


On 05/18/2012 05:25 AM, Yaron Minsky wrote:
> If anyone has any feedback on the pre-release, please tell us.  If
> not, we'll put up the actual release on Monday or Tuesday.
>
> y

Did the many-small-tarballs version of the pre-release ever get 
generated?  I've been watching here:

https://bitbucket.org/yminsky/ocaml-core/downloads

and only see the monolithic installer.  If there are individual tarballs 
for components, I can make a package file for odb.ml to install them all 
easily.  Even better, if they get uploaded to oasis-db, more than likely 
it will handle all the metadata generation.

E.


From yury.sulsky at gmail.com  Fri May 18 14:13:11 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Fri, 18 May 2012 09:13:11 -0400
Subject: Feedback on pre-release
In-Reply-To: <CAOCAUGMjiFo0--D_+GocDvt=fn18TpO+hECF=thuDa_FpZfy2Q@mail.gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
	<CAOCAUGMjiFo0--D_+GocDvt=fn18TpO+hECF=thuDa_FpZfy2Q@mail.gmail.com>
Message-ID: <CAEDxudxA0fjRTPhxXM6JdHfRqD=rH=FfP3cAkuxRDjvUHmXDxg@mail.gmail.com>


Hi Sylvain,
I think the packages included in the released tarball were generated
with oasis 0.3.0 rc5.

Yury

On Fri, May 18, 2012 at 6:02 AM, Sylvain Le Gall <gildor478 at gmail.com> wrote:
> Please use oasis 0.3.0 rc5 to generate the setup.ml. This is almost the
> release...
>
> Cheers
> Sylvain
>
> Le 18 mai 2012 11:25, "Yaron Minsky" <yminsky at janestreet.com> a ?crit?:
>
>> If anyone has any feedback on the pre-release, please tell us. ?If
>> not, we'll put up the actual release on Monday or Tuesday.
>>
>> y


From yminsky at janestreet.com  Fri May 18 14:55:09 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 18 May 2012 09:55:09 -0400
Subject: Feedback on pre-release
In-Reply-To: <4FB646CF.4050005@gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
	<4FB646CF.4050005@gmail.com>
Message-ID: <CACLX4jTCgW-wWjUFVCepAMoSWRCM4GH0+4YaQh+jFF_7PHA_Mw@mail.gmail.com>


I didn't upload them, but the big tarball has all the little tarballs
unpacked on the inside, so I thought that would be adequate for
testing.  If people prefer, we can upload the little tarballs now.

y

On Fri, May 18, 2012 at 8:55 AM, Edgar Friendly <thelema314 at gmail.com> wrote:
> On 05/18/2012 05:25 AM, Yaron Minsky wrote:
>>
>> If anyone has any feedback on the pre-release, please tell us. ?If
>> not, we'll put up the actual release on Monday or Tuesday.
>>
>> y
>
>
> Did the many-small-tarballs version of the pre-release ever get generated?
> ?I've been watching here:
>
> https://bitbucket.org/yminsky/ocaml-core/downloads
>
> and only see the monolithic installer. ?If there are individual tarballs for
> components, I can make a package file for odb.ml to install them all easily.
> ?Even better, if they get uploaded to oasis-db, more than likely it will
> handle all the metadata generation.
>
> E.


From markus.mottl at gmail.com  Fri May 18 15:05:42 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 18 May 2012 10:05:42 -0400
Subject: Feedback on pre-release
In-Reply-To: <CACLX4jTCgW-wWjUFVCepAMoSWRCM4GH0+4YaQh+jFF_7PHA_Mw@mail.gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
	<4FB646CF.4050005@gmail.com>
	<CACLX4jTCgW-wWjUFVCepAMoSWRCM4GH0+4YaQh+jFF_7PHA_Mw@mail.gmail.com>
Message-ID: <CAP_800rzme8HJ0nFqUcbwo1mTgiYKMMfZ5g2eD0SZ4nTqz=4iQ@mail.gmail.com>


On Fri, May 18, 2012 at 9:55 AM, Yaron Minsky <yminsky at janestreet.com> wrote:
> I didn't upload them, but the big tarball has all the little tarballs
> unpacked on the inside, so I thought that would be adequate for
> testing. ?If people prefer, we can upload the little tarballs now.

For testing purposes it seems to be sufficient to just provide one
tarball.  I'd rather not have to download so many different packages.
In fact, I'd be happy just checking out the developer repository.  A
Mercurial tag for the release candidate would be perfect.

The separate tarballs, however, are extremely useful for Godi
integration.  Lets say you provide a bugfix for just one sub-package.
If there were only one tarball, the non-affected sub-packages would
also have to be recompiled.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From gildor478 at gmail.com  Fri May 18 11:02:40 2012
From: gildor478 at gmail.com (Sylvain Le Gall)
Date: Fri, 18 May 2012 12:02:40 +0200
Subject: Feedback on pre-release
In-Reply-To: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com>
Message-ID: <CAOCAUGMjiFo0--D_+GocDvt=fn18TpO+hECF=thuDa_FpZfy2Q@mail.gmail.com>

Please use oasis 0.3.0 rc5 to generate the setup.ml. This is almost the
release...

Cheers
Sylvain
Le 18 mai 2012 11:25, "Yaron Minsky" <yminsky at janestreet.com> a ?crit :

> If anyone has any feedback on the pre-release, please tell us.  If
> not, we'll put up the actual release on Monday or Tuesday.
>
> y
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120518/5bf41f70/attachment-0001.html>

From thelema314 at gmail.com  Fri May 18 21:14:12 2012
From: thelema314 at gmail.com (Edgar Friendly)
Date: Fri, 18 May 2012 16:14:12 -0400
Subject: Feedback on pre-release
In-Reply-To: <CACLX4jTCgW-wWjUFVCepAMoSWRCM4GH0+4YaQh+jFF_7PHA_Mw@mail.gmail.com>
References: <CACLX4jS4asTQoXRxvH8PvbXrJ=BCoOdSVDf4_JpH=6vicXeJow@mail.gmail.com> <4FB646CF.4050005@gmail.com> <CACLX4jTCgW-wWjUFVCepAMoSWRCM4GH0+4YaQh+jFF_7PHA_Mw@mail.gmail.com>
Message-ID: <4FB6AD94.2030807@gmail.com>


On 05/18/2012 09:55 AM, Yaron Minsky wrote:
> I didn't upload them, but the big tarball has all the little tarballs
> unpacked on the inside, so I thought that would be adequate for
> testing.  If people prefer, we can upload the little tarballs now.
>
> y

I made my own set of little tarballs, and odb is able to automate the 
installation of all the sub-packages without problem.  If these tarballs 
were made available via http (or ftp), they could be auto-installed with 
a single command.  When oasis-db supports oasis 0.3 files, it would be 
able to serve as both the file server and the metadata server for 
dependencies and tarball urls.

E.



From yoriyuki.y at gmail.com  Sun May 20 16:04:43 2012
From: yoriyuki.y at gmail.com (Yoriyuki Yamagata)
Date: Sun, 20 May 2012 08:04:43 -0700 (PDT)
Subject: Good example of Async and the best practice of handling error in
 Async
Message-ID: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>

Hi, list,

I began to read the code of Async, but I'm not sure what is the best way to 
handle errors caused by IO.  Simply throw an exception is okay?

What I am doing is to design error handling of code converter in ulib, a 
next generation Unicode library for OCaml which I'm working.  I want to 
integrate ulib seamlessly to async and core lib.

Any suggestion is appreciated.

Best,
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120520/7c04873a/attachment-0001.html>

From sdefabbiakane at gmail.com  Mon May 21 04:04:25 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Sun, 20 May 2012 20:04:25 -0700 (PDT)
Subject: Good example of Async and the best practice of handling error
 in Async
In-Reply-To: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
Message-ID: <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>

If you're dealing with exceptions in Async, you want the Monitor 
module--throwing exceptions is fine, but catching them would (without 
Monitor) be tricky. You can start out with Monitor.try_with (see the .mli 
for details: 
https://bitbucket.org/yminsky/ocaml-core/src/2c2e24978da2/base/async/core/lib/monitor.mli), 
which lets you pass a function to run, and a function to function to handle 
the result value/error.

On Sunday, May 20, 2012 11:04:43 AM UTC-4, Yoriyuki Yamagata wrote:
>
> Hi, list,
>
> I began to read the code of Async, but I'm not sure what is the best way 
> to handle errors caused by IO.  Simply throw an exception is okay?
>
> What I am doing is to design error handling of code converter in ulib, a 
> next generation Unicode library for OCaml which I'm working.  I want to 
> integrate ulib seamlessly to async and core lib.
>
> Any suggestion is appreciated.
>
> Best,
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120520/98c58a5e/attachment-0001.html>

From sdefabbiakane at gmail.com  Mon May 21 17:23:47 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Mon, 21 May 2012 09:23:47 -0700 (PDT)
Subject: Good example of Async and the best practice of handling error
 in Async
In-Reply-To: <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com> <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
 <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
Message-ID: <89926670-1762-485a-9c5f-4fe1e7ffe225@googlegroups.com>

Oh, sorry, I misunderstood. If you want to throw an exception during 
reading/writing I believe that's fine (although I'm not 100% sure there 
aren't edge cases I don't know about). Exact behavior likely depends on 
what functions are being used. The with_file functions of both 
Reader/Writer will, for example, close the files properly even if an 
exception is thrown in the function you pass it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120521/44a555f1/attachment-0001.html>

From yminsky at janestreet.com  Mon May 21 18:46:05 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 21 May 2012 13:46:05 -0400
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
	<406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
	<CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
Message-ID: <CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>


On Mon, May 21, 2012 at 9:24 AM, Yoriyuki Yamagata <yoriyuki.y at gmail.com> wrote:
> Hi, thank you for commenting, Sam.
>
> 2012/5/21 Sam <sdefabbiakane at gmail.com>:
>> If you're dealing with exceptions in Async, you want the Monitor
>> module--throwing exceptions is fine, but catching them would (without
>> Monitor) be tricky.
>
> I am aware of Monitor module. ?But one thing that I am not sure is
> whether it is okay or not if the Reader or Writer throw exception
> during reading or writing operations. ?Also, I also want to know what
> are supposed behaviors of Reader/Writer after exceptions. ?They are
> not apparent from the source, I think.

I'm a little unsure what you mean here.  Async is generally
exception-safe, although even more than with non-concurrent programs,
exceptions can lead to confusing control-flow.  The code for Writer
itself does sometimes throw exceptions in some circumstances, for
example.  But when code that uses a writer throws an exception, that
doesn't necessarily cause that writer to close (much as code using an
In_channel.t doesn't cause a close when it throws an exception.)

Maybe you could write a simple code snippet showing a case where
you're unsure what the right behavior is?  That might help us focus in
on answering the right question.

y


From yminsky at janestreet.com  Tue May 22 03:10:37 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 21 May 2012 22:10:37 -0400
Subject: 108.00 release up on bitbucket
Message-ID: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>


I've now uploaded all the original tarballs.  They are basically
unchanged from the pre-release.  The all-in-one tarball is called
"core-suite-108.00.tgz".

y


From yoriyuki.y at gmail.com  Mon May 21 14:24:27 2012
From: yoriyuki.y at gmail.com (Yoriyuki Yamagata)
Date: Mon, 21 May 2012 22:24:27 +0900
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com> <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
Message-ID: <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>


Hi, thank you for commenting, Sam.

2012/5/21 Sam <sdefabbiakane at gmail.com>:
> If you're dealing with exceptions in Async, you want the Monitor
> module--throwing exceptions is fine, but catching them would (without
> Monitor) be tricky.

I am aware of Monitor module.  But one thing that I am not sure is
whether it is okay or not if the Reader or Writer throw exception
during reading or writing operations.  Also, I also want to know what
are supposed behaviors of Reader/Writer after exceptions.  They are
not apparent from the source, I think.

-- 
Yoriyuki?Yamagata
yoriyuki.y at gmail.com


From yury.sulsky at gmail.com  Wed May 23 15:49:00 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Wed, 23 May 2012 10:49:00 -0400
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <CALdQWQ6+YVk8zJBWfD8FzqTbBtwTHyQy23WfGFYEyqBNby7EpA@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
	<406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
	<CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
	<CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>
	<CALdQWQ6+YVk8zJBWfD8FzqTbBtwTHyQy23WfGFYEyqBNby7EpA@mail.gmail.com>
Message-ID: <CAEDxudzq1Z_x18=pGensOexJdGpEKQdWROpKgSUg47QvESeGtQ@mail.gmail.com>


Hi Yoriyuki,

Since Pipe.map doesn't handle exceptions, the situation you describe
won't occur. The exception will stop the iteration of Pipe.map and
bubble up to you. Here's an example program. Note that the exception
bubbles up to whatever monitor was in effect when the call to Pipe.map
took place.

# open Core.Std;;
# open Async.Std;;
# let r, w = Pipe.create ();;
# let rec loop = function
    | 10 -> return ()
    |  x -> Pipe.write w x >>= fun () -> loop (x + 1)
  in whenever (loop 0);;
# let f i = if i > 5 then failwithf "too big: %d" i () else i;;
# Monitor.try_with (fun () ->
    let r' = Pipe.map ~f r in
    Pipe.iter_without_pushback r' ~f:(printf "*** read %d\n"))
  >>| function
    | Ok () -> ()
    | Error exn -> printf "*** caught exn %s\n" (Exn.to_string exn);;
# Scheduler.go ();;
*** read 0
*** read 1
*** read 2
*** read 3
*** read 4
*** read 5
*** caught exn (monitor.ml.Error_
  ((exn (Failure "too big: 6"))
    (backtrace
      ("Raised at file \"pervasives.ml\", line 22, characters 22-33"
        "Called from file \"core_queue.ml\", line 60, characters 35-38"
        "Called from file \"queue.ml\", line 134, characters 6-20"
        "Called from file \"core_queue.ml\", line 60, characters 2-40"
        "Called from file \"pipe.ml\", line 584, characters 52-62"
        "Called from file \"scheduler.ml\", line 65, characters 12-23" ""))
    (monitor
      (((name_opt (try_with)) (id 2) (has_seen_error true)
         (someone_is_listening true))
        ((name_opt (main)) (id 1) (has_seen_error false)
          (someone_is_listening false))))))

On Wed, May 23, 2012 at 9:27 AM, Yoriyuki Yamagata <yoriyuki.y at gmail.com> wrote:
> Hi, list.
>
> 2012/5/22 Yaron Minsky <yminsky at janestreet.com>:
>> Maybe you could write a simple code snippet showing a case where
>> you're unsure what the right behavior is? ?That might help us focus in
>> on answering the right question.
>
> How about this one?
>
> let f c = if Char.code c < 0x80 then c else raise Out_of_bound in
> reader' = ?Pipe.map reader ~f
>
> I think Pipe's reader does not handle the exception, so reader' just
> skips non-Ascii character after raising exception. ?Am I correct?
>
> If f is more complex (say, it has internal states), such behavior
> would cause a strange result (all outputs from reader are garbage
> after the exception, for example). ? So any alternatives? ?Maybe we
> make f return char option, but I feel it too heavy.
>
> Best,
>
> --
> Yoriyuki?Yamagata
> yoriyuki.y at gmail.com


From yury.sulsky at gmail.com  Thu May 24 00:35:52 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Wed, 23 May 2012 19:35:52 -0400
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <CALdQWQ6hcsPCzdQJ0DE6DfH=8n9ZGKyk2DrDvXJj-RmfZCqGWg@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
	<406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com>
	<CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
	<CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>
	<CALdQWQ6+YVk8zJBWfD8FzqTbBtwTHyQy23WfGFYEyqBNby7EpA@mail.gmail.com>
	<CAEDxudzq1Z_x18=pGensOexJdGpEKQdWROpKgSUg47QvESeGtQ@mail.gmail.com>
	<CALdQWQ6hcsPCzdQJ0DE6DfH=8n9ZGKyk2DrDvXJj-RmfZCqGWg@mail.gmail.com>
Message-ID: <CAEDxudzBDLa1QCkBwVK32u0Y4KVUKTAUvvoEDq+4bp3W4czLvg@mail.gmail.com>


It should be okay to raise exceptions, but keep in mind that all of
the normal exception-handling caveats apply (i.e. you are responsible
for unwinding the resources that aren't garbage-collected, such as
file handles).

I find that exception handling is always a little tricky to think
about in Async. It's a matter of taste, but I usually prefer to turn
exceptions into Result.t's at a low level, and deal with code that
won't raise exceptions through the rest of my program.

On Wed, May 23, 2012 at 6:08 PM, Yoriyuki Yamagata <yoriyuki.y at gmail.com> wrote:
> Hi, Yury
>
> 2012/5/23 Yury Sulsky <yury.sulsky at gmail.com>:
>> Hi Yoriyuki,
>>
>> Since Pipe.map doesn't handle exceptions, the situation you describe
>> won't occur. The exception will stop the iteration of Pipe.map and
>> bubble up to you. Here's an example program. Note that the exception
>> bubbles up to whatever monitor was in effect when the call to Pipe.map
>> took place.
>
> I see. ?My mistake.
>
> So, does it means that it is okay to raise exceptions during IO, as
> long as you run the IO inside an appropriate monitor?
> --
> Yoriyuki?Yamagata
> yoriyuki.y at gmail.com


From yoriyuki.y at gmail.com  Wed May 23 14:27:59 2012
From: yoriyuki.y at gmail.com (Yoriyuki Yamagata)
Date: Wed, 23 May 2012 22:27:59 +0900
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
 <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com> <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
 <CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>
Message-ID: <CALdQWQ6+YVk8zJBWfD8FzqTbBtwTHyQy23WfGFYEyqBNby7EpA@mail.gmail.com>


Hi, list.

2012/5/22 Yaron Minsky <yminsky at janestreet.com>:
> Maybe you could write a simple code snippet showing a case where
> you're unsure what the right behavior is?  That might help us focus in
> on answering the right question.

How about this one?

let f c = if Char.code c < 0x80 then c else raise Out_of_bound in
reader' =  Pipe.map reader ~f

I think Pipe's reader does not handle the exception, so reader' just
skips non-Ascii character after raising exception.  Am I correct?

If f is more complex (say, it has internal states), such behavior
would cause a strange result (all outputs from reader are garbage
after the exception, for example).   So any alternatives?  Maybe we
make f return char option, but I feel it too heavy.

Best,

-- 
Yoriyuki?Yamagata
yoriyuki.y at gmail.com


From yoriyuki.y at gmail.com  Wed May 23 23:08:15 2012
From: yoriyuki.y at gmail.com (Yoriyuki Yamagata)
Date: Thu, 24 May 2012 07:08:15 +0900
Subject: Good example of Async and the best practice of handling error in Async
In-Reply-To: <CAEDxudzq1Z_x18=pGensOexJdGpEKQdWROpKgSUg47QvESeGtQ@mail.gmail.com>
References: <e010f540-e37e-4c50-b03c-7e2944666af8@googlegroups.com>
 <406c573a-0f10-4178-a469-5762cd70be72@googlegroups.com> <CALdQWQ4nY35ooH2F7baxaef=RhgyMZADRck4WzYfJVRvewKCOQ@mail.gmail.com>
 <CACLX4jTGwx6s4Utyu1AfP1i9=OwGB9Lsmm+RcuwExatoVoBmZA@mail.gmail.com>
 <CALdQWQ6+YVk8zJBWfD8FzqTbBtwTHyQy23WfGFYEyqBNby7EpA@mail.gmail.com> <CAEDxudzq1Z_x18=pGensOexJdGpEKQdWROpKgSUg47QvESeGtQ@mail.gmail.com>
Message-ID: <CALdQWQ6hcsPCzdQJ0DE6DfH=8n9ZGKyk2DrDvXJj-RmfZCqGWg@mail.gmail.com>


Hi, Yury

2012/5/23 Yury Sulsky <yury.sulsky at gmail.com>:
> Hi Yoriyuki,
>
> Since Pipe.map doesn't handle exceptions, the situation you describe
> won't occur. The exception will stop the iteration of Pipe.map and
> bubble up to you. Here's an example program. Note that the exception
> bubbles up to whatever monitor was in effect when the call to Pipe.map
> took place.

I see.  My mistake.

So, does it means that it is okay to raise exceptions during IO, as
long as you run the IO inside an appropriate monitor?
-- 
Yoriyuki?Yamagata
yoriyuki.y at gmail.com


From thelema314 at gmail.com  Thu May 24 18:40:05 2012
From: thelema314 at gmail.com (Edgar Friendly)
Date: Thu, 24 May 2012 13:40:05 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
Message-ID: <4FBE7275.5040200@gmail.com>


On 05/21/2012 10:10 PM, Yaron Minsky wrote:
> I've now uploaded all the original tarballs.  They are basically
> unchanged from the pre-release.  The all-in-one tarball is called
> "core-suite-108.00.tgz".
>
> y

Odb.ml supports auto-install of the core suite (by default into a user's 
home dir, but also system wide with --sudo or --have-perms) using the 
following command:

ocaml odb.ml --package http://paste.debian.net/plain/170991

Instead of using paste.debian.net to host the metadata, it could be put 
into some project web space.  My first preference is that core keep this 
file, but if you don't, I'll make it available in the odb project.

E.


From thelema314 at gmail.com  Thu May 24 19:22:46 2012
From: thelema314 at gmail.com (Edgar Friendly)
Date: Thu, 24 May 2012 14:22:46 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <CAAHaHtnA=QArqpkU-hpeEStY2sXH_KN-7AwKLbzvsU5EchWEQA@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com> <4FBE7275.5040200@gmail.com> <CAAHaHtnA=QArqpkU-hpeEStY2sXH_KN-7AwKLbzvsU5EchWEQA@mail.gmail.com>
Message-ID: <4FBE7C76.1090904@gmail.com>


Oh yeah, dlls.  You'll have to let ocamlfind know where to find .so 
files installed by odb.  Any of the following should work:

1) echo $HOME/.odb/lib/stublibs | sudo tee -a `ocamlc -where`/ld.conf
2) export CAML_LD_LIBRARY_PATH=$HOME/.odb/lib/stublibs

Modify #2 if you're not using bash; iirc, it's not the default shell on osx.

I've thought about detecting whether this is set properly so I can warn 
the user that it needs to be set, but don't have a good solution for 
this.  Any suggestions?

E.


On 05/24/2012 02:14 PM, orbitz wrote:
> This failed for me with the following error:
>
> + ocamlfind ocamldep -package variantslib.syntax -package variantslib
> -package unix -package threads -package sexplib.syntax -package sexplib
> -package res -package pa_pipebang -package pa_ounit -package
> fieldslib.syntax -package fieldslib -package bin_prot.syntax -package
> bin_prot -package bigarray -syntax camlp4o -modules
> lib/agnostic_mutex.mli > lib/agnostic_mutex.mli.depends
> Camlp4: Uncaught exception: DynLoader.Error
> ("/Users/orbitz/.odb/lib/bin_prot/bin_prot.cma", "error loading shared
> library: dllbin_prot_stubs.so: dlopen(dllbin_prot_stubs.so, 138): image
> not found")
>
> Preprocessing error on file lib/agnostic_mutex.mli
> Command exited with code 2.
> Compilation unsuccessful after building 20 targets (0 cached) in 00:00:02.
> E: Failure("Command '/Users/orbitz/bin/ocaml-3.12.1/bin/ocamlbuild
> lib/libcore_stubs.a lib/dllcore_stubs.so lib/core.cma lib/core.cmxs
> lib/core.cmxa lib/core.a top/core_top.cma top/core_top.cmxs
> top/core_top.cmxa top/core_top.a -tag debug' terminated with error code 10")
> Exception: Failure "Could not build core".
>
>
> I am on a Mac.  Any thoughts?
>
>
> On Thu, May 24, 2012 at 7:40 PM, Edgar Friendly <thelema314 at gmail.com
> <mailto:thelema314 at gmail.com>> wrote:
>
>     On 05/21/2012 10:10 PM, Yaron Minsky wrote:
>
>         I've now uploaded all the original tarballs.  They are basically
>         unchanged from the pre-release.  The all-in-one tarball is called
>         "core-suite-108.00.tgz".
>
>         y
>
>
>     Odb.ml supports auto-install of the core suite (by default into a
>     user's home dir, but also system wide with --sudo or --have-perms)
>     using the following command:
>
>     ocaml odb.ml <http://odb.ml> --package
>     http://paste.debian.net/plain/__170991
>     <http://paste.debian.net/plain/170991>
>
>     Instead of using paste.debian.net <http://paste.debian.net> to host
>     the metadata, it could be put into some project web space.  My first
>     preference is that core keep this file, but if you don't, I'll make
>     it available in the odb project.
>
>     E.
>
>



From fermin.reig at gmail.com  Thu May 24 23:29:45 2012
From: fermin.reig at gmail.com (fermin.reig at gmail.com)
Date: Thu, 24 May 2012 15:29:45 -0700 (PDT)
Subject: 108.00 release up on bitbucket
In-Reply-To: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
Message-ID: <ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>


I've downloaded the all-in-one tarball, and tried to build with 
./build-and-install -s. First I had to edit  build-common.sh, to delete 
"-pre2" in all the names. After that, I get this error:

 % ./build-and-install -s
=> type_conv-108.00
   * configuring
   * compiling
ocaml setup.ml -build 
ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend 
-syntax camlp4o -modules lib/pa_type_conv.ml > lib/pa_type_conv.ml.depends
+ ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend 
-syntax camlp4o -modules lib/pa_type_conv.ml > lib/pa_type_conv.ml.depends
File "lib/pa_type_conv.ml", line 329, characters 23-29:
While expanding quotation "module_type" in a position of "patt":
  Parse error: illegal begin of quotation of module type

Preprocessing error on file lib/pa_type_conv.ml
Command exited with code 2.
E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag debug' 
terminated with error code 10")
make: *** [build] Error 1
*** ERROR: Couldn't compile type_conv

This is the relevant output of #list;; in ocaml:

...
findlib             (version: 1.2.7)
num                 (version: [distributed with Ocaml])
num-top             (version: 1.2.7)
num.core            (version: [internal])
oUnit               (version: 1.1.0)
ocamlbuild          (version: [distributed with Ocaml])
pcre                (version: 6.2.2)
res                 (version: 3.2.0)
...

I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/460aee48/attachment-0001.html>

From orbitz at gmail.com  Thu May 24 19:14:02 2012
From: orbitz at gmail.com (orbitz)
Date: Thu, 24 May 2012 20:14:02 +0200
Subject: 108.00 release up on bitbucket
In-Reply-To: <4FBE7275.5040200@gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<4FBE7275.5040200@gmail.com>
Message-ID: <CAAHaHtnA=QArqpkU-hpeEStY2sXH_KN-7AwKLbzvsU5EchWEQA@mail.gmail.com>

This failed for me with the following error:

+ ocamlfind ocamldep -package variantslib.syntax -package variantslib
-package unix -package threads -package sexplib.syntax -package sexplib
-package res -package pa_pipebang -package pa_ounit -package
fieldslib.syntax -package fieldslib -package bin_prot.syntax -package
bin_prot -package bigarray -syntax camlp4o -modules lib/agnostic_mutex.mli
> lib/agnostic_mutex.mli.depends
Camlp4: Uncaught exception: DynLoader.Error
("/Users/orbitz/.odb/lib/bin_prot/bin_prot.cma", "error loading shared
library: dllbin_prot_stubs.so: dlopen(dllbin_prot_stubs.so, 138): image not
found")

Preprocessing error on file lib/agnostic_mutex.mli
Command exited with code 2.
Compilation unsuccessful after building 20 targets (0 cached) in 00:00:02.
E: Failure("Command '/Users/orbitz/bin/ocaml-3.12.1/bin/ocamlbuild
lib/libcore_stubs.a lib/dllcore_stubs.so lib/core.cma lib/core.cmxs
lib/core.cmxa lib/core.a top/core_top.cma top/core_top.cmxs
top/core_top.cmxa top/core_top.a -tag debug' terminated with error code 10")
Exception: Failure "Could not build core".


I am on a Mac.  Any thoughts?


On Thu, May 24, 2012 at 7:40 PM, Edgar Friendly <thelema314 at gmail.com>wrote:

> On 05/21/2012 10:10 PM, Yaron Minsky wrote:
>
>> I've now uploaded all the original tarballs.  They are basically
>> unchanged from the pre-release.  The all-in-one tarball is called
>> "core-suite-108.00.tgz".
>>
>> y
>>
>
> Odb.ml supports auto-install of the core suite (by default into a user's
> home dir, but also system wide with --sudo or --have-perms) using the
> following command:
>
> ocaml odb.ml --package http://paste.debian.net/plain/**170991<http://paste.debian.net/plain/170991>
>
> Instead of using paste.debian.net to host the metadata, it could be put
> into some project web space.  My first preference is that core keep this
> file, but if you don't, I'll make it available in the odb project.
>
> E.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/c780ec54/attachment-0001.html>

From orbitz at gmail.com  Thu May 24 21:19:21 2012
From: orbitz at gmail.com (orbitz)
Date: Thu, 24 May 2012 22:19:21 +0200
Subject: 108.00 release up on bitbucket
In-Reply-To: <4FBE7C76.1090904@gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<4FBE7275.5040200@gmail.com>
	<CAAHaHtnA=QArqpkU-hpeEStY2sXH_KN-7AwKLbzvsU5EchWEQA@mail.gmail.com>
	<4FBE7C76.1090904@gmail.com>
Message-ID: <CAAHaHt=X0zD75RNhNBK2G1exs8raxOW25M=0uABmnKqf1xjJsQ@mail.gmail.com>

That works like a charm.  I have been trying to get Core installing on my
Mac for almost a week without success, many thank you's.

On Thu, May 24, 2012 at 8:22 PM, Edgar Friendly <thelema314 at gmail.com>wrote:

> Oh yeah, dlls.  You'll have to let ocamlfind know where to find .so files
> installed by odb.  Any of the following should work:
>
> 1) echo $HOME/.odb/lib/stublibs | sudo tee -a `ocamlc -where`/ld.conf
> 2) export CAML_LD_LIBRARY_PATH=$HOME/.**odb/lib/stublibs
>
> Modify #2 if you're not using bash; iirc, it's not the default shell on
> osx.
>
> I've thought about detecting whether this is set properly so I can warn
> the user that it needs to be set, but don't have a good solution for this.
>  Any suggestions?
>
> E.
>
>
>
> On 05/24/2012 02:14 PM, orbitz wrote:
>
>> This failed for me with the following error:
>>
>> + ocamlfind ocamldep -package variantslib.syntax -package variantslib
>> -package unix -package threads -package sexplib.syntax -package sexplib
>> -package res -package pa_pipebang -package pa_ounit -package
>> fieldslib.syntax -package fieldslib -package bin_prot.syntax -package
>> bin_prot -package bigarray -syntax camlp4o -modules
>> lib/agnostic_mutex.mli > lib/agnostic_mutex.mli.depends
>> Camlp4: Uncaught exception: DynLoader.Error
>> ("/Users/orbitz/.odb/lib/bin_**prot/bin_prot.cma", "error loading shared
>> library: dllbin_prot_stubs.so: dlopen(dllbin_prot_stubs.so, 138): image
>> not found")
>>
>> Preprocessing error on file lib/agnostic_mutex.mli
>> Command exited with code 2.
>> Compilation unsuccessful after building 20 targets (0 cached) in 00:00:02.
>> E: Failure("Command '/Users/orbitz/bin/ocaml-3.12.**1/bin/ocamlbuild
>> lib/libcore_stubs.a lib/dllcore_stubs.so lib/core.cma lib/core.cmxs
>> lib/core.cmxa lib/core.a top/core_top.cma top/core_top.cmxs
>> top/core_top.cmxa top/core_top.a -tag debug' terminated with error code
>> 10")
>> Exception: Failure "Could not build core".
>>
>>
>> I am on a Mac.  Any thoughts?
>>
>>
>> On Thu, May 24, 2012 at 7:40 PM, Edgar Friendly <thelema314 at gmail.com
>> <mailto:thelema314 at gmail.com>> wrote:
>>
>>    On 05/21/2012 10:10 PM, Yaron Minsky wrote:
>>
>>        I've now uploaded all the original tarballs.  They are basically
>>        unchanged from the pre-release.  The all-in-one tarball is called
>>        "core-suite-108.00.tgz".
>>
>>        y
>>
>>
>>    Odb.ml supports auto-install of the core suite (by default into a
>>    user's home dir, but also system wide with --sudo or --have-perms)
>>    using the following command:
>>
>>    ocaml odb.ml <http://odb.ml> --package
>>    http://paste.debian.net/plain/**__170991<http://paste.debian.net/plain/__170991>
>>    <http://paste.debian.net/**plain/170991<http://paste.debian.net/plain/170991>
>> >
>>
>>    Instead of using paste.debian.net <http://paste.debian.net> to host
>>
>>    the metadata, it could be put into some project web space.  My first
>>    preference is that core keep this file, but if you don't, I'll make
>>    it available in the odb project.
>>
>>    E.
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/c46382ee/attachment-0001.html>

From yminsky at janestreet.com  Fri May 25 03:57:16 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 24 May 2012 22:57:16 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
Message-ID: <CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>

Urgh.  The -pre2 mistake is mine.  I'll get that fixed.

As for the other mistake, I'll see if we can replicate.

y

On Thu, May 24, 2012 at 6:29 PM, <fermin.reig at gmail.com> wrote:

>
> I've downloaded the all-in-one tarball, and tried to build with
> ./build-and-install -s. First I had to edit  build-common.sh, to delete
> "-pre2" in all the names. After that, I get this error:
>
>  % ./build-and-install -s
> => type_conv-108.00
>    * configuring
>    * compiling
> ocaml setup.ml -build
> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
> -syntax camlp4o -modules lib/pa_type_conv.ml > lib/pa_type_conv.ml.depends
> + ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
> -syntax camlp4o -modules lib/pa_type_conv.ml > lib/pa_type_conv.ml.depends
> File "lib/pa_type_conv.ml", line 329, characters 23-29:
> While expanding quotation "module_type" in a position of "patt":
>   Parse error: illegal begin of quotation of module type
>
> Preprocessing error on file lib/pa_type_conv.ml
> Command exited with code 2.
> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag debug'
> terminated with error code 10")
> make: *** [build] Error 1
> *** ERROR: Couldn't compile type_conv
>
> This is the relevant output of #list;; in ocaml:
>
> ...
> findlib             (version: 1.2.7)
> num                 (version: [distributed with Ocaml])
> num-top             (version: 1.2.7)
> num.core            (version: [internal])
> oUnit               (version: 1.1.0)
> ocamlbuild          (version: [distributed with Ocaml])
> pcre                (version: 6.2.2)
> res                 (version: 3.2.0)
> ...
>
> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/015f6bad/attachment-0001.html>

From yminsky at janestreet.com  Fri May 25 04:04:03 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 24 May 2012 23:04:03 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
	<CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
Message-ID: <CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>

I just uploaded a tarball that fixes the build-common.sh bug.

One question about your setup: which version of OCaml are you using?

y

On Thu, May 24, 2012 at 10:57 PM, Yaron Minsky <yminsky at janestreet.com>wrote:

> Urgh.  The -pre2 mistake is mine.  I'll get that fixed.
>
> As for the other mistake, I'll see if we can replicate.
>
> y
>
>
> On Thu, May 24, 2012 at 6:29 PM, <fermin.reig at gmail.com> wrote:
>
>>
>> I've downloaded the all-in-one tarball, and tried to build with
>> ./build-and-install -s. First I had to edit  build-common.sh, to delete
>> "-pre2" in all the names. After that, I get this error:
>>
>>  % ./build-and-install -s
>> => type_conv-108.00
>>    * configuring
>>    * compiling
>> ocaml setup.ml -build
>> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>> lib/pa_type_conv.ml.depends
>> + ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>> lib/pa_type_conv.ml.depends
>> File "lib/pa_type_conv.ml", line 329, characters 23-29:
>> While expanding quotation "module_type" in a position of "patt":
>>   Parse error: illegal begin of quotation of module type
>>
>> Preprocessing error on file lib/pa_type_conv.ml
>> Command exited with code 2.
>> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag debug'
>> terminated with error code 10")
>> make: *** [build] Error 1
>> *** ERROR: Couldn't compile type_conv
>>
>> This is the relevant output of #list;; in ocaml:
>>
>> ...
>> findlib             (version: 1.2.7)
>> num                 (version: [distributed with Ocaml])
>> num-top             (version: 1.2.7)
>> num.core            (version: [internal])
>> oUnit               (version: 1.1.0)
>> ocamlbuild          (version: [distributed with Ocaml])
>> pcre                (version: 6.2.2)
>> res                 (version: 3.2.0)
>> ...
>>
>> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/6d00f398/attachment-0001.html>

From yminsky at janestreet.com  Fri May 25 04:07:05 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 24 May 2012 23:07:05 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
	<CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
	<CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>
Message-ID: <CACLX4jTz0gwHL5QyQBQxLFuNKvgM2PE-mOY4YjtuVTj61K7v0g@mail.gmail.com>

>From looking here:

   https://launchpad.net/ubuntu/oneiric/i386/ocaml-base

it looks like ubuntu 11.10 runs 3.12.0.  That's a very buggy release when
it comes to camlp4, and I suspect those bugs prevent the versions of
type-conv in core-108.00 from compiling.  If you upgrade to 3.12.1, I would
expect things to work fine.

y

On Thu, May 24, 2012 at 11:04 PM, Yaron Minsky <yminsky at janestreet.com>wrote:

> I just uploaded a tarball that fixes the build-common.sh bug.
>
> One question about your setup: which version of OCaml are you using?
>
> y
>
>
> On Thu, May 24, 2012 at 10:57 PM, Yaron Minsky <yminsky at janestreet.com>wrote:
>
>> Urgh.  The -pre2 mistake is mine.  I'll get that fixed.
>>
>> As for the other mistake, I'll see if we can replicate.
>>
>> y
>>
>>
>> On Thu, May 24, 2012 at 6:29 PM, <fermin.reig at gmail.com> wrote:
>>
>>>
>>> I've downloaded the all-in-one tarball, and tried to build with
>>> ./build-and-install -s. First I had to edit  build-common.sh, to delete
>>> "-pre2" in all the names. After that, I get this error:
>>>
>>>  % ./build-and-install -s
>>> => type_conv-108.00
>>>    * configuring
>>>    * compiling
>>> ocaml setup.ml -build
>>> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>>> lib/pa_type_conv.ml.depends
>>> + ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>>> lib/pa_type_conv.ml.depends
>>> File "lib/pa_type_conv.ml", line 329, characters 23-29:
>>> While expanding quotation "module_type" in a position of "patt":
>>>   Parse error: illegal begin of quotation of module type
>>>
>>> Preprocessing error on file lib/pa_type_conv.ml
>>> Command exited with code 2.
>>> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag
>>> debug' terminated with error code 10")
>>> make: *** [build] Error 1
>>> *** ERROR: Couldn't compile type_conv
>>>
>>> This is the relevant output of #list;; in ocaml:
>>>
>>> ...
>>> findlib             (version: 1.2.7)
>>> num                 (version: [distributed with Ocaml])
>>> num-top             (version: 1.2.7)
>>> num.core            (version: [internal])
>>> oUnit               (version: 1.1.0)
>>> ocamlbuild          (version: [distributed with Ocaml])
>>> pcre                (version: 6.2.2)
>>> res                 (version: 3.2.0)
>>> ...
>>>
>>> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120524/c49abb45/attachment-0001.html>

From fermin.reig at gmail.com  Fri May 25 17:31:10 2012
From: fermin.reig at gmail.com (fermin.reig at gmail.com)
Date: Fri, 25 May 2012 09:31:10 -0700 (PDT)
Subject: 108.00 release up on bitbucket
In-Reply-To: <CACLX4jTz0gwHL5QyQBQxLFuNKvgM2PE-mOY4YjtuVTj61K7v0g@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
 <ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
 <CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
 <CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>
 <CACLX4jTz0gwHL5QyQBQxLFuNKvgM2PE-mOY4YjtuVTj61K7v0g@mail.gmail.com>
Message-ID: <10198a3f-d1dc-4dac-b302-675f862b1023@googlegroups.com>

You're right, I'm on 3.12.0. I'll upgrade and try that. 
Thanks

On Friday, 25 May 2012 04:07:05 UTC+1, Yaron Minsky wrote:
>
> From looking here:
>
>    https://launchpad.net/ubuntu/oneiric/i386/ocaml-base
>
> it looks like ubuntu 11.10 runs 3.12.0.  That's a very buggy release when 
> it comes to camlp4, and I suspect those bugs prevent the versions of 
> type-conv in core-108.00 from compiling.  If you upgrade to 3.12.1, I would 
> expect things to work fine.
>
> y
>
> On Thu, May 24, 2012 at 11:04 PM, Yaron Minsky wrote:
>
>> I just uploaded a tarball that fixes the build-common.sh bug.
>>
>> One question about your setup: which version of OCaml are you using?
>>
>> y
>>
>>
>> On Thu, May 24, 2012 at 10:57 PM, Yaron Minsky  wrote:
>>
>>> Urgh.  The -pre2 mistake is mine.  I'll get that fixed.
>>>
>>> As for the other mistake, I'll see if we can replicate.
>>>
>>> y
>>>
>>>
>>> On Thu, May 24, 2012 at 6:29 PM, Fermin Reig wrote:
>>>
>>>>
>>>> I've downloaded the all-in-one tarball, and tried to build with 
>>>> ./build-and-install -s. First I had to edit  build-common.sh, to delete 
>>>> "-pre2" in all the names. After that, I get this error:
>>>>
>>>>  % ./build-and-install -s
>>>> => type_conv-108.00
>>>>    * configuring
>>>>    * compiling
>>>> ocaml setup.ml -build 
>>>> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend 
>>>> -syntax camlp4o -modules lib/pa_type_conv.ml > 
>>>> lib/pa_type_conv.ml.depends
>>>> + ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend 
>>>> -syntax camlp4o -modules lib/pa_type_conv.ml > 
>>>> lib/pa_type_conv.ml.depends
>>>> File "lib/pa_type_conv.ml", line 329, characters 23-29:
>>>> While expanding quotation "module_type" in a position of "patt":
>>>>   Parse error: illegal begin of quotation of module type
>>>>
>>>> Preprocessing error on file lib/pa_type_conv.ml
>>>> Command exited with code 2.
>>>> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag 
>>>> debug' terminated with error code 10")
>>>> make: *** [build] Error 1
>>>> *** ERROR: Couldn't compile type_conv
>>>>
>>>> This is the relevant output of #list;; in ocaml:
>>>>
>>>> ...
>>>> findlib             (version: 1.2.7)
>>>> num                 (version: [distributed with Ocaml])
>>>> num-top             (version: 1.2.7)
>>>> num.core            (version: [internal])
>>>> oUnit               (version: 1.1.0)
>>>> ocamlbuild          (version: [distributed with Ocaml])
>>>> pcre                (version: 6.2.2)
>>>> res                 (version: 3.2.0)
>>>> ...
>>>>
>>>> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>>>>
>>>
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120525/f9172e53/attachment-0001.html>

From kakadu.hafanana at gmail.com  Fri May 25 20:39:39 2012
From: kakadu.hafanana at gmail.com (Kakadu)
Date: Fri, 25 May 2012 12:39:39 -0700 (PDT)
Subject: Compilation problem on 32bit machine
Message-ID: <dc64b13a-d76a-4bb0-9b92-69361f27f1da@googlegroups.com>

Hi all!

I've cloned https://bitbucket.org/yminsky/ocaml-core and executed 
./build-and-install script. It seems that compilation of core package uses 
some features of 64bit systems. http://paste.in.ua/4284/#5 Any ideas?

Best wishes,
Kakadu

kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ make
ocaml setup.ml -build 
Finished, 0 targets (0 cached) in 00:00:00.
+ ocamlfind ocamlc -ccopt -D_LARGEFILE64_SOURCE -ccopt -pipe -ccopt -g 
-ccopt -fPIC -ccopt -O2 -ccopt -fomit-frame-pointer -ccopt -fsigned-char 
-ccopt -Wall -ccopt -pedantic -ccopt -Wextra -ccopt -Wunused -ccopt 
-Wno-long-long -c lib/backtrace_stubs.c
lib/backtrace_stubs.c:19:4: error: #error "backtrace_stubs.c is for x86-64 
only"
Command exited with code 2.
Compilation unsuccessful after building 1 target (0 cached) in 00:00:00.
E: Failure("Command '/usr/bin/ocamlbuild lib/libcore_stubs.a 
lib/dllcore_stubs.so lib/core.cma lib/core.cmxs lib/core.cmxa lib/core.a 
top/core_top.cma top/core_top.cmxs top/core_top.cmxa top/core_top.a -tag 
debug' terminated with error code 10")
make: *** [build] Error 1
kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ head lib/backtrace_stubs.c -n 
20
/* Dumping of OCaml stack backtraces for x86-64.

   Much of this module is taken from the OCaml source.
*/

#include "config.h"
#ifdef JSC_LINUX_EXT

#include <caml/memory.h>
#include <caml/misc.h>
#include <caml/mlvalues.h>
#include <caml/alloc.h>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>

#ifndef __x86_64__
  #error "backtrace_stubs.c is for x86-64 only"
#endif
kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ uname -a
Linux uebuntu 3.2.0-24-generic-pae #37-Ubuntu SMP Wed Apr 25 10:47:59 UTC 
2012 i686 i686 i386 GNU/Linux
kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ cat setup.data
ocamlfind="/usr/bin/ocamlfind"
ocamlc="/usr/bin/ocamlc.opt"
ocamlopt="/usr/bin/ocamlopt.opt"
ocamlbuild="/usr/bin/ocamlbuild"
pkg_name="core"
pkg_version="108.00-pre2"
os_type="Unix"
system="linux_elf"
architecture="i386"
ccomp_type="cc"
ocaml_version="3.12.1"
standard_library_default="/usr/lib/ocaml"
standard_library="/usr/lib/ocaml"
standard_runtime="/usr/bin/ocamlrun"
bytecomp_c_compiler="gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT -fPIC"
native_c_compiler="gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT"
model="default"
ext_obj=".o"
ext_asm=".s"
ext_lib=".a"
ext_dll=".so"
default_executable_name="a.out"
systhread_supported="true"
prefix="/usr/local"
exec_prefix="$prefix"
bindir="$exec_prefix/bin"
sbindir="$exec_prefix/sbin"
libexecdir="$exec_prefix/libexec"
sysconfdir="$prefix/etc"
sharedstatedir="$prefix/com"
localstatedir="$prefix/var"
libdir="$exec_prefix/lib"
datarootdir="$prefix/share"
datadir="$datarootdir"
infodir="$datarootdir/info"
localedir="$datarootdir/locale"
mandir="$datarootdir/man"
docdir="$datarootdir/doc/$pkg_name"
htmldir="$docdir"
dvidir="$docdir"
pdfdir="$docdir"
psdir="$docdir"
findlib_version="1.2.7"
is_native="true"
suffix_program=""
rm="rm -f"
rmdir="rm -rf"
debug="true"
profile="false"
native_dynlink="true"
ocamlbuildflags=""
linux="true"
posix_timers="true"
docs="true"
tests="false"
ocaml_version_ge_3_12="3.12.1"
findlib_version_ge_1_2_7="1.2.7"
pkg_variantslib="/usr/local/lib/ocaml/3.12.1/variantslib"
pkg_variantslib_syntax="/usr/local/lib/ocaml/3.12.1/variantslib"
pkg_sexplib_syntax="/usr/local/lib/ocaml/3.12.1/sexplib"
pkg_sexplib="/usr/local/lib/ocaml/3.12.1/sexplib"
pkg_fieldslib_syntax="/usr/local/lib/ocaml/3.12.1/fieldslib"
pkg_fieldslib="/usr/local/lib/ocaml/3.12.1/fieldslib"
pkg_bin_prot="/usr/local/lib/ocaml/3.12.1/bin_prot"
pkg_bin_prot_syntax="/usr/local/lib/ocaml/3.12.1/bin_prot"
pkg_bigarray="/usr/lib/ocaml"
pkg_pa_ounit="/usr/local/lib/ocaml/3.12.1/pa_ounit"
pkg_pa_pipebang="/usr/local/lib/ocaml/3.12.1/pa_pipebang"
pkg_res="/usr/lib/ocaml/res"
pkg_unix="/usr/lib/ocaml"
pkg_threads="/usr/lib/ocaml"
ocamldoc="/usr/bin/ocamldoc"
kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ 




-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120525/f76895b8/attachment-0001.html>

From kakadu.hafanana at gmail.com  Fri May 25 21:42:47 2012
From: kakadu.hafanana at gmail.com (Kakadu)
Date: Fri, 25 May 2012 13:42:47 -0700 (PDT)
Subject: Compilation problem on 32bit machine
In-Reply-To: <CAEDxudwT9huL8SLPr6nswtqYKP0wiMhokjsffWQXq6bMnXmvNQ@mail.gmail.com>
References: <dc64b13a-d76a-4bb0-9b92-69361f27f1da@googlegroups.com>
 <CAEDxudwT9huL8SLPr6nswtqYKP0wiMhokjsffWQXq6bMnXmvNQ@mail.gmail.com>
Message-ID: <e8707063-a934-438c-99b6-eb10d5be2215@googlegroups.com>


it's OK now.

On Saturday, May 26, 2012 12:22:00 AM UTC+4, Yury wrote:
>
>
> Could you 
> try changing the second line in that file to "#if (defined 
> JSC_LINUX_EXT && defined JSC_ARCH_x86_64)" 
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120525/3bdbf269/attachment-0001.html>

From yury.sulsky at gmail.com  Fri May 25 21:22:00 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Fri, 25 May 2012 16:22:00 -0400
Subject: Compilation problem on 32bit machine
In-Reply-To: <dc64b13a-d76a-4bb0-9b92-69361f27f1da@googlegroups.com>
References: <dc64b13a-d76a-4bb0-9b92-69361f27f1da@googlegroups.com>
Message-ID: <CAEDxudwT9huL8SLPr6nswtqYKP0wiMhokjsffWQXq6bMnXmvNQ@mail.gmail.com>


Thanks Kakadu!

We'll make sure we don't try to build that on 32-bit linux. Could you
try changing the second line in that file to "#if (defined
JSC_LINUX_EXT && defined JSC_ARCH_x86_64)" and let us know if there
are any other issues building on 32-bit linux?

Thanks,
Yury

On Fri, May 25, 2012 at 3:39 PM, Kakadu <kakadu.hafanana at gmail.com> wrote:
> Hi all!
>
> I've cloned https://bitbucket.org/yminsky/ocaml-core and executed
> ./build-and-install script. It seems that compilation of core package uses
> some features of 64bit systems. http://paste.in.ua/4284/#5 Any ideas?
>
> Best wishes,
> Kakadu
>
> kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ make
> ocaml setup.ml -build
> Finished, 0 targets (0 cached) in 00:00:00.
> + ocamlfind ocamlc -ccopt -D_LARGEFILE64_SOURCE -ccopt -pipe -ccopt -g
> -ccopt -fPIC -ccopt -O2 -ccopt -fomit-frame-pointer -ccopt -fsigned-char
> -ccopt -Wall -ccopt -pedantic -ccopt -Wextra -ccopt -Wunused -ccopt
> -Wno-long-long -c lib/backtrace_stubs.c
> lib/backtrace_stubs.c:19:4: error: #error "backtrace_stubs.c is for x86-64
> only"
> Command exited with code 2.
> Compilation unsuccessful after building 1 target (0 cached) in 00:00:00.
> E: Failure("Command '/usr/bin/ocamlbuild lib/libcore_stubs.a
> lib/dllcore_stubs.so lib/core.cma lib/core.cmxs lib/core.cmxa lib/core.a
> top/core_top.cma top/core_top.cmxs top/core_top.cmxa top/core_top.a -tag
> debug' terminated with error code 10")
> make: *** [build] Error 1
> kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ head lib/backtrace_stubs.c -n
> 20
> /* Dumping of OCaml stack backtraces for x86-64.
>
> ?? Much of this module is taken from the OCaml source.
> */
>
> #include "config.h"
> #ifdef JSC_LINUX_EXT
>
> #include <caml/memory.h>
> #include <caml/misc.h>
> #include <caml/mlvalues.h>
> #include <caml/alloc.h>
> #include <string.h>
> #include <stdio.h>
> #include <stdlib.h>
> #include <stdarg.h>
>
> #ifndef __x86_64__
> ? #error "backtrace_stubs.c is for x86-64 only"
> #endif
> kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ uname -a
> Linux uebuntu 3.2.0-24-generic-pae #37-Ubuntu SMP Wed Apr 25 10:47:59 UTC
> 2012 i686 i686 i386 GNU/Linux
> kakaduqt at uebuntu:~/prog/ocaml-core/base/core$ cat setup.data
> ocamlfind="/usr/bin/ocamlfind"
> ocamlc="/usr/bin/ocamlc.opt"
> ocamlopt="/usr/bin/ocamlopt.opt"
> ocamlbuild="/usr/bin/ocamlbuild"
> pkg_name="core"
> pkg_version="108.00-pre2"
> os_type="Unix"
> system="linux_elf"
> architecture="i386"
> ccomp_type="cc"
> ocaml_version="3.12.1"
> standard_library_default="/usr/lib/ocaml"
> standard_library="/usr/lib/ocaml"
> standard_runtime="/usr/bin/ocamlrun"
> bytecomp_c_compiler="gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT -fPIC"
> native_c_compiler="gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT"
> model="default"
> ext_obj=".o"
> ext_asm=".s"
> ext_lib=".a"
> ext_dll=".so"
> default_executable_name="a.out"
> systhread_supported="true"
> prefix="/usr/local"
> exec_prefix="$prefix"
> bindir="$exec_prefix/bin"
> sbindir="$exec_prefix/sbin"
> libexecdir="$exec_prefix/libexec"
> sysconfdir="$prefix/etc"
> sharedstatedir="$prefix/com"
> localstatedir="$prefix/var"
> libdir="$exec_prefix/lib"
> datarootdir="$prefix/share"
> datadir="$datarootdir"
> infodir="$datarootdir/info"
> localedir="$datarootdir/locale"
> mandir="$datarootdir/man"
> docdir="$datarootdir/doc/$pkg_name"
> htmldir="$docdir"
> dvidir="$docdir"
> pdfdir="$docdir"
> psdir="$docdir"
> findlib_version="1.2.7"
> is_native="true"
> suffix_program=""
> rm="rm -f"
> rmdir="rm -rf"
> debug="true"
> profile="false"
> native_dynlink="true"
> ocamlbuildflags=""
> linux="true"
> posix_timers="true"
> docs="true"
> tests="false"
> ocaml_version_ge_3_12="3.12.1"
> findlib_version_ge_1_2_7="1.2.7"
> pkg_variantslib="/usr/local/lib/ocaml/3.12.1/variantslib"
> pkg_variantslib_syntax="/usr/local/lib/ocaml/3.12.1/variantslib"
> pkg_sexplib_syntax="/usr/local/lib/ocaml/3.12.1/sexplib"
> pkg_sexplib="/usr/local/lib/ocaml/3.12.1/sexplib"
> pkg_fieldslib_syntax="/usr/local/lib/ocaml/3.12.1/fieldslib"
> pkg_fieldslib="/usr/local/lib/ocaml/3.12.1/fieldslib"
> pkg_bin_prot="/usr/local/lib/ocaml/3.12.1/bin_prot"
> pkg_bin_prot_syntax="/usr/local/lib/ocaml/3.12.1/bin_prot"
> pkg_bigarray="/usr/lib/ocaml"
> pkg_pa_ounit="/usr/local/lib/ocaml/3.12.1/pa_ounit"
> pkg_pa_pipebang="/usr/local/lib/ocaml/3.12.1/pa_pipebang"
> pkg_res="/usr/lib/ocaml/res"
> pkg_unix="/usr/lib/ocaml"
> pkg_threads="/usr/lib/ocaml"
> ocamldoc="/usr/bin/ocamldoc"
> kakaduqt at uebuntu:~/prog/ocaml-core/base/core$
>
>
>
>


From yury.sulsky at gmail.com  Sat May 26 00:35:38 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Fri, 25 May 2012 19:35:38 -0400
Subject: 108.00 release up on bitbucket
In-Reply-To: <10198a3f-d1dc-4dac-b302-675f862b1023@googlegroups.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
	<ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
	<CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
	<CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>
	<CACLX4jTz0gwHL5QyQBQxLFuNKvgM2PE-mOY4YjtuVTj61K7v0g@mail.gmail.com>
	<10198a3f-d1dc-4dac-b302-675f862b1023@googlegroups.com>
Message-ID: <CAEDxudzu2GzUJsan7uQadhRH5NUR9VP-__wZVjYKhec9agnfkQ@mail.gmail.com>

Thanks Fermin, we'll update the required ocaml version in our packages to
be >= 3.12.1.

Yury
On May 25, 2012 6:59 PM, <fermin.reig at gmail.com> wrote:

> You're right, I'm on 3.12.0. I'll upgrade and try that.
> Thanks
>
> On Friday, 25 May 2012 04:07:05 UTC+1, Yaron Minsky wrote:
>>
>> From looking here:
>>
>>    https://launchpad.net/ubuntu/**oneiric/i386/ocaml-base<https://launchpad.net/ubuntu/oneiric/i386/ocaml-base>
>>
>> it looks like ubuntu 11.10 runs 3.12.0.  That's a very buggy release when
>> it comes to camlp4, and I suspect those bugs prevent the versions of
>> type-conv in core-108.00 from compiling.  If you upgrade to 3.12.1, I would
>> expect things to work fine.
>>
>> y
>>
>> On Thu, May 24, 2012 at 11:04 PM, Yaron Minsky wrote:
>>
>>> I just uploaded a tarball that fixes the build-common.sh bug.
>>>
>>> One question about your setup: which version of OCaml are you using?
>>>
>>> y
>>>
>>>
>>> On Thu, May 24, 2012 at 10:57 PM, Yaron Minsky  wrote:
>>>
>>>> Urgh.  The -pre2 mistake is mine.  I'll get that fixed.
>>>>
>>>> As for the other mistake, I'll see if we can replicate.
>>>>
>>>> y
>>>>
>>>>
>>>> On Thu, May 24, 2012 at 6:29 PM, Fermin Reig wrote:
>>>>
>>>>>
>>>>> I've downloaded the all-in-one tarball, and tried to build with
>>>>> ./build-and-install -s. First I had to edit  build-common.sh, to delete
>>>>> "-pre2" in all the names. After that, I get this error:
>>>>>
>>>>>  % ./build-and-install -s
>>>>> => type_conv-108.00
>>>>>    * configuring
>>>>>    * compiling
>>>>> ocaml setup.ml -build
>>>>> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>>>>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>>>>> lib/pa_type_conv.ml.depends
>>>>> + ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend
>>>>> -syntax camlp4o -modules lib/pa_type_conv.ml >
>>>>> lib/pa_type_conv.ml.depends
>>>>> File "lib/pa_type_conv.ml", line 329, characters 23-29:
>>>>> While expanding quotation "module_type" in a position of "patt":
>>>>>   Parse error: illegal begin of quotation of module type
>>>>>
>>>>> Preprocessing error on file lib/pa_type_conv.ml
>>>>> Command exited with code 2.
>>>>> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag
>>>>> debug' terminated with error code 10")
>>>>> make: *** [build] Error 1
>>>>> *** ERROR: Couldn't compile type_conv
>>>>>
>>>>> This is the relevant output of #list;; in ocaml:
>>>>>
>>>>> ...
>>>>> findlib             (version: 1.2.7)
>>>>> num                 (version: [distributed with Ocaml])
>>>>> num-top             (version: 1.2.7)
>>>>> num.core            (version: [internal])
>>>>> oUnit               (version: 1.1.0)
>>>>> ocamlbuild          (version: [distributed with Ocaml])
>>>>> pcre                (version: 6.2.2)
>>>>> res                 (version: 3.2.0)
>>>>> ...
>>>>>
>>>>> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>>>>>
>>>>
>>>>
>>>
>>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120525/d06ce8ba/attachment-0001.html>

From yminsky at janestreet.com  Sat May 26 02:42:35 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 25 May 2012 21:42:35 -0400
Subject: 108.00.01 Released
Message-ID: <CACLX4jSnBa2h1sHvte7XE8LmMQuN+3mTa6Nre1cEmseLtfY25Q@mail.gmail.com>

This is a minor tweak on top of 108.00; 108.00.01 contains just some small
build fixes for 64-bit platforms.

Tarballs are on the bitbucket site.

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120525/e7038820/attachment-0001.html>

From dapilki at gmail.com  Sat May 26 18:33:24 2012
From: dapilki at gmail.com (Alexandre Pilkiewicz)
Date: Sat, 26 May 2012 10:33:24 -0700 (PDT)
Subject: Licensing
In-Reply-To: <CACLX4jS7TwoszkbM1__-izpfsB6JJaA6KAbSK2CGBiZdMUn4Jg@mail.gmail.com>
References: <CACLX4jS7TwoszkbM1__-izpfsB6JJaA6KAbSK2CGBiZdMUn4Jg@mail.gmail.com>
Message-ID: <11fdcc8b-7aac-491c-82dd-dc7004d11927@googlegroups.com>

Hi!

On Wednesday, March 7, 2012 5:40:10 PM UTC-5, Yaron Minsky wrote:
>
>
> First, we've decided to relicense the Core suite under the Apache license.
>
>  This is a great news! You should probably update this 
page: https://ocaml.janestreet.com/?q=node/13

Cheers,
Alex
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120526/c1833747/attachment-0001.html>

From yminsky at janestreet.com  Sat May 26 19:46:07 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 26 May 2012 14:46:07 -0400
Subject: Licensing
In-Reply-To: <11fdcc8b-7aac-491c-82dd-dc7004d11927@googlegroups.com>
References: <CACLX4jS7TwoszkbM1__-izpfsB6JJaA6KAbSK2CGBiZdMUn4Jg@mail.gmail.com>
	<11fdcc8b-7aac-491c-82dd-dc7004d11927@googlegroups.com>
Message-ID: <CACLX4jS0PkiwiURvQtc3H87+ZHWd5-kjx2bP=MtUJYN2RwoC-w@mail.gmail.com>

Done.  I just updated it to be a pointer to our bitbucket site.

y

On Sat, May 26, 2012 at 1:33 PM, Alexandre Pilkiewicz <dapilki at gmail.com>wrote:

> Hi!
>
>
> On Wednesday, March 7, 2012 5:40:10 PM UTC-5, Yaron Minsky wrote:
>>
>>
>> First, we've decided to relicense the Core suite under the Apache license.
>>
>>  This is a great news! You should probably update this page:
> https://ocaml.janestreet.com/?q=node/13
>
> Cheers,
> Alex
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120526/a99f7bf1/attachment-0001.html>

From alexandre.pilkiewicz at polytechnique.org  Sat May 26 19:48:11 2012
From: alexandre.pilkiewicz at polytechnique.org (Alexandre Pilkiewicz)
Date: Sat, 26 May 2012 14:48:11 -0400
Subject: Licensing
In-Reply-To: <CACLX4jS0PkiwiURvQtc3H87+ZHWd5-kjx2bP=MtUJYN2RwoC-w@mail.gmail.com>
References: <CACLX4jS7TwoszkbM1__-izpfsB6JJaA6KAbSK2CGBiZdMUn4Jg@mail.gmail.com>
 <11fdcc8b-7aac-491c-82dd-dc7004d11927@googlegroups.com> <CACLX4jS0PkiwiURvQtc3H87+ZHWd5-kjx2bP=MtUJYN2RwoC-w@mail.gmail.com>
Message-ID: <CAH2fdNbrhiakz_TBSf1thR2H81n7LhxhxTU2z3rLR2L0ZiLNgw@mail.gmail.com>


On Sat, May 26, 2012 at 2:46 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Done. ?I just updated it to be a pointer to our bitbucket site.

Thanks!


From fermin.reig at gmail.com  Mon May 28 09:12:20 2012
From: fermin.reig at gmail.com (Fermin Reig)
Date: Mon, 28 May 2012 01:12:20 -0700 (PDT)
Subject: 108.00 release up on bitbucket
In-Reply-To: <CAEDxudzu2GzUJsan7uQadhRH5NUR9VP-__wZVjYKhec9agnfkQ@mail.gmail.com>
References: <CACLX4jSV1tqp9g1f_LWAkWZzWi4S02ssb5gPUNCe2yiiFX+rhQ@mail.gmail.com>
 <ffd60860-7848-404c-a660-5a597e4dd127@googlegroups.com>
 <CACLX4jQHeHVm8ufV_8DwQjq=N2K7fE5PsqvCut1k1P5rkpbo5Q@mail.gmail.com>
 <CACLX4jRjsxC+3=YFr5Vg9A2PoGKH6TZj2gCnOzd1bek=5x8J7A@mail.gmail.com>
 <CACLX4jTz0gwHL5QyQBQxLFuNKvgM2PE-mOY4YjtuVTj61K7v0g@mail.gmail.com>
 <10198a3f-d1dc-4dac-b302-675f862b1023@googlegroups.com>
 <CAEDxudzu2GzUJsan7uQadhRH5NUR9VP-__wZVjYKhec9agnfkQ@mail.gmail.com>
Message-ID: <5a2717c8-c338-4927-890b-80601e92bccc@googlegroups.com>

Great, thanks. I've been able to build core 108.00.01 on ubuntu 11.10 with 
ocaml 3.12.1. One other question: the current build script on bitbucket 
doesn't support building a local copy of the docs, or does it? If so, can 
you tell me how? (and perhaps it could also be mentioned in the README 
file).

Thanks

On Saturday, 26 May 2012 00:35:38 UTC+1, Yury wrote:
>
> Thanks Fermin, we'll update the required ocaml version in our packages to 
> be >= 3.12.1.
>
> Yury 
> On May 25, 2012 6:59 PM, Fermin Reig wrote:
>
>> You're right, I'm on 3.12.0. I'll upgrade and try that. 
>> Thanks
>>
>> On Friday, 25 May 2012 04:07:05 UTC+1, Yaron Minsky wrote:
>>>
>>> From looking here:
>>>
>>>    https://launchpad.net/ubuntu/**oneiric/i386/ocaml-base<https://launchpad.net/ubuntu/oneiric/i386/ocaml-base>
>>>
>>> it looks like ubuntu 11.10 runs 3.12.0.  That's a very buggy release 
>>> when it comes to camlp4, and I suspect those bugs prevent the versions of 
>>> type-conv in core-108.00 from compiling.  If you upgrade to 3.12.1, I would 
>>> expect things to work fine.
>>>
>>> y
>>>
>>> On Thu, May 24, 2012 at 11:04 PM, Yaron Minsky wrote:
>>>
>>>> I just uploaded a tarball that fixes the build-common.sh bug.
>>>>
>>>> One question about your setup: which version of OCaml are you using?
>>>>
>>>> y
>>>>
>>>>
>>>> On Thu, May 24, 2012 at 10:57 PM, Yaron Minsky  wrote:
>>>>
>>>>> Urgh.  The -pre2 mistake is mine.  I'll get that fixed.
>>>>>
>>>>> As for the other mistake, I'll see if we can replicate.
>>>>>
>>>>> y
>>>>>
>>>>>
>>>>> On Thu, May 24, 2012 at 6:29 PM, Fermin Reig wrote:
>>>>>
>>>>>>
>>>>>> I've downloaded the all-in-one tarball, and tried to build with 
>>>>>> ./build-and-install -s. First I had to edit  build-common.sh, to delete 
>>>>>> "-pre2" in all the names. After that, I get this error:
>>>>>>
>>>>>>  % ./build-and-install -s
>>>>>> => type_conv-108.00
>>>>>>    * configuring
>>>>>>    * compiling
>>>>>> ocaml setup.ml -build 
>>>>>> ocamlfind ocamldep -package camlp4.quotations -package camlp4.extend 
>>>>>> -syntax camlp4o -modules lib/pa_type_conv.ml > 
>>>>>> lib/pa_type_conv.ml.depends
>>>>>> + ocamlfind ocamldep -package camlp4.quotations -package 
>>>>>> camlp4.extend -syntax camlp4o -modules lib/pa_type_conv.ml > 
>>>>>> lib/pa_type_conv.ml.depends
>>>>>> File "lib/pa_type_conv.ml", line 329, characters 23-29:
>>>>>> While expanding quotation "module_type" in a position of "patt":
>>>>>>   Parse error: illegal begin of quotation of module type
>>>>>>
>>>>>> Preprocessing error on file lib/pa_type_conv.ml
>>>>>> Command exited with code 2.
>>>>>> E: Failure("Command '/usr/bin/ocamlbuild lib/pa_type_conv.cma -tag 
>>>>>> debug' terminated with error code 10")
>>>>>> make: *** [build] Error 1
>>>>>> *** ERROR: Couldn't compile type_conv
>>>>>>
>>>>>> This is the relevant output of #list;; in ocaml:
>>>>>>
>>>>>> ...
>>>>>> findlib             (version: 1.2.7)
>>>>>> num                 (version: [distributed with Ocaml])
>>>>>> num-top             (version: 1.2.7)
>>>>>> num.core            (version: [internal])
>>>>>> oUnit               (version: 1.1.0)
>>>>>> ocamlbuild          (version: [distributed with Ocaml])
>>>>>> pcre                (version: 6.2.2)
>>>>>> res                 (version: 3.2.0)
>>>>>> ...
>>>>>>
>>>>>> I'm running ubuntu 11.10. Any help is appreciated. Thanks in advance.
>>>>>>
>>>>>
>>>>>
>>>>
>>>  
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120528/c233b707/attachment-0001.html>

From kakadu.hafanana at gmail.com  Wed May 30 10:49:38 2012
From: kakadu.hafanana at gmail.com (Kakadu)
Date: Wed, 30 May 2012 02:49:38 -0700 (PDT)
Subject: My linking issue with unix_stubs
Message-ID: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>

Hallo, list!

I have problem with using core. It seems that solution is very simple but I 
haven't found it yet.

Best wishes,
Kakadu

$ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt -lrt 
main.ml
/usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function 
`unix_clock_gettime':
/home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823: 
undefined reference to `clock_gettime'
/usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function 
`unix_clock_settime':
/home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834: 
undefined reference to `clock_settime'
/usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function 
`unix_clock_getres':
/home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842: 
undefined reference to `clock_getres'
collect2: ld returned 1 exit status
File "caml_startup", line 1, characters 0-1:
Error: Error during linking

$ cat main.ml
open Core.Linux_ext 

let f = Clock.get_time

$

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120530/3489d6ca/attachment-0001.html>

From kakadu.hafanana at gmail.com  Wed May 30 12:20:16 2012
From: kakadu.hafanana at gmail.com (Kakadu)
Date: Wed, 30 May 2012 04:20:16 -0700 (PDT)
Subject: My linking issue with unix_stubs
In-Reply-To: <CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
 <CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
Message-ID: <bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>

 Ubuntu 12.04 32bit. Core from bitbucket. OCaml from ubuntu.

Best wishes,
Kakadu


On Wednesday, May 30, 2012 2:54:22 PM UTC+4, Yaron Minsky wrote:
>
> More details please!  What platform are you running on? 
>
> On Wed, May 30, 2012 at 5:49 AM, Kakadu <kakadu.hafanana at gmail.com> 
> wrote: 
> > Hallo, list! 
> > 
> > I have problem with using core. It seems that solution is very simple 
> but I 
> > haven't found it yet. 
> > 
> > Best wishes, 
> > Kakadu 
> > 
> > $ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt -lrt 
> > main.ml 
> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> function 
> > `unix_clock_gettime': 
> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823: 
> > undefined reference to `clock_gettime' 
> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> function 
> > `unix_clock_settime': 
> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834: 
> > undefined reference to `clock_settime' 
> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> function 
> > `unix_clock_getres': 
> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842: 
> > undefined reference to `clock_getres' 
> > collect2: ld returned 1 exit status 
> > File "caml_startup", line 1, characters 0-1: 
> > Error: Error during linking 
> > 
> > $ cat main.ml 
> > open Core.Linux_ext 
> > 
> > let f = Clock.get_time 
> > 
> > $ 
> > 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120530/9f5b84ee/attachment-0001.html>

From yminsky at janestreet.com  Wed May 30 11:54:22 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 30 May 2012 06:54:22 -0400
Subject: My linking issue with unix_stubs
In-Reply-To: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
Message-ID: <CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>


More details please!  What platform are you running on?

On Wed, May 30, 2012 at 5:49 AM, Kakadu <kakadu.hafanana at gmail.com> wrote:
> Hallo, list!
>
> I have problem with using core. It seems that solution is very simple but I
> haven't found it yet.
>
> Best wishes,
> Kakadu
>
> $ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt -lrt
> main.ml
> /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function
> `unix_clock_gettime':
> /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823:
> undefined reference to `clock_gettime'
> /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function
> `unix_clock_settime':
> /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834:
> undefined reference to `clock_settime'
> /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In function
> `unix_clock_getres':
> /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842:
> undefined reference to `clock_getres'
> collect2: ld returned 1 exit status
> File "caml_startup", line 1, characters 0-1:
> Error: Error during linking
>
> $ cat main.ml
> open Core.Linux_ext
>
> let f = Clock.get_time
>
> $
>


From kakadu.hafanana at gmail.com  Wed May 30 17:18:24 2012
From: kakadu.hafanana at gmail.com (Kakadu)
Date: Wed, 30 May 2012 09:18:24 -0700 (PDT)
Subject: My linking issue with unix_stubs
In-Reply-To: <CACLX4jQbQkGxGEsDeiCwLr+Kef2MB8rVL1+1csnJczc50PDD1w@mail.gmail.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
 <CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
 <bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>
 <CACLX4jQbQkGxGEsDeiCwLr+Kef2MB8rVL1+1csnJczc50PDD1w@mail.gmail.com>
Message-ID: <da428317-453f-4f6e-bd71-80842f48521e@googlegroups.com>

Yaron,

The same with tarballs. Btw, I've discoverd that it is 32bit only bug.

Kakadu

On Wednesday, May 30, 2012 5:29:57 PM UTC+4, Yaron Minsky wrote:
>
> Have you tried the release tarballs?  Do they build and install cleanly? 
>
> y 
>
> On Wed, May 30, 2012 at 7:20 AM, Kakadu <kakadu.hafanana at gmail.com> 
> wrote: 
> >  Ubuntu 12.04 32bit. Core from bitbucket. OCaml from ubuntu. 
> > 
> > Best wishes, 
> > Kakadu 
> > 
> > 
> > 
> > On Wednesday, May 30, 2012 2:54:22 PM UTC+4, Yaron Minsky wrote: 
> >> 
> >> More details please!  What platform are you running on? 
> >> 
> >> On Wed, May 30, 2012 at 5:49 AM, Kakadu <kakadu.hafanana at gmail.com> 
> wrote: 
> >> > Hallo, list! 
> >> > 
> >> > I have problem with using core. It seems that solution is very simple 
> >> > but I 
> >> > haven't found it yet. 
> >> > 
> >> > Best wishes, 
> >> > Kakadu 
> >> > 
> >> > $ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt 
> -lrt 
> >> > main.ml 
> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> >> > function 
> >> > `unix_clock_gettime': 
> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823: 
> >> > undefined reference to `clock_gettime' 
> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> >> > function 
> >> > `unix_clock_settime': 
> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834: 
> >> > undefined reference to `clock_settime' 
> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In 
> >> > function 
> >> > `unix_clock_getres': 
> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842: 
> >> > undefined reference to `clock_getres' 
> >> > collect2: ld returned 1 exit status 
> >> > File "caml_startup", line 1, characters 0-1: 
> >> > Error: Error during linking 
> >> > 
> >> > $ cat main.ml 
> >> > open Core.Linux_ext 
> >> > 
> >> > let f = Clock.get_time 
> >> > 
> >> > $ 
> >> > 
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120530/cbf6d5be/attachment-0001.html>

From yminsky at janestreet.com  Wed May 30 14:29:57 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 30 May 2012 09:29:57 -0400
Subject: My linking issue with unix_stubs
In-Reply-To: <bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
	<CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
	<bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>
Message-ID: <CACLX4jQbQkGxGEsDeiCwLr+Kef2MB8rVL1+1csnJczc50PDD1w@mail.gmail.com>


Have you tried the release tarballs?  Do they build and install cleanly?

y

On Wed, May 30, 2012 at 7:20 AM, Kakadu <kakadu.hafanana at gmail.com> wrote:
> ?Ubuntu 12.04 32bit. Core from bitbucket. OCaml from ubuntu.
>
> Best wishes,
> Kakadu
>
>
>
> On Wednesday, May 30, 2012 2:54:22 PM UTC+4, Yaron Minsky wrote:
>>
>> More details please! ?What platform are you running on?
>>
>> On Wed, May 30, 2012 at 5:49 AM, Kakadu <kakadu.hafanana at gmail.com> wrote:
>> > Hallo, list!
>> >
>> > I have problem with using core. It seems that solution is very simple
>> > but I
>> > haven't found it yet.
>> >
>> > Best wishes,
>> > Kakadu
>> >
>> > $ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt -lrt
>> > main.ml
>> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> > function
>> > `unix_clock_gettime':
>> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823:
>> > undefined reference to `clock_gettime'
>> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> > function
>> > `unix_clock_settime':
>> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834:
>> > undefined reference to `clock_settime'
>> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> > function
>> > `unix_clock_getres':
>> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842:
>> > undefined reference to `clock_getres'
>> > collect2: ld returned 1 exit status
>> > File "caml_startup", line 1, characters 0-1:
>> > Error: Error during linking
>> >
>> > $ cat main.ml
>> > open Core.Linux_ext
>> >
>> > let f = Clock.get_time
>> >
>> > $
>> >


From markus.mottl at gmail.com  Wed May 30 17:35:59 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 30 May 2012 12:35:59 -0400
Subject: Bitbucket patch queues
Message-ID: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>


Hi,

have you guys thought about creating a central patch queue for
ocaml-core?  I think the merge-related issues discussed previously
could be solved most easily if you maintained a central patch queue
repository.

I've just played around with my own Bitbucket patch queue of my fork,
and it seems to work just fine.  This allows me to avoid merging with
your repo by "rebasing", i.e. doing a "hg qpop -a", "hg pull -u" (from
your repo), "hg qpush -a".

But one problem still remains: how to submit patches to your
repository.  In the moment I commit my patches to my tree for you to
pull, there might be a race condition where you change your tree, thus
forcing a potentially bad merge.  This will eventually become a major
problem as the number of contributors grows.  Accepting pull requests
will obviously change your tree and thus increase chances for race
conditions with others.

The improved workflow would make sure that people never commit changes
to the main repository.  Instead they:

  * Fork your central patch queue instead of the ocaml-core repo.  You
will never accept pull requests for the latter!
  * Add new patches with "qnew".
  * Update them with "qrefresh" as they keep improving them.
  * Pull from your patch queue (rebasing their patches).
  * Commit their patches to their patch repository via "hg commit --mq"
  * Push them to their fork of your patch queue (hg push --mq)
  * Send pull requests to your central patch queue

Contributors will never run "qfinish" to apply patches to the main
repo.  Applying the patches will be your privilege after accepting
pull requests for the patch queue repo.  I think this will also make
your job of merging patches easier, because it is trivial to verify
that the main repository is untouched, i.e. that only the patch repo
contains changes.

I haven't tested the whole workflow yet, but it worked as expected for
me for those parts that I did test.  Please let me know if you want to
create a patch queue and test this approach with me.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Wed May 30 22:52:40 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 30 May 2012 17:52:40 -0400
Subject: Bitbucket patch queues
In-Reply-To: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>
References: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>
Message-ID: <CACLX4jRVN=W5dQy+sHKtrzz+yxuHNckr_d7TxPCwFDtxqC2VCA@mail.gmail.com>


On Wed, May 30, 2012 at 12:35 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> Hi,
>
> have you guys thought about creating a central patch queue for
> ocaml-core? ?I think the merge-related issues discussed previously
> could be solved most easily if you maintained a central patch queue
> repository.

No, but it does seem like a good idea.

> I've just played around with my own Bitbucket patch queue of my fork,
> and it seems to work just fine. ?This allows me to avoid merging with
> your repo by "rebasing", i.e. doing a "hg qpop -a", "hg pull -u" (from
> your repo), "hg qpush -a".

That makes a lot of sense.

> But one problem still remains: how to submit patches to your
> repository. ?In the moment I commit my patches to my tree for you to
> pull, there might be a race condition where you change your tree, thus
> forcing a potentially bad merge. ?This will eventually become a major
> problem as the number of contributors grows. ?Accepting pull requests
> will obviously change your tree and thus increase chances for race
> conditions with others.

This isn't a problem unless you pull in again from the main tree and
do a merge on your side.  Us adding patches on its own doesn't hurt
anything.

That said, it's an error prone process, and patch-queues are in some
sense much more natural.  I quite like the idea, really.

> The improved workflow would make sure that people never commit changes
> to the main repository. ?Instead they:
>
> ?* Fork your central patch queue instead of the ocaml-core repo. ?You
> will never accept pull requests for the latter!
> ?* Add new patches with "qnew".
> ?* Update them with "qrefresh" as they keep improving them.
> ?* Pull from your patch queue (rebasing their patches).
> ?* Commit their patches to their patch repository via "hg commit --mq"
> ?* Push them to their fork of your patch queue (hg push --mq)
> ?* Send pull requests to your central patch queue
>
> Contributors will never run "qfinish" to apply patches to the main
> repo. ?Applying the patches will be your privilege after accepting
> pull requests for the patch queue repo. ?I think this will also make
> your job of merging patches easier, because it is trivial to verify
> that the main repository is untouched, i.e. that only the patch repo
> contains changes.
>
> I haven't tested the whole workflow yet, but it worked as expected for
> me for those parts that I did test. ?Please let me know if you want to
> create a patch queue and test this approach with me.

Yes, let's do it.  Give me a couple of days to set it up.

y

> Regards,
> Markus
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Wed May 30 23:46:14 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Wed, 30 May 2012 18:46:14 -0400
Subject: Bitbucket patch queues
In-Reply-To: <CACLX4jRVN=W5dQy+sHKtrzz+yxuHNckr_d7TxPCwFDtxqC2VCA@mail.gmail.com>
References: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>
	<CACLX4jRVN=W5dQy+sHKtrzz+yxuHNckr_d7TxPCwFDtxqC2VCA@mail.gmail.com>
Message-ID: <CAP_800owLyUv8SbsKLV9E=r0VvpGfDhkM_7ECqQMVgp_abu+HA@mail.gmail.com>


On Wed, May 30, 2012 at 5:52 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Yes, let's do it. ?Give me a couple of days to set it up.

Great, thanks!

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at gmail.com  Thu May 31 01:03:39 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Wed, 30 May 2012 20:03:39 -0400
Subject: Bitbucket patch queues
In-Reply-To: <CAP_800owLyUv8SbsKLV9E=r0VvpGfDhkM_7ECqQMVgp_abu+HA@mail.gmail.com>
References: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>
	<CACLX4jRVN=W5dQy+sHKtrzz+yxuHNckr_d7TxPCwFDtxqC2VCA@mail.gmail.com>
	<CAP_800owLyUv8SbsKLV9E=r0VvpGfDhkM_7ECqQMVgp_abu+HA@mail.gmail.com>
Message-ID: <CADKNfhK9j=V1DtQL+Q07dV7G5fhphEtwRx7XXzWdNebCdQdbNw@mail.gmail.com>

Well, that was easy enough.  I just created it.  So, the next step is a
pull request, I suppose?

y

On Wed, May 30, 2012 at 6:46 PM, Markus Mottl <markus.mottl at gmail.com>wrote:

> On Wed, May 30, 2012 at 5:52 PM, Yaron Minsky <yminsky at janestreet.com>
> wrote:
> > Yes, let's do it.  Give me a couple of days to set it up.
>
> Great, thanks!
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120530/47bad580/attachment-0001.html>

From yminsky at gmail.com  Thu May 31 01:24:31 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Wed, 30 May 2012 20:24:31 -0400
Subject: Bitbucket patch queues
In-Reply-To: <CADKNfhK9j=V1DtQL+Q07dV7G5fhphEtwRx7XXzWdNebCdQdbNw@mail.gmail.com>
References: <CAP_800qTA9LZQ873Kq6c=GGb1sErW-xevPgV7z=3wupoC5QiRw@mail.gmail.com>
	<CACLX4jRVN=W5dQy+sHKtrzz+yxuHNckr_d7TxPCwFDtxqC2VCA@mail.gmail.com>
	<CAP_800owLyUv8SbsKLV9E=r0VvpGfDhkM_7ECqQMVgp_abu+HA@mail.gmail.com>
	<CADKNfhK9j=V1DtQL+Q07dV7G5fhphEtwRx7XXzWdNebCdQdbNw@mail.gmail.com>
Message-ID: <CADKNfhJXgM-YXSwwSK97L=KPxi-YNiRRNzLytRbeskusV0WfOQ@mail.gmail.com>

Here's the link to the patch queue, by the way.

   https://bitbucket.org/yminsky/ocaml-core-submissions

y

On Wed, May 30, 2012 at 8:03 PM, Yaron Minsky <yminsky at gmail.com> wrote:

> Well, that was easy enough.  I just created it.  So, the next step is a
> pull request, I suppose?
>
> y
>
>
> On Wed, May 30, 2012 at 6:46 PM, Markus Mottl <markus.mottl at gmail.com>wrote:
>
>> On Wed, May 30, 2012 at 5:52 PM, Yaron Minsky <yminsky at janestreet.com>
>> wrote:
>> > Yes, let's do it.  Give me a couple of days to set it up.
>>
>> Great, thanks!
>>
>> Regards,
>> Markus
>>
>> --
>> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120530/3ec5a760/attachment-0001.html>

From yury.sulsky at gmail.com  Thu May 31 21:59:32 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 31 May 2012 16:59:32 -0400
Subject: My linking issue with unix_stubs
In-Reply-To: <da428317-453f-4f6e-bd71-80842f48521e@googlegroups.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
	<CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
	<bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>
	<CACLX4jQbQkGxGEsDeiCwLr+Kef2MB8rVL1+1csnJczc50PDD1w@mail.gmail.com>
	<da428317-453f-4f6e-bd71-80842f48521e@googlegroups.com>
Message-ID: <CAEDxudz33Js21FvOS2yKRRcjvizszFoHv3vZEGOEySJfDrAntg@mail.gmail.com>


Thanks very much Kadaku! If you look at:

$ ocamlobjinfo $(ocamlfind query core)/core.cma|grep 'Extra C object files'
Extra C object files: -lrt -lcore_stubs

Which is the wrong order. I wonder if gcc or ld have become stricter
in this respect. We'll push a patch to fix this. In the meantime, you
can apply this one:

--- a/base/core/myocamlbuild.ml 2012-05-31 16:57:05.000000000 -0400
+++ b/base/core/myocamlbuild.ml 2012-05-31 16:55:52.000000000 -0400
@@ -656,12 +656,12 @@
     flag ["mlh"; "ocaml"; "ocamldep"] (S[A"-ppopt"; A"-Ilib/"]);
     flag ["mlh"; "ocaml"; "compile"]  (S[A"-ppopt"; A"-Ilib/"]);

+    dispatch_default e;
+
     if test "ld -lrt -shared -o /dev/null 2>/dev/null" then begin
       flag ["ocamlmklib"; "c"]                      (S[A"-lrt"]);
       flag ["use_libcore_stubs"; "link"] (S[A"-cclib"; A"-lrt"]);
-    end;
-
-    dispatch_default e;
+    end
   | e -> dispatch_default e

 let () = Ocamlbuild_plugin.dispatch dispatch


On Wed, May 30, 2012 at 12:18 PM, Kakadu <kakadu.hafanana at gmail.com> wrote:
> Yaron,
>
> The same with tarballs. Btw, I've discoverd that it is 32bit only bug.
>
> Kakadu
>
>
> On Wednesday, May 30, 2012 5:29:57 PM UTC+4, Yaron Minsky wrote:
>>
>> Have you tried the release tarballs? ?Do they build and install cleanly?
>>
>> y
>>
>> On Wed, May 30, 2012 at 7:20 AM, Kakadu <kakadu.hafanana at gmail.com> wrote:
>> > ?Ubuntu 12.04 32bit. Core from bitbucket. OCaml from ubuntu.
>> >
>> > Best wishes,
>> > Kakadu
>> >
>> >
>> >
>> > On Wednesday, May 30, 2012 2:54:22 PM UTC+4, Yaron Minsky wrote:
>> >>
>> >> More details please! ?What platform are you running on?
>> >>
>> >> On Wed, May 30, 2012 at 5:49 AM, Kakadu <kakadu.hafanana at gmail.com>
>> >> wrote:
>> >> > Hallo, list!
>> >> >
>> >> > I have problem with using core. It seems that solution is very simple
>> >> > but I
>> >> > haven't found it yet.
>> >> >
>> >> > Best wishes,
>> >> > Kakadu
>> >> >
>> >> > $ ocamlfind opt -thread -package unix,core,threads -linkpkg -ccopt
>> >> > -lrt
>> >> > main.ml
>> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> >> > function
>> >> > `unix_clock_gettime':
>> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:823:
>> >> > undefined reference to `clock_gettime'
>> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> >> > function
>> >> > `unix_clock_settime':
>> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:834:
>> >> > undefined reference to `clock_settime'
>> >> > /usr/local/lib/ocaml/3.12.1/core/libcore_stubs.a(unix_stubs.o): In
>> >> > function
>> >> > `unix_clock_getres':
>> >> > /home/kakaduqt/prog/ocaml-core/base/core/_build/lib/unix_stubs.c:842:
>> >> > undefined reference to `clock_getres'
>> >> > collect2: ld returned 1 exit status
>> >> > File "caml_startup", line 1, characters 0-1:
>> >> > Error: Error during linking
>> >> >
>> >> > $ cat main.ml
>> >> > open Core.Linux_ext
>> >> >
>> >> > let f = Clock.get_time
>> >> >
>> >> > $
>> >> >


From markus.mottl at gmail.com  Thu May 31 22:45:59 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 31 May 2012 17:45:59 -0400
Subject: My linking issue with unix_stubs
In-Reply-To: <CAEDxudz33Js21FvOS2yKRRcjvizszFoHv3vZEGOEySJfDrAntg@mail.gmail.com>
References: <0236afb0-c23a-4352-a32a-607efdf1f096@googlegroups.com>
	<CACLX4jTMBeDbcjp5gbUfuuGAqy20W27rYRj-3Ut_fKDo-Tjtqg@mail.gmail.com>
	<bf9ec177-324a-46f9-b0ff-5483dc513047@googlegroups.com>
	<CACLX4jQbQkGxGEsDeiCwLr+Kef2MB8rVL1+1csnJczc50PDD1w@mail.gmail.com>
	<da428317-453f-4f6e-bd71-80842f48521e@googlegroups.com>
	<CAEDxudz33Js21FvOS2yKRRcjvizszFoHv3vZEGOEySJfDrAntg@mail.gmail.com>
Message-ID: <CAP_800r4FCMhYS0-PRq26GX49xw1XX+xG8hHYSx9JigzS5wJUg@mail.gmail.com>


On Thu, May 31, 2012 at 4:59 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> Which is the wrong order. I wonder if gcc or ld have become stricter
> in this respect.

Yes, they have:

  http://stackoverflow.com/questions/7826448/linking-libraries-with-gcc-order-of-arguments

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


