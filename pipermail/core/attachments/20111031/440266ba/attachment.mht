[From nobody Fri Feb  8 17:18:19 2013
Received: by 10.236.80.34 with SMTP id j22mr13818125yhe.5.1320083136166;
 Mon, 31 Oct 2011 10:45:36 -0700 (PDT)
Received: by 10.236.80.34 with SMTP id j22mr13818124yhe.5.1320083136151;
 Mon, 31 Oct 2011 10:45:36 -0700 (PDT)
Return-Path: &lt;nlinger@janestreet.com&gt;
Received: from nyc-dmz-mxout1.janestreet.com (mx1.janestreet.com.
 [38.105.200.112])
 by gmr-mx.google.com with ESMTPS id w7si4813378yhl.2.2011.10.31.10.45.36
 (version=TLSv1/SSLv3 cipher=OTHER);
 Mon, 31 Oct 2011 10:45:36 -0700 (PDT)
Received-SPF: pass (google.com: domain of nlinger@janestreet.com designates
 38.105.200.112 as permitted sender) client-ip=38.105.200.112; 
Authentication-Results: gmr-mx.google.com;
 spf=pass (google.com: domain of nlinger@janestreet.com
 designates 38.105.200.112 as permitted sender)
 smtp.mail=nlinger@janestreet.com
Received: from nyc-qsv-mail1.delacy.com ([172.25.22.57])
 by nyc-dmz-mxout1.janestreet.com with esmtp (Exim 4.76)
 (envelope-from &lt;nlinger@janestreet.com&gt;) id 1RKvvT-000271-G5
 for ocaml-core@googlegroups.com; Mon, 31 Oct 2011 13:45:35 -0400
Received: from nyc-qsv-004.delacy.com ([172.25.22.194] helo=qsmtp.delacy.com)
 by nyc-qsv-mail1.delacy.com with esmtps (TLSv1:AES256-SHA:256)
 (Exim 4.76) (envelope-from &lt;nlinger@janestreet.com&gt;)
 id 1RKvvT-0001O8-EN
 for ocaml-core@googlegroups.com; Mon, 31 Oct 2011 13:45:35 -0400
Received: from nyc-qws-013.delacy.com ([172.25.131.113])
 by qsmtp.delacy.com with esmtps (TLSv1:AES256-SHA:256) (Exim 4.76)
 (envelope-from &lt;nlinger@janestreet.com&gt;) id 1RKvvT-0002ju-Ci
 for ocaml-core@googlegroups.com; Mon, 31 Oct 2011 13:45:35 -0400
Received: from nlinger by nyc-qws-013.delacy.com with local (Exim 4.71)
 (envelope-from &lt;nlinger@janestreet.com&gt;) id 1RKvvT-00045r-Ay
 for ocaml-core@googlegroups.com; Mon, 31 Oct 2011 13:45:35 -0400
Date: Mon, 31 Oct 2011 13:45:35 -0400
&gt;From: Nathan Linger &lt;nlinger@janestreet.com&gt;
To: ocaml-core@googlegroups.com
Subject: Re: Making Async play better with others
Message-ID: &lt;20111031174535.GM25160@janestreet.com&gt;
References: &lt;20111031142540.GZ26614@janestreet.com&gt;
 &lt;3DDCF997-C2CC-4D68-B7CA-AD810B8BF21D@recoil.org&gt;
 &lt;20111031150640.GF26614@janestreet.com&gt;
 &lt;40CAC937-937D-499A-A84F-976B8FBDC5D6@recoil.org&gt;
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: &lt;40CAC937-937D-499A-A84F-976B8FBDC5D6@recoil.org&gt;
User-Agent: Mutt/1.5.20 (2009-06-14)
X-JS-Compliance: sender=unverified recipient=ocaml-core (ld)


On 10/31/11 16:37, Anil Madhavapeddy wrote:
&gt; On 31 Oct 2011, at 15:06, Yaron Minsky wrote:
&gt; 
&gt; &gt; On 31/10/11 14:29, Anil Madhavapeddy wrote:
&gt; &gt;&gt; You could combine most of these by basing Async on top of libuv,
&gt; &gt;&gt; which is a superset of libev (the event library that Lwt uses to
&gt; &gt;&gt; abstract network I/O).
&gt; &gt;&gt; 
&gt; &gt;&gt; https://github.com/joyent/libuv
&gt; &gt;&gt; 
&gt; &gt;&gt; Crucially, libuv has good support for the Windows AIO model, and is
&gt; &gt;&gt; also what node.js uses to drive its event loop (so has widespread
&gt; &gt;&gt; usage).
&gt; &gt;&gt; 
&gt; &gt;&gt; At first glance at Core, it looks like many of the Linux-specific
&gt; &gt;&gt; bits like high-res timers and thread scheduling are also covered by
&gt; &gt;&gt; it.
&gt; &gt; 
&gt; &gt; How much do you know about the performance and quality of libuv?  I'm
&gt; &gt; always nervous about shimming yet another layer between us and the
&gt; &gt; bare metal.
&gt; 
&gt; Nothing beyond flicking through the source code and occasionally being
&gt; cursed with using node.js (which works pretty well until you get to
&gt; the Javascript level :)
&gt; 
&gt; It's pretty much the only game in town when it comes to cross-platform
&gt; C-based asynchronous programming libraries however (as far as I know).

Isn't libevent[1] the same sort of thing?  I believe it is the C-based
asynchronous programming library underlying memcached[2], which in turn
is used by several high-profile web applications -- their website lists
Wikipedia, WordPress.com, Flickr, Twitter, Typepad, Youtube, LiveJournal,
Digg, Craigslist, and a handful of others I didn't recognize.

I dusted off the ocaml bindings for libevent[3] at home last year and
found them pretty usable for the small experiments I did (implementing a
monadic interface for CML-style concurrent programming).  Their website[1]
claims &quot;Libevent should compile on Linux, *BSD, Mac OS X, Solaris,
Windows, and more.&quot;

[1] http://libevent.org/
[2] http://www.memcached.org/
[3] http://mmzeeman.home.xs4all.nl/ocaml/

]