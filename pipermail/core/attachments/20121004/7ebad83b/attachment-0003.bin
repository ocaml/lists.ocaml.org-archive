diff -ur findlib-1.3.3.orig/site-lib-src/compiler-libs/META.in findlib-1.3.3/site-lib-src/compiler-libs/META.in
--- findlib-1.3.3.orig/site-lib-src/compiler-libs/META.in	2012-07-09 11:29:16.000000000 +0200
+++ findlib-1.3.3/site-lib-src/compiler-libs/META.in	2012-10-04 17:10:31.489342160 +0200
@@ -37,3 +37,11 @@
 `  archive(native) = "ocamltoplevel.cmxa"'
 `)'
 
+`package "opttoplevel" ('
+`  requires = "dynlink compiler-libs.optcomp"'
+`  version = "[distributed with Ocaml]"'
+`  description = "Toplevel interactions"'
+`  archive(byte) = "ocamlopttoplevel.cma"'
+`  archive(native) = "ocamlopttoplevel.cmxa"'
+`)'
+
diff -ur findlib-1.3.3.orig/src/findlib/frontend.ml findlib-1.3.3/src/findlib/frontend.ml
--- findlib-1.3.3.orig/src/findlib/frontend.ml	2012-07-09 11:29:16.000000000 +0200
+++ findlib-1.3.3/src/findlib/frontend.ml	2012-10-04 17:07:35.976275902 +0200
@@ -986,15 +986,16 @@
 		  0o777
 		  initl_file_name in
     try
+      let topfind = if List.mem "native" !predicates then "Opttopfind" else "Topfind" in
       output_string initl
-	("Topfind.don't_load [" ^
+	(topfind ^ ".don't_load [" ^
 	 String.concat ";"
 	   (List.map
 	      (fun pkg -> "\"" ^ String.escaped pkg ^ "\"")
 	      eff_link) ^
 	 "];;\n");
       output_string initl
-	("Topfind.predicates := [" ^
+	(topfind ^ ".predicates := [" ^
 	 String.concat ";"
 	   (List.map
 	      (fun pred -> "\"" ^ String.escaped pred ^ "\"")
diff -ur findlib-1.3.3.orig/src/findlib/Makefile findlib-1.3.3/src/findlib/Makefile
--- findlib-1.3.3.orig/src/findlib/Makefile	2012-07-09 11:29:16.000000000 +0200
+++ findlib-1.3.3/src/findlib/Makefile	2012-10-04 17:22:04.825554241 +0200
@@ -25,6 +25,7 @@
 		 fl_metascanner.cmo fl_topo.cmo fl_package_base.cmo \
 	         findlib.cmo fl_args.cmo
 TOBJECTS       = topfind.cmo
+XTOBJECTS      = opttopfind.cmx
 
 XOBJECTS       = $(OBJECTS:.cmo=.cmx)
 
@@ -35,7 +36,13 @@
 
 all: ocamlfind$(EXEC_SUFFIX) findlib.cma findlib_top.cma topfind num_top.cma
 
-opt: ocamlfind_opt$(EXEC_SUFFIX) findlib.cmxa topfind
+opt: ocamlfind_opt$(EXEC_SUFFIX) findlib.cmxa findlib_top.cmxa topfind
+
+opttopfind.ml: topfind.ml
+	sed 's/Toploop/Opttoploop/g;s/Topdirs/Opttopdirs/g' $< > $@
+
+opttopfind.mli: topfind.mli
+	cp -f $< $@
 
 ocamlfind$(EXEC_SUFFIX): findlib.cma $(OCAMLFIND_OBJECTS)
 	$(OCAMLC) -custom -o ocamlfind$(EXEC_SUFFIX) -g findlib.cma unix.cma \
@@ -54,6 +61,9 @@
 findlib.cmxa: $(XOBJECTS)
 	$(OCAMLOPT) -a -o findlib.cmxa $(XOBJECTS)
 
+findlib_top.cmxa: $(XTOBJECTS)
+	$(OCAMLOPT) -a -o findlib_top.cmxa $(XTOBJECTS)
+
 findlib_config.ml: findlib_config.mlp $(TOP)/Makefile.config
 	USE_CYGPATH="$(USE_CYGPATH)"; \
 	export USE_CYGPATH; \
@@ -83,7 +93,7 @@
 	mkdir -p "$(prefix)$(OCAML_SITELIB)/$(NAME)"
 	mkdir -p "$(prefix)$(OCAMLFIND_BIN)"
 	test $(INSTALL_TOPFIND) -eq 0 || cp topfind "$(prefix)$(OCAML_CORE_STDLIB)"
-	files=`$(TOP)/tools/collect_files $(TOP)/Makefile.config findlib.cmi findlib.mli findlib.cma topfind.cmi topfind.mli fl_package_base.mli fl_package_base.cmi fl_metascanner.mli fl_metascanner.cmi fl_metatoken.cmi findlib_top.cma findlib.cmxa findlib.a META` && \
+	files=`$(TOP)/tools/collect_files $(TOP)/Makefile.config findlib.cmi findlib.mli findlib.cma topfind.cmi topfind.mli opttopfind.cmi opttopfind.mli fl_package_base.mli fl_package_base.cmi fl_metascanner.mli fl_metascanner.cmi fl_metatoken.cmi findlib_top.cma findlib.cmxa findlib.a findlib_top.cmxa findlib_top.a META` && \
 	cp $$files "$(prefix)$(OCAML_SITELIB)/$(NAME)"
 	f="ocamlfind$(EXEC_SUFFIX)"; { test -f ocamlfind_opt$(EXEC_SUFFIX) && f="ocamlfind_opt$(EXEC_SUFFIX)"; }; \
 	cp $$f "$(prefix)$(OCAMLFIND_BIN)/ocamlfind$(EXEC_SUFFIX)"
diff -ur findlib-1.3.3.orig/src/findlib/META.in findlib-1.3.3/src/findlib/META.in
--- findlib-1.3.3.orig/src/findlib/META.in	2012-07-09 11:29:16.000000000 +0200
+++ findlib-1.3.3/src/findlib/META.in	2012-10-04 17:30:43.424704779 +0200
@@ -1,8 +1,10 @@
 # specifications for "findlib":
 description = "Package manager"
 requires = ""
+requires(native,create_toploop) = "compiler-libs.opttoplevel"
 version = "@VERSION@"
 archive(byte) = "findlib.cma"
 archive(byte,toploop) = "findlib.cma findlib_top.cma"
 archive(byte,create_toploop) = "findlib.cma findlib_top.cma"
+archive(native,create_toploop) = "findlib.cmxa findlib_top.cmxa"
 archive(native) = "findlib.cmxa"
