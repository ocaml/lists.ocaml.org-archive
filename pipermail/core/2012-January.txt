From yminsky at janestreet.com  Fri Jan  6 11:52:30 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 6 Jan 2012 06:52:30 -0500
Subject: Progress on the bitbucket repo
Message-ID: <CACLX4jR8oWD_PgFS3CW8-Ekw-eLyHP=g5uhEoB47b3hYYBUn5g@mail.gmail.com>

We now rescind our previous threat to delete and recreate the bitbucket
repo.  Yury's done a bit more work on getting things to build cleanly using
oasis.  You still need to patch Oasis in the way that Anil pointed out in
an earlier thread, but other than that, things should work.  Yury is going
to do some testing to make sure that this builds cleanly on a mac.  And
we'd be overjoyed to have people contribute patches, particularly for
solving portability problems.

To make it easier to deal with the fact that you need a patched oasis, Yury
is going to release a separate tarball of the files that Oasis generates,
so that people can just grab that and untar it on top of the repo without
needing an installed oasis.

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120106/979a739c/attachment.html>

From mysnowls at 163.com  Sat Jan  7 12:28:18 2012
From: mysnowls at 163.com (Lin)
Date: Sat, 7 Jan 2012 04:28:18 -0800 (PST)
Subject: Short document / tutorial on Core
In-Reply-To: <20111007182456.GX14790@janestreet.com>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>
 <20111007182456.GX14790@janestreet.com>
Message-ID: <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>

Hello Yaron,

   I'd also suggest that there should be a wiki page to explain some 
differences between the conventions used in core and in std-lib, or else 
many guys would complain about this, like what I did toay. 

   Today I decided to use core for a previously std-lib based program. 
While core does give me quite a lot of convenience, such as `Time.format' 
to get handy timestamp string in my log module, I was really frustrated by 
the convention of returning am Option value rather than raise exception in 
`List.tl', `String.index`, etc. 

  Also in the std-lib, the first param to functions like `List.iter'  is 
the func, but in core the first param is the list being operated on. -_-!! 
  If there could be such a wiki page as I mentioned, I'd feel much more 
comfortable with core.

Lin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/aca9698d/attachment.html>

From yminsky at janestreet.com  Sat Jan  7 13:02:22 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 7 Jan 2012 08:02:22 -0500
Subject: Short document / tutorial on Core
In-Reply-To: <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>
	<20111007182456.GX14790@janestreet.com>
	<16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
Message-ID: <CACLX4jRyxT_9nr16-ukZTvuNADqry4zWOYxKNcx4_uUEUYAOAw@mail.gmail.com>

That's totally fair.  Here's a link to a blog post that covers some of
these issues:

   https://ocaml.janestreet.com/?q=node/28

I'll put this on the wiki as well.

y

On Sat, Jan 7, 2012 at 7:28 AM, Lin <mysnowls at 163.com> wrote:

> Hello Yaron,
>
>    I'd also suggest that there should be a wiki page to explain some
> differences between the conventions used in core and in std-lib, or else
> many guys would complain about this, like what I did toay.
>
>    Today I decided to use core for a previously std-lib based program.
> While core does give me quite a lot of convenience, such as `Time.format'
> to get handy timestamp string in my log module, I was really frustrated by
> the convention of returning am Option value rather than raise exception in
> `List.tl', `String.index`, etc.
>
>   Also in the std-lib, the first param to functions like `List.iter'  is
> the func, but in core the first param is the list being operated on. -_-!!
>   If there could be such a wiki page as I mentioned, I'd feel much more
> comfortable with core.
>
> Lin
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/ffc97177/attachment.html>

From agarwal1975 at gmail.com  Sat Jan  7 13:58:48 2012
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Sat, 7 Jan 2012 08:58:48 -0500
Subject: Short document / tutorial on Core
In-Reply-To: <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>
 <20111007182456.GX14790@janestreet.com> <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
Message-ID: <CAMu2m2+BJ=QdNYnyTj8iWEwYp8FapwbKO7KZOFzK2gA0gSLqyw@mail.gmail.com>

In general you should not assume Core is a drop-in replacement for the
std-lib. It was deliberately designed with different conventions that were
felt to be better. Of course, documentation explaining common design
decisions and how they differ from the std-lib wouldn't hurt.

On Sat, Jan 7, 2012 at 7:28 AM, Lin <mysnowls at 163.com> wrote:

> Hello Yaron,
>
>    I'd also suggest that there should be a wiki page to explain some
> differences between the conventions used in core and in std-lib, or else
> many guys would complain about this, like what I did toay.
>
>    Today I decided to use core for a previously std-lib based program.
> While core does give me quite a lot of convenience, such as `Time.format'
> to get handy timestamp string in my log module, I was really frustrated by
> the convention of returning am Option value rather than raise exception in
> `List.tl', `String.index`, etc.
>
>   Also in the std-lib, the first param to functions like `List.iter'  is
> the func, but in core the first param is the list being operated on. -_-!!
>   If there could be such a wiki page as I mentioned, I'd feel much more
> comfortable with core.
>
> Lin
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/d9678eb1/attachment.html>

From yminsky at janestreet.com  Sat Jan  7 14:39:44 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 7 Jan 2012 09:39:44 -0500
Subject: Short document / tutorial on Core
In-Reply-To: <4F08523C.80907@163.com>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>
	<20111007182456.GX14790@janestreet.com>
	<16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
	<CAMu2m2+BJ=QdNYnyTj8iWEwYp8FapwbKO7KZOFzK2gA0gSLqyw@mail.gmail.com>
	<4F08523C.80907@163.com>
Message-ID: <CACLX4jTseWLiOT4dBmWwBiHEu81KRdKOuj_UpcXyY+_qu=_+mw@mail.gmail.com>

There is now a "resources" list at the bottom of the main page on the wiki,
and it leads to a short summary of Core's coding standards, and a link to
the blog post.

On Sat, Jan 7, 2012 at 9:10 AM, Lin <mysnowls at 163.com> wrote:

> **
> Sure, but everything that I've googled told me core is JSC's alternative
> implentation of the std-lib, so it's quite natural for me as well as
> anybody else to assume core is  a drop-in replacement for std-lib.
>
>
> On 01/07/2012 09:58 PM, Ashish Agarwal wrote:
>
> In general you should not assume Core is a drop-in replacement for the
> std-lib. It was deliberately designed with different conventions that were
> felt to be better. Of course, documentation explaining common design
> decisions and how they differ from the std-lib wouldn't hurt.
>
> On Sat, Jan 7, 2012 at 7:28 AM, Lin <mysnowls at 163.com> wrote:
>
>> Hello Yaron,
>>
>>    I'd also suggest that there should be a wiki page to explain some
>> differences between the conventions used in core and in std-lib, or else
>> many guys would complain about this, like what I did toay.
>>
>>    Today I decided to use core for a previously std-lib based program.
>> While core does give me quite a lot of convenience, such as `Time.format'
>> to get handy timestamp string in my log module, I was really frustrated by
>> the convention of returning am Option value rather than raise exception in
>> `List.tl', `String.index`, etc.
>>
>>   Also in the std-lib, the first param to functions like `List.iter'  is
>> the func, but in core the first param is the list being operated on. -_-!!
>>   If there could be such a wiki page as I mentioned, I'd feel much more
>> comfortable with core.
>>
>> Lin
>>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/129da831/attachment.html>

From dmhouse at gmail.com  Sat Jan  7 13:21:30 2012
From: dmhouse at gmail.com (David House)
Date: Sat, 7 Jan 2012 13:21:30 +0000
Subject: Short document / tutorial on Core
In-Reply-To: <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>
	<20111007182456.GX14790@janestreet.com>
	<16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
Message-ID: <CADy1MaumRn3oW+RjM19PW4Gh+0wcW58QaLSdEuDOhjDpW597Gg@mail.gmail.com>


On 7 January 2012 12:28, Lin <mysnowls at 163.com> wrote:
> ? Also in the std-lib, the first param to functions like `List.iter'? is the
> func, but in core the first param is the list being operated on. -_-!!

To be precise, in Core, you can do it either way around, because the
function argument is labelled. The following are both valid:

  List.iter my_list ~f:(fun x -> ...)
  List.iter ~f:(fun x -> ...) my_list


From sdefabbiakane at gmail.com  Sun Jan  8 05:06:01 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Sat, 7 Jan 2012 21:06:01 -0800 (PST)
Subject: HN Discussion
Message-ID: <4879289.1635.1325999161913.JavaMail.geo-discussion-forums@vbdz6>

There's a (little) bit of discussion about Core being on BitBucket on 
Hacker News right now:  http://news.ycombinator.com/item?id=3438084

There's at least one question I'm not very well-qualified to answer, if 
someone else would like to take a shot at it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/0a66586a/attachment.html>

From mysnowls at 163.com  Sat Jan  7 14:04:24 2012
From: mysnowls at 163.com (Lin)
Date: Sat, 07 Jan 2012 22:04:24 +0800
Subject: Short document / tutorial on Core
In-Reply-To: <CACLX4jRyxT_9nr16-ukZTvuNADqry4zWOYxKNcx4_uUEUYAOAw@mail.gmail.com>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>	<20111007182456.GX14790@janestreet.com>	<16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33> <CACLX4jRyxT_9nr16-ukZTvuNADqry4zWOYxKNcx4_uUEUYAOAw@mail.gmail.com>
Message-ID: <4F0850E8.7000008@163.com>

Yeah, the specs on this page is quite clear and well reasoned. I think 
it should be a must-read for every newcomers to core.

On 01/07/2012 09:02 PM, Yaron Minsky wrote:
> That's totally fair.  Here's a link to a blog post that covers some of 
> these issues:
>
> https://ocaml.janestreet.com/?q=node/28
>
> I'll put this on the wiki as well.
>
> y
>
> On Sat, Jan 7, 2012 at 7:28 AM, Lin <mysnowls at 163.com 
> <mailto:mysnowls at 163.com>> wrote:
>
>     Hello Yaron,
>
>        I'd also suggest that there should be a wiki page to explain
>     some differences between the conventions used in core and in
>     std-lib, or else many guys would complain about this, like what I
>     did toay.
>
>        Today I decided to use core for a previously std-lib based
>     program. While core does give me quite a lot of convenience, such
>     as `Time.format' to get handy timestamp string in my log module, I
>     was really frustrated by the convention of returning am Option
>     value rather than raise exception in `List.tl', `String.index`, etc.
>
>       Also in the std-lib, the first param to functions like
>     `List.iter'  is the func, but in core the first param is the list
>     being operated on. -_-!!   If there could be such a wiki page as I
>     mentioned, I'd feel much more comfortable with core.
>
>     Lin
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/d24be379/attachment.html>

From mysnowls at 163.com  Sat Jan  7 14:10:04 2012
From: mysnowls at 163.com (Lin)
Date: Sat, 07 Jan 2012 22:10:04 +0800
Subject: Short document / tutorial on Core
In-Reply-To: <CAMu2m2+BJ=QdNYnyTj8iWEwYp8FapwbKO7KZOFzK2gA0gSLqyw@mail.gmail.com>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1> <20111007182456.GX14790@janestreet.com> <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33> <CAMu2m2+BJ=QdNYnyTj8iWEwYp8FapwbKO7KZOFzK2gA0gSLqyw@mail.gmail.com>
Message-ID: <4F08523C.80907@163.com>

Sure, but everything that I've googled told me core is JSC's alternative 
implentation of the std-lib, so it's quite natural for me as well as 
anybody else to assume core is  a drop-in replacement for std-lib.

On 01/07/2012 09:58 PM, Ashish Agarwal wrote:
> In general you should not assume Core is a drop-in replacement for the 
> std-lib. It was deliberately designed with different conventions that 
> were felt to be better. Of course, documentation explaining common 
> design decisions and how they differ from the std-lib wouldn't hurt.
>
> On Sat, Jan 7, 2012 at 7:28 AM, Lin <mysnowls at 163.com 
> <mailto:mysnowls at 163.com>> wrote:
>
>     Hello Yaron,
>
>        I'd also suggest that there should be a wiki page to explain
>     some differences between the conventions used in core and in
>     std-lib, or else many guys would complain about this, like what I
>     did toay.
>
>        Today I decided to use core for a previously std-lib based
>     program. While core does give me quite a lot of convenience, such
>     as `Time.format' to get handy timestamp string in my log module, I
>     was really frustrated by the convention of returning am Option
>     value rather than raise exception in `List.tl', `String.index`, etc.
>
>       Also in the std-lib, the first param to functions like
>     `List.iter'  is the func, but in core the first param is the list
>     being operated on. -_-!!   If there could be such a wiki page as I
>     mentioned, I'd feel much more comfortable with core.
>
>     Lin
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/ed42fd29/attachment.html>

From yminsky at gmail.com  Fri Jan 20 10:54:07 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Fri, 20 Jan 2012 05:54:07 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
References: <4F193D2F.6010107@163.com>
	<D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
Message-ID: <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>

That's a totally reasonable request.  We have some internal documentation
that might be worth brushing up and putting out on the wiki.  I'll see if I
can get that up today, and then we can think about where people would like
to see expanded documentation.

As for comparing Lwt and Async, I think I discussed some of the issues on
the caml list when Async came out, but the short version is:

1) very similar core design
2) much less C code in Async
3) Monitors instead of stuffing errors in the monads
4) Async has more disciplined distribution of unhandled exceptions, and a
more disciplined interleaving model
5) Lwt has more hooks into the outside world and is more widely used

(4) is a complicated one to explain, so perhaps that's one to expand upon
in a blog post.

Stephen also wrote up a detailed comparison of Async and Lwt right before
the release, which perhaps we should also clean up and post.

y

On Fri, Jan 20, 2012 at 5:13 AM, Anil Madhavapeddy <anil at recoil.org> wrote:

> Agreed, and a post contrasting Lwt and Async would be most gratefully
> received. Bonus points for the (hopefully simple) adapter code between Lwt
> and Async to let them both co-exist in the same event loop.
>
> -Anil
>
> On 20 Jan 2012, at 10:08, Lin wrote:
>
> > I see that in the ocaml-core repository at Bitbucket, there are several
> examples about using Async, which is of great help for users. But in my
> opinion, the primary concepts in  Async, such as stream, monitor, and the
> underlying threading model as well as the design principles needs more
> examples and illustration so that Async can be more widely used outside
> Jane Street.
> >
> >
> > Lin
> > 01/20/2012
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/f337c5ec/attachment.html>

From yminsky at gmail.com  Fri Jan 20 11:06:28 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Fri, 20 Jan 2012 06:06:28 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org>
References: <4F193D2F.6010107@163.com>
	<D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
	<CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
	<D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org>
Message-ID: <CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>

On Jan 20, 2012 5:58 AM, "Anil Madhavapeddy" <anil at recoil.org> wrote:
>
> 3) and 4) are definitely interesting and great points in Async's favour.
 In our use of Lwt, exception propagation and the interface with normal
OCaml exceptions have been the most problematic parts of its design,
particularly with respect to space leaks due to exception handlers holding
onto values unexpectedly.
>
> 2) is perhaps a bit of of a low blow, since all the Async C code is
hidden in Core :-) There isn't a particularly large disparity between the
two if you include Core in the count.

Stephen read over lwt and was quite surprised by the amount and nature of
the c code, so on that basis I don't think this is just a line-accounting
trick.  The c code in core is largely wrapping system calls.  But I believe
that Stephen was saying that significant fractions of the complexity of the
runtime are in C.  Stephen, can you elaborate?

> -anil
>
> On 20 Jan 2012, at 10:54, Yaron Minsky wrote:
>
>> That's a totally reasonable request.  We have some internal
documentation that might be worth brushing up and putting out on the wiki.
 I'll see if I can get that up today, and then we can think about where
people would like to see expanded documentation.
>>
>> As for comparing Lwt and Async, I think I discussed some of the issues
on the caml list when Async came out, but the short version is:
>>
>> 1) very similar core design
>> 2) much less C code in Async
>> 3) Monitors instead of stuffing errors in the monads
>> 4) Async has more disciplined distribution of unhandled exceptions, and
a more disciplined interleaving model
>> 5) Lwt has more hooks into the outside world and is more widely used
>>
>> (4) is a complicated one to explain, so perhaps that's one to expand
upon in a blog post.
>>
>> Stephen also wrote up a detailed comparison of Async and Lwt right
before the release, which perhaps we should also clean up and post.
>>
>> y
>>
>> On Fri, Jan 20, 2012 at 5:13 AM, Anil Madhavapeddy <anil at recoil.org>
wrote:
>>>
>>> Agreed, and a post contrasting Lwt and Async would be most gratefully
received. Bonus points for the (hopefully simple) adapter code between Lwt
and Async to let them both co-exist in the same event loop.
>>>
>>> -Anil
>>>
>>> On 20 Jan 2012, at 10:08, Lin wrote:
>>>
>>> > I see that in the ocaml-core repository at Bitbucket, there are
several examples about using Async, which is of great help for users. But
in my opinion, the primary concepts in  Async, such as stream, monitor, and
the underlying threading model as well as the design principles needs more
examples and illustration so that Async can be more widely used outside
Jane Street.
>>> >
>>> >
>>> > Lin
>>> > 01/20/2012
>>> >
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/5a889b28/attachment.html>

From yminsky at janestreet.com  Fri Jan 20 12:33:34 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 20 Jan 2012 07:33:34 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <20120120111728.GC17972@dark.recoil.org>
References: <4F193D2F.6010107@163.com>
	<D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
	<CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
	<D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org>
	<CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>
	<20120120111728.GC17972@dark.recoil.org>
Message-ID: <CACLX4jQUcuqNUMOKP-8LT686NXJ=J-WtGxXw+4zr2Csw1vWQQg@mail.gmail.com>

On Fri, Jan 20, 2012 at 6:17 AM, Anil Madhavapeddy <anil at recoil.org> wrote:

>
> There's a reasonable amount of Lwt C code to deal with the 'detached'
> threads which are mapped to pthreads. That's unfortunately necessary for
> the synchronous APIs in *NIX like DNS resolution and disk I/O. Luckily not
> such a big deal for my particular use case.
>

I don't think it's quite necessary.  We deal with the same issues without
the C code.


> The actual socket handling in the Lwt UNIX backend is also quite complex
> OCaml code, but this appear to be due to the need for cancellation to free
> resources like fds when Lwt.cancel is invoked (cancellation is another
> area of Lwt thats hard to use, but is generally hard with cooperative
> threads, and it sounds like monitors may be an easier solution).
>

We actually don't support cancellation of monitors, although it's easy to
implement, because of the complexity of cancellation semantics (how do you
deal with try-protect type idioms, for example?)


> Overall, both Async and Lwt are pretty good about implementing the
> majority of their logic in safe OCaml.  One of my favourite things about
> Lwt is how it explicitly has a src/core directory with the pure code, and
> src/unix with all the evaluation modules to drive the cothreads. It makes
> porting it to different platforms (or microkernels!) in stages an absolute
> breeze.


Look in bitbucket!   That is in fact a great idea, and Stephen rearranged
Async to follow the same design.

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/4e208761/attachment.html>

From anil at recoil.org  Fri Jan 20 10:13:48 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 20 Jan 2012 10:13:48 +0000
Subject: hope to see some blog posts about Async
In-Reply-To: <4F193D2F.6010107@163.com>
References: <4F193D2F.6010107@163.com>
Message-ID: <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>


Agreed, and a post contrasting Lwt and Async would be most gratefully received. Bonus points for the (hopefully simple) adapter code between Lwt and Async to let them both co-exist in the same event loop.

-Anil

On 20 Jan 2012, at 10:08, Lin wrote:

> I see that in the ocaml-core repository at Bitbucket, there are several examples about using Async, which is of great help for users. But in my opinion, the primary concepts in  Async, such as stream, monitor, and the underlying threading model as well as the design principles needs more examples and illustration so that Async can be more widely used outside Jane Street.
> 
> 
> Lin
> 01/20/2012
> 



From anil at recoil.org  Fri Jan 20 10:58:30 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 20 Jan 2012 10:58:30 +0000
Subject: hope to see some blog posts about Async
In-Reply-To: <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
References: <4F193D2F.6010107@163.com> <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org> <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
Message-ID: <D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org>

3) and 4) are definitely interesting and great points in Async's favour.  In our use of Lwt, exception propagation and the interface with normal OCaml exceptions have been the most problematic parts of its design, particularly with respect to space leaks due to exception handlers holding onto values unexpectedly.

2) is perhaps a bit of of a low blow, since all the Async C code is hidden in Core :-) There isn't a particularly large disparity between the two if you include Core in the count.

-anil

On 20 Jan 2012, at 10:54, Yaron Minsky wrote:

> That's a totally reasonable request.  We have some internal documentation that might be worth brushing up and putting out on the wiki.  I'll see if I can get that up today, and then we can think about where people would like to see expanded documentation.
> 
> As for comparing Lwt and Async, I think I discussed some of the issues on the caml list when Async came out, but the short version is:
> 
> 1) very similar core design
> 2) much less C code in Async
> 3) Monitors instead of stuffing errors in the monads
> 4) Async has more disciplined distribution of unhandled exceptions, and a more disciplined interleaving model
> 5) Lwt has more hooks into the outside world and is more widely used
> 
> (4) is a complicated one to explain, so perhaps that's one to expand upon in a blog post.
> 
> Stephen also wrote up a detailed comparison of Async and Lwt right before the release, which perhaps we should also clean up and post.
> 
> y
> 
> On Fri, Jan 20, 2012 at 5:13 AM, Anil Madhavapeddy <anil at recoil.org> wrote:
> Agreed, and a post contrasting Lwt and Async would be most gratefully received. Bonus points for the (hopefully simple) adapter code between Lwt and Async to let them both co-exist in the same event loop.
> 
> -Anil
> 
> On 20 Jan 2012, at 10:08, Lin wrote:
> 
> > I see that in the ocaml-core repository at Bitbucket, there are several examples about using Async, which is of great help for users. But in my opinion, the primary concepts in  Async, such as stream, monitor, and the underlying threading model as well as the design principles needs more examples and illustration so that Async can be more widely used outside Jane Street.
> >
> >
> > Lin
> > 01/20/2012
> >
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/84b030ec/attachment.html>

From anil at recoil.org  Fri Jan 20 11:17:28 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 20 Jan 2012 11:17:28 +0000
Subject: hope to see some blog posts about Async
In-Reply-To: <CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>
References: <4F193D2F.6010107@163.com>
 <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
 <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
 <D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org>
 <CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>
Message-ID: <20120120111728.GC17972@dark.recoil.org>


On Fri, Jan 20, 2012 at 06:06:28AM -0500, Yaron Minsky wrote:
> On Jan 20, 2012 5:58 AM, "Anil Madhavapeddy" <anil at recoil.org> wrote:
> >
> > 3) and 4) are definitely interesting and great points in Async's favour.
>  In our use of Lwt, exception propagation and the interface with normal
> OCaml exceptions have been the most problematic parts of its design,
> particularly with respect to space leaks due to exception handlers holding
> onto values unexpectedly.
> >
> > 2) is perhaps a bit of of a low blow, since all the Async C code is
> hidden in Core :-) There isn't a particularly large disparity between the
> two if you include Core in the count.
> 
> Stephen read over lwt and was quite surprised by the amount and nature of
> the c code, so on that basis I don't think this is just a line-accounting
> trick.  The c code in core is largely wrapping system calls.  But I believe
> that Stephen was saying that significant fractions of the complexity of the
> runtime are in C.  Stephen, can you elaborate?

There's a reasonable amount of Lwt C code to deal with the 'detached'
threads which are mapped to pthreads. That's unfortunately necessary for
the synchronous APIs in *NIX like DNS resolution and disk I/O. Luckily not
such a big deal for my particular use case.

The actual socket handling in the Lwt UNIX backend is also quite complex
OCaml code, but this appear to be due to the need for cancellation to free
resources like fds when Lwt.cancel is invoked (cancellation is another
area of Lwt thats hard to use, but is generally hard with cooperative
threads, and it sounds like monitors may be an easier solution).

Overall, both Async and Lwt are pretty good about implementing the
majority of their logic in safe OCaml.  One of my favourite things about
Lwt is how it explicitly has a src/core directory with the pure code, and
src/unix with all the evaluation modules to drive the cothreads. It makes
porting it to different platforms (or microkernels!) in stages an absolute
breeze.

-anil


From marius at monkey.org  Fri Jan 20 19:21:53 2012
From: marius at monkey.org (marius a. eriksen)
Date: Fri, 20 Jan 2012 11:21:53 -0800
Subject: hope to see some blog posts about Async
In-Reply-To: <CACLX4jQUcuqNUMOKP-8LT686NXJ=J-WtGxXw+4zr2Csw1vWQQg@mail.gmail.com>
References: <4F193D2F.6010107@163.com> <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
 <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
 <D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org> <CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>
 <20120120111728.GC17972@dark.recoil.org> <CACLX4jQUcuqNUMOKP-8LT686NXJ=J-WtGxXw+4zr2Csw1vWQQg@mail.gmail.com>
Message-ID: <CAPtk8tv97sxgeRd91iK+HHnofowwmugpJZBeg5Y5pCtwnZ88Hg@mail.gmail.com>


Cancellation is really tricky to get right. I think the correct choice
in many circumstances is to not support it at all, and instead use
some other mechanism when needed.

Concurrent ML presents a very nice solution to threads that require
cancellation: event synchronization is atomic. However, they don't
compose as well as futures do: For example, synchronization isn't
transitive across multiple processes.

What we ended up doing in Finagle[1], which I think worked out very
well, was to not support cancellation, but rather a cancellation
*signal* that flows in the opposite direction from value propagation. The
signal is level triggered, and any interested party can listen to it.
The propagation composes in the expected way (opposite in direction
from the value).

In other words:

  let composed = foo >>= (fun _ -> bar)

propagates cancellation signals on `composed' to `bar', just like values
are propagated from `bar' to `composed'.

You can then listen to the signal (in scala:

  on_cancellation bar (fun () -> (* whatever you like *))

The nice thing about this approach is that only the updater of the
value need worry about cancellation, and we can use this to guarantee
that there's *only one update path*. This actually solves all of the
try ? catch problems, because if there is cancellation, the signal
makes it all the way to the updater of the future, and *it* can decide
what to do. We introduced cancellation in this way about 6 months ago,
and there have yet to be any bugs surfaced from it.

btw: if Pipes weren't buffered, they'd essentially be CML's channels

[1] https://github.com/twitter/finagle


From yminsky at janestreet.com  Fri Jan 20 16:59:04 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 20 Jan 2012 11:59:04 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <4F1948FB.5020701@163.com>
References: <4F193D2F.6010107@163.com>
	<D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
	<CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
	<4F1948FB.5020701@163.com>
Message-ID: <CACLX4jRLb-MHCrqvr0E_6W+-TCEyH-VqJPyZU5o3dBLDV=AzcQ@mail.gmail.com>

Now you don't have to.  Take a look here:

https://bitbucket.org/yminsky/ocaml-core/wiki/DummiesGuideToAsync

Feedback/complaints highly welcome.

y

On Fri, Jan 20, 2012 at 5:59 AM, Lin <mysnowls at 163.com> wrote:

> **
> That's so good. Can't wait to see it.
>
>
> On 01/20/2012 06:54 PM, Yaron Minsky wrote:
>
> That's a totally reasonable request.  We have some internal documentation
> that might be worth brushing up and putting out on the wiki.  I'll see if I
> can get that up today, and then we can think about where people would like
> to see expanded documentation.
>
>  As for comparing Lwt and Async, I think I discussed some of the issues
> on the caml list when Async came out, but the short version is:
>
>  1) very similar core design
> 2) much less C code in Async
> 3) Monitors instead of stuffing errors in the monads
> 4) Async has more disciplined distribution of unhandled exceptions, and a
> more disciplined interleaving model
> 5) Lwt has more hooks into the outside world and is more widely used
>
>  (4) is a complicated one to explain, so perhaps that's one to expand
> upon in a blog post.
>
>  Stephen also wrote up a detailed comparison of Async and Lwt right
> before the release, which perhaps we should also clean up and post.
>
>  y
>
> On Fri, Jan 20, 2012 at 5:13 AM, Anil Madhavapeddy <anil at recoil.org>wrote:
>
>> Agreed, and a post contrasting Lwt and Async would be most gratefully
>> received. Bonus points for the (hopefully simple) adapter code between Lwt
>> and Async to let them both co-exist in the same event loop.
>>
>> -Anil
>>
>> On 20 Jan 2012, at 10:08, Lin wrote:
>>
>> > I see that in the ocaml-core repository at Bitbucket, there are several
>> examples about using Async, which is of great help for users. But in my
>> opinion, the primary concepts in  Async, such as stream, monitor, and the
>> underlying threading model as well as the design principles needs more
>> examples and illustration so that Async can be more widely used outside
>> Jane Street.
>> >
>> >
>> > Lin
>> > 01/20/2012
>> >
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/eda0ee40/attachment.html>

From sweeks at sweeks.com  Fri Jan 20 18:31:40 2012
From: sweeks at sweeks.com (Stephen Weeks)
Date: Fri, 20 Jan 2012 13:31:40 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <CACLX4jQUcuqNUMOKP-8LT686NXJ=J-WtGxXw+4zr2Csw1vWQQg@mail.gmail.com>
References: <4F193D2F.6010107@163.com> <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
 <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
 <D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org> <CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>
 <20120120111728.GC17972@dark.recoil.org> <CACLX4jQUcuqNUMOKP-8LT686NXJ=J-WtGxXw+4zr2Csw1vWQQg@mail.gmail.com>
Message-ID: <CAJsFioU4mDkUjta8ntn5ToeA18YushN5oN7RhF=UN7utdRxhsA@mail.gmail.com>

> 2) is perhaps a bit of of a low blow, since all the Async C code is
> hidden in Core :-) There isn't a particularly large disparity
> between the two if you include Core in the count.
..
> Stephen read over lwt and was quite surprised by the amount and
> nature of the c code, so on that basis I don't think this is just a
> line-accounting trick.  The c code in core is largely wrapping
> system calls.  But I believe that Stephen was saying that
> significant fractions of the complexity of the runtime are in C.
> Stephen, can you elaborate?

Core has approx 3k lines of C code, most of which isn't relevant to
Async.  If I had to write C bindings for Async from scratch without
using Core, I guess it would come in comfortably under 1k lines, maybe
even under 500.  One just needs basic wrappers for system calls (read,
write, select) and OCaml's existing Thread API.  The Async scheduler
and job handling are all implemented in OCaml using those.

LWT has approx 6k lines of C code, of which 5k lives in
lwt_unix_unix.c and lwt_unix_stubs.c.  I'm far from an expert on LWT,
but it does appear that much of that code has to do with the scheduler
and job handling.

> There's a reasonable amount of Lwt C code to deal with the 'detached'
> threads which are mapped to pthreads. That's unfortunately necessary for
> the synchronous APIs in *NIX like DNS resolution and disk I/O

I think this does not imply a need for lots of C code.  OCaml has a
thread API, and Async has OCaml code that uses threads to make
blocking calls (like DNS resolution and disk I/O).  Having a basic C
wrapper around the blocking call that releases the OCaml lock is
sufficient.  With that, one can do the rest in OCaml.

> The actual socket handling in the Lwt UNIX backend is also quite complex
> OCaml code, but this appear to be due to the need for cancellation to free
> resources like fds when Lwt.cancel is invoked

Again, I think this does not imply a need for lots of C code.  Async
supports interruptible socket operations, and frees up file
descriptors when the interrupt happens.  Of course, one needs access
to system calls, but the logic can be (and is, in Async) written in
OCaml.

> One of my favourite things about Lwt is how it explicitly has a
> src/core directory with the pure code, and src/unix with all the
> evaluation modules to drive the cothreads. It makes porting it to
> different platforms (or microkernels!) in stages an absolute breeze.
...
> That is in fact a great idea, and Stephen rearranged Async to follow
> the same design.

Yeah, I really liked that about LWT, and now that I copied the approach in
Async, I like that about Async too :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/a4164230/attachment.html>

From sweeks at sweeks.com  Fri Jan 20 18:35:35 2012
From: sweeks at sweeks.com (Stephen Weeks)
Date: Fri, 20 Jan 2012 13:35:35 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <CACLX4jRLb-MHCrqvr0E_6W+-TCEyH-VqJPyZU5o3dBLDV=AzcQ@mail.gmail.com>
References: <4F193D2F.6010107@163.com> <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
 <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
 <4F1948FB.5020701@163.com> <CACLX4jRLb-MHCrqvr0E_6W+-TCEyH-VqJPyZU5o3dBLDV=AzcQ@mail.gmail.com>
Message-ID: <CAJsFioVD_kMNfM-oRpX2hBud20S5wa_Pa3G-SU4MVnr9e7Lx7Q@mail.gmail.com>

> https://bitbucket.org/yminsky/ocaml-core/wiki/DummiesGuideToAsync

So people know, this document is a bit dated.  Async.Stream still exists in
the code but is being phased out and replaced by Async.Pipe, which
addresses the problems with Async.Stream (space leaks, lack of pushback on
producers by consumers).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/fff56d67/attachment.html>

From mysnowls at 163.com  Fri Jan 20 10:08:47 2012
From: mysnowls at 163.com (Lin)
Date: Fri, 20 Jan 2012 18:08:47 +0800
Subject: hope to see some blog posts about Async
Message-ID: <4F193D2F.6010107@163.com>


I see that in the ocaml-core repository at Bitbucket, there are several 
examples about using Async, which is of great help for users. But in my 
opinion, the primary concepts in  Async, such as stream, monitor, and 
the underlying threading model as well as the design principles needs 
more examples and illustration so that Async can be more widely used 
outside Jane Street.


Lin
01/20/2012



From mysnowls at 163.com  Fri Jan 20 10:59:07 2012
From: mysnowls at 163.com (Lin)
Date: Fri, 20 Jan 2012 18:59:07 +0800
Subject: hope to see some blog posts about Async
In-Reply-To: <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
References: <4F193D2F.6010107@163.com>	<D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org> <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
Message-ID: <4F1948FB.5020701@163.com>

That's so good. Can't wait to see it.

On 01/20/2012 06:54 PM, Yaron Minsky wrote:
> That's a totally reasonable request.  We have some internal 
> documentation that might be worth brushing up and putting out on the 
> wiki.  I'll see if I can get that up today, and then we can think 
> about where people would like to see expanded documentation.
>
> As for comparing Lwt and Async, I think I discussed some of the issues 
> on the caml list when Async came out, but the short version is:
>
> 1) very similar core design
> 2) much less C code in Async
> 3) Monitors instead of stuffing errors in the monads
> 4) Async has more disciplined distribution of unhandled exceptions, 
> and a more disciplined interleaving model
> 5) Lwt has more hooks into the outside world and is more widely used
>
> (4) is a complicated one to explain, so perhaps that's one to expand 
> upon in a blog post.
>
> Stephen also wrote up a detailed comparison of Async and Lwt right 
> before the release, which perhaps we should also clean up and post.
>
> y
>
> On Fri, Jan 20, 2012 at 5:13 AM, Anil Madhavapeddy <anil at recoil.org 
> <mailto:anil at recoil.org>> wrote:
>
>     Agreed, and a post contrasting Lwt and Async would be most
>     gratefully received. Bonus points for the (hopefully simple)
>     adapter code between Lwt and Async to let them both co-exist in
>     the same event loop.
>
>     -Anil
>
>     On 20 Jan 2012, at 10:08, Lin wrote:
>
>     > I see that in the ocaml-core repository at Bitbucket, there are
>     several examples about using Async, which is of great help for
>     users. But in my opinion, the primary concepts in  Async, such as
>     stream, monitor, and the underlying threading model as well as the
>     design principles needs more examples and illustration so that
>     Async can be more widely used outside Jane Street.
>     >
>     >
>     > Lin
>     > 01/20/2012
>     >
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/f27a46fc/attachment.html>

From yminsky at janestreet.com  Sat Jan 21 05:13:57 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 21 Jan 2012 00:13:57 -0500
Subject: POPL
Message-ID: <CACLX4jQnrdq-Smpo-ihvC8o0yZUBXZng53rHuhNfZVnyku8RQw@mail.gmail.com>

As a random note: if any of you are going to be at POPL, Stephen Weeks and
Nathan Linger (both of whom are involved in the development of Core and the
related libraries) will be there on Thursday.  You should reach out and say
hello if you're going to be there too....

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/1736dfee/attachment.html>

From yminsky at janestreet.com  Sat Jan 21 15:13:36 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 21 Jan 2012 10:13:36 -0500
Subject: build-and-install
Message-ID: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>

Has anyone succeeded in building Core on a mac using the build-and-install
script in the root?  When I try to run it, I get the following error:

ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
too many anonymous arguments: ./build-and-install -o j:h -l
jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
-- --disable-linux --disable-posix-tim\
ers
------ base/type-conv ------
~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
W: Field XMETAType is set but matching plugin is not enabled.
I: File INSTALL has not changed, skipping
I: File Makefile has not changed, skipping
I: Regenerating file _tags
I: File configure has not changed, skipping
I: File lib/type-conv.odocl has not changed, skipping
I: File myocamlbuild.ml has not changed, skipping
I: File setup.ml has not changed, skipping
I: File syntax/META has not changed, skipping
I: File syntax/pa_type_conv.mllib has not changed, skipping
I: Running command '/usr/local/bin/ocamlc.opt -config >
'/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
'/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
E: Don't know what to do with arguments: ''
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/8cf0749a/attachment.html>

From yminsky at janestreet.com  Sat Jan 21 15:29:53 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 21 Jan 2012 10:29:53 -0500
Subject: build-and-install
In-Reply-To: <4F1AD8E6.6020202@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
Message-ID: <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>

The sexplib error is a bit surprising.  Did it successfully install sexplib
before building core?

I'm currently trying to build the packages by hand.  Here's my latest
problem:

core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
../../build-common.sh: line 88: undefined: unbound variable


If anyone knows how to get past that, I'd be much obliged...

I started a page on the wiki for collecting hints on how to do the
installation.  There's not much there yet, but I'll fill things out as I
figure them out.  Others should feel free to pile in their advice:

    https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints

y

On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:

> **
> I have been trying to build it by build-and-install script from two hous
> ago. With a few tweaks I can get it build everything before core(and
> async). I changed the last few lines of the script by discarding all the
> flags setting stuff, such that:
>
>   esac
>   ./oasis.sh
>   ./configure --prefix ~/godi
>   make build
>   make install || true
>   popd
> done
>
> But when building core there are some problems. First compiling
> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
> can be solved by just returning an caml_copy_string("Not implemented") for
> backtrace_get() on IA32 machines.
>
> Another problem is like this, which I don't know what to do with it:
>
> error : unbound module Sexplib
>
>
>
> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>
> Has anyone succeeded in building Core on a mac using the build-and-install
> script in the root?  When I try to run it, I get the following error:
>
>  ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> too many anonymous arguments: ./build-and-install -o j:h -l
> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
> -- --disable-linux --disable-posix-tim\
> ers
> ------ base/type-conv ------
> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> W: Field XMETAType is set but matching plugin is not enabled.
> I: File INSTALL has not changed, skipping
> I: File Makefile has not changed, skipping
> I: Regenerating file _tags
> I: File configure has not changed, skipping
> I: File lib/type-conv.odocl has not changed, skipping
> I: File myocamlbuild.ml has not changed, skipping
> I: File setup.ml has not changed, skipping
> I: File syntax/META has not changed, skipping
> I: File syntax/pa_type_conv.mllib has not changed, skipping
> I: Running command '/usr/local/bin/ocamlc.opt -config >
> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> E: Don't know what to do with arguments: ''
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/6d8a45a2/attachment.html>

From yminsky at janestreet.com  Sat Jan 21 15:43:41 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 21 Jan 2012 10:43:41 -0500
Subject: build-and-install
In-Reply-To: <4F1ADC5A.5030901@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F1ADC5A.5030901@163.com>
Message-ID: <CACLX4jRJDqOr63Vcx8dFY3NYRMNSeS_-QtMZuwcqqCGy3+0R9g@mail.gmail.com>

Interesting.  I'll see if I hit the same problem when I get that far.

y

On Sat, Jan 21, 2012 at 10:40 AM, Lin <mysnowls at 163.com> wrote:

> **
>
> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>
> The sexplib error is a bit surprising.  Did it successfully install
> sexplib before building core?
>
>     I do installed sexplib. However when I use it in toplevel, after
> `requre "sexplib"' and `require "sexplib.syntax";  `open Sexplib' told me
> `unbound module Sexplib' while `open Sexp' is OK. But when I try to define
> something like `type t = int with sexp'  it also fails.
>
>
>  I'm currently trying to build the packages by hand.  Here's my latest
> problem:
>
>   core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>  ../../build-common.sh: line 88: undefined: unbound variable
>
>
>  If anyone knows how to get past that, I'd be much obliged...
>
>  I started a page on the wiki for collecting hints on how to do the
> installation.  There's not much there yet, but I'll fill things out as I
> figure them out.  Others should feel free to pile in their advice:
>
>      https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>
>  y
>
>  On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>
>>  I have been trying to build it by build-and-install script from two hous
>> ago. With a few tweaks I can get it build everything before core(and
>> async). I changed the last few lines of the script by discarding all the
>> flags setting stuff, such that:
>>
>>   esac
>>   ./oasis.sh
>>   ./configure --prefix ~/godi
>>   make build
>>   make install || true
>>   popd
>> done
>>
>> But when building core there are some problems. First compiling
>> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
>> can be solved by just returning an caml_copy_string("Not implemented") for
>> backtrace_get() on IA32 machines.
>>
>> Another problem is like this, which I don't know what to do with it:
>>
>> error : unbound module Sexplib
>>
>>
>>
>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>
>> Has anyone succeeded in building Core on a mac using the
>> build-and-install script in the root?  When I try to run it, I get the
>> following error:
>>
>>  ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>> too many anonymous arguments: ./build-and-install -o j:h -l
>> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>> -- --disable-linux --disable-posix-tim\
>> ers
>> ------ base/type-conv ------
>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>> W: Field XMETAType is set but matching plugin is not enabled.
>> I: File INSTALL has not changed, skipping
>> I: File Makefile has not changed, skipping
>> I: Regenerating file _tags
>> I: File configure has not changed, skipping
>> I: File lib/type-conv.odocl has not changed, skipping
>> I: File myocamlbuild.ml has not changed, skipping
>> I: File setup.ml has not changed, skipping
>> I: File syntax/META has not changed, skipping
>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>> I: Running command '/usr/local/bin/ocamlc.opt -config >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>> E: Don't know what to do with arguments: ''
>>
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/dc159dd5/attachment.html>

From yminsky at janestreet.com  Sun Jan 22 01:38:08 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 21 Jan 2012 20:38:08 -0500
Subject: build-and-install
In-Reply-To: <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
Message-ID: <CACLX4jT1ppW3eo2tYqXahitowJFLovJZNFxbEJ6HM8kgOwt-dA@mail.gmail.com>

For what it's worth, I fixed this one, and I now have a branch with some
OS-X related fixes to the oasis scripts:

   https://bitbucket.org/yminsky/ocaml-core-mac-portabiility

I'm not quite out of the woods yet, but I hope to get things up and
building soon...

y

On Sat, Jan 21, 2012 at 10:29 AM, Yaron Minsky <yminsky at janestreet.com>wrote:

> The sexplib error is a bit surprising.  Did it successfully install
> sexplib before building core?
>
> I'm currently trying to build the packages by hand.  Here's my latest
> problem:
>
> core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
> ../../build-common.sh: line 88: undefined: unbound variable
>
>
> If anyone knows how to get past that, I'd be much obliged...
>
> I started a page on the wiki for collecting hints on how to do the
> installation.  There's not much there yet, but I'll fill things out as I
> figure them out.  Others should feel free to pile in their advice:
>
>     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>
> y
>
> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>
>> **
>> I have been trying to build it by build-and-install script from two hous
>> ago. With a few tweaks I can get it build everything before core(and
>> async). I changed the last few lines of the script by discarding all the
>> flags setting stuff, such that:
>>
>>   esac
>>   ./oasis.sh
>>   ./configure --prefix ~/godi
>>   make build
>>   make install || true
>>   popd
>> done
>>
>> But when building core there are some problems. First compiling
>> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
>> can be solved by just returning an caml_copy_string("Not implemented") for
>> backtrace_get() on IA32 machines.
>>
>> Another problem is like this, which I don't know what to do with it:
>>
>> error : unbound module Sexplib
>>
>>
>>
>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>
>> Has anyone succeeded in building Core on a mac using the
>> build-and-install script in the root?  When I try to run it, I get the
>> following error:
>>
>>  ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>> too many anonymous arguments: ./build-and-install -o j:h -l
>> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>> -- --disable-linux --disable-posix-tim\
>> ers
>> ------ base/type-conv ------
>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>> W: Field XMETAType is set but matching plugin is not enabled.
>> I: File INSTALL has not changed, skipping
>> I: File Makefile has not changed, skipping
>> I: Regenerating file _tags
>> I: File configure has not changed, skipping
>> I: File lib/type-conv.odocl has not changed, skipping
>> I: File myocamlbuild.ml has not changed, skipping
>> I: File setup.ml has not changed, skipping
>> I: File syntax/META has not changed, skipping
>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>> I: Running command '/usr/local/bin/ocamlc.opt -config >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>> E: Don't know what to do with arguments: ''
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/861dc0c9/attachment.html>

From mysnowls at 163.com  Sat Jan 21 15:25:26 2012
From: mysnowls at 163.com (Lin)
Date: Sat, 21 Jan 2012 23:25:26 +0800
Subject: build-and-install
In-Reply-To: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
Message-ID: <4F1AD8E6.6020202@163.com>

I have been trying to build it by build-and-install script from two hous 
ago. With a few tweaks I can get it build everything before core(and 
async). I changed the last few lines of the script by discarding all the 
flags setting stuff, such that:

   esac
   ./oasis.sh
   ./configure --prefix ~/godi
   make build
   make install || true
   popd
done

But when building core there are some problems. First compiling 
`backtrace_stubs.c' failed by the #error directive on IA32 machines. 
This can be solved by just returning an caml_copy_string("Not 
implemented") for backtrace_get() on IA32 machines.

Another problem is like this, which I don't know what to do with it:

error : unbound module Sexplib


On 01/21/2012 11:13 PM, Yaron Minsky wrote:
> Has anyone succeeded in building Core on a mac using the 
> build-and-install script in the root?  When I try to run it, I get the 
> following error:
>
> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> too many anonymous arguments: ./build-and-install -o j:h -l 
> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers 
> -- --disable-linux --disable-posix-tim\
> ers
> ------ base/type-conv ------
> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> W: Field XMETAType is set but matching plugin is not enabled.
> I: File INSTALL has not changed, skipping
> I: File Makefile has not changed, skipping
> I: Regenerating file _tags
> I: File configure has not changed, skipping
> I: File lib/type-conv.odocl has not changed, skipping
> I: File myocamlbuild.ml <http://myocamlbuild.ml> has not changed, skipping
> I: File setup.ml <http://setup.ml> has not changed, skipping
> I: File syntax/META has not changed, skipping
> I: File syntax/pa_type_conv.mllib has not changed, skipping
> I: Running command '/usr/local/bin/ocamlc.opt -config > 
> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib 
> > '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> E: Don't know what to do with arguments: ''

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/77ed950a/attachment.html>

From mysnowls at 163.com  Sat Jan 21 15:40:10 2012
From: mysnowls at 163.com (Lin)
Date: Sat, 21 Jan 2012 23:40:10 +0800
Subject: build-and-install
In-Reply-To: <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
Message-ID: <4F1ADC5A.5030901@163.com>


On 01/21/2012 11:29 PM, Yaron Minsky wrote:
> The sexplib error is a bit surprising.  Did it successfully install 
> sexplib before building core?
     I do installed sexplib. However when I use it in toplevel, after 
`requre "sexplib"' and `require "sexplib.syntax";  `open Sexplib' told 
me `unbound module Sexplib' while `open Sexp' is OK. But when I try to 
define something like `type t = int with sexp'  it also fails.
>
> I'm currently trying to build the packages by hand.  Here's my latest 
> problem:
>
>     core $ ./oasis.sh && ocaml setup.ml <http://setup.ml> -build &&
>     ocaml setup.ml <http://setup.ml> -install
>     ../../build-common.sh: line 88: undefined: unbound variable
>
>
> If anyone knows how to get past that, I'd be much obliged...
>
> I started a page on the wiki for collecting hints on how to do the 
> installation.  There's not much there yet, but I'll fill things out as 
> I figure them out.  Others should feel free to pile in their advice:
>
> https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>
> y
>
> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com 
> <mailto:mysnowls at 163.com>> wrote:
>
>     I have been trying to build it by build-and-install script from
>     two hous ago. With a few tweaks I can get it build everything
>     before core(and async). I changed the last few lines of the script
>     by discarding all the flags setting stuff, such that:
>
>       esac
>       ./oasis.sh
>       ./configure --prefix ~/godi
>       make build
>       make install || true
>       popd
>     done
>
>     But when building core there are some problems. First compiling
>     `backtrace_stubs.c' failed by the #error directive on IA32
>     machines. This can be solved by just returning an
>     caml_copy_string("Not implemented") for backtrace_get() on IA32
>     machines.
>
>     Another problem is like this, which I don't know what to do with it:
>
>     error : unbound module Sexplib
>
>
>
>     On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>     Has anyone succeeded in building Core on a mac using the
>>     build-and-install script in the root?  When I try to run it, I
>>     get the following error:
>>
>>     ocaml-core $ ./build-and-install --disable-linux
>>     --disable-posix-timers
>>     too many anonymous arguments: ./build-and-install -o j:h -l
>>     jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>     -- --disable-linux --disable-posix-tim\
>>     ers
>>     ------ base/type-conv ------
>>     ~/Documents/code/ocaml-core/base/type-conv
>>     ~/Documents/code/ocaml-core
>>     W: Field XMETAType is set but matching plugin is not enabled.
>>     I: File INSTALL has not changed, skipping
>>     I: File Makefile has not changed, skipping
>>     I: Regenerating file _tags
>>     I: File configure has not changed, skipping
>>     I: File lib/type-conv.odocl has not changed, skipping
>>     I: File myocamlbuild.ml <http://myocamlbuild.ml> has not changed,
>>     skipping
>>     I: File setup.ml <http://setup.ml> has not changed, skipping
>>     I: File syntax/META has not changed, skipping
>>     I: File syntax/pa_type_conv.mllib has not changed, skipping
>>     I: Running command '/usr/local/bin/ocamlc.opt -config >
>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>     I: Running command '/usr/local/bin/ocamlfind query -format %v
>>     findlib >
>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>     E: Don't know what to do with arguments: ''
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/6649ed74/attachment.html>

From mysnowls at 163.com  Sun Jan 22 06:44:51 2012
From: mysnowls at 163.com (Lin)
Date: Sun, 22 Jan 2012 14:44:51 +0800
Subject: build-and-install
In-Reply-To: <4F1ADC5A.5030901@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F1ADC5A.5030901@163.com>
Message-ID: <4F1BB063.9010107@163.com>

I  solved the sexplib problem by first uninstall the sexplib built from 
the Bitbucket repo(Version 5.2.2), and then build and installed a 7.0.2 
version.

But again the same problem for bin_prot happens.

File "lib/binable.mli", line 1, characters 0-21:
Error: Unbound module Bin_prot
Command exited with code 2.

Also in the toplevel, `open Bin_prot' fails but `open Binable' seems OK.



On 01/21/2012 11:40 PM, Lin wrote:
>
> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>> The sexplib error is a bit surprising.  Did it successfully install 
>> sexplib before building core?
>     I do installed sexplib. However when I use it in toplevel, after 
> `requre "sexplib"' and `require "sexplib.syntax";  `open Sexplib' told 
> me `unbound module Sexplib' while `open Sexp' is OK. But when I try to 
> define something like `type t = int with sexp'  it also fails.
>>
>> I'm currently trying to build the packages by hand.  Here's my latest 
>> problem:
>>
>>     core $ ./oasis.sh && ocaml setup.ml <http://setup.ml> -build &&
>>     ocaml setup.ml <http://setup.ml> -install
>>     ../../build-common.sh: line 88: undefined: unbound variable
>>
>>
>> If anyone knows how to get past that, I'd be much obliged...
>>
>> I started a page on the wiki for collecting hints on how to do the 
>> installation.  There's not much there yet, but I'll fill things out 
>> as I figure them out.  Others should feel free to pile in their advice:
>>
>> https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>
>> y
>>
>> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com 
>> <mailto:mysnowls at 163.com>> wrote:
>>
>>     I have been trying to build it by build-and-install script from
>>     two hous ago. With a few tweaks I can get it build everything
>>     before core(and async). I changed the last few lines of the
>>     script by discarding all the flags setting stuff, such that:
>>
>>       esac
>>       ./oasis.sh
>>       ./configure --prefix ~/godi
>>       make build
>>       make install || true
>>       popd
>>     done
>>
>>     But when building core there are some problems. First compiling
>>     `backtrace_stubs.c' failed by the #error directive on IA32
>>     machines. This can be solved by just returning an
>>     caml_copy_string("Not implemented") for backtrace_get() on IA32
>>     machines.
>>
>>     Another problem is like this, which I don't know what to do with it:
>>
>>     error : unbound module Sexplib
>>
>>
>>
>>     On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>     Has anyone succeeded in building Core on a mac using the
>>>     build-and-install script in the root?  When I try to run it, I
>>>     get the following error:
>>>
>>>     ocaml-core $ ./build-and-install --disable-linux
>>>     --disable-posix-timers
>>>     too many anonymous arguments: ./build-and-install -o j:h -l
>>>     jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>>     -- --disable-linux --disable-posix-tim\
>>>     ers
>>>     ------ base/type-conv ------
>>>     ~/Documents/code/ocaml-core/base/type-conv
>>>     ~/Documents/code/ocaml-core
>>>     W: Field XMETAType is set but matching plugin is not enabled.
>>>     I: File INSTALL has not changed, skipping
>>>     I: File Makefile has not changed, skipping
>>>     I: Regenerating file _tags
>>>     I: File configure has not changed, skipping
>>>     I: File lib/type-conv.odocl has not changed, skipping
>>>     I: File myocamlbuild.ml <http://myocamlbuild.ml> has not
>>>     changed, skipping
>>>     I: File setup.ml <http://setup.ml> has not changed, skipping
>>>     I: File syntax/META has not changed, skipping
>>>     I: File syntax/pa_type_conv.mllib has not changed, skipping
>>>     I: Running command '/usr/local/bin/ocamlc.opt -config >
>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>>     I: Running command '/usr/local/bin/ocamlfind query -format %v
>>>     findlib >
>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>>     E: Don't know what to do with arguments: ''
>>
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120122/bf390d41/attachment.html>

From ocaml-core at googlegroups.com  Tue Jan 24 03:07:12 2012
From: ocaml-core at googlegroups.com (ocaml-core at googlegroups.com)
Date: Tue, 24 Jan 2012 03:07:12 +0000
Subject: Moderator's spam report for ocaml-core@googlegroups.com
Message-ID: <0016e6db2a8389c0c704b73d7135@google.com>


This message is being sent to you because you are a moderator of the group ocaml-core.

The following suspicious messages were sent to your group, but are being held in your moderation queue because they are classified as likely spam messages.

If you take no action, all the messages below will be discarded automatically as spam.

However, if you see any messages that are not spam below, you may approve them individually by going to:

http://groups.google.com/group/ocaml-core/pendmsg

Please do not mark this notification as spam; this is a service for group moderators. If you do not wish to receive these notifications in the future, you may change your preferences by going to:

http://groups.google.com/group/ocaml-core/manage_post


------- 1 of 1  -------
Subject: Re: build-and-install
>From: Lin <mysnowls at 163.com>
Date: Jan 22 06:17PM +0800

Maybe the problems I encountered have something to do with the oasis script.

After installation of sexplib, in the lib/ocaml/site-lib/sexplib/ 
directory I
got a dozen of cmi/cmx files, which should be packed into
sexplib.cmi/sexplib.cmxa; This

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=4751443194244465115


For more information about this message, please visit:
http://groups.google.com/support/bin/answer.py?hl=en&answer=165806



From mkoconnor at gmail.com  Wed Jan 25 21:26:29 2012
From: mkoconnor at gmail.com (Michael O'Connor)
Date: Wed, 25 Jan 2012 13:26:29 -0800 (PST)
Subject: build-and-install
In-Reply-To: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
Message-ID: <ad73695e-2eb2-4f6c-87f8-75b45706ab06@k28g2000yqn.googlegroups.com>


Just as info: I use the homebrew package manager on my home mac.
There's a pull request https://github.com/mxcl/homebrew/pull/9007
for it (it's a git repo) which adds the lwt package and it just builds
and works out of the box for me.

It'd be great if we get a similar thing up for core.

On Jan 21, 10:13?am, Yaron Minsky <ymin... at janestreet.com> wrote:
> Has anyone succeeded in building Core on a mac using the build-and-install
> script in the root? ?When I try to run it, I get the following error:
>
> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> too many anonymous arguments: ./build-and-install -o j:h -l
> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-tim?ers
> -- --disable-linux --disable-posix-tim\
> ers
> ------ base/type-conv ------
> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> W: Field XMETAType is set but matching plugin is not enabled.
> I: File INSTALL has not changed, skipping
> I: File Makefile has not changed, skipping
> I: Regenerating file _tags
> I: File configure has not changed, skipping
> I: File lib/type-conv.odocl has not changed, skipping
> I: File myocamlbuild.ml has not changed, skipping
> I: File setup.ml has not changed, skipping
> I: File syntax/META has not changed, skipping
> I: File syntax/pa_type_conv.mllib has not changed, skipping
> I: Running command '/usr/local/bin/ocamlc.opt -config >
> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> E: Don't know what to do with arguments: ''


From yminsky at janestreet.com  Wed Jan 25 23:05:22 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 25 Jan 2012 18:05:22 -0500
Subject: build-and-install
In-Reply-To: <ad73695e-2eb2-4f6c-87f8-75b45706ab06@k28g2000yqn.googlegroups.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<ad73695e-2eb2-4f6c-87f8-75b45706ab06@k28g2000yqn.googlegroups.com>
Message-ID: <CACLX4jQVU+hdcmoNcxbf0FMKNi=FuVvZDMEwvV=Oqd+u82n9aQ@mail.gmail.com>

Agreed, but first we have to get core building reliably on the mac!  I
still haven't had the time to push this through myself.  Yury is hoping to
make some progress on this soon.

y

On Wed, Jan 25, 2012 at 4:26 PM, Michael O'Connor <mkoconnor at gmail.com>wrote:

> Just as info: I use the homebrew package manager on my home mac.
> There's a pull request https://github.com/mxcl/homebrew/pull/9007
> for it (it's a git repo) which adds the lwt package and it just builds
> and works out of the box for me.
>
> It'd be great if we get a similar thing up for core.
>
> On Jan 21, 10:13 am, Yaron Minsky <ymin... at janestreet.com> wrote:
> > Has anyone succeeded in building Core on a mac using the
> build-and-install
> > script in the root?  When I try to run it, I get the following error:
> >
> > ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> > too many anonymous arguments: ./build-and-install -o j:h -l
> >
> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-tim?ers
> > -- --disable-linux --disable-posix-tim\
> > ers
> > ------ base/type-conv ------
> > ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> > W: Field XMETAType is set but matching plugin is not enabled.
> > I: File INSTALL has not changed, skipping
> > I: File Makefile has not changed, skipping
> > I: Regenerating file _tags
> > I: File configure has not changed, skipping
> > I: File lib/type-conv.odocl has not changed, skipping
> > I: File myocamlbuild.ml has not changed, skipping
> > I: File setup.ml has not changed, skipping
> > I: File syntax/META has not changed, skipping
> > I: File syntax/pa_type_conv.mllib has not changed, skipping
> > I: Running command '/usr/local/bin/ocamlc.opt -config >
> > '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> > I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
> > '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> > E: Don't know what to do with arguments: ''
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120125/1e11f0dd/attachment.html>

From mysnowls at 163.com  Wed Jan 25 16:31:22 2012
From: mysnowls at 163.com (Lin)
Date: Thu, 26 Jan 2012 00:31:22 +0800
Subject: build-and-install
In-Reply-To: <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
Message-ID: <4F202E5A.9030601@163.com>

Well, this seems result from the fact that the official released oasis 
0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file, 
which is used for generate correct .mlpack files.  There is a patch for 
handling this option which has not been merged into oasis trunk :

http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294

I guess that in Jane Street you're using the patched version of oasis, 
so I can't get the library modules packed when trying to compile with 
the unpatched version.

And what it looks like is exactly a module packing problem, i.e. I can 
`open Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' 
because it's not packed at all.


On 01/21/2012 11:29 PM, Yaron Minsky wrote:
> The sexplib error is a bit surprising.  Did it successfully install 
> sexplib before building core?
>
> I'm currently trying to build the packages by hand.  Here's my latest 
> problem:
>
>     core $ ./oasis.sh && ocaml setup.ml <http://setup.ml> -build &&
>     ocaml setup.ml <http://setup.ml> -install
>     ../../build-common.sh: line 88: undefined: unbound variable
>
>
> If anyone knows how to get past that, I'd be much obliged...
>
> I started a page on the wiki for collecting hints on how to do the 
> installation.  There's not much there yet, but I'll fill things out as 
> I figure them out.  Others should feel free to pile in their advice:
>
> https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>
> y
>
> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com 
> <mailto:mysnowls at 163.com>> wrote:
>
>     I have been trying to build it by build-and-install script from
>     two hous ago. With a few tweaks I can get it build everything
>     before core(and async). I changed the last few lines of the script
>     by discarding all the flags setting stuff, such that:
>
>       esac
>       ./oasis.sh
>       ./configure --prefix ~/godi
>       make build
>       make install || true
>       popd
>     done
>
>     But when building core there are some problems. First compiling
>     `backtrace_stubs.c' failed by the #error directive on IA32
>     machines. This can be solved by just returning an
>     caml_copy_string("Not implemented") for backtrace_get() on IA32
>     machines.
>
>     Another problem is like this, which I don't know what to do with it:
>
>     error : unbound module Sexplib
>
>
>
>     On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>     Has anyone succeeded in building Core on a mac using the
>>     build-and-install script in the root?  When I try to run it, I
>>     get the following error:
>>
>>     ocaml-core $ ./build-and-install --disable-linux
>>     --disable-posix-timers
>>     too many anonymous arguments: ./build-and-install -o j:h -l
>>     jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>     -- --disable-linux --disable-posix-tim\
>>     ers
>>     ------ base/type-conv ------
>>     ~/Documents/code/ocaml-core/base/type-conv
>>     ~/Documents/code/ocaml-core
>>     W: Field XMETAType is set but matching plugin is not enabled.
>>     I: File INSTALL has not changed, skipping
>>     I: File Makefile has not changed, skipping
>>     I: Regenerating file _tags
>>     I: File configure has not changed, skipping
>>     I: File lib/type-conv.odocl has not changed, skipping
>>     I: File myocamlbuild.ml <http://myocamlbuild.ml> has not changed,
>>     skipping
>>     I: File setup.ml <http://setup.ml> has not changed, skipping
>>     I: File syntax/META has not changed, skipping
>>     I: File syntax/pa_type_conv.mllib has not changed, skipping
>>     I: Running command '/usr/local/bin/ocamlc.opt -config >
>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>     I: Running command '/usr/local/bin/ocamlfind query -format %v
>>     findlib >
>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>     E: Don't know what to do with arguments: ''
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/f7bc2c11/attachment.html>

From yminsky at janestreet.com  Thu Jan 26 16:07:49 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 26 Jan 2012 11:07:49 -0500
Subject: build-and-install
In-Reply-To: <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
Message-ID: <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>

For what it's worth, we just pushed Yury's changes to the bitbucket repo,
so those mac fixes should be in place.  I'll try to test them out myself at
home tonight.

Yury, do you think it makes sense for us to include the setup.ml files we
used directly in the repo?  I know it's a bit nasty to include generated
files (the release tarballs of course should include them), but I wonder if
it might make sense given the complexity of getting just the right version
of Oasis installed...

y

On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:

> Actually, we've managed to build and install all of the libraries on a
> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
> which changes the build scripts to patch the generated setup.ml files
> with support for packed libs. This way, we don't need to rely on a
> patched version of OASIS being installed.
>
> When these fixes hit the tree hosted on bitbucket, I hope that a
> 32-bit Linux system will be able to build the tree straight away.
>
> But I agree, patching the generated setup.ml files is hacky and it
> would be great if there were a released version of OASIS with support
> for the Pack option.
>
> Yury
>
> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org>
> wrote:
> > Why did you have to rebuild the setup.ml files? Were the ones included
> in
> > the various library tarballs incorrect?
> >
> > Also Sylvain: would it be possible just to commit those patches that are
> > outstanding against OASIS for pack support? They seem to work well
> enough,
> > and lots of people seem to run into it...
> >
> > -Anil
> >
> > On 26 Jan 2012, at 13:23, Lin wrote:
> >
> > For those interested, I finally managed to build and install all
> libraries
> > on 32-bit Linux. The steps are:
> >
> > 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the
> > `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
> >
> > 2) uninstall previously installed version of
> > type-conv/sexplib/bin_prot/fieldslib , etc.
> >
> > 3)  uncomment all `Pack:true' in every oasis.sh script in the directory
> tree
> > , if any
> >
> > 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
> >
> > On 01/26/2012 12:31 AM, Lin wrote:
> >
> > Well, this seems result from the fact that the official released oasis
> > 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
> > which is used for generate correct .mlpack files.  There is a patch for
> > handling this option which has not been merged into oasis trunk :
> >
> >
> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
> >
> > I guess that in Jane Street you're using the patched version of oasis,
> so I
> > can't get the library modules packed when trying to compile with the
> > unpatched version.
> >
> > And what it looks like is exactly a module packing problem, i.e. I can
> `open
> > Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because
> it's
> > not packed at all.
> >
> >
> > On 01/21/2012 11:29 PM, Yaron Minsky wrote:
> >
> > The sexplib error is a bit surprising.  Did it successfully install
> sexplib
> > before building core?
> >
> > I'm currently trying to build the packages by hand.  Here's my latest
> > problem:
> >
> > core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
> > ../../build-common.sh: line 88: undefined: unbound variable
> >
> >
> > If anyone knows how to get past that, I'd be much obliged...
> >
> > I started a page on the wiki for collecting hints on how to do the
> > installation.  There's not much there yet, but I'll fill things out as I
> > figure them out.  Others should feel free to pile in their advice:
> >
> >     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
> >
> > y
> >
> > On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
> >>
> >> I have been trying to build it by build-and-install script from two hous
> >> ago. With a few tweaks I can get it build everything before core(and
> async).
> >> I changed the last few lines of the script by discarding all the flags
> >> setting stuff, such that:
> >>
> >>   esac
> >>   ./oasis.sh
> >>   ./configure --prefix ~/godi
> >>   make build
> >>   make install || true
> >>   popd
> >> done
> >>
> >> But when building core there are some problems. First compiling
> >> `backtrace_stubs.c' failed by the #error directive on IA32 machines.
> This
> >> can be solved by just returning an caml_copy_string("Not implemented")
> for
> >> backtrace_get() on IA32 machines.
> >>
> >> Another problem is like this, which I don't know what to do with it:
> >>
> >> error : unbound module Sexplib
> >>
> >>
> >>
> >> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
> >>
> >> Has anyone succeeded in building Core on a mac using the
> build-and-install
> >> script in the root?  When I try to run it, I get the following error:
> >>
> >> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> >> too many anonymous arguments: ./build-and-install -o j:h -l
> >>
> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
> >> -- --disable-linux --disable-posix-tim\
> >> ers
> >> ------ base/type-conv ------
> >> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> >> W: Field XMETAType is set but matching plugin is not enabled.
> >> I: File INSTALL has not changed, skipping
> >> I: File Makefile has not changed, skipping
> >> I: Regenerating file _tags
> >> I: File configure has not changed, skipping
> >> I: File lib/type-conv.odocl has not changed, skipping
> >> I: File myocamlbuild.ml has not changed, skipping
> >> I: File setup.ml has not changed, skipping
> >> I: File syntax/META has not changed, skipping
> >> I: File syntax/pa_type_conv.mllib has not changed, skipping
> >> I: Running command '/usr/local/bin/ocamlc.opt -config >
> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> >> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> >> E: Don't know what to do with arguments: ''
> >>
> >>
> >
> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/8f6dedbf/attachment.html>

From anil at recoil.org  Thu Jan 26 13:29:07 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 26 Jan 2012 13:29:07 +0000
Subject: build-and-install
In-Reply-To: <4F2153C2.8070409@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com>
Message-ID: <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>

Why did you have to rebuild the setup.ml files? Were the ones included in the various library tarballs incorrect?

Also Sylvain: would it be possible just to commit those patches that are outstanding against OASIS for pack support? They seem to work well enough, and lots of people seem to run into it...

-Anil

On 26 Jan 2012, at 13:23, Lin wrote:

> For those interested, I finally managed to build and install all libraries on 32-bit Linux. The steps are:
> 
> 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
> 
> 2) uninstall previously installed version of type-conv/sexplib/bin_prot/fieldslib , etc.
> 
> 3)  uncomment all `Pack:true' in every oasis.sh script in the directory tree , if any
> 
> 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
> 
> On 01/26/2012 12:31 AM, Lin wrote:
>> 
>> Well, this seems result from the fact that the official released oasis 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file, which is used for generate correct .mlpack files.  There is a patch for handling this option which has not been merged into oasis trunk :
>> 
>> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>> 
>> I guess that in Jane Street you're using the patched version of oasis, so I can't get the library modules packed when trying to compile with the unpatched version.
>> 
>> And what it looks like is exactly a module packing problem, i.e. I can `open Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because it's not packed at all.
>> 
>> 
>> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>>> 
>>> The sexplib error is a bit surprising.  Did it successfully install sexplib before building core?
>>> 
>>> I'm currently trying to build the packages by hand.  Here's my latest problem:
>>> 
>>> core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>>> ../../build-common.sh: line 88: undefined: unbound variable
>>> 
>>> If anyone knows how to get past that, I'd be much obliged...
>>> 
>>> I started a page on the wiki for collecting hints on how to do the installation.  There's not much there yet, but I'll fill things out as I figure them out.  Others should feel free to pile in their advice:
>>> 
>>>     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>> 
>>> y
>>> 
>>> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>>> I have been trying to build it by build-and-install script from two hous ago. With a few tweaks I can get it build everything before core(and async). I changed the last few lines of the script by discarding all the flags setting stuff, such that:
>>> 
>>>   esac
>>>   ./oasis.sh
>>>   ./configure --prefix ~/godi
>>>   make build
>>>   make install || true
>>>   popd
>>> done
>>> 
>>> But when building core there are some problems. First compiling `backtrace_stubs.c' failed by the #error directive on IA32 machines. This can be solved by just returning an caml_copy_string("Not implemented") for backtrace_get() on IA32 machines. 
>>> 
>>> Another problem is like this, which I don't know what to do with it:
>>> 
>>> error : unbound module Sexplib
>>> 
>>> 
>>> 
>>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>> 
>>>> Has anyone succeeded in building Core on a mac using the build-and-install script in the root?  When I try to run it, I get the following error:
>>>> 
>>>> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>>>> too many anonymous arguments: ./build-and-install -o j:h -l jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers -- --disable-linux --disable-posix-tim\
>>>> ers
>>>> ------ base/type-conv ------
>>>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>>>> W: Field XMETAType is set but matching plugin is not enabled.
>>>> I: File INSTALL has not changed, skipping
>>>> I: File Makefile has not changed, skipping
>>>> I: Regenerating file _tags
>>>> I: File configure has not changed, skipping
>>>> I: File lib/type-conv.odocl has not changed, skipping
>>>> I: File myocamlbuild.ml has not changed, skipping
>>>> I: File setup.ml has not changed, skipping
>>>> I: File syntax/META has not changed, skipping
>>>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>>>> I: Running command '/usr/local/bin/ocamlc.opt -config > '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib > '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>>> E: Don't know what to do with arguments: ''
>>> 
>>> 
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/0a7e8508/attachment.html>

From yury.sulsky at gmail.com  Thu Jan 26 14:03:23 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 26 Jan 2012 14:03:23 +0000
Subject: build-and-install
In-Reply-To: <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
Message-ID: <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>


Actually, we've managed to build and install all of the libraries on a
32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
which changes the build scripts to patch the generated setup.ml files
with support for packed libs. This way, we don't need to rely on a
patched version of OASIS being installed.

When these fixes hit the tree hosted on bitbucket, I hope that a
32-bit Linux system will be able to build the tree straight away.

But I agree, patching the generated setup.ml files is hacky and it
would be great if there were a released version of OASIS with support
for the Pack option.

Yury

On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> Why did you have to rebuild the setup.ml files? Were the ones included in
> the various library tarballs incorrect?
>
> Also Sylvain: would it be possible just to commit those patches that are
> outstanding against OASIS for pack support? They seem to work well enough,
> and lots of people seem to run into it...
>
> -Anil
>
> On 26 Jan 2012, at 13:23, Lin wrote:
>
> For those interested, I finally managed to build and install all libraries
> on 32-bit Linux. The steps are:
>
> 1)? build a patched version of oasis 0.2.1~alpha1 which can handle the
> `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
>
> 2) uninstall previously installed version of
> type-conv/sexplib/bin_prot/fieldslib , etc.
>
> 3)? uncomment all `Pack:true' in every oasis.sh script in the directory tree
> , if any
>
> 4)? patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>
> On 01/26/2012 12:31 AM, Lin wrote:
>
> Well, this seems result from the fact that the official released oasis
> 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
> which is used for generate correct .mlpack files.? There is a patch for
> handling this option which has not been merged into oasis trunk :
>
> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>
> I guess that in Jane Street you're using the patched version of oasis, so I
> can't get the library modules packed when trying to compile with the
> unpatched version.
>
> And what it looks like is exactly a module packing problem, i.e. I can `open
> Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because it's
> not packed at all.
>
>
> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>
> The sexplib error is a bit surprising. ?Did it successfully install sexplib
> before building core?
>
> I'm currently trying to build the packages by hand. ?Here's my latest
> problem:
>
> core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
> ../../build-common.sh: line 88: undefined: unbound variable
>
>
> If anyone knows how to get past that, I'd be much obliged...
>
> I started a page on the wiki for collecting hints on how to do the
> installation. ?There's not much there yet, but I'll fill things out as I
> figure them out. ?Others should feel free to pile in their advice:
>
> ? ? https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>
> y
>
> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>>
>> I have been trying to build it by build-and-install script from two hous
>> ago. With a few tweaks I can get it build everything before core(and async).
>> I changed the last few lines of the script by discarding all the flags
>> setting stuff, such that:
>>
>> ? esac
>> ? ./oasis.sh
>> ? ./configure --prefix ~/godi
>> ? make build
>> ? make install || true
>> ? popd
>> done
>>
>> But when building core there are some problems. First compiling
>> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
>> can be solved by just returning an caml_copy_string("Not implemented") for
>> backtrace_get() on IA32 machines.
>>
>> Another problem is like this, which I don't know what to do with it:
>>
>> error : unbound module Sexplib
>>
>>
>>
>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>
>> Has anyone succeeded in building Core on a mac using the build-and-install
>> script in the root? ?When I try to run it, I get the following error:
>>
>> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>> too many anonymous arguments: ./build-and-install -o j:h -l
>> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>> -- --disable-linux --disable-posix-tim\
>> ers
>> ------ base/type-conv ------
>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>> W: Field XMETAType is set but matching plugin is not enabled.
>> I: File INSTALL has not changed, skipping
>> I: File Makefile has not changed, skipping
>> I: Regenerating file _tags
>> I: File configure has not changed, skipping
>> I: File lib/type-conv.odocl has not changed, skipping
>> I: File myocamlbuild.ml has not changed, skipping
>> I: File setup.ml has not changed, skipping
>> I: File syntax/META has not changed, skipping
>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>> I: Running command '/usr/local/bin/ocamlc.opt -config >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>> E: Don't know what to do with arguments: ''
>>
>>
>
>
>
>


From anil at recoil.org  Thu Jan 26 16:11:41 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 26 Jan 2012 16:11:41 +0000
Subject: build-and-install
In-Reply-To: <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com> <4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com> <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org> <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com> <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
Message-ID: <0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>

Including the autogenerated files does make bisecting changes a bit of a pain in the future.

It would be much better just to get an OASIS release out, since anyone else creating OCaml libraries has this exact same issue.

-anil

On 26 Jan 2012, at 16:07, Yaron Minsky wrote:

> For what it's worth, we just pushed Yury's changes to the bitbucket repo, so those mac fixes should be in place.  I'll try to test them out myself at home tonight.
> 
> Yury, do you think it makes sense for us to include the setup.ml files we used directly in the repo?  I know it's a bit nasty to include generated files (the release tarballs of course should include them), but I wonder if it might make sense given the complexity of getting just the right version of Oasis installed...
> 
> y
> 
> On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> Actually, we've managed to build and install all of the libraries on a
> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
> which changes the build scripts to patch the generated setup.ml files
> with support for packed libs. This way, we don't need to rely on a
> patched version of OASIS being installed.
> 
> When these fixes hit the tree hosted on bitbucket, I hope that a
> 32-bit Linux system will be able to build the tree straight away.
> 
> But I agree, patching the generated setup.ml files is hacky and it
> would be great if there were a released version of OASIS with support
> for the Pack option.
> 
> Yury
> 
> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> > Why did you have to rebuild the setup.ml files? Were the ones included in
> > the various library tarballs incorrect?
> >
> > Also Sylvain: would it be possible just to commit those patches that are
> > outstanding against OASIS for pack support? They seem to work well enough,
> > and lots of people seem to run into it...
> >
> > -Anil
> >
> > On 26 Jan 2012, at 13:23, Lin wrote:
> >
> > For those interested, I finally managed to build and install all libraries
> > on 32-bit Linux. The steps are:
> >
> > 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the
> > `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
> >
> > 2) uninstall previously installed version of
> > type-conv/sexplib/bin_prot/fieldslib , etc.
> >
> > 3)  uncomment all `Pack:true' in every oasis.sh script in the directory tree
> > , if any
> >
> > 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
> >
> > On 01/26/2012 12:31 AM, Lin wrote:
> >
> > Well, this seems result from the fact that the official released oasis
> > 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
> > which is used for generate correct .mlpack files.  There is a patch for
> > handling this option which has not been merged into oasis trunk :
> >
> > http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
> >
> > I guess that in Jane Street you're using the patched version of oasis, so I
> > can't get the library modules packed when trying to compile with the
> > unpatched version.
> >
> > And what it looks like is exactly a module packing problem, i.e. I can `open
> > Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because it's
> > not packed at all.
> >
> >
> > On 01/21/2012 11:29 PM, Yaron Minsky wrote:
> >
> > The sexplib error is a bit surprising.  Did it successfully install sexplib
> > before building core?
> >
> > I'm currently trying to build the packages by hand.  Here's my latest
> > problem:
> >
> > core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
> > ../../build-common.sh: line 88: undefined: unbound variable
> >
> >
> > If anyone knows how to get past that, I'd be much obliged...
> >
> > I started a page on the wiki for collecting hints on how to do the
> > installation.  There's not much there yet, but I'll fill things out as I
> > figure them out.  Others should feel free to pile in their advice:
> >
> >     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
> >
> > y
> >
> > On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
> >>
> >> I have been trying to build it by build-and-install script from two hous
> >> ago. With a few tweaks I can get it build everything before core(and async).
> >> I changed the last few lines of the script by discarding all the flags
> >> setting stuff, such that:
> >>
> >>   esac
> >>   ./oasis.sh
> >>   ./configure --prefix ~/godi
> >>   make build
> >>   make install || true
> >>   popd
> >> done
> >>
> >> But when building core there are some problems. First compiling
> >> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
> >> can be solved by just returning an caml_copy_string("Not implemented") for
> >> backtrace_get() on IA32 machines.
> >>
> >> Another problem is like this, which I don't know what to do with it:
> >>
> >> error : unbound module Sexplib
> >>
> >>
> >>
> >> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
> >>
> >> Has anyone succeeded in building Core on a mac using the build-and-install
> >> script in the root?  When I try to run it, I get the following error:
> >>
> >> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> >> too many anonymous arguments: ./build-and-install -o j:h -l
> >> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
> >> -- --disable-linux --disable-posix-tim\
> >> ers
> >> ------ base/type-conv ------
> >> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> >> W: Field XMETAType is set but matching plugin is not enabled.
> >> I: File INSTALL has not changed, skipping
> >> I: File Makefile has not changed, skipping
> >> I: Regenerating file _tags
> >> I: File configure has not changed, skipping
> >> I: File lib/type-conv.odocl has not changed, skipping
> >> I: File myocamlbuild.ml has not changed, skipping
> >> I: File setup.ml has not changed, skipping
> >> I: File syntax/META has not changed, skipping
> >> I: File syntax/pa_type_conv.mllib has not changed, skipping
> >> I: Running command '/usr/local/bin/ocamlc.opt -config >
> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> >> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> >> E: Don't know what to do with arguments: ''
> >>
> >>
> >
> >
> >
> >
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/2f2bfb33/attachment.html>

From anil at recoil.org  Thu Jan 26 16:15:48 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 26 Jan 2012 16:15:48 +0000
Subject: build-and-install
In-Reply-To: <0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com> <4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com> <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org> <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com> <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com> <0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
Message-ID: <802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>

I'm just trying this all again on my Mac, with OASIS-trunk + the pack patches.

What is:

  XMETAType:          syntax

...intended for in type-conv/_oasis (pa_type_conv)?

It gives me an unknown plugin warning, which is hopefully not important.

-Anil

On 26 Jan 2012, at 16:11, Anil Madhavapeddy wrote:

> Including the autogenerated files does make bisecting changes a bit of a pain in the future.
> 
> It would be much better just to get an OASIS release out, since anyone else creating OCaml libraries has this exact same issue.
> 
> -anil
> 
> On 26 Jan 2012, at 16:07, Yaron Minsky wrote:
> 
>> For what it's worth, we just pushed Yury's changes to the bitbucket repo, so those mac fixes should be in place.  I'll try to test them out myself at home tonight.
>> 
>> Yury, do you think it makes sense for us to include the setup.ml files we used directly in the repo?  I know it's a bit nasty to include generated files (the release tarballs of course should include them), but I wonder if it might make sense given the complexity of getting just the right version of Oasis installed...
>> 
>> y
>> 
>> On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>> Actually, we've managed to build and install all of the libraries on a
>> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
>> which changes the build scripts to patch the generated setup.ml files
>> with support for packed libs. This way, we don't need to rely on a
>> patched version of OASIS being installed.
>> 
>> When these fixes hit the tree hosted on bitbucket, I hope that a
>> 32-bit Linux system will be able to build the tree straight away.
>> 
>> But I agree, patching the generated setup.ml files is hacky and it
>> would be great if there were a released version of OASIS with support
>> for the Pack option.
>> 
>> Yury
>> 
>> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> > Why did you have to rebuild the setup.ml files? Were the ones included in
>> > the various library tarballs incorrect?
>> >
>> > Also Sylvain: would it be possible just to commit those patches that are
>> > outstanding against OASIS for pack support? They seem to work well enough,
>> > and lots of people seem to run into it...
>> >
>> > -Anil
>> >
>> > On 26 Jan 2012, at 13:23, Lin wrote:
>> >
>> > For those interested, I finally managed to build and install all libraries
>> > on 32-bit Linux. The steps are:
>> >
>> > 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the
>> > `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
>> >
>> > 2) uninstall previously installed version of
>> > type-conv/sexplib/bin_prot/fieldslib , etc.
>> >
>> > 3)  uncomment all `Pack:true' in every oasis.sh script in the directory tree
>> > , if any
>> >
>> > 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>> >
>> > On 01/26/2012 12:31 AM, Lin wrote:
>> >
>> > Well, this seems result from the fact that the official released oasis
>> > 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
>> > which is used for generate correct .mlpack files.  There is a patch for
>> > handling this option which has not been merged into oasis trunk :
>> >
>> > http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>> >
>> > I guess that in Jane Street you're using the patched version of oasis, so I
>> > can't get the library modules packed when trying to compile with the
>> > unpatched version.
>> >
>> > And what it looks like is exactly a module packing problem, i.e. I can `open
>> > Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because it's
>> > not packed at all.
>> >
>> >
>> > On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>> >
>> > The sexplib error is a bit surprising.  Did it successfully install sexplib
>> > before building core?
>> >
>> > I'm currently trying to build the packages by hand.  Here's my latest
>> > problem:
>> >
>> > core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>> > ../../build-common.sh: line 88: undefined: unbound variable
>> >
>> >
>> > If anyone knows how to get past that, I'd be much obliged...
>> >
>> > I started a page on the wiki for collecting hints on how to do the
>> > installation.  There's not much there yet, but I'll fill things out as I
>> > figure them out.  Others should feel free to pile in their advice:
>> >
>> >     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>> >
>> > y
>> >
>> > On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>> >>
>> >> I have been trying to build it by build-and-install script from two hous
>> >> ago. With a few tweaks I can get it build everything before core(and async).
>> >> I changed the last few lines of the script by discarding all the flags
>> >> setting stuff, such that:
>> >>
>> >>   esac
>> >>   ./oasis.sh
>> >>   ./configure --prefix ~/godi
>> >>   make build
>> >>   make install || true
>> >>   popd
>> >> done
>> >>
>> >> But when building core there are some problems. First compiling
>> >> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
>> >> can be solved by just returning an caml_copy_string("Not implemented") for
>> >> backtrace_get() on IA32 machines.
>> >>
>> >> Another problem is like this, which I don't know what to do with it:
>> >>
>> >> error : unbound module Sexplib
>> >>
>> >>
>> >>
>> >> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>> >>
>> >> Has anyone succeeded in building Core on a mac using the build-and-install
>> >> script in the root?  When I try to run it, I get the following error:
>> >>
>> >> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>> >> too many anonymous arguments: ./build-and-install -o j:h -l
>> >> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>> >> -- --disable-linux --disable-posix-tim\
>> >> ers
>> >> ------ base/type-conv ------
>> >> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>> >> W: Field XMETAType is set but matching plugin is not enabled.
>> >> I: File INSTALL has not changed, skipping
>> >> I: File Makefile has not changed, skipping
>> >> I: Regenerating file _tags
>> >> I: File configure has not changed, skipping
>> >> I: File lib/type-conv.odocl has not changed, skipping
>> >> I: File myocamlbuild.ml has not changed, skipping
>> >> I: File setup.ml has not changed, skipping
>> >> I: File syntax/META has not changed, skipping
>> >> I: File syntax/pa_type_conv.mllib has not changed, skipping
>> >> I: Running command '/usr/local/bin/ocamlc.opt -config >
>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>> >> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>> >> E: Don't know what to do with arguments: ''
>> >>
>> >>
>> >
>> >
>> >
>> >
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/50293840/attachment.html>

From yury.sulsky at gmail.com  Thu Jan 26 16:34:50 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 26 Jan 2012 16:34:50 +0000
Subject: build-and-install
In-Reply-To: <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
Message-ID: <CAEDxudwJ6f5F3Ef6YPW75bJ=z9jFUrM6NsL1ijCjMJpcv8wAOQ@mail.gmail.com>


On Thu, Jan 26, 2012 at 4:07 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Yury, do you think it makes sense for us to include the setup.ml files we
> used directly in the repo? ?I know it's a bit nasty to include generated
> files (the release tarballs of course should include them), but I wonder if
> it might make sense given the complexity of getting just the right version
> of Oasis installed...

Hmm, I'm not sure. The oasis.sh files that are currently in the repo
generate different _oasis files depending on the options passed in and
what the platform supports. I think that the "setup.ml" files
themselves should be the same across all of the platforms, but the
other files differ, so people would still need to run oasis.

But now the right version of OASIS should be the 0.2.0, which should
be easy to get and install.


From yury.sulsky at gmail.com  Thu Jan 26 16:41:54 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 26 Jan 2012 16:41:54 +0000
Subject: build-and-install
In-Reply-To: <802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
Message-ID: <CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>


That tells oasis to add some flags to the library's META file, which
in turn tells ocamlfind that the package should be loaded as a syntax
extension: http://projects.camlcity.org/projects/dl/findlib-1.2.6/doc/guide-html/x412.html

On Thu, Jan 26, 2012 at 4:15 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> I'm just trying this all again on my Mac, with OASIS-trunk + the pack
> patches.
>
> What is:
>
> ? XMETAType: ? ? ? ? ?syntax
>
> ...intended for in type-conv/_oasis (pa_type_conv)?
>
> It gives me an unknown plugin warning, which is hopefully not important.
>
> -Anil
>
> On 26 Jan 2012, at 16:11, Anil Madhavapeddy wrote:
>
> Including the autogenerated files does make bisecting changes a bit of a
> pain in the future.
>
> It would be much better just to get an OASIS release out, since anyone else
> creating OCaml libraries has this exact same issue.
>
> -anil
>
> On 26 Jan 2012, at 16:07, Yaron Minsky wrote:
>
> For what it's worth, we just pushed Yury's changes to the bitbucket repo, so
> those mac fixes should be in place. ?I'll try to test them out myself at
> home tonight.
>
> Yury, do you think it makes sense for us to include the setup.ml files we
> used directly in the repo? ?I know it's a bit nasty to include generated
> files (the release tarballs of course should include them), but I wonder if
> it might make sense given the complexity of getting just the right version
> of Oasis installed...
>
> y
>
> On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>>
>> Actually, we've managed to build and install all of the libraries on a
>> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
>> which changes the build scripts to patch the generated setup.ml files
>> with support for packed libs. This way, we don't need to rely on a
>> patched version of OASIS being installed.
>>
>> When these fixes hit the tree hosted on bitbucket, I hope that a
>> 32-bit Linux system will be able to build the tree straight away.
>>
>> But I agree, patching the generated setup.ml files is hacky and it
>> would be great if there were a released version of OASIS with support
>> for the Pack option.
>>
>> Yury
>>
>> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org>
>> wrote:
>> > Why did you have to rebuild the setup.ml files? Were the ones included
>> > in
>> > the various library tarballs incorrect?
>> >
>> > Also Sylvain: would it be possible just to commit those patches that are
>> > outstanding against OASIS for pack support? They seem to work well
>> > enough,
>> > and lots of people seem to run into it...
>> >
>> > -Anil
>> >
>> > On 26 Jan 2012, at 13:23, Lin wrote:
>> >
>> > For those interested, I finally managed to build and install all
>> > libraries
>> > on 32-bit Linux. The steps are:
>> >
>> > 1)? build a patched version of oasis 0.2.1~alpha1 which can handle the
>> > `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le
>> > Gall)
>> >
>> > 2) uninstall previously installed version of
>> > type-conv/sexplib/bin_prot/fieldslib , etc.
>> >
>> > 3)? uncomment all `Pack:true' in every oasis.sh script in the directory
>> > tree
>> > , if any
>> >
>> > 4)? patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>> >
>> > On 01/26/2012 12:31 AM, Lin wrote:
>> >
>> > Well, this seems result from the fact that the official released oasis
>> > 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
>> > which is used for generate correct .mlpack files.? There is a patch for
>> > handling this option which has not been merged into oasis trunk :
>> >
>> >
>> > http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>> >
>> > I guess that in Jane Street you're using the patched version of oasis,
>> > so I
>> > can't get the library modules packed when trying to compile with the
>> > unpatched version.
>> >
>> > And what it looks like is exactly a module packing problem, i.e. I can
>> > `open
>> > Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because
>> > it's
>> > not packed at all.
>> >
>> >
>> > On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>> >
>> > The sexplib error is a bit surprising. ?Did it successfully install
>> > sexplib
>> > before building core?
>> >
>> > I'm currently trying to build the packages by hand. ?Here's my latest
>> > problem:
>> >
>> > core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>> > ../../build-common.sh: line 88: undefined: unbound variable
>> >
>> >
>> > If anyone knows how to get past that, I'd be much obliged...
>> >
>> > I started a page on the wiki for collecting hints on how to do the
>> > installation. ?There's not much there yet, but I'll fill things out as I
>> > figure them out. ?Others should feel free to pile in their advice:
>> >
>> > ? ? https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>> >
>> > y
>> >
>> > On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>> >>
>> >> I have been trying to build it by build-and-install script from two
>> >> hous
>> >> ago. With a few tweaks I can get it build everything before core(and
>> >> async).
>> >> I changed the last few lines of the script by discarding all the flags
>> >> setting stuff, such that:
>> >>
>> >> ? esac
>> >> ? ./oasis.sh
>> >> ? ./configure --prefix ~/godi
>> >> ? make build
>> >> ? make install || true
>> >> ? popd
>> >> done
>> >>
>> >> But when building core there are some problems. First compiling
>> >> `backtrace_stubs.c' failed by the #error directive on IA32 machines.
>> >> This
>> >> can be solved by just returning an caml_copy_string("Not implemented")
>> >> for
>> >> backtrace_get() on IA32 machines.
>> >>
>> >> Another problem is like this, which I don't know what to do with it:
>> >>
>> >> error : unbound module Sexplib
>> >>
>> >>
>> >>
>> >> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>> >>
>> >> Has anyone succeeded in building Core on a mac using the
>> >> build-and-install
>> >> script in the root? ?When I try to run it, I get the following error:
>> >>
>> >> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>> >> too many anonymous arguments: ./build-and-install -o j:h -l
>> >>
>> >> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>> >> -- --disable-linux --disable-posix-tim\
>> >> ers
>> >> ------ base/type-conv ------
>> >> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>> >> W: Field XMETAType is set but matching plugin is not enabled.
>> >> I: File INSTALL has not changed, skipping
>> >> I: File Makefile has not changed, skipping
>> >> I: Regenerating file _tags
>> >> I: File configure has not changed, skipping
>> >> I: File lib/type-conv.odocl has not changed, skipping
>> >> I: File myocamlbuild.ml has not changed, skipping
>> >> I: File setup.ml has not changed, skipping
>> >> I: File syntax/META has not changed, skipping
>> >> I: File syntax/pa_type_conv.mllib has not changed, skipping
>> >> I: Running command '/usr/local/bin/ocamlc.opt -config >
>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>> >> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>> >> E: Don't know what to do with arguments: ''
>> >>
>> >>
>> >
>> >
>> >
>> >
>
>
>
>


From yury.sulsky at gmail.com  Thu Jan 26 16:42:58 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 26 Jan 2012 16:42:58 +0000
Subject: build-and-install
In-Reply-To: <CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
Message-ID: <CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>


When you run oasis, could you make sure that the generated META file
contain these lines?

archive(syntax,preprocessor) = "pa_type_conv.cma"
archive(syntax,toploop) = "pa_type_conv.cma"

Thanks,
Yury

On Thu, Jan 26, 2012 at 4:41 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> That tells oasis to add some flags to the library's META file, which
> in turn tells ocamlfind that the package should be loaded as a syntax
> extension: http://projects.camlcity.org/projects/dl/findlib-1.2.6/doc/guide-html/x412.html
>
> On Thu, Jan 26, 2012 at 4:15 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> I'm just trying this all again on my Mac, with OASIS-trunk + the pack
>> patches.
>>
>> What is:
>>
>> ? XMETAType: ? ? ? ? ?syntax
>>
>> ...intended for in type-conv/_oasis (pa_type_conv)?
>>
>> It gives me an unknown plugin warning, which is hopefully not important.
>>
>> -Anil
>>
>> On 26 Jan 2012, at 16:11, Anil Madhavapeddy wrote:
>>
>> Including the autogenerated files does make bisecting changes a bit of a
>> pain in the future.
>>
>> It would be much better just to get an OASIS release out, since anyone else
>> creating OCaml libraries has this exact same issue.
>>
>> -anil
>>
>> On 26 Jan 2012, at 16:07, Yaron Minsky wrote:
>>
>> For what it's worth, we just pushed Yury's changes to the bitbucket repo, so
>> those mac fixes should be in place. ?I'll try to test them out myself at
>> home tonight.
>>
>> Yury, do you think it makes sense for us to include the setup.ml files we
>> used directly in the repo? ?I know it's a bit nasty to include generated
>> files (the release tarballs of course should include them), but I wonder if
>> it might make sense given the complexity of getting just the right version
>> of Oasis installed...
>>
>> y
>>
>> On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>>>
>>> Actually, we've managed to build and install all of the libraries on a
>>> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
>>> which changes the build scripts to patch the generated setup.ml files
>>> with support for packed libs. This way, we don't need to rely on a
>>> patched version of OASIS being installed.
>>>
>>> When these fixes hit the tree hosted on bitbucket, I hope that a
>>> 32-bit Linux system will be able to build the tree straight away.
>>>
>>> But I agree, patching the generated setup.ml files is hacky and it
>>> would be great if there were a released version of OASIS with support
>>> for the Pack option.
>>>
>>> Yury
>>>
>>> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org>
>>> wrote:
>>> > Why did you have to rebuild the setup.ml files? Were the ones included
>>> > in
>>> > the various library tarballs incorrect?
>>> >
>>> > Also Sylvain: would it be possible just to commit those patches that are
>>> > outstanding against OASIS for pack support? They seem to work well
>>> > enough,
>>> > and lots of people seem to run into it...
>>> >
>>> > -Anil
>>> >
>>> > On 26 Jan 2012, at 13:23, Lin wrote:
>>> >
>>> > For those interested, I finally managed to build and install all
>>> > libraries
>>> > on 32-bit Linux. The steps are:
>>> >
>>> > 1)? build a patched version of oasis 0.2.1~alpha1 which can handle the
>>> > `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le
>>> > Gall)
>>> >
>>> > 2) uninstall previously installed version of
>>> > type-conv/sexplib/bin_prot/fieldslib , etc.
>>> >
>>> > 3)? uncomment all `Pack:true' in every oasis.sh script in the directory
>>> > tree
>>> > , if any
>>> >
>>> > 4)? patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>>> >
>>> > On 01/26/2012 12:31 AM, Lin wrote:
>>> >
>>> > Well, this seems result from the fact that the official released oasis
>>> > 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
>>> > which is used for generate correct .mlpack files.? There is a patch for
>>> > handling this option which has not been merged into oasis trunk :
>>> >
>>> >
>>> > http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>>> >
>>> > I guess that in Jane Street you're using the patched version of oasis,
>>> > so I
>>> > can't get the library modules packed when trying to compile with the
>>> > unpatched version.
>>> >
>>> > And what it looks like is exactly a module packing problem, i.e. I can
>>> > `open
>>> > Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because
>>> > it's
>>> > not packed at all.
>>> >
>>> >
>>> > On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>>> >
>>> > The sexplib error is a bit surprising. ?Did it successfully install
>>> > sexplib
>>> > before building core?
>>> >
>>> > I'm currently trying to build the packages by hand. ?Here's my latest
>>> > problem:
>>> >
>>> > core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>>> > ../../build-common.sh: line 88: undefined: unbound variable
>>> >
>>> >
>>> > If anyone knows how to get past that, I'd be much obliged...
>>> >
>>> > I started a page on the wiki for collecting hints on how to do the
>>> > installation. ?There's not much there yet, but I'll fill things out as I
>>> > figure them out. ?Others should feel free to pile in their advice:
>>> >
>>> > ? ? https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>> >
>>> > y
>>> >
>>> > On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>>> >>
>>> >> I have been trying to build it by build-and-install script from two
>>> >> hous
>>> >> ago. With a few tweaks I can get it build everything before core(and
>>> >> async).
>>> >> I changed the last few lines of the script by discarding all the flags
>>> >> setting stuff, such that:
>>> >>
>>> >> ? esac
>>> >> ? ./oasis.sh
>>> >> ? ./configure --prefix ~/godi
>>> >> ? make build
>>> >> ? make install || true
>>> >> ? popd
>>> >> done
>>> >>
>>> >> But when building core there are some problems. First compiling
>>> >> `backtrace_stubs.c' failed by the #error directive on IA32 machines.
>>> >> This
>>> >> can be solved by just returning an caml_copy_string("Not implemented")
>>> >> for
>>> >> backtrace_get() on IA32 machines.
>>> >>
>>> >> Another problem is like this, which I don't know what to do with it:
>>> >>
>>> >> error : unbound module Sexplib
>>> >>
>>> >>
>>> >>
>>> >> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>> >>
>>> >> Has anyone succeeded in building Core on a mac using the
>>> >> build-and-install
>>> >> script in the root? ?When I try to run it, I get the following error:
>>> >>
>>> >> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>>> >> too many anonymous arguments: ./build-and-install -o j:h -l
>>> >>
>>> >> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>> >> -- --disable-linux --disable-posix-tim\
>>> >> ers
>>> >> ------ base/type-conv ------
>>> >> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>>> >> W: Field XMETAType is set but matching plugin is not enabled.
>>> >> I: File INSTALL has not changed, skipping
>>> >> I: File Makefile has not changed, skipping
>>> >> I: Regenerating file _tags
>>> >> I: File configure has not changed, skipping
>>> >> I: File lib/type-conv.odocl has not changed, skipping
>>> >> I: File myocamlbuild.ml has not changed, skipping
>>> >> I: File setup.ml has not changed, skipping
>>> >> I: File syntax/META has not changed, skipping
>>> >> I: File syntax/pa_type_conv.mllib has not changed, skipping
>>> >> I: Running command '/usr/local/bin/ocamlc.opt -config >
>>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>> >> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>> >> E: Don't know what to do with arguments: ''
>>> >>
>>> >>
>>> >
>>> >
>>> >
>>> >
>>
>>
>>
>>


From markus.mottl at gmail.com  Fri Jan 27 01:51:28 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 26 Jan 2012 20:51:28 -0500
Subject: build-and-install
In-Reply-To: <CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
Message-ID: <CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>


Hi everybody,

I have managed to completely build all libraries on my Mac using my
fork of ocaml-core (ocaml-core-mmottl).  This fork incorporates all
changes from the previously "official" releases of type-conv,
bin-prot, and sexplib on OCaml Forge.

Sadly, there still seem to be issues with Oasis (I'm using 0.2.0, the
one in Godi) that lead to incorrect link flags.  It is hence still not
possible to actually build applications.  Sylvain, could you please
look into this?  It seems the library linker (ocamlc/ocamlopt -a) gets
an extra library argument that shouldn't be there.  E.g.
lib/libbin_prot.a in the following build log entry of bin-prot:

  ocamlfind ocamlopt -a -cclib -lbin_prot lib/bin_prot.cmx
lib/libbin_prot.a -o lib/bin_prot.cmxa

I think it is related to the following myocamlbuild.ml lines:

----------
  (* When ocaml link something that use the C library, then one
      need that file to be up to date.
    *)
    dep  ["link"; "ocaml"; "use_lib"^lib]
      [dir/"lib"^lib^"."^(!Options.ext_lib)];
----------

"link" used to be "compile" in a different version of Oasis, not sure
which one.  It seemed to work there.  It would be great if we could
all agree on the Oasis version to use, preferably the one in Godi,
which is easy to install.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri Jan 27 02:07:27 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 26 Jan 2012 21:07:27 -0500
Subject: Unit tests
Message-ID: <CAP_800q=cGW9LpqGdvNmOh6okwknfKFaG6vWtDX34FokvDY2oA@mail.gmail.com>


Hi,

I've just noticed that there are no unit tests for bin-prot and
sexplib anymore.  They used to be in lib_test subdirectories.  Since
especially the ones for bin-prot are of great importance, I wondered
how you want to test ocaml-core libraries?  Are there any plans to add
those test suites back in later again?

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Fri Jan 27 02:10:19 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 26 Jan 2012 21:10:19 -0500
Subject: Unit tests
In-Reply-To: <CAP_800q=cGW9LpqGdvNmOh6okwknfKFaG6vWtDX34FokvDY2oA@mail.gmail.com>
References: <CAP_800q=cGW9LpqGdvNmOh6okwknfKFaG6vWtDX34FokvDY2oA@mail.gmail.com>
Message-ID: <CACLX4jSnA6U7sqZ3JHiOPhkH7OzKJtYScC5xrmEhq9y39opm+w@mail.gmail.com>

Sorry.  The tests are all still in existence, but presumably not exported
by our script.  Yury, can you get the lib-test directories added?
On Jan 26, 2012 9:07 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:

> Hi,
>
> I've just noticed that there are no unit tests for bin-prot and
> sexplib anymore.  They used to be in lib_test subdirectories.  Since
> especially the ones for bin-prot are of great importance, I wondered
> how you want to test ocaml-core libraries?  Are there any plans to add
> those test suites back in later again?
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/38c5a463/attachment.html>

From mysnowls at 163.com  Thu Jan 26 13:23:14 2012
From: mysnowls at 163.com (Lin)
Date: Thu, 26 Jan 2012 21:23:14 +0800
Subject: build-and-install
In-Reply-To: <4F202E5A.9030601@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com>
Message-ID: <4F2153C2.8070409@163.com>

For those interested, I finally managed to build and install all 
libraries on 32-bit Linux. The steps are:

1)  build a patched version of oasis 0.2.1~alpha1 which can handle the 
`Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)

2) uninstall previously installed version of 
type-conv/sexplib/bin_prot/fieldslib , etc.

3)  uncomment all `Pack:true' in every oasis.sh script in the directory 
tree , if any

4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines

On 01/26/2012 12:31 AM, Lin wrote:
> Well, this seems result from the fact that the official released oasis 
> 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis 
> file, which is used for generate correct .mlpack files.  There is a 
> patch for handling this option which has not been merged into oasis 
> trunk :
>
> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>
> I guess that in Jane Street you're using the patched version of oasis, 
> so I can't get the library modules packed when trying to compile with 
> the unpatched version.
>
> And what it looks like is exactly a module packing problem, i.e. I can 
> `open Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' 
> because it's not packed at all.
>
>
> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>> The sexplib error is a bit surprising.  Did it successfully install 
>> sexplib before building core?
>>
>> I'm currently trying to build the packages by hand.  Here's my latest 
>> problem:
>>
>>     core $ ./oasis.sh && ocaml setup.ml <http://setup.ml> -build &&
>>     ocaml setup.ml <http://setup.ml> -install
>>     ../../build-common.sh: line 88: undefined: unbound variable
>>
>>
>> If anyone knows how to get past that, I'd be much obliged...
>>
>> I started a page on the wiki for collecting hints on how to do the 
>> installation.  There's not much there yet, but I'll fill things out 
>> as I figure them out.  Others should feel free to pile in their advice:
>>
>> https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>
>> y
>>
>> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com 
>> <mailto:mysnowls at 163.com>> wrote:
>>
>>     I have been trying to build it by build-and-install script from
>>     two hous ago. With a few tweaks I can get it build everything
>>     before core(and async). I changed the last few lines of the
>>     script by discarding all the flags setting stuff, such that:
>>
>>       esac
>>       ./oasis.sh
>>       ./configure --prefix ~/godi
>>       make build
>>       make install || true
>>       popd
>>     done
>>
>>     But when building core there are some problems. First compiling
>>     `backtrace_stubs.c' failed by the #error directive on IA32
>>     machines. This can be solved by just returning an
>>     caml_copy_string("Not implemented") for backtrace_get() on IA32
>>     machines.
>>
>>     Another problem is like this, which I don't know what to do with it:
>>
>>     error : unbound module Sexplib
>>
>>
>>
>>     On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>     Has anyone succeeded in building Core on a mac using the
>>>     build-and-install script in the root?  When I try to run it, I
>>>     get the following error:
>>>
>>>     ocaml-core $ ./build-and-install --disable-linux
>>>     --disable-posix-timers
>>>     too many anonymous arguments: ./build-and-install -o j:h -l
>>>     jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>>     -- --disable-linux --disable-posix-tim\
>>>     ers
>>>     ------ base/type-conv ------
>>>     ~/Documents/code/ocaml-core/base/type-conv
>>>     ~/Documents/code/ocaml-core
>>>     W: Field XMETAType is set but matching plugin is not enabled.
>>>     I: File INSTALL has not changed, skipping
>>>     I: File Makefile has not changed, skipping
>>>     I: Regenerating file _tags
>>>     I: File configure has not changed, skipping
>>>     I: File lib/type-conv.odocl has not changed, skipping
>>>     I: File myocamlbuild.ml <http://myocamlbuild.ml> has not
>>>     changed, skipping
>>>     I: File setup.ml <http://setup.ml> has not changed, skipping
>>>     I: File syntax/META has not changed, skipping
>>>     I: File syntax/pa_type_conv.mllib has not changed, skipping
>>>     I: Running command '/usr/local/bin/ocamlc.opt -config >
>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>>     I: Running command '/usr/local/bin/ocamlfind query -format %v
>>>     findlib >
>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>>     E: Don't know what to do with arguments: ''
>>
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/dcbaebaa/attachment.html>

From markus.mottl at gmail.com  Fri Jan 27 02:29:16 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 26 Jan 2012 21:29:16 -0500
Subject: Documentation
Message-ID: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>


Hi,

the documentation (doc) directory in sexplib was apparently removed.
I found an intro.txt file in the lib-directory instead.  I wasn't
quite sure what format it was, but the contents definitely seemed out
of date.  I have hence re-added the more recent doc-directory with
LaTeX documentation in my fork.  Please let me know what your plans
are wrt. documentation (manuals, not source) so that we can have a
unified approach.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Fri Jan 27 02:53:02 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 26 Jan 2012 21:53:02 -0500
Subject: Documentation
In-Reply-To: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>
References: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>
Message-ID: <CACLX4jQPm94wXHTa93wZvL_JdpP9whEP6cTmmKnVbG+DNn_QJg@mail.gmail.com>

On Thu, Jan 26, 2012 at 9:29 PM, Markus Mottl <markus.mottl at gmail.com>wrote:

> Hi,
>
> the documentation (doc) directory in sexplib was apparently removed.
> I found an intro.txt file in the lib-directory instead.  I wasn't
> quite sure what format it was, but the contents definitely seemed out
> of date.  I have hence re-added the more recent doc-directory with
> LaTeX documentation in my fork.  Please let me know what your plans
> are wrt. documentation (manuals, not source) so that we can have a
> unified approach.
>

I looked at our internal tree, and indeed there is no sexplib/doc directory
in our internal tree, which surprises me.    I'm certainly happy to have it
back.

We've moved most of our internal documentation to markdown, which I think
is generally easier to manage and deal with, and easier to read as
plain-text.  And it generates perfectly usable latex output as well.

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/0c9da6ff/attachment.html>

From mysnowls at 163.com  Thu Jan 26 13:55:22 2012
From: mysnowls at 163.com (Lin)
Date: Thu, 26 Jan 2012 21:55:22 +0800
Subject: build-and-install
In-Reply-To: <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com> <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
Message-ID: <4F215B4A.9040009@163.com>

There is no setup.ml files in the current Bitbucket repo of Core, only 
an `oasis.sh' script for each specific library, so you need to generate 
all the configure files yourself.

I don't know whether Sylvain subscribed to this list, but I got help 
from him via email.  The whole story is:

There is actually a patch for the 0.2.1~alpha1 release to handle the 
pack option, contributed by Adrien Nader, who told me about this on 
#ocaml IRC channel.

http://www.forge.ocamlcore.org/tracker/download.php/54/294/573/151/0001-Apply-for-pack-patch-and-make-tests-work.patch

The patch works fine, except for only one problem, so I emailed Sylvain 
for help, who told me that it is brought by some incompatiablity with 
the newest version of ounit, and told me to apply this patch he pushed:

http://darcs.ocamlcore.org/cgi-bin/darcsweb.cgi?r=oasis/oasis;a=commit;h=20120123214332-a43a9-10c8acd791c07a240a69f022d2d13565dd5a7e39.gz

There are indeed only three lines to change, so I modified it by hand, 
and everything is DONE.


On 01/26/2012 09:29 PM, Anil Madhavapeddy wrote:
> Why did you have to rebuild the setup.ml files? Were the ones included 
> in the various library tarballs incorrect?
>
> Also Sylvain: would it be possible just to commit those patches that 
> are outstanding against OASIS for pack support? They seem to work well 
> enough, and lots of people seem to run into it...
>
> -Anil
>
> On 26 Jan 2012, at 13:23, Lin wrote:
>
>> For those interested, I finally managed to build and install all 
>> libraries on 32-bit Linux. The steps are:
>>
>> 1)  build a patched version of oasis 0.2.1~alpha1 which can handle 
>> the `Pack:true' option (thanks to help from Adrien Nader and Sylvain 
>> Le Gall)
>>
>> 2) uninstall previously installed version of 
>> type-conv/sexplib/bin_prot/fieldslib , etc.
>>
>> 3)  uncomment all `Pack:true' in every oasis.sh script in the 
>> directory tree , if any
>>
>> 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>>
>> On 01/26/2012 12:31 AM, Lin wrote:
>>> Well, this seems result from the fact that the official released 
>>> oasis 0.2.1~alpha1 does not handle the `Pack:true' option in the 
>>> _oasis file, which is used for generate correct .mlpack files.  
>>> There is a patch for handling this option which has not been merged 
>>> into oasis trunk :
>>>
>>> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>>>
>>> I guess that in Jane Street you're using the patched version of 
>>> oasis, so I can't get the library modules packed when trying to 
>>> compile with the unpatched version.
>>>
>>> And what it looks like is exactly a module packing problem, i.e. I 
>>> can `open Sexp', which should be `Sexplib.Sexp', and can't `open 
>>> Sexplib' because it's not packed at all.
>>>
>>>
>>> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>>>> The sexplib error is a bit surprising.  Did it successfully install 
>>>> sexplib before building core?
>>>>
>>>> I'm currently trying to build the packages by hand.  Here's my 
>>>> latest problem:
>>>>
>>>>     core $ ./oasis.sh && ocaml setup.ml <http://setup.ml/> -build
>>>>     && ocaml setup.ml <http://setup.ml/> -install
>>>>     ../../build-common.sh: line 88: undefined: unbound variable
>>>>
>>>>
>>>> If anyone knows how to get past that, I'd be much obliged...
>>>>
>>>> I started a page on the wiki for collecting hints on how to do the 
>>>> installation.  There's not much there yet, but I'll fill things out 
>>>> as I figure them out.  Others should feel free to pile in their advice:
>>>>
>>>> https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>>>
>>>> y
>>>>
>>>> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com 
>>>> <mailto:mysnowls at 163.com>> wrote:
>>>>
>>>>     I have been trying to build it by build-and-install script from
>>>>     two hous ago. With a few tweaks I can get it build everything
>>>>     before core(and async). I changed the last few lines of the
>>>>     script by discarding all the flags setting stuff, such that:
>>>>
>>>>       esac
>>>>       ./oasis.sh
>>>>       ./configure --prefix ~/godi
>>>>       make build
>>>>       make install || true
>>>>       popd
>>>>     done
>>>>
>>>>     But when building core there are some problems. First compiling
>>>>     `backtrace_stubs.c' failed by the #error directive on IA32
>>>>     machines. This can be solved by just returning an
>>>>     caml_copy_string("Not implemented") for backtrace_get() on IA32
>>>>     machines.
>>>>
>>>>     Another problem is like this, which I don't know what to do
>>>>     with it:
>>>>
>>>>     error : unbound module Sexplib
>>>>
>>>>
>>>>
>>>>     On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>>>     Has anyone succeeded in building Core on a mac using the
>>>>>     build-and-install script in the root?  When I try to run it, I
>>>>>     get the following error:
>>>>>
>>>>>     ocaml-core $ ./build-and-install --disable-linux
>>>>>     --disable-posix-timers
>>>>>     too many anonymous arguments: ./build-and-install -o j:h -l
>>>>>     jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>>>>     -- --disable-linux --disable-posix-tim\
>>>>>     ers
>>>>>     ------ base/type-conv ------
>>>>>     ~/Documents/code/ocaml-core/base/type-conv
>>>>>     ~/Documents/code/ocaml-core
>>>>>     W: Field XMETAType is set but matching plugin is not enabled.
>>>>>     I: File INSTALL has not changed, skipping
>>>>>     I: File Makefile has not changed, skipping
>>>>>     I: Regenerating file _tags
>>>>>     I: File configure has not changed, skipping
>>>>>     I: File lib/type-conv.odocl has not changed, skipping
>>>>>     I: File myocamlbuild.ml <http://myocamlbuild.ml/> has not
>>>>>     changed, skipping
>>>>>     I: File setup.ml <http://setup.ml/> has not changed, skipping
>>>>>     I: File syntax/META has not changed, skipping
>>>>>     I: File syntax/pa_type_conv.mllib has not changed, skipping
>>>>>     I: Running command '/usr/local/bin/ocamlc.opt -config >
>>>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>>>>     I: Running command '/usr/local/bin/ocamlfind query -format %v
>>>>>     findlib >
>>>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>>>>     E: Don't know what to do with arguments: ''
>>>>
>>>>
>>>
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/ec9d793e/attachment.html>

From mysnowls at 163.com  Thu Jan 26 14:13:04 2012
From: mysnowls at 163.com (Lin)
Date: Thu, 26 Jan 2012 22:13:04 +0800
Subject: build-and-install
In-Reply-To: <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com>	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>	<4F202E5A.9030601@163.com>	<4F2153C2.8070409@163.com>	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org> <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
Message-ID: <4F215F70.8010407@163.com>


According to Sylvain, the pack option may be supported in the 0.3.0 
release of oasis. see this link:

http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294

Actually, I don't think this can be of a  problem. If  you can check in 
all the files generated by oasis into the Hg tree,  normal users would 
not need to care about oasis at all.

On 01/26/2012 10:03 PM, Yury Sulsky wrote:
> Actually, we've managed to build and install all of the libraries on a
> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
> which changes the build scripts to patch the generated setup.ml files
> with support for packed libs. This way, we don't need to rely on a
> patched version of OASIS being installed.
>
> When these fixes hit the tree hosted on bitbucket, I hope that a
> 32-bit Linux system will be able to build the tree straight away.
>
> But I agree, patching the generated setup.ml files is hacky and it
> would be great if there were a released version of OASIS with support
> for the Pack option.
>
> Yury
>
> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy<anil at recoil.org>  wrote:
>> Why did you have to rebuild the setup.ml files? Were the ones included in
>> the various library tarballs incorrect?
>>
>> Also Sylvain: would it be possible just to commit those patches that are
>> outstanding against OASIS for pack support? They seem to work well enough,
>> and lots of people seem to run into it...
>>
>> -Anil
>>
>> On 26 Jan 2012, at 13:23, Lin wrote:
>>
>> For those interested, I finally managed to build and install all libraries
>> on 32-bit Linux. The steps are:
>>
>> 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the
>> `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
>>
>> 2) uninstall previously installed version of
>> type-conv/sexplib/bin_prot/fieldslib , etc.
>>
>> 3)  uncomment all `Pack:true' in every oasis.sh script in the directory tree
>> , if any
>>
>> 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>>
>> On 01/26/2012 12:31 AM, Lin wrote:
>>
>> Well, this seems result from the fact that the official released oasis
>> 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
>> which is used for generate correct .mlpack files.  There is a patch for
>> handling this option which has not been merged into oasis trunk :
>>
>> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>>
>> I guess that in Jane Street you're using the patched version of oasis, so I
>> can't get the library modules packed when trying to compile with the
>> unpatched version.
>>
>> And what it looks like is exactly a module packing problem, i.e. I can `open
>> Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because it's
>> not packed at all.
>>
>>
>> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>>
>> The sexplib error is a bit surprising.  Did it successfully install sexplib
>> before building core?
>>
>> I'm currently trying to build the packages by hand.  Here's my latest
>> problem:
>>
>> core $ ./oasis.sh&&  ocaml setup.ml -build&&  ocaml setup.ml -install
>> ../../build-common.sh: line 88: undefined: unbound variable
>>
>>
>> If anyone knows how to get past that, I'd be much obliged...
>>
>> I started a page on the wiki for collecting hints on how to do the
>> installation.  There's not much there yet, but I'll fill things out as I
>> figure them out.  Others should feel free to pile in their advice:
>>
>>      https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>
>> y
>>
>> On Sat, Jan 21, 2012 at 10:25 AM, Lin<mysnowls at 163.com>  wrote:
>>> I have been trying to build it by build-and-install script from two hous
>>> ago. With a few tweaks I can get it build everything before core(and async).
>>> I changed the last few lines of the script by discarding all the flags
>>> setting stuff, such that:
>>>
>>>    esac
>>>    ./oasis.sh
>>>    ./configure --prefix ~/godi
>>>    make build
>>>    make install || true
>>>    popd
>>> done
>>>
>>> But when building core there are some problems. First compiling
>>> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
>>> can be solved by just returning an caml_copy_string("Not implemented") for
>>> backtrace_get() on IA32 machines.
>>>
>>> Another problem is like this, which I don't know what to do with it:
>>>
>>> error : unbound module Sexplib
>>>
>>>
>>>
>>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>
>>> Has anyone succeeded in building Core on a mac using the build-and-install
>>> script in the root?  When I try to run it, I get the following error:
>>>
>>> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>>> too many anonymous arguments: ./build-and-install -o j:h -l
>>> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>> -- --disable-linux --disable-posix-tim\
>>> ers
>>> ------ base/type-conv ------
>>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>>> W: Field XMETAType is set but matching plugin is not enabled.
>>> I: File INSTALL has not changed, skipping
>>> I: File Makefile has not changed, skipping
>>> I: Regenerating file _tags
>>> I: File configure has not changed, skipping
>>> I: File lib/type-conv.odocl has not changed, skipping
>>> I: File myocamlbuild.ml has not changed, skipping
>>> I: File setup.ml has not changed, skipping
>>> I: File syntax/META has not changed, skipping
>>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>>> I: Running command '/usr/local/bin/ocamlc.opt -config>
>>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib>
>>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>> E: Don't know what to do with arguments: ''
>>>
>>>
>>
>>
>>




From anil at recoil.org  Thu Jan 26 22:14:39 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 26 Jan 2012 22:14:39 +0000
Subject: build-and-install
In-Reply-To: <CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com> <4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com> <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org> <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com> <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com> <0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org> <802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org> <CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com> <CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
Message-ID: <E726BA63-F4CF-45C4-9914-690FD14034A0@recoil.org>


Yup, both those exist despite the warning. This is the full META file:

# OASIS_START
# DO NOT EDIT (digest: 0db3e3d863cd3be314dcea4d54ef71a5)
version = "2.3.0"
description = "Syntax extension for type-conv"
requires = "camlp4"
archive(syntax, preprocessor) = "pa_type_conv.cma"
archive(syntax, toploop) = "pa_type_conv.cma"
exists_if = "pa_type_conv.cma"
# OASIS_STOP

-anil

On 26 Jan 2012, at 16:42, Yury Sulsky wrote:

> When you run oasis, could you make sure that the generated META file
> contain these lines?
> 
> archive(syntax,preprocessor) = "pa_type_conv.cma"
> archive(syntax,toploop) = "pa_type_conv.cma"
> 
> Thanks,
> Yury
> 
> On Thu, Jan 26, 2012 at 4:41 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>> That tells oasis to add some flags to the library's META file, which
>> in turn tells ocamlfind that the package should be loaded as a syntax
>> extension: http://projects.camlcity.org/projects/dl/findlib-1.2.6/doc/guide-html/x412.html
>> 
>> On Thu, Jan 26, 2012 at 4:15 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> I'm just trying this all again on my Mac, with OASIS-trunk + the pack
>>> patches.
>>> 
>>> What is:
>>> 
>>>   XMETAType:          syntax
>>> 
>>> ...intended for in type-conv/_oasis (pa_type_conv)?
>>> 
>>> It gives me an unknown plugin warning, which is hopefully not important.
>>> 
>>> -Anil
>>> 
>>> On 26 Jan 2012, at 16:11, Anil Madhavapeddy wrote:
>>> 
>>> Including the autogenerated files does make bisecting changes a bit of a
>>> pain in the future.
>>> 
>>> It would be much better just to get an OASIS release out, since anyone else
>>> creating OCaml libraries has this exact same issue.
>>> 
>>> -anil
>>> 
>>> On 26 Jan 2012, at 16:07, Yaron Minsky wrote:
>>> 
>>> For what it's worth, we just pushed Yury's changes to the bitbucket repo, so
>>> those mac fixes should be in place.  I'll try to test them out myself at
>>> home tonight.
>>> 
>>> Yury, do you think it makes sense for us to include the setup.ml files we
>>> used directly in the repo?  I know it's a bit nasty to include generated
>>> files (the release tarballs of course should include them), but I wonder if
>>> it might make sense given the complexity of getting just the right version
>>> of Oasis installed...
>>> 
>>> y
>>> 
>>> On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>>>> 
>>>> Actually, we've managed to build and install all of the libraries on a
>>>> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
>>>> which changes the build scripts to patch the generated setup.ml files
>>>> with support for packed libs. This way, we don't need to rely on a
>>>> patched version of OASIS being installed.
>>>> 
>>>> When these fixes hit the tree hosted on bitbucket, I hope that a
>>>> 32-bit Linux system will be able to build the tree straight away.
>>>> 
>>>> But I agree, patching the generated setup.ml files is hacky and it
>>>> would be great if there were a released version of OASIS with support
>>>> for the Pack option.
>>>> 
>>>> Yury
>>>> 
>>>> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org>
>>>> wrote:
>>>>> Why did you have to rebuild the setup.ml files? Were the ones included
>>>>> in
>>>>> the various library tarballs incorrect?
>>>>> 
>>>>> Also Sylvain: would it be possible just to commit those patches that are
>>>>> outstanding against OASIS for pack support? They seem to work well
>>>>> enough,
>>>>> and lots of people seem to run into it...
>>>>> 
>>>>> -Anil
>>>>> 
>>>>> On 26 Jan 2012, at 13:23, Lin wrote:
>>>>> 
>>>>> For those interested, I finally managed to build and install all
>>>>> libraries
>>>>> on 32-bit Linux. The steps are:
>>>>> 
>>>>> 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the
>>>>> `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le
>>>>> Gall)
>>>>> 
>>>>> 2) uninstall previously installed version of
>>>>> type-conv/sexplib/bin_prot/fieldslib , etc.
>>>>> 
>>>>> 3)  uncomment all `Pack:true' in every oasis.sh script in the directory
>>>>> tree
>>>>> , if any
>>>>> 
>>>>> 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>>>>> 
>>>>> On 01/26/2012 12:31 AM, Lin wrote:
>>>>> 
>>>>> Well, this seems result from the fact that the official released oasis
>>>>> 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
>>>>> which is used for generate correct .mlpack files.  There is a patch for
>>>>> handling this option which has not been merged into oasis trunk :
>>>>> 
>>>>> 
>>>>> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>>>>> 
>>>>> I guess that in Jane Street you're using the patched version of oasis,
>>>>> so I
>>>>> can't get the library modules packed when trying to compile with the
>>>>> unpatched version.
>>>>> 
>>>>> And what it looks like is exactly a module packing problem, i.e. I can
>>>>> `open
>>>>> Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because
>>>>> it's
>>>>> not packed at all.
>>>>> 
>>>>> 
>>>>> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>>>>> 
>>>>> The sexplib error is a bit surprising.  Did it successfully install
>>>>> sexplib
>>>>> before building core?
>>>>> 
>>>>> I'm currently trying to build the packages by hand.  Here's my latest
>>>>> problem:
>>>>> 
>>>>> core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>>>>> ../../build-common.sh: line 88: undefined: unbound variable
>>>>> 
>>>>> 
>>>>> If anyone knows how to get past that, I'd be much obliged...
>>>>> 
>>>>> I started a page on the wiki for collecting hints on how to do the
>>>>> installation.  There's not much there yet, but I'll fill things out as I
>>>>> figure them out.  Others should feel free to pile in their advice:
>>>>> 
>>>>>     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>>>> 
>>>>> y
>>>>> 
>>>>> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>>>>>> 
>>>>>> I have been trying to build it by build-and-install script from two
>>>>>> hous
>>>>>> ago. With a few tweaks I can get it build everything before core(and
>>>>>> async).
>>>>>> I changed the last few lines of the script by discarding all the flags
>>>>>> setting stuff, such that:
>>>>>> 
>>>>>>   esac
>>>>>>   ./oasis.sh
>>>>>>   ./configure --prefix ~/godi
>>>>>>   make build
>>>>>>   make install || true
>>>>>>   popd
>>>>>> done
>>>>>> 
>>>>>> But when building core there are some problems. First compiling
>>>>>> `backtrace_stubs.c' failed by the #error directive on IA32 machines.
>>>>>> This
>>>>>> can be solved by just returning an caml_copy_string("Not implemented")
>>>>>> for
>>>>>> backtrace_get() on IA32 machines.
>>>>>> 
>>>>>> Another problem is like this, which I don't know what to do with it:
>>>>>> 
>>>>>> error : unbound module Sexplib
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>>>> 
>>>>>> Has anyone succeeded in building Core on a mac using the
>>>>>> build-and-install
>>>>>> script in the root?  When I try to run it, I get the following error:
>>>>>> 
>>>>>> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>>>>>> too many anonymous arguments: ./build-and-install -o j:h -l
>>>>>> 
>>>>>> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>>>>> -- --disable-linux --disable-posix-tim\
>>>>>> ers
>>>>>> ------ base/type-conv ------
>>>>>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>>>>>> W: Field XMETAType is set but matching plugin is not enabled.
>>>>>> I: File INSTALL has not changed, skipping
>>>>>> I: File Makefile has not changed, skipping
>>>>>> I: Regenerating file _tags
>>>>>> I: File configure has not changed, skipping
>>>>>> I: File lib/type-conv.odocl has not changed, skipping
>>>>>> I: File myocamlbuild.ml has not changed, skipping
>>>>>> I: File setup.ml has not changed, skipping
>>>>>> I: File syntax/META has not changed, skipping
>>>>>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>>>>>> I: Running command '/usr/local/bin/ocamlc.opt -config >
>>>>>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>>>>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>>>>>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>>>>> E: Don't know what to do with arguments: ''
>>>>>> 
>>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>> 
>>> 
>>> 
>>> 
> 



From markus.mottl at gmail.com  Fri Jan 27 03:35:40 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 26 Jan 2012 22:35:40 -0500
Subject: Documentation
In-Reply-To: <CACLX4jQPm94wXHTa93wZvL_JdpP9whEP6cTmmKnVbG+DNn_QJg@mail.gmail.com>
References: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>
	<CACLX4jQPm94wXHTa93wZvL_JdpP9whEP6cTmmKnVbG+DNn_QJg@mail.gmail.com>
Message-ID: <CAP_800qks1GC1+E0xHHeOvPe+YGSEjJYSHCQVPOkZ+Q1GxJ=1A@mail.gmail.com>


It's actually on my TODO list to move my library documentation away
from LaTeX to something that's more readable like Markdown.  What
dialect or tool do you use for that?

Markus

On Thu, Jan 26, 2012 at 21:53, Yaron Minsky <yminsky at janestreet.com> wrote:
> On Thu, Jan 26, 2012 at 9:29 PM, Markus Mottl <markus.mottl at gmail.com>
> wrote:
>>
>> Hi,
>>
>> the documentation (doc) directory in sexplib was apparently removed.
>> I found an intro.txt file in the lib-directory instead. ?I wasn't
>> quite sure what format it was, but the contents definitely seemed out
>> of date. ?I have hence re-added the more recent doc-directory with
>> LaTeX documentation in my fork. ?Please let me know what your plans
>> are wrt. documentation (manuals, not source) so that we can have a
>> unified approach.
>
>
> I looked at our internal tree, and indeed there is no sexplib/doc directory
> in our internal tree, which surprises me. ? ?I'm certainly happy to have it
> back.
>
> We've moved most of our internal documentation to markdown, which I think is
> generally easier to manage and deal with, and easier to read as plain-text.
> ?And it generates perfectly usable latex output as well.
>
> y



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Fri Jan 27 03:38:11 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 26 Jan 2012 22:38:11 -0500
Subject: Documentation
In-Reply-To: <CAP_800qks1GC1+E0xHHeOvPe+YGSEjJYSHCQVPOkZ+Q1GxJ=1A@mail.gmail.com>
References: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>
	<CACLX4jQPm94wXHTa93wZvL_JdpP9whEP6cTmmKnVbG+DNn_QJg@mail.gmail.com>
	<CAP_800qks1GC1+E0xHHeOvPe+YGSEjJYSHCQVPOkZ+Q1GxJ=1A@mail.gmail.com>
Message-ID: <CACLX4jTJooPmfKoSD6dFfYQYWgfwcowwLf31PxezJP7RdsgTkg@mail.gmail.com>

Pandoc.  It's the nicest tool for markdown conversion I've seen.
On Jan 26, 2012 10:35 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:

> It's actually on my TODO list to move my library documentation away
> from LaTeX to something that's more readable like Markdown.  What
> dialect or tool do you use for that?
>
> Markus
>
> On Thu, Jan 26, 2012 at 21:53, Yaron Minsky <yminsky at janestreet.com>
> wrote:
> > On Thu, Jan 26, 2012 at 9:29 PM, Markus Mottl <markus.mottl at gmail.com>
> > wrote:
> >>
> >> Hi,
> >>
> >> the documentation (doc) directory in sexplib was apparently removed.
> >> I found an intro.txt file in the lib-directory instead.  I wasn't
> >> quite sure what format it was, but the contents definitely seemed out
> >> of date.  I have hence re-added the more recent doc-directory with
> >> LaTeX documentation in my fork.  Please let me know what your plans
> >> are wrt. documentation (manuals, not source) so that we can have a
> >> unified approach.
> >
> >
> > I looked at our internal tree, and indeed there is no sexplib/doc
> directory
> > in our internal tree, which surprises me.    I'm certainly happy to have
> it
> > back.
> >
> > We've moved most of our internal documentation to markdown, which I
> think is
> > generally easier to manage and deal with, and easier to read as
> plain-text.
> >  And it generates perfectly usable latex output as well.
> >
> > y
>
>
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/157aabc3/attachment.html>

From markus.mottl at gmail.com  Fri Jan 27 03:51:01 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 26 Jan 2012 22:51:01 -0500
Subject: Documentation
In-Reply-To: <CACLX4jTJooPmfKoSD6dFfYQYWgfwcowwLf31PxezJP7RdsgTkg@mail.gmail.com>
References: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>
	<CACLX4jQPm94wXHTa93wZvL_JdpP9whEP6cTmmKnVbG+DNn_QJg@mail.gmail.com>
	<CAP_800qks1GC1+E0xHHeOvPe+YGSEjJYSHCQVPOkZ+Q1GxJ=1A@mail.gmail.com>
	<CACLX4jTJooPmfKoSD6dFfYQYWgfwcowwLf31PxezJP7RdsgTkg@mail.gmail.com>
Message-ID: <CAP_800qPt7ppocJWSAwx1Q_mKS6D_Jh2NWA5d-D+H0es8YwisA@mail.gmail.com>


Thanks, just looked at it a few minutes ago.  When I saw it's in
Haskell, I was basically sold on it ;)

Markus

On Thu, Jan 26, 2012 at 22:38, Yaron Minsky <yminsky at janestreet.com> wrote:
> Pandoc.? It's the nicest tool for markdown conversion I've seen.
>
> On Jan 26, 2012 10:35 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:
>>
>> It's actually on my TODO list to move my library documentation away
>> from LaTeX to something that's more readable like Markdown. ?What
>> dialect or tool do you use for that?
>>
>> Markus
>>
>> On Thu, Jan 26, 2012 at 21:53, Yaron Minsky <yminsky at janestreet.com>
>> wrote:
>> > On Thu, Jan 26, 2012 at 9:29 PM, Markus Mottl <markus.mottl at gmail.com>
>> > wrote:
>> >>
>> >> Hi,
>> >>
>> >> the documentation (doc) directory in sexplib was apparently removed.
>> >> I found an intro.txt file in the lib-directory instead. ?I wasn't
>> >> quite sure what format it was, but the contents definitely seemed out
>> >> of date. ?I have hence re-added the more recent doc-directory with
>> >> LaTeX documentation in my fork. ?Please let me know what your plans
>> >> are wrt. documentation (manuals, not source) so that we can have a
>> >> unified approach.
>> >
>> >
>> > I looked at our internal tree, and indeed there is no sexplib/doc
>> > directory
>> > in our internal tree, which surprises me. ? ?I'm certainly happy to have
>> > it
>> > back.
>> >
>> > We've moved most of our internal documentation to markdown, which I
>> > think is
>> > generally easier to manage and deal with, and easier to read as
>> > plain-text.
>> > ?And it generates perfectly usable latex output as well.
>> >
>> > y
>>
>>
>>
>> --
>> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From ocaml-core at googlegroups.com  Fri Jan 27 02:26:12 2012
From: ocaml-core at googlegroups.com (ocaml-core at googlegroups.com)
Date: Fri, 27 Jan 2012 02:26:12 +0000
Subject: Moderator's spam report for ocaml-core@googlegroups.com
Message-ID: <0016367fb4c76df81b04b7793891@google.com>


This message is being sent to you because you are a moderator of the group ocaml-core.

The following suspicious messages were sent to your group, but are being held in your moderation queue because they are classified as likely spam messages.

If you take no action, all the messages below will be discarded automatically as spam.

However, if you see any messages that are not spam below, you may approve them individually by going to:

http://groups.google.com/group/ocaml-core/pendmsg

Please do not mark this notification as spam; this is a service for group moderators. If you do not wish to receive these notifications in the future, you may change your preferences by going to:

http://groups.google.com/group/ocaml-core/manage_post


------- 1 of 3  -------
Subject: A wiki of my  reading of the Async library code
>From: Lin <mysnowls at 163.com>
Date: Jan 24 02:15PM +0800

Hi all,

    These days I have been reading the source code of the Async library, 
both for learning OCaml itself and the internal of Async.
And I've setup a wiki on Bitbucket, and would post a series of articles 
on my understanding of the

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=8499100554198459689

------- 2 of 3  -------
Subject: Re: build-and-install
>From: Lin <mysnowls at 163.com>
Date: Jan 26 01:33PM +0800

For those interested, I finally managed to build and install all 
libraries on 32-bit Linux. The steps are:

1)  build a patched version of oasis 0.2.1~alpha1 which can handle the 
`Pack:true' option (thanks to help from Adrien Nader and Sylvain

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=7932455113160341402

------- 3 of 3  -------
Subject: Revolutionary R&D creates SSL certificate tool
>From: "White Paper Library" <whitepapers at cityslugger.com>
Date: Jan 26 10:57AM -0500

Learn how this revolutionary technology can centrally manage enterprise SSL certificates. Keep your organization safe from digital threats and data breaches.

This science breaking technology is WebTrust certified by Ernst & Young and there is no

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=7327489072769736096


For more information about this message, please visit:
http://groups.google.com/support/bin/answer.py?hl=en&answer=165806



From yury.sulsky at gmail.com  Fri Jan 27 07:13:04 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Fri, 27 Jan 2012 07:13:04 +0000
Subject: Unit tests
In-Reply-To: <CACLX4jSnA6U7sqZ3JHiOPhkH7OzKJtYScC5xrmEhq9y39opm+w@mail.gmail.com>
References: <CAP_800q=cGW9LpqGdvNmOh6okwknfKFaG6vWtDX34FokvDY2oA@mail.gmail.com>
	<CACLX4jSnA6U7sqZ3JHiOPhkH7OzKJtYScC5xrmEhq9y39opm+w@mail.gmail.com>
Message-ID: <CAEDxudzWi6LX33N7OVHzW=3hoqdHdjOFETdmpHyhfwfDy8xdMQ@mail.gmail.com>


Sorry! I mistakenly thought that we wouldn't be exporting the
lib_tests. I'll add those back in.

On Fri, Jan 27, 2012 at 2:10 AM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Sorry.? The tests are all still in existence, but presumably not exported by
> our script.? Yury, can you get the lib-test directories added?
>
> On Jan 26, 2012 9:07 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:
>>
>> Hi,
>>
>> I've just noticed that there are no unit tests for bin-prot and
>> sexplib anymore. ?They used to be in lib_test subdirectories. ?Since
>> especially the ones for bin-prot are of great importance, I wondered
>> how you want to test ocaml-core libraries? ?Are there any plans to add
>> those test suites back in later again?
>>
>> Regards,
>> Markus
>>
>> --
>> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri Jan 27 20:48:37 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 27 Jan 2012 15:48:37 -0500
Subject: build-and-install
In-Reply-To: <CAOCAUGN9gzpmscDFB3ZkDeuGz4gmiAqvpT-sSF4sJ9Za0UcuLg@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CAOCAUGN9gzpmscDFB3ZkDeuGz4gmiAqvpT-sSF4sJ9Za0UcuLg@mail.gmail.com>
Message-ID: <CAP_800rUq_PPTqLX1Xt-WSY18h8ZHapN6drDsLjLQbeWzBBYbw@mail.gmail.com>


On Fri, Jan 27, 2012 at 04:42, Sylvain Le Gall <gildor at ocamlcore.org> wrote:
> Have a look here:
> https://forge.ocamlcore.org/tracker/index.php?func=detail&aid=791&group_id=54&atid=291
>
> The bug is known a planned to be fixed in 0.2.1.

Great, good to know this will be fixed soon.

> You'll probably have to wait 0.2.1 in GODI. But this is something that
> can happen quite fast (depending on my confidence on the current
> version).

It was certainly a very helpful move to provide Oasis through Godi.
Installation before was tedious.  This should make upgrades much
easier in the future.

I'd also recommend to "release early, release often".  Oasis is not
considered stable yet anyway so most people would probably not mind
working with versions you are not totally confident in.  Fast
turnaround in the early stages of development seems more important
than stability.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri Jan 27 21:18:32 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 27 Jan 2012 16:18:32 -0500
Subject: build-and-install
In-Reply-To: <CAOCAUGNDx9fTStofR-QJbF6pSF0vrSRMOmV72q2CouBqcck4HA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CAOCAUGN9gzpmscDFB3ZkDeuGz4gmiAqvpT-sSF4sJ9Za0UcuLg@mail.gmail.com>
	<CAP_800rUq_PPTqLX1Xt-WSY18h8ZHapN6drDsLjLQbeWzBBYbw@mail.gmail.com>
	<CAOCAUGNDx9fTStofR-QJbF6pSF0vrSRMOmV72q2CouBqcck4HA@mail.gmail.com>
Message-ID: <CAP_800r3rD-DOSQv-KQpPA8LmTDHd7X6Xk-Tjo4da+k4ef0Q5w@mail.gmail.com>


On Fri, Jan 27, 2012 at 16:05, Sylvain Le Gall <gildor at ocamlcore.org> wrote:
> I'll turn the remaining bugs in "fix in the next minor release" and will
> release.

Awesome, thank you very much for your hard work!

Cheers,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Sat Jan 28 11:45:09 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 28 Jan 2012 06:45:09 -0500
Subject: Pull requests
Message-ID: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>

There are a number of outstanding pull requests, and I wanted to mention
that I'm holding off on including them mostly because we don't yet have a
contributor license agreement set up.  We're working on this now, but I
just wanted people to understand what the holdup is.

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120128/9889f909/attachment.html>

From yminsky at janestreet.com  Sat Jan 28 12:25:34 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 28 Jan 2012 07:25:34 -0500
Subject: build-and-install
In-Reply-To: <CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
Message-ID: <CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>

I can confirm that I can build from Markus' tree (except for Async, which
I'm still working on).  Right now it looks like native-code executables
work (at least, very trivial ones do), but byte-code using core fails right
out of the gate:

unique1 $ ./unique
Fatal error: unknown C primitive `unix_get_terminal_size'

Looks to me like we've got some more portability issues to resolve.

By the way, we've done some more work we've done of late on how to deal
with non-portable code.  We're going to start having functions that are
platform dependent show up as possibly being absent explicitly in the
signature.  So, you might have a function like:

  val some_linux_specific_hack : (float -> int -> bool) Or_error.t

Which means that your code can now at run-time respond to whether or not
the functionality in question is there or not.  This should make it so that
the IFDEFs required are restricted to the module that implements the
functionality, and the rest of the codebase can operated using ordinary
OCaml.

y

On Thu, Jan 26, 2012 at 8:51 PM, Markus Mottl <markus.mottl at gmail.com>wrote:

> Hi everybody,
>
> I have managed to completely build all libraries on my Mac using my
> fork of ocaml-core (ocaml-core-mmottl).  This fork incorporates all
> changes from the previously "official" releases of type-conv,
> bin-prot, and sexplib on OCaml Forge.
>
> Sadly, there still seem to be issues with Oasis (I'm using 0.2.0, the
> one in Godi) that lead to incorrect link flags.  It is hence still not
> possible to actually build applications.  Sylvain, could you please
> look into this?  It seems the library linker (ocamlc/ocamlopt -a) gets
> an extra library argument that shouldn't be there.  E.g.
> lib/libbin_prot.a in the following build log entry of bin-prot:
>
>  ocamlfind ocamlopt -a -cclib -lbin_prot lib/bin_prot.cmx
> lib/libbin_prot.a -o lib/bin_prot.cmxa
>
> I think it is related to the following myocamlbuild.ml lines:
>
> ----------
>  (* When ocaml link something that use the C library, then one
>      need that file to be up to date.
>    *)
>    dep  ["link"; "ocaml"; "use_lib"^lib]
>      [dir/"lib"^lib^"."^(!Options.ext_lib)];
> ----------
>
> "link" used to be "compile" in a different version of Oasis, not sure
> which one.  It seemed to work there.  It would be great if we could
> all agree on the Oasis version to use, preferably the one in Godi,
> which is easy to install.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120128/155a4516/attachment.html>

From markus.mottl at gmail.com  Sun Jan 29 01:43:25 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sat, 28 Jan 2012 20:43:25 -0500
Subject: build-and-install
In-Reply-To: <CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
Message-ID: <CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>


On Sat, Jan 28, 2012 at 07:25, Yaron Minsky <yminsky at janestreet.com> wrote:
> I can confirm that I can build from Markus' tree (except for Async, which
> I'm still working on). ?Right now it looks like native-code executables work
> (at least, very trivial ones do), but byte-code using core fails right out
> of the gate:

Strange, the whole tree built for me, including async.  I guess your
Oasis version may be different?  I'm still using Oasis 0.2.0 from
Godi.

> By the way, we've done some more work we've done of late on how to deal with
> non-portable code. ?We're going to start having functions that are platform
> dependent show up as possibly being absent explicitly in the signature. ?So,
> you might have a function like:
>
> ? val some_linux_specific_hack : (float -> int -> bool) Or_error.t
>
> Which means that your code can now at run-time respond to whether or not the
> functionality in question is there or not. ?This should make it so that the
> IFDEFs required are restricted to the module that implements the
> functionality, and the rest of the codebase can operated using ordinary
> OCaml.

What happened to the first class module approach that has been
discussed recently for related groups of functions (e.g.
platform-specific system calls)?  Library users would surely rather
have to pattern-match just once for the group rather than for each
function separately.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Sun Jan 29 22:38:40 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 17:38:40 -0500
Subject: build-and-install
In-Reply-To: <CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
Message-ID: <CACLX4jS0-dsbQWPt_yFGQEgAM7G4HXgMvhWN5ve=uc7K9zwiUQ@mail.gmail.com>


On Sat, Jan 28, 2012 at 8:43 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Sat, Jan 28, 2012 at 07:25, Yaron Minsky <yminsky at janestreet.com> wrote:
> Strange, the whole tree built for me, including async. ?I guess your
> Oasis version may be different? ?I'm still using Oasis 0.2.0 from
> Godi.

I downgraded to Oasis 0.2.0 before starting, but to no avail.  I'll
try to sort it out.

> What happened to the first class module approach that has been
> discussed recently for related groups of functions (e.g.
> platform-specific system calls)? ?Library users would surely rather
> have to pattern-match just once for the group rather than for each
> function separately.

For the moment, I don't think it's worth it.  For one thing, we don't
really have large blocks of well-defined functionality for different
platforms.  And individual pieces of functionality we do build may
work on different subsets of platforms.  Also, the first-class module
solution requires a decent amount of overhead per use.  So I think the
option-per-function is about right.

As a side note, we should probably rename Linux_ext to something like
Unix_ext, since the calls aren't necessarily Linux-specific.

y


From yminsky at janestreet.com  Sun Jan 29 22:40:02 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 17:40:02 -0500
Subject: ocaml-core-mac-portability typo
In-Reply-To: <CADy1MauHoYNe1iZAGHaaMgrg3-R2pDoHBaXex7gCSdra=dBfnQ@mail.gmail.com>
References: <CADy1MauHoYNe1iZAGHaaMgrg3-R2pDoHBaXex7gCSdra=dBfnQ@mail.gmail.com>
Message-ID: <CACLX4jRC09RR-eK2-0=Tt_7DOBe1QM7CrKWA2BYxXKK5HbPCWA@mail.gmail.com>


My guess is that this repo should be abandoned rather than merged in.
Others have made more progress than I. I'll blow it away.

y

On Sun, Jan 29, 2012 at 5:22 PM, David House <dmhouse at gmail.com> wrote:
> I notice that the ocaml-core-mac-portabiility repo has a typo in its
> name. If this is about to get merged in to ocaml-core then I guess
> this is fine, but just in case.


From yminsky at janestreet.com  Sun Jan 29 22:40:39 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 17:40:39 -0500
Subject: Problems building on Linux
In-Reply-To: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
Message-ID: <CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>


Which version of Oasis do you have installed?  I wouldn't expect it to
work with anything but 0.2.0.

y

On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com> wrote:
> Hi all,
>
> $ uname -a
> Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
> 2012 i686 athlon i386 GNU/Linux
>
> I'm now not 100% sure of the state of my system, because I've had a
> few aborted attempts at installing the core packages. But if I clone a
> fresh checkout of the tree, and `ocamlfind remove' all the packages,
> then use build-and-install, the following problems occur:
>
> 1. I get the 'Don't know what do with arguments: ""' error that Ron
> described. (Full output attached as build-output1.) I "fixed" this by
> replacing:
> ?./oasis.sh $optflags "${configopts[@]-}"
> with:
> ?./oasis.sh
> in build-and-install.sh.
>
> 2. The following error occurs when building compare:
>
> ------ base/compare ------
> ~/ocaml/core/base/compare ~/ocaml/core
> ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or directory
>
> (Full output attached as build-output2.) I "fixed" this by mkdir'ing
> base/compare/lib.
>
> 3. patch fails in the fieldslib directory. Here's the error:
>
> ------ base/fieldslib ------
> ~/ocaml/core/base/fieldslib ~/ocaml/core
> W: Field XMETAType is set but matching plugin is not enabled.
> I: File INSTALL doesn't exist, creating it.
> I: File Makefile doesn't exist, creating it.
> I: Regenerating file _tags
> I: File configure doesn't exist, creating it.
> I: File lib/META doesn't exist, creating it.
> I: File lib/fieldslib.mllib doesn't exist, creating it.
> I: File lib/fieldslib.odocl has not changed, skipping
> I: File myocamlbuild.ml doesn't exist, creating it.
> I: File setup.ml doesn't exist, creating it.
> I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
> patching file setup.ml
> Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
> Hunk #2 FAILED at 1286.
> Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
> Hunk #4 FAILED at 4269.
> 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
>
> And:
>
> $ cat setup.ml.rej
> --- setup.ml ? ?2012-01-26 09:04:49.000000000 +0000
> +++ setup.ml ? ?2012-01-26 09:25:06.000000000 +0000
> @@ -1286,6 +1287,7 @@
> ? ? ? ? source_file_exists is_native ext_lib ext_dll =
> ? ? (* The headers that should be compiled along *)
> ? ? let headers =
> + ? ? ?if lib.lib_pack then [] else
> ? ? ? List.fold_left
> ? ? ? ? (fun hdrs modul ->
> ? ? ? ? ? ?try
> @@ -4269,6 +4278,7 @@
> ? ? ? ? ? ? ? ? List.rev_append lib_extra acc
> ? ? ? ? ? ? ? in
> ? ? ? ? ? ? ? let acc =
> + ? ? ? ? ? ? ? ?if lib.lib_pack then acc else
> ? ? ? ? ? ? ? ? (* Add uncompiled header from the source tree *)
> ? ? ? ? ? ? ? ? let path =
> ? ? ? ? ? ? ? ? ? BaseFilePath.of_unix bs.bs_path
>
> Full output is attached as build-output3. I've also attached my
> setup.ml from fieldslib. I'm stuck with this one.


From yminsky at janestreet.com  Sun Jan 29 22:43:35 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 17:43:35 -0500
Subject: build-and-install
In-Reply-To: <CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
Message-ID: <CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>


On Sat, Jan 28, 2012 at 8:43 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Sat, Jan 28, 2012 at 07:25, Yaron Minsky <yminsky at janestreet.com> wrote:
>> I can confirm that I can build from Markus' tree (except for Async, which
>> I'm still working on). ?Right now it looks like native-code executables work
>> (at least, very trivial ones do), but byte-code using core fails right out
>> of the gate:
>
> Strange, the whole tree built for me, including async. ?I guess your
> Oasis version may be different? ?I'm still using Oasis 0.2.0 from
> Godi.

By the way, what version of OS X are you running?  I'm on 10.7.2.

y

>> By the way, we've done some more work we've done of late on how to deal with
>> non-portable code. ?We're going to start having functions that are platform
>> dependent show up as possibly being absent explicitly in the signature. ?So,
>> you might have a function like:
>>
>> ? val some_linux_specific_hack : (float -> int -> bool) Or_error.t
>>
>> Which means that your code can now at run-time respond to whether or not the
>> functionality in question is there or not. ?This should make it so that the
>> IFDEFs required are restricted to the module that implements the
>> functionality, and the rest of the codebase can operated using ordinary
>> OCaml.
>
> What happened to the first class module approach that has been
> discussed recently for related groups of functions (e.g.
> platform-specific system calls)? ?Library users would surely rather
> have to pattern-match just once for the group rather than for each
> function separately.
>
> Regards,
> Markus
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Sun Jan 29 22:45:54 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 17:45:54 -0500
Subject: Problems building on Linux
In-Reply-To: <CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
Message-ID: <CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>


Will do.  Sorry for the misdirection.

On Sun, Jan 29, 2012 at 5:43 PM, David House <dmhouse at gmail.com> wrote:
> The version that the installation hints specify, which is 0.2.1. (Which was,
> incidentally, a real pain to install!) I'll try again tomorrow with a
> downgraded version. Could you change the wiki?
>
> On Jan 29, 2012 10:40 PM, "Yaron Minsky" <yminsky at janestreet.com> wrote:
>>
>> Which version of Oasis do you have installed? ?I wouldn't expect it to
>> work with anything but 0.2.0.
>>
>> y
>>
>> On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com> wrote:
>> > Hi all,
>> >
>> > $ uname -a
>> > Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
>> > 2012 i686 athlon i386 GNU/Linux
>> >
>> > I'm now not 100% sure of the state of my system, because I've had a
>> > few aborted attempts at installing the core packages. But if I clone a
>> > fresh checkout of the tree, and `ocamlfind remove' all the packages,
>> > then use build-and-install, the following problems occur:
>> >
>> > 1. I get the 'Don't know what do with arguments: ""' error that Ron
>> > described. (Full output attached as build-output1.) I "fixed" this by
>> > replacing:
>> > ?./oasis.sh $optflags "${configopts[@]-}"
>> > with:
>> > ?./oasis.sh
>> > in build-and-install.sh.
>> >
>> > 2. The following error occurs when building compare:
>> >
>> > ------ base/compare ------
>> > ~/ocaml/core/base/compare ~/ocaml/core
>> > ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or
>> > directory
>> >
>> > (Full output attached as build-output2.) I "fixed" this by mkdir'ing
>> > base/compare/lib.
>> >
>> > 3. patch fails in the fieldslib directory. Here's the error:
>> >
>> > ------ base/fieldslib ------
>> > ~/ocaml/core/base/fieldslib ~/ocaml/core
>> > W: Field XMETAType is set but matching plugin is not enabled.
>> > I: File INSTALL doesn't exist, creating it.
>> > I: File Makefile doesn't exist, creating it.
>> > I: Regenerating file _tags
>> > I: File configure doesn't exist, creating it.
>> > I: File lib/META doesn't exist, creating it.
>> > I: File lib/fieldslib.mllib doesn't exist, creating it.
>> > I: File lib/fieldslib.odocl has not changed, skipping
>> > I: File myocamlbuild.ml doesn't exist, creating it.
>> > I: File setup.ml doesn't exist, creating it.
>> > I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
>> > patching file setup.ml
>> > Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
>> > Hunk #2 FAILED at 1286.
>> > Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
>> > Hunk #4 FAILED at 4269.
>> > 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
>> >
>> > And:
>> >
>> > $ cat setup.ml.rej
>> > --- setup.ml ? ?2012-01-26 09:04:49.000000000 +0000
>> > +++ setup.ml ? ?2012-01-26 09:25:06.000000000 +0000
>> > @@ -1286,6 +1287,7 @@
>> > ? ? ? ? source_file_exists is_native ext_lib ext_dll =
>> > ? ? (* The headers that should be compiled along *)
>> > ? ? let headers =
>> > + ? ? ?if lib.lib_pack then [] else
>> > ? ? ? List.fold_left
>> > ? ? ? ? (fun hdrs modul ->
>> > ? ? ? ? ? ?try
>> > @@ -4269,6 +4278,7 @@
>> > ? ? ? ? ? ? ? ? List.rev_append lib_extra acc
>> > ? ? ? ? ? ? ? in
>> > ? ? ? ? ? ? ? let acc =
>> > + ? ? ? ? ? ? ? ?if lib.lib_pack then acc else
>> > ? ? ? ? ? ? ? ? (* Add uncompiled header from the source tree *)
>> > ? ? ? ? ? ? ? ? let path =
>> > ? ? ? ? ? ? ? ? ? BaseFilePath.of_unix bs.bs_path
>> >
>> > Full output is attached as build-output3. I've also attached my
>> > setup.ml from fieldslib. I'm stuck with this one.


From yminsky at gmail.com  Sun Jan 29 23:13:39 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 18:13:39 -0500
Subject: Pull requests
In-Reply-To: <A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org>
References: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>
	<A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org>
Message-ID: <CADKNfhKzEDY7==Zj2vZosWjeiDVUHYsH9W3mw99O7Ki_BkEBpw@mail.gmail.com>

I think we'll end up with something like the Apache agreement, which
doesn't seem to require much overhead, except for signing something.  Does
that strike you as onerous?

y

On Sun, Jan 29, 2012 at 5:16 PM, Anil Madhavapeddy <anil at recoil.org> wrote:

> (off-list)
>
> Again, I just want to highlight my concerns with putting barriers in place
> for outside contributors. I'm also very against assigning my copyright to
> someone else for free software (its different for commercial software of
> course).  This would make it painful for another company to depend on Core
> as legal would have to get involved to sign the indemnity.
>
> The Linux/Xen solution I mentioned is *far* more scalable and lightweight,
> unless there's something that you're trying to protect Jane Street from
> (which could very well be the case! apologies if so).
>
> -anil
>
> On 28 Jan 2012, at 11:45, Yaron Minsky wrote:
>
> > There are a number of outstanding pull requests, and I wanted to mention
> that I'm holding off on including them mostly because we don't yet have a
> contributor license agreement set up.  We're working on this now, but I
> just wanted people to understand what the holdup is.
> >
> > y
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/f1575ebb/attachment.html>

From yminsky at gmail.com  Mon Jan 30 00:17:04 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 19:17:04 -0500
Subject: Pull requests
In-Reply-To: <2B312922-E9DE-4225-AD9A-ADBBC26691B9@recoil.org>
References: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>
	<A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org>
	<CADKNfhKzEDY7==Zj2vZosWjeiDVUHYsH9W3mw99O7Ki_BkEBpw@mail.gmail.com>
	<2B312922-E9DE-4225-AD9A-ADBBC26691B9@recoil.org>
Message-ID: <CADKNfh+y-jQ_9oJfihHgwzDYqv-Lrbqer1LCvWQfjLoKTTYoAw@mail.gmail.com>

I guess I hadn't fully understood your earlier proposal.  I had thought
that the signed-off idea was a protection in addition to signing a CLA, but
now looking back I realize the intent is that it be instead.

But what's the advantage?  In terms of traceability of patches, I've been
thinking that bitbucket's user authentication would be sufficient, since
we'd have the name of the author of each patch clearly visible.  As a
pragmatic matter, it seems like that would identify users to us and allow
us to back out changes if need be.

I guess signing an agreement is somewhat onerous, and I agree that they
might not be able to sign such an agreement, depending on the agreements
they have with their employers.  But the "Developers Certificate of
Origin", which people are implicitly signing on to, seems to carry the same
problem.  And having people actually sign the agreement seems to improve
the chance that people are actually paying attention to the rules and
following whatever their IP restrictions are.

Honestly, I'd rather not have submissions from people who aren't allowed to
contribute by their employer, and requiring people to sign a CLA seems to
improve the chance that people get this right.

y

On Sun, Jan 29, 2012 at 6:19 PM, Anil Madhavapeddy <anil at recoil.org> wrote:

> Yeah, as most engineering contributors from companies wont have direct
> signing authority. So even if they *do* sign it as a personal thing,
> chances are their companies have a claim on their IPR.
>
> I've been through this before for FSF patches for gcc, and it was painful
> enough.  It may be easier now since Apache is well known, but really, why
> bother with all this?  If you do get a bad egg who signs this agreement,
> what recourse do you have against them in practise? And if there's no
> recourse, what's the purpose of the agreement?  Establishing a provenance
> trail is way more important so you can *undo* patches that later prove bad,
> and that's what Signed-off-by is all about.
>
> -Anil
>
> On 29 Jan 2012, at 23:13, Yaron Minsky wrote:
>
> I think we'll end up with something like the Apache agreement, which
> doesn't seem to require much overhead, except for signing something.  Does
> that strike you as onerous?
>
> y
>
> On Sun, Jan 29, 2012 at 5:16 PM, Anil Madhavapeddy <anil at recoil.org>wrote:
>
>> (off-list)
>>
>> Again, I just want to highlight my concerns with putting barriers in
>> place for outside contributors. I'm also very against assigning my
>> copyright to someone else for free software (its different for commercial
>> software of course).  This would make it painful for another company to
>> depend on Core as legal would have to get involved to sign the indemnity.
>>
>> The Linux/Xen solution I mentioned is *far* more scalable and
>> lightweight, unless there's something that you're trying to protect Jane
>> Street from (which could very well be the case! apologies if so).
>>
>> -anil
>>
>> On 28 Jan 2012, at 11:45, Yaron Minsky wrote:
>>
>> > There are a number of outstanding pull requests, and I wanted to
>> mention that I'm holding off on including them mostly because we don't yet
>> have a contributor license agreement set up.  We're working on this now,
>> but I just wanted people to understand what the holdup is.
>> >
>> > y
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/498c584b/attachment.html>

From markus.mottl at gmail.com  Mon Jan 30 01:43:33 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 29 Jan 2012 20:43:33 -0500
Subject: build-and-install
In-Reply-To: <CACLX4jS0-dsbQWPt_yFGQEgAM7G4HXgMvhWN5ve=uc7K9zwiUQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jS0-dsbQWPt_yFGQEgAM7G4HXgMvhWN5ve=uc7K9zwiUQ@mail.gmail.com>
Message-ID: <CAP_800qe1zEKw41KoMQ+VrznrrdrECzThmigMqro6yiNNLBavg@mail.gmail.com>


On Sun, Jan 29, 2012 at 17:38, Yaron Minsky <yminsky at janestreet.com> wrote:
> For the moment, I don't think it's worth it. ?For one thing, we don't
> really have large blocks of well-defined functionality for different
> platforms. ?And individual pieces of functionality we do build may
> work on different subsets of platforms.

Fair enough.

> Also, the first-class module
> solution requires a decent amount of overhead per use. ?So I think the
> option-per-function is about right.

Doesn't seem too bad, since it's a one time effort for the whole
application.  E.g. assuming "Core" contains:

  let opt_linux_ext =
    Some (module struct
      let kpoll = ()
    end : S)

Then the user may only need to write something like the following once
for their whole application:

  module Linux_ext =
    (val Option.value_exn_message "need to run on Linux" opt_linux_ext : S)

I'm not sure, but the computational overhead of accessing functions is
likely negligible, too, since neither solution can get inlined at the
point of function use anyway.

> As a side note, we should probably rename Linux_ext to something like
> Unix_ext, since the calls aren't necessarily Linux-specific.

I guess some may also be available elsewhere.  There are definitely
some functions that don't seem to belong there, e.g. the POSIX timer
stuff and anything else that's likely well-standardized.
Multi-platform support is certainly a notoriously messy undertaking...

Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Mon Jan 30 01:46:34 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 29 Jan 2012 20:46:34 -0500
Subject: build-and-install
In-Reply-To: <CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
Message-ID: <CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>


On Sun, Jan 29, 2012 at 17:43, Yaron Minsky <yminsky at janestreet.com> wrote:
> By the way, what version of OS X are you running? ?I'm on 10.7.2.

Ditto.

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From anil at recoil.org  Sun Jan 29 22:16:36 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 29 Jan 2012 22:16:36 +0000
Subject: Pull requests
In-Reply-To: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>
References: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>
Message-ID: <A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org>


(off-list)

Again, I just want to highlight my concerns with putting barriers in place for outside contributors. I'm also very against assigning my copyright to someone else for free software (its different for commercial software of course).  This would make it painful for another company to depend on Core as legal would have to get involved to sign the indemnity.

The Linux/Xen solution I mentioned is *far* more scalable and lightweight, unless there's something that you're trying to protect Jane Street from (which could very well be the case! apologies if so).

-anil

On 28 Jan 2012, at 11:45, Yaron Minsky wrote:

> There are a number of outstanding pull requests, and I wanted to mention that I'm holding off on including them mostly because we don't yet have a contributor license agreement set up.  We're working on this now, but I just wanted people to understand what the holdup is.
> 
> y



From yminsky at janestreet.com  Mon Jan 30 03:17:14 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 22:17:14 -0500
Subject: build-and-install
In-Reply-To: <CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
	<CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
Message-ID: <CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>

How did you actually build and install async?  core, scheduler and extras
were all straightforward, but then when I tried to build the lib directory
by invoking "ocaml setup.ml -build" from the top-level directory, it looked
like it tried (and failed) to rebuild stuff from scheduler, and got this
error:

I: Running command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa
lib/async.a -tag debug'
ocamlfind ocamldep -package threads -package sexplib.syntax -package
sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax
-package fieldslib -package core -p\
ackage camlp4.macro -package bin_prot.syntax -package bin_prot -package
async_core -syntax camlp4o -modules scheduler/lib/writer.mli >
scheduler/lib/writer.mli.depends
+ ocamlfind ocamldep -package threads -package sexplib.syntax -package
sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax
-package fieldslib -package core \
-package camlp4.macro -package bin_prot.syntax -package bin_prot -package
async_core -syntax camlp4o -modules scheduler/lib/writer.mli >
scheduler/lib/writer.mli.depends
File "scheduler/lib/writer.mli", line 122, characters 8-20:
I/O error: "config.mlh: No such file or directory"
Preprocessing error on file scheduler/lib/writer.mli
Command exited with code 2.
E: Command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa
lib/async.a -tag debug' terminated with error code 10


On Sun, Jan 29, 2012 at 8:46 PM, Markus Mottl <markus.mottl at gmail.com>
wrote:
> On Sun, Jan 29, 2012 at 17:43, Yaron Minsky <yminsky at janestreet.com>
wrote:
>> By the way, what version of OS X are you running?  I'm on 10.7.2.
>
> Ditto.
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/6ffd6f76/attachment.html>

From dmhouse at gmail.com  Sun Jan 29 22:19:48 2012
From: dmhouse at gmail.com (David House)
Date: Sun, 29 Jan 2012 22:19:48 +0000
Subject: Problems building on Linux
Message-ID: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>

Hi all,

$ uname -a
Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
2012 i686 athlon i386 GNU/Linux

I'm now not 100% sure of the state of my system, because I've had a
few aborted attempts at installing the core packages. But if I clone a
fresh checkout of the tree, and `ocamlfind remove' all the packages,
then use build-and-install, the following problems occur:

1. I get the 'Don't know what do with arguments: ""' error that Ron
described. (Full output attached as build-output1.) I "fixed" this by
replacing:
  ./oasis.sh $optflags "${configopts[@]-}"
with:
  ./oasis.sh
in build-and-install.sh.

2. The following error occurs when building compare:

------ base/compare ------
~/ocaml/core/base/compare ~/ocaml/core
./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or directory

(Full output attached as build-output2.) I "fixed" this by mkdir'ing
base/compare/lib.

3. patch fails in the fieldslib directory. Here's the error:

------ base/fieldslib ------
~/ocaml/core/base/fieldslib ~/ocaml/core
W: Field XMETAType is set but matching plugin is not enabled.
I: File INSTALL doesn't exist, creating it.
I: File Makefile doesn't exist, creating it.
I: Regenerating file _tags
I: File configure doesn't exist, creating it.
I: File lib/META doesn't exist, creating it.
I: File lib/fieldslib.mllib doesn't exist, creating it.
I: File lib/fieldslib.odocl has not changed, skipping
I: File myocamlbuild.ml doesn't exist, creating it.
I: File setup.ml doesn't exist, creating it.
I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
patching file setup.ml
Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
Hunk #2 FAILED at 1286.
Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
Hunk #4 FAILED at 4269.
2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej

And:

$ cat setup.ml.rej
--- setup.ml	2012-01-26 09:04:49.000000000 +0000
+++ setup.ml	2012-01-26 09:25:06.000000000 +0000
@@ -1286,6 +1287,7 @@
         source_file_exists is_native ext_lib ext_dll =
     (* The headers that should be compiled along *)
     let headers =
+      if lib.lib_pack then [] else
       List.fold_left
         (fun hdrs modul ->
            try
@@ -4269,6 +4278,7 @@
                 List.rev_append lib_extra acc
               in
               let acc =
+                if lib.lib_pack then acc else
                 (* Add uncompiled header from the source tree *)
                 let path =
                   BaseFilePath.of_unix bs.bs_path

Full output is attached as build-output3. I've also attached my
setup.ml from fieldslib. I'm stuck with this one.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: build-output
Type: application/octet-stream
Size: 70 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/54d273bf/attachment.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: build-output2
Type: application/octet-stream
Size: 7840 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/54d273bf/attachment-0001.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: build-output3
Type: application/octet-stream
Size: 16565 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/54d273bf/attachment-0002.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: setup.ml
Type: text/x-ocaml
Size: 133286 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/54d273bf/attachment.bin>

From dmhouse at gmail.com  Sun Jan 29 22:22:19 2012
From: dmhouse at gmail.com (David House)
Date: Sun, 29 Jan 2012 22:22:19 +0000
Subject: ocaml-core-mac-portability typo
Message-ID: <CADy1MauHoYNe1iZAGHaaMgrg3-R2pDoHBaXex7gCSdra=dBfnQ@mail.gmail.com>


I notice that the ocaml-core-mac-portabiility repo has a typo in its
name. If this is about to get merged in to ocaml-core then I guess
this is fine, but just in case.


From dmhouse at gmail.com  Sun Jan 29 22:43:47 2012
From: dmhouse at gmail.com (David House)
Date: Sun, 29 Jan 2012 22:43:47 +0000
Subject: Problems building on Linux
In-Reply-To: <CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
Message-ID: <CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>

The version that the installation hints specify, which is 0.2.1. (Which
was, incidentally, a real pain to install!) I'll try again tomorrow with a
downgraded version. Could you change the wiki?
On Jan 29, 2012 10:40 PM, "Yaron Minsky" <yminsky at janestreet.com> wrote:

> Which version of Oasis do you have installed?  I wouldn't expect it to
> work with anything but 0.2.0.
>
> y
>
> On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com> wrote:
> > Hi all,
> >
> > $ uname -a
> > Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
> > 2012 i686 athlon i386 GNU/Linux
> >
> > I'm now not 100% sure of the state of my system, because I've had a
> > few aborted attempts at installing the core packages. But if I clone a
> > fresh checkout of the tree, and `ocamlfind remove' all the packages,
> > then use build-and-install, the following problems occur:
> >
> > 1. I get the 'Don't know what do with arguments: ""' error that Ron
> > described. (Full output attached as build-output1.) I "fixed" this by
> > replacing:
> >  ./oasis.sh $optflags "${configopts[@]-}"
> > with:
> >  ./oasis.sh
> > in build-and-install.sh.
> >
> > 2. The following error occurs when building compare:
> >
> > ------ base/compare ------
> > ~/ocaml/core/base/compare ~/ocaml/core
> > ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or
> directory
> >
> > (Full output attached as build-output2.) I "fixed" this by mkdir'ing
> > base/compare/lib.
> >
> > 3. patch fails in the fieldslib directory. Here's the error:
> >
> > ------ base/fieldslib ------
> > ~/ocaml/core/base/fieldslib ~/ocaml/core
> > W: Field XMETAType is set but matching plugin is not enabled.
> > I: File INSTALL doesn't exist, creating it.
> > I: File Makefile doesn't exist, creating it.
> > I: Regenerating file _tags
> > I: File configure doesn't exist, creating it.
> > I: File lib/META doesn't exist, creating it.
> > I: File lib/fieldslib.mllib doesn't exist, creating it.
> > I: File lib/fieldslib.odocl has not changed, skipping
> > I: File myocamlbuild.ml doesn't exist, creating it.
> > I: File setup.ml doesn't exist, creating it.
> > I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
> > patching file setup.ml
> > Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
> > Hunk #2 FAILED at 1286.
> > Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
> > Hunk #4 FAILED at 4269.
> > 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
> >
> > And:
> >
> > $ cat setup.ml.rej
> > --- setup.ml    2012-01-26 09:04:49.000000000 +0000
> > +++ setup.ml    2012-01-26 09:25:06.000000000 +0000
> > @@ -1286,6 +1287,7 @@
> >         source_file_exists is_native ext_lib ext_dll =
> >     (* The headers that should be compiled along *)
> >     let headers =
> > +      if lib.lib_pack then [] else
> >       List.fold_left
> >         (fun hdrs modul ->
> >            try
> > @@ -4269,6 +4278,7 @@
> >                 List.rev_append lib_extra acc
> >               in
> >               let acc =
> > +                if lib.lib_pack then acc else
> >                 (* Add uncompiled header from the source tree *)
> >                 let path =
> >                   BaseFilePath.of_unix bs.bs_path
> >
> > Full output is attached as build-output3. I've also attached my
> > setup.ml from fieldslib. I'm stuck with this one.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/4b3e05d0/attachment.html>

From anil at recoil.org  Sun Jan 29 23:19:57 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 29 Jan 2012 23:19:57 +0000
Subject: Pull requests
In-Reply-To: <CADKNfhKzEDY7==Zj2vZosWjeiDVUHYsH9W3mw99O7Ki_BkEBpw@mail.gmail.com>
References: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com> <A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org> <CADKNfhKzEDY7==Zj2vZosWjeiDVUHYsH9W3mw99O7Ki_BkEBpw@mail.gmail.com>
Message-ID: <2B312922-E9DE-4225-AD9A-ADBBC26691B9@recoil.org>

Yeah, as most engineering contributors from companies wont have direct signing authority. So even if they *do* sign it as a personal thing, chances are their companies have a claim on their IPR.

I've been through this before for FSF patches for gcc, and it was painful enough.  It may be easier now since Apache is well known, but really, why bother with all this?  If you do get a bad egg who signs this agreement, what recourse do you have against them in practise? And if there's no recourse, what's the purpose of the agreement?  Establishing a provenance trail is way more important so you can *undo* patches that later prove bad, and that's what Signed-off-by is all about.

-Anil

On 29 Jan 2012, at 23:13, Yaron Minsky wrote:

> I think we'll end up with something like the Apache agreement, which doesn't seem to require much overhead, except for signing something.  Does that strike you as onerous?
> 
> y
> 
> On Sun, Jan 29, 2012 at 5:16 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> (off-list)
> 
> Again, I just want to highlight my concerns with putting barriers in place for outside contributors. I'm also very against assigning my copyright to someone else for free software (its different for commercial software of course).  This would make it painful for another company to depend on Core as legal would have to get involved to sign the indemnity.
> 
> The Linux/Xen solution I mentioned is *far* more scalable and lightweight, unless there's something that you're trying to protect Jane Street from (which could very well be the case! apologies if so).
> 
> -anil
> 
> On 28 Jan 2012, at 11:45, Yaron Minsky wrote:
> 
> > There are a number of outstanding pull requests, and I wanted to mention that I'm holding off on including them mostly because we don't yet have a contributor license agreement set up.  We're working on this now, but I just wanted people to understand what the holdup is.
> >
> > y
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/5027ea99/attachment.html>

From yminsky at janestreet.com  Mon Jan 30 13:57:26 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 30 Jan 2012 08:57:26 -0500
Subject: build-and-install
In-Reply-To: <5baef3c.a470.1352cd76179.Coremail.mysnowls@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
	<CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
	<CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
	<5baef3c.a470.1352cd76179.Coremail.mysnowls@163.com>
Message-ID: <CACLX4jTf6_YbNvDhUWKAqAgsHbhDOvhyY-7f1TaBuEZDmV__rg@mail.gmail.com>

Of course.  I forgot about the weird machinations around this.  As to the
structure of the async packages, we definitely need to clean this up before
we make a real release.

y

2012/1/29 Lin <mysnowls at 163.com>

> I've encountered the same problem on Linux. I solved it by:
>
> * first build and install the core/scheduler/extra pacakges individually
>
> * follow the steps in buidl-and-install.sh manually :
>
> build-and-install.sh, line 76:
>
>           dest=$(mktemp -d)
>           mkdir -p "$dest/base/async"
>           cp -t "$dest/"     -a ../../build-common.sh
>           cp -t "$dest/base/async" -a lib oasis.sh
>           cd $dest/base/async
>
> P.S. The idea of splitting async srtucture to core/scheduler/exra is great
> , but it's weired that people have to install four packages in total, since
> people would always only use `Async.Std'. If there isn't  any sound reason
> for this, I'd like to suggest make all of them one package of Async instead
> of four.
>
> Regards,
> Lin
>
>
> At 2012-01-30 11:17:21,"Yaron Minsky" <yminsky at janestreet.com> wrote:
>
> How did you actually build and install async?  core, scheduler and extras
> were all straightforward, but then when I tried to build the lib directory
> by invoking "ocaml setup.ml -build" from the top-level directory, it
> looked like it tried (and failed) to rebuild stuff from scheduler, and got
> this error:
>
> I: Running command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa
> lib/async.a -tag debug'
> ocamlfind ocamldep -package threads -package sexplib.syntax -package
> sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax
> -package fieldslib -package core -p\
> ackage camlp4.macro -package bin_prot.syntax -package bin_prot -package
> async_core -syntax camlp4o -modules scheduler/lib/writer.mli >
> scheduler/lib/writer.mli.depends
> + ocamlfind ocamldep -package threads -package sexplib.syntax -package
> sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax
> -package fieldslib -package core \
> -package camlp4.macro -package bin_prot.syntax -package bin_prot -package
> async_core -syntax camlp4o -modules scheduler/lib/writer.mli >
> scheduler/lib/writer.mli.depends
> File "scheduler/lib/writer.mli", line 122, characters 8-20:
> I/O error: "config.mlh: No such file or directory"
> Preprocessing error on file scheduler/lib/writer.mli
> Command exited with code 2.
> E: Command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa
> lib/async.a -tag debug' terminated with error code 10
>
>
> On Sun, Jan 29, 2012 at 8:46 PM, Markus Mottl <markus.mottl at gmail.com>
> wrote:
> > On Sun, Jan 29, 2012 at 17:43, Yaron Minsky <yminsky at janestreet.com>
> wrote:
> >> By the way, what version of OS X are you running?  I'm on 10.7.2.
> >
> > Ditto.
> >
> > --
> > Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120130/65ee61c0/attachment.html>

From markus.mottl at gmail.com  Mon Jan 30 15:34:34 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Mon, 30 Jan 2012 10:34:34 -0500
Subject: build-and-install
In-Reply-To: <CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
	<CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
	<CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
Message-ID: <CAP_800pmw8YHCNOiutyNu1rOoXvWDQyGzmrTu-ZAHYvJG0jFiA@mail.gmail.com>


On Sun, Jan 29, 2012 at 22:17, Yaron Minsky <yminsky at janestreet.com> wrote:
> How did you actually build and install async? ?core, scheduler and extras
> were all straightforward, but then when I tried to build the lib directory
> by invoking "ocaml setup.ml -build" from the top-level directory, it looked
> like it tried (and failed) to rebuild stuff from scheduler, and got this
> error:

I guess you are using my fork?  I've just verified it again, it's
really just a matter of running the "build-and-install" script for me.
 Everything, including Async, builds and installs.

Surprisingly, I have also been able to execute Async stuff from within
the toplevel.  It's just compilation (both byte- and native code)
that's apparently still slightly screwed up due to incorrect linking
flags stored in the .cma/.cmxa files.  E.g. the following works just
fine for me:

# #require "async";;
/Users/mmottl/local/lib/findlib/async_core: added to search path
/Users/mmottl/local/lib/findlib/async_core/async_core.cma: loaded
/Users/mmottl/local/lib/findlib/async_scheduler: added to search path
/Users/mmottl/local/lib/findlib/async_scheduler/async_scheduler.cma: loaded
/Users/mmottl/local/lib/findlib/async_extra: added to search path
/Users/mmottl/local/lib/findlib/async_extra/async_extra.cma: loaded
/Users/mmottl/local/lib/findlib/async: added to search path
/Users/mmottl/local/lib/findlib/async/async.cma: loaded
# open Async.Std;;
# Scheduler.go_main () ~main:(fun () -> Clock.after (Time.Span.of_sec
1.) >>> fun () -> print_endline "Hello world!");;
Hello world!

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From thelema314 at gmail.com  Mon Jan 30 16:58:41 2012
From: thelema314 at gmail.com (Edgar Friendly)
Date: Mon, 30 Jan 2012 11:58:41 -0500
Subject: build-and-install
In-Reply-To: <CAP_800pmw8YHCNOiutyNu1rOoXvWDQyGzmrTu-ZAHYvJG0jFiA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
	<CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
	<CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
	<CAP_800pmw8YHCNOiutyNu1rOoXvWDQyGzmrTu-ZAHYvJG0jFiA@mail.gmail.com>
Message-ID: <CAL-jcAmcQyaShMBx5BemwwagVg6GqEFEBe6JLHD9N1CDyO_=+A@mail.gmail.com>

For the purposes of having consistent installation of packages with
dependencies, it may be beneficial to build on `odb`[1].  It auto-detects
oasis/omake/make package types and runs them in a consistent manner.  Its
new `packages` feature decouples it from oasis-db, so that local package
descriptions can be specified, including dependencies and VCS(hg
included)/HTTP URLs to download from.  If an example would be useful, I can
make up one, but better to just look at the example packages[2] file in the
repo.

If there's any questions or suggestions, I'm open to improving things and
explaining further exactly what and how odb works, although it's a small
program with pretty straightforward code.  It has rudimentary version
dependencies, but at the moment, there's only room in its package lookup
for one version of each package, which limits the complexity of what has to
be dealt with.  By default it installs packages to ~/.odb/lib, but there's
command-line switches to use sudo or to just go ahead and install normally
for users with write access to ocamlfind.

E.

[1] https://github.com/thelema/odb
[2] https://github.com/thelema/odb/blob/master/packages

On Mon, Jan 30, 2012 at 10:34 AM, Markus Mottl <markus.mottl at gmail.com>wrote:

> On Sun, Jan 29, 2012 at 22:17, Yaron Minsky <yminsky at janestreet.com>
> wrote:
> > How did you actually build and install async?  core, scheduler and extras
> > were all straightforward, but then when I tried to build the lib
> directory
> > by invoking "ocaml setup.ml -build" from the top-level directory, it
> looked
> > like it tried (and failed) to rebuild stuff from scheduler, and got this
> > error:
>
> I guess you are using my fork?  I've just verified it again, it's
> really just a matter of running the "build-and-install" script for me.
>  Everything, including Async, builds and installs.
>
> Surprisingly, I have also been able to execute Async stuff from within
> the toplevel.  It's just compilation (both byte- and native code)
> that's apparently still slightly screwed up due to incorrect linking
> flags stored in the .cma/.cmxa files.  E.g. the following works just
> fine for me:
>
> # #require "async";;
> /Users/mmottl/local/lib/findlib/async_core: added to search path
> /Users/mmottl/local/lib/findlib/async_core/async_core.cma: loaded
> /Users/mmottl/local/lib/findlib/async_scheduler: added to search path
> /Users/mmottl/local/lib/findlib/async_scheduler/async_scheduler.cma: loaded
> /Users/mmottl/local/lib/findlib/async_extra: added to search path
> /Users/mmottl/local/lib/findlib/async_extra/async_extra.cma: loaded
> /Users/mmottl/local/lib/findlib/async: added to search path
> /Users/mmottl/local/lib/findlib/async/async.cma: loaded
> # open Async.Std;;
> # Scheduler.go_main () ~main:(fun () -> Clock.after (Time.Span.of_sec
> 1.) >>> fun () -> print_endline "Hello world!");;
> Hello world!
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120130/2f8d5749/attachment.html>

From mysnowls at 163.com  Mon Jan 30 04:20:07 2012
From: mysnowls at 163.com (Lin)
Date: Mon, 30 Jan 2012 12:20:07 +0800 (CST)
Subject: build-and-install
In-Reply-To: <CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
References: <CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
 <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
 <4F1AD8E6.6020202@163.com>
 <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
 <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com>
 <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
 <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
 <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
 <0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
 <802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
 <CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
 <CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
 <CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
 <CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
 <CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
 <CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
 <CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
Message-ID: <5baef3c.a470.1352cd76179.Coremail.mysnowls@163.com>

I've encountered the same problem on Linux. I solved it by:

* first build and install the core/scheduler/extra pacakges individually

* follow the steps in buidl-and-install.sh manually :

build-and-install.sh, line 76:

          dest=$(mktemp -d)
          mkdir -p "$dest/base/async"
          cp -t "$dest/"     -a ../../build-common.sh
          cp -t "$dest/base/async" -a lib oasis.sh
          cd $dest/base/async

P.S. The idea of splitting async srtucture to core/scheduler/exra is great , but it's weired that people have to install four packages in total, since people would always only use `Async.Std'. If there isn't  any sound reason for this, I'd like to suggest make all of them one package of Async instead of four.


Regards,
Lin



At 2012-01-30 11:17:21,"Yaron Minsky" <yminsky at janestreet.com> wrote:
How did you actually build and install async?  core, scheduler and extras were all straightforward, but then when I tried to build the lib directory by invoking "ocaml setup.ml -build" from the top-level directory, it looked like it tried (and failed) to rebuild stuff from scheduler, and got this error:

I: Running command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa lib/async.a -tag debug'
ocamlfind ocamldep -package threads -package sexplib.syntax -package sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax -package fieldslib -package core -p\
ackage camlp4.macro -package bin_prot.syntax -package bin_prot -package async_core -syntax camlp4o -modules scheduler/lib/writer.mli > scheduler/lib/writer.mli.depends
+ ocamlfind ocamldep -package threads -package sexplib.syntax -package sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax -package fieldslib -package core \
-package camlp4.macro -package bin_prot.syntax -package bin_prot -package async_core -syntax camlp4o -modules scheduler/lib/writer.mli > scheduler/lib/writer.mli.depends
File "scheduler/lib/writer.mli", line 122, characters 8-20:
I/O error: "config.mlh: No such file or directory"
Preprocessing error on file scheduler/lib/writer.mli
Command exited with code 2.
E: Command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa lib/async.a -tag debug' terminated with error code 10
On Sun, Jan 29, 2012 at 8:46 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Sun, Jan 29, 2012 at 17:43, Yaron Minsky <yminsky at janestreet.com> wrote:
>> By the way, what version of OS X are you running?  I'm on 10.7.2.
>
> Ditto.
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120130/2f1b33c8/attachment.html>

From ocaml-core at googlegroups.com  Tue Jan 31 02:37:15 2012
From: ocaml-core at googlegroups.com (ocaml-core at googlegroups.com)
Date: Tue, 31 Jan 2012 02:37:15 +0000
Subject: Moderator's spam report for ocaml-core@googlegroups.com
Message-ID: <0016e6db2a8348f56604b7c9d7c1@google.com>


This message is being sent to you because you are a moderator of the group ocaml-core.

The following suspicious messages were sent to your group, but are being held in your moderation queue because they are classified as likely spam messages.

If you take no action, all the messages below will be discarded automatically as spam.

However, if you see any messages that are not spam below, you may approve them individually by going to:

http://groups.google.com/group/ocaml-core/pendmsg

Please do not mark this notification as spam; this is a service for group moderators. If you do not wish to receive these notifications in the future, you may change your preferences by going to:

http://groups.google.com/group/ocaml-core/manage_post


------- 1 of 2  -------
Subject: Revolutionary R&D creates SSL certificate tool
>From: "White Paper Library" <whitepapers at b2bonlineoffers.com>
Date: Jan 27 03:25PM -0500

Learn how this revolutionary technology can centrally manage enterprise SSL certificates. Keep your organization safe from digital threats and data breaches.

This science breaking technology is WebTrust certified by Ernst & Young and there is no

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=2216607130139722683

------- 2 of 2  -------
Subject: Re: build-and-install
>From: Lin <mysnowls at 163.com>
Date: Jan 30 12:10PM +0800

I've encountered exactly this problem on Linux.  I solved it by:

1. first build and install the core/exta/scheduler packages
2. then manually do these steps in `build-and-install.sh'


# line 76:
                # horrible hack (avoids

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=4199136405165210740


For more information about this message, please visit:
http://groups.google.com/support/bin/answer.py?hl=en&answer=165806



From yury.sulsky at gmail.com  Tue Jan 31 11:19:13 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Tue, 31 Jan 2012 11:19:13 +0000
Subject: Problems building on Linux
In-Reply-To: <CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
	<CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
Message-ID: <CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>


Thanks David! Fixes for all three issues are making their way to the
public tree.

The changes are:
 - use this bit of bash awesome to pass arrays that may be empty in
the build-and-install script:
     ${foo[@]:+${foo[@]}} (from http://stackoverflow.com/q/7577052)
 - I was creating the a directory after using it. I forget which way time flows.
 - use patch -l (ignore whitespace) when patching the setup.ml files
(which should make it work on 0.2.1)


On Sun, Jan 29, 2012 at 10:45 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Will do. ?Sorry for the misdirection.
>
> On Sun, Jan 29, 2012 at 5:43 PM, David House <dmhouse at gmail.com> wrote:
>> The version that the installation hints specify, which is 0.2.1. (Which was,
>> incidentally, a real pain to install!) I'll try again tomorrow with a
>> downgraded version. Could you change the wiki?
>>
>> On Jan 29, 2012 10:40 PM, "Yaron Minsky" <yminsky at janestreet.com> wrote:
>>>
>>> Which version of Oasis do you have installed? ?I wouldn't expect it to
>>> work with anything but 0.2.0.
>>>
>>> y
>>>
>>> On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com> wrote:
>>> > Hi all,
>>> >
>>> > $ uname -a
>>> > Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
>>> > 2012 i686 athlon i386 GNU/Linux
>>> >
>>> > I'm now not 100% sure of the state of my system, because I've had a
>>> > few aborted attempts at installing the core packages. But if I clone a
>>> > fresh checkout of the tree, and `ocamlfind remove' all the packages,
>>> > then use build-and-install, the following problems occur:
>>> >
>>> > 1. I get the 'Don't know what do with arguments: ""' error that Ron
>>> > described. (Full output attached as build-output1.) I "fixed" this by
>>> > replacing:
>>> > ?./oasis.sh $optflags "${configopts[@]-}"
>>> > with:
>>> > ?./oasis.sh
>>> > in build-and-install.sh.
>>> >
>>> > 2. The following error occurs when building compare:
>>> >
>>> > ------ base/compare ------
>>> > ~/ocaml/core/base/compare ~/ocaml/core
>>> > ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or
>>> > directory
>>> >
>>> > (Full output attached as build-output2.) I "fixed" this by mkdir'ing
>>> > base/compare/lib.
>>> >
>>> > 3. patch fails in the fieldslib directory. Here's the error:
>>> >
>>> > ------ base/fieldslib ------
>>> > ~/ocaml/core/base/fieldslib ~/ocaml/core
>>> > W: Field XMETAType is set but matching plugin is not enabled.
>>> > I: File INSTALL doesn't exist, creating it.
>>> > I: File Makefile doesn't exist, creating it.
>>> > I: Regenerating file _tags
>>> > I: File configure doesn't exist, creating it.
>>> > I: File lib/META doesn't exist, creating it.
>>> > I: File lib/fieldslib.mllib doesn't exist, creating it.
>>> > I: File lib/fieldslib.odocl has not changed, skipping
>>> > I: File myocamlbuild.ml doesn't exist, creating it.
>>> > I: File setup.ml doesn't exist, creating it.
>>> > I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
>>> > patching file setup.ml
>>> > Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
>>> > Hunk #2 FAILED at 1286.
>>> > Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
>>> > Hunk #4 FAILED at 4269.
>>> > 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
>>> >
>>> > And:
>>> >
>>> > $ cat setup.ml.rej
>>> > --- setup.ml ? ?2012-01-26 09:04:49.000000000 +0000
>>> > +++ setup.ml ? ?2012-01-26 09:25:06.000000000 +0000
>>> > @@ -1286,6 +1287,7 @@
>>> > ? ? ? ? source_file_exists is_native ext_lib ext_dll =
>>> > ? ? (* The headers that should be compiled along *)
>>> > ? ? let headers =
>>> > + ? ? ?if lib.lib_pack then [] else
>>> > ? ? ? List.fold_left
>>> > ? ? ? ? (fun hdrs modul ->
>>> > ? ? ? ? ? ?try
>>> > @@ -4269,6 +4278,7 @@
>>> > ? ? ? ? ? ? ? ? List.rev_append lib_extra acc
>>> > ? ? ? ? ? ? ? in
>>> > ? ? ? ? ? ? ? let acc =
>>> > + ? ? ? ? ? ? ? ?if lib.lib_pack then acc else
>>> > ? ? ? ? ? ? ? ? (* Add uncompiled header from the source tree *)
>>> > ? ? ? ? ? ? ? ? let path =
>>> > ? ? ? ? ? ? ? ? ? BaseFilePath.of_unix bs.bs_path
>>> >
>>> > Full output is attached as build-output3. I've also attached my
>>> > setup.ml from fieldslib. I'm stuck with this one.


From yminsky at janestreet.com  Tue Jan 31 19:45:02 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 31 Jan 2012 14:45:02 -0500
Subject: Problems building on Linux
In-Reply-To: <CADy1MauqU8Ue99NmTfJURqUzJ9+LOtUvamdq=QV-QHZXHkpL2g@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
	<CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
	<CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>
	<CADy1MauqU8Ue99NmTfJURqUzJ9+LOtUvamdq=QV-QHZXHkpL2g@mail.gmail.com>
Message-ID: <CACLX4jTyZGzw68eAKaso-xKQZCHK8n7hhQMcKsaK83+mSVf+2w@mail.gmail.com>

On Tue, Jan 31, 2012 at 2:27 PM, David House <dmhouse at gmail.com> wrote:

> Great! I applied your changes manually since they're not in the public
> repo yet.
>
> I ran in to a few more problems.
>
> 1. The pre-build command for bin-prot wasn't working: I was getting
> 'no such file or directory: lib/*.{h,mlh}'. I fixed this by expanding
> the braces in oasis.sh to be 'cp lib/*.h lib/*.mlh _build'.
>
> 2. core seems to have a dependency on the res package which was not
> documented. I guess this should go in the installation hints on the
> wiki.
>

Yes!  Can you update the wiki?  I'd love to not be the only person
contributing...


> 3. There are some integer literals bigger than 2^31, and my measly
> four-bytes-to-a-word system couldn't cope :)
>  - core/extended/lib/bench.ml contains 1_000_000_000_000;
>  - extended_linux.ml in the same directory has three, on lines 127,
> 138 and 139 (the CIFS_MAGIC_NUMBER, HPFS_SUPER_MAGIC and
> HUGETLBFS_MAGIC lines).
> I just commented out these lines. (But I expect the proper fix is to
> make these things [Int64]s, seeing as numbers > 2^31 seem to be valid
> inputs to these functions.)
>

Maybe Int63's, our usual solution to wanting to work on 32bit and be fast
on 64bit...


> I actually downgraded to Oasis 0.2.0 when I hit these, in case they
> fixed the errors. So I haven't tested with Oasis 0.2.1; but I also
> don't think supporting Oasis 0.2.1 is really a high priority.
>
> Async installed just fine, by the way.
>
> On 31 January 2012 11:19, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> > Thanks David! Fixes for all three issues are making their way to the
> > public tree.
> >
> > The changes are:
> >  - use this bit of bash awesome to pass arrays that may be empty in
> > the build-and-install script:
> >     ${foo[@]:+${foo[@]}} (from http://stackoverflow.com/q/7577052)
> >  - I was creating the a directory after using it. I forget which way
> time flows.
> >  - use patch -l (ignore whitespace) when patching the setup.ml files
> > (which should make it work on 0.2.1)
> >
> >
> > On Sun, Jan 29, 2012 at 10:45 PM, Yaron Minsky <yminsky at janestreet.com>
> wrote:
> >> Will do.  Sorry for the misdirection.
> >>
> >> On Sun, Jan 29, 2012 at 5:43 PM, David House <dmhouse at gmail.com> wrote:
> >>> The version that the installation hints specify, which is 0.2.1.
> (Which was,
> >>> incidentally, a real pain to install!) I'll try again tomorrow with a
> >>> downgraded version. Could you change the wiki?
> >>>
> >>> On Jan 29, 2012 10:40 PM, "Yaron Minsky" <yminsky at janestreet.com>
> wrote:
> >>>>
> >>>> Which version of Oasis do you have installed?  I wouldn't expect it to
> >>>> work with anything but 0.2.0.
> >>>>
> >>>> y
> >>>>
> >>>> On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com>
> wrote:
> >>>> > Hi all,
> >>>> >
> >>>> > $ uname -a
> >>>> > Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15
> UTC
> >>>> > 2012 i686 athlon i386 GNU/Linux
> >>>> >
> >>>> > I'm now not 100% sure of the state of my system, because I've had a
> >>>> > few aborted attempts at installing the core packages. But if I
> clone a
> >>>> > fresh checkout of the tree, and `ocamlfind remove' all the packages,
> >>>> > then use build-and-install, the following problems occur:
> >>>> >
> >>>> > 1. I get the 'Don't know what do with arguments: ""' error that Ron
> >>>> > described. (Full output attached as build-output1.) I "fixed" this
> by
> >>>> > replacing:
> >>>> >  ./oasis.sh $optflags "${configopts[@]-}"
> >>>> > with:
> >>>> >  ./oasis.sh
> >>>> > in build-and-install.sh.
> >>>> >
> >>>> > 2. The following error occurs when building compare:
> >>>> >
> >>>> > ------ base/compare ------
> >>>> > ~/ocaml/core/base/compare ~/ocaml/core
> >>>> > ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or
> >>>> > directory
> >>>> >
> >>>> > (Full output attached as build-output2.) I "fixed" this by mkdir'ing
> >>>> > base/compare/lib.
> >>>> >
> >>>> > 3. patch fails in the fieldslib directory. Here's the error:
> >>>> >
> >>>> > ------ base/fieldslib ------
> >>>> > ~/ocaml/core/base/fieldslib ~/ocaml/core
> >>>> > W: Field XMETAType is set but matching plugin is not enabled.
> >>>> > I: File INSTALL doesn't exist, creating it.
> >>>> > I: File Makefile doesn't exist, creating it.
> >>>> > I: Regenerating file _tags
> >>>> > I: File configure doesn't exist, creating it.
> >>>> > I: File lib/META doesn't exist, creating it.
> >>>> > I: File lib/fieldslib.mllib doesn't exist, creating it.
> >>>> > I: File lib/fieldslib.odocl has not changed, skipping
> >>>> > I: File myocamlbuild.ml doesn't exist, creating it.
> >>>> > I: File setup.ml doesn't exist, creating it.
> >>>> > I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
> >>>> > patching file setup.ml
> >>>> > Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
> >>>> > Hunk #2 FAILED at 1286.
> >>>> > Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
> >>>> > Hunk #4 FAILED at 4269.
> >>>> > 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
> >>>> >
> >>>> > And:
> >>>> >
> >>>> > $ cat setup.ml.rej
> >>>> > --- setup.ml    2012-01-26 09:04:49.000000000 +0000
> >>>> > +++ setup.ml    2012-01-26 09:25:06.000000000 +0000
> >>>> > @@ -1286,6 +1287,7 @@
> >>>> >         source_file_exists is_native ext_lib ext_dll =
> >>>> >     (* The headers that should be compiled along *)
> >>>> >     let headers =
> >>>> > +      if lib.lib_pack then [] else
> >>>> >       List.fold_left
> >>>> >         (fun hdrs modul ->
> >>>> >            try
> >>>> > @@ -4269,6 +4278,7 @@
> >>>> >                 List.rev_append lib_extra acc
> >>>> >               in
> >>>> >               let acc =
> >>>> > +                if lib.lib_pack then acc else
> >>>> >                 (* Add uncompiled header from the source tree *)
> >>>> >                 let path =
> >>>> >                   BaseFilePath.of_unix bs.bs_path
> >>>> >
> >>>> > Full output is attached as build-output3. I've also attached my
> >>>> > setup.ml from fieldslib. I'm stuck with this one.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120131/a644a28f/attachment.html>

From anil at recoil.org  Tue Jan 31 15:37:22 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 31 Jan 2012 15:37:22 +0000
Subject: Pull requests
In-Reply-To: <CADKNfh+y-jQ_9oJfihHgwzDYqv-Lrbqer1LCvWQfjLoKTTYoAw@mail.gmail.com>
References: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>
 <A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org>
 <CADKNfhKzEDY7==Zj2vZosWjeiDVUHYsH9W3mw99O7Ki_BkEBpw@mail.gmail.com>
 <2B312922-E9DE-4225-AD9A-ADBBC26691B9@recoil.org>
 <CADKNfh+y-jQ_9oJfihHgwzDYqv-Lrbqer1LCvWQfjLoKTTYoAw@mail.gmail.com>
Message-ID: <20120131153720.GA18629@dark.recoil.org>


On Sun, Jan 29, 2012 at 07:17:04PM -0500, Yaron Minsky wrote:
> I guess I hadn't fully understood your earlier proposal.  I had thought
> that the signed-off idea was a protection in addition to signing a CLA, but
> now looking back I realize the intent is that it be instead.
> 
> But what's the advantage?  In terms of traceability of patches, I've been
> thinking that bitbucket's user authentication would be sufficient, since
> we'd have the name of the author of each patch clearly visible.  As a
> pragmatic matter, it seems like that would identify users to us and allow
> us to back out changes if need be.

Bitbucket's user authentication is pretty orthogonal, as patches come in
through Mercurial. The DVCSes separate the committer from the author, so
that it can be applied by a project committer (of which Xen only has 3)
and patches can come from the general public (of which Xen has 100s of
different patch sources).

This permits you to nominate a trusted core (no pun intended) of people
who can apply changes to the main repository, and they also check that the
patch came from a sensible source. The Acked-By mechanism lets subsystem
maintainers also certify it on the way through.

All of this is only useful in two cases: 1) you're trying to track down a
bug, and you can auto-bisect from a known-good working changeset and find
a set of people to blame. 2) is that there is an IPR contest over a
particular patch, and you can both remove that code, and also understand
why the people who authorized it failed to spot the error.

> I guess signing an agreement is somewhat onerous, and I agree that they
> might not be able to sign such an agreement, depending on the agreements
> they have with their employers.  But the "Developers Certificate of
> Origin", which people are implicitly signing on to, seems to carry the same
> problem.  And having people actually sign the agreement seems to improve
> the chance that people are actually paying attention to the rules and
> following whatever their IP restrictions are.

The DCO isn't perfect, but it's got the big advantage that it doesn't have
an unnecessary contract to sign as the CLA does.  Most engineers would
either just sign a contract (no clear personal damages, and they are
limited liablity if at work) or not bother contributing code as going
through legal is too much hassle.

Either way, the real question is what you're trying to protect yourself
against in all this. If (as I suspect) you want to avoid tainting your
so-far pristine codebase with potentially plagiarised code, then setting
up a system that lets you rollback the bad bits is far more important than
getting people to sign a contract. The DCO does this, and it's no accident
that Linux and Xen both handle a hugely complex IPR situation without
getting lawyers involved. How often have you seen IBM, Microsoft, AMD,
Intel and HP all submit patches to a shared codebase without (much) drama?
We can only dream of getting OCaml Core to such giddy heights :-)

> Honestly, I'd rather not have submissions from people who aren't allowed to
> contribute by their employer, and requiring people to sign a CLA seems to
> improve the chance that people get this right.

You should be extremely wary of people who do not have the rights to
submit code, but the DCO covers this as explicitly as the CLA.

-anil


From ogunden at phauna.org  Tue Jan 31 20:49:03 2012
From: ogunden at phauna.org (Owen Gunden)
Date: Tue, 31 Jan 2012 15:49:03 -0500
Subject: license
Message-ID: <CA+LP8rTu-NBPfTT=MFPT-rCbux5pZ9rJp82RxbLj=Htiid1vRg@mail.gmail.com>


One of the Mlstate developers pointed out that there's no license
information readily available in the bitbucket repo. I couldn't find
any either.

Is that something that can be easily added?


From ogunden at phauna.org  Tue Jan 31 22:08:29 2012
From: ogunden at phauna.org (Owen Gunden)
Date: Tue, 31 Jan 2012 17:08:29 -0500
Subject: Trouble building my first program
In-Reply-To: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
Message-ID: <CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>


Try adding -verbose to your ocamlfind call. Check the path to
libcore.a in the gcc call. My guess is that your install is not
getting the path quite right.

On Tue, Jan 31, 2012 at 4:57 PM, David House <dmhouse at gmail.com> wrote:
> I'm having a little trouble at the linking stage trying to build my
> first program that uses core.
>
> $ ocamlfind ocamlopt -package core -linkpkg -o simple_core
> simple_core.ml -thread
> gcc: error: lib/libcore.a: No such file or directory
> gcc: error: lib/libbin_prot.a: No such file or directory
> File "caml_startup", line 1, characters 0-1:
> Error: Error during linking
>
> $ cat simple_core.ml
> module C = Core
>
> let () =
> ?print_string "foo\n"
>
> If I replace 'module C = Core' with 'module R = Res' and replace core
> with res on the command line, then everything works just fine.
>
> What should I try?


From ogunden at phauna.org  Tue Jan 31 22:10:23 2012
From: ogunden at phauna.org (Owen Gunden)
Date: Tue, 31 Jan 2012 17:10:23 -0500
Subject: Trouble building my first program
In-Reply-To: <CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
Message-ID: <CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>


On Tue, Jan 31, 2012 at 5:08 PM, Owen Gunden <ogunden at phauna.org> wrote:
> Try adding -verbose to your ocamlfind call. Check the path to
> libcore.a in the gcc call. My guess is that your install is not
> getting the path quite right.

(Your command line works fine on my machine)


From yminsky at janestreet.com  Tue Jan 31 23:11:44 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 31 Jan 2012 18:11:44 -0500
Subject: license
In-Reply-To: <CA+LP8rTu-NBPfTT=MFPT-rCbux5pZ9rJp82RxbLj=Htiid1vRg@mail.gmail.com>
References: <CA+LP8rTu-NBPfTT=MFPT-rCbux5pZ9rJp82RxbLj=Htiid1vRg@mail.gmail.com>
Message-ID: <CACLX4jS8m46ihRPnktYjbcLRgEbfiGeVNtCRAVZaPtfE9MKmqA@mail.gmail.com>

Hey Owen!  Long time no see!

Yup!  We're currently getting some lawyerly advice, and once we do, we're
going to clean up the indications of licensing there.  For the curious, the
license is the standard LGPL+linking exception (though we may change that
for something more lenient in the near future.)

On Tue, Jan 31, 2012 at 3:49 PM, Owen Gunden <ogunden at phauna.org> wrote:

> One of the Mlstate developers pointed out that there's no license
> information readily available in the bitbucket repo. I couldn't find
> any either.
>
> Is that something that can be easily added?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120131/7146c01d/attachment.html>

From dmhouse at gmail.com  Tue Jan 31 19:27:36 2012
From: dmhouse at gmail.com (David House)
Date: Tue, 31 Jan 2012 19:27:36 +0000
Subject: Problems building on Linux
In-Reply-To: <CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
	<CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
	<CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>
Message-ID: <CADy1MauqU8Ue99NmTfJURqUzJ9+LOtUvamdq=QV-QHZXHkpL2g@mail.gmail.com>


Great! I applied your changes manually since they're not in the public repo yet.

I ran in to a few more problems.

1. The pre-build command for bin-prot wasn't working: I was getting
'no such file or directory: lib/*.{h,mlh}'. I fixed this by expanding
the braces in oasis.sh to be 'cp lib/*.h lib/*.mlh _build'.

2. core seems to have a dependency on the res package which was not
documented. I guess this should go in the installation hints on the
wiki.

3. There are some integer literals bigger than 2^31, and my measly
four-bytes-to-a-word system couldn't cope :)
  - core/extended/lib/bench.ml contains 1_000_000_000_000;
  - extended_linux.ml in the same directory has three, on lines 127,
138 and 139 (the CIFS_MAGIC_NUMBER, HPFS_SUPER_MAGIC and
HUGETLBFS_MAGIC lines).
I just commented out these lines. (But I expect the proper fix is to
make these things [Int64]s, seeing as numbers > 2^31 seem to be valid
inputs to these functions.)

I actually downgraded to Oasis 0.2.0 when I hit these, in case they
fixed the errors. So I haven't tested with Oasis 0.2.1; but I also
don't think supporting Oasis 0.2.1 is really a high priority.

Async installed just fine, by the way.

On 31 January 2012 11:19, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> Thanks David! Fixes for all three issues are making their way to the
> public tree.
>
> The changes are:
> ?- use this bit of bash awesome to pass arrays that may be empty in
> the build-and-install script:
> ? ? ${foo[@]:+${foo[@]}} (from http://stackoverflow.com/q/7577052)
> ?- I was creating the a directory after using it. I forget which way time flows.
> ?- use patch -l (ignore whitespace) when patching the setup.ml files
> (which should make it work on 0.2.1)
>
>
> On Sun, Jan 29, 2012 at 10:45 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> Will do. ?Sorry for the misdirection.
>>
>> On Sun, Jan 29, 2012 at 5:43 PM, David House <dmhouse at gmail.com> wrote:
>>> The version that the installation hints specify, which is 0.2.1. (Which was,
>>> incidentally, a real pain to install!) I'll try again tomorrow with a
>>> downgraded version. Could you change the wiki?
>>>
>>> On Jan 29, 2012 10:40 PM, "Yaron Minsky" <yminsky at janestreet.com> wrote:
>>>>
>>>> Which version of Oasis do you have installed? ?I wouldn't expect it to
>>>> work with anything but 0.2.0.
>>>>
>>>> y
>>>>
>>>> On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com> wrote:
>>>> > Hi all,
>>>> >
>>>> > $ uname -a
>>>> > Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
>>>> > 2012 i686 athlon i386 GNU/Linux
>>>> >
>>>> > I'm now not 100% sure of the state of my system, because I've had a
>>>> > few aborted attempts at installing the core packages. But if I clone a
>>>> > fresh checkout of the tree, and `ocamlfind remove' all the packages,
>>>> > then use build-and-install, the following problems occur:
>>>> >
>>>> > 1. I get the 'Don't know what do with arguments: ""' error that Ron
>>>> > described. (Full output attached as build-output1.) I "fixed" this by
>>>> > replacing:
>>>> > ?./oasis.sh $optflags "${configopts[@]-}"
>>>> > with:
>>>> > ?./oasis.sh
>>>> > in build-and-install.sh.
>>>> >
>>>> > 2. The following error occurs when building compare:
>>>> >
>>>> > ------ base/compare ------
>>>> > ~/ocaml/core/base/compare ~/ocaml/core
>>>> > ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or
>>>> > directory
>>>> >
>>>> > (Full output attached as build-output2.) I "fixed" this by mkdir'ing
>>>> > base/compare/lib.
>>>> >
>>>> > 3. patch fails in the fieldslib directory. Here's the error:
>>>> >
>>>> > ------ base/fieldslib ------
>>>> > ~/ocaml/core/base/fieldslib ~/ocaml/core
>>>> > W: Field XMETAType is set but matching plugin is not enabled.
>>>> > I: File INSTALL doesn't exist, creating it.
>>>> > I: File Makefile doesn't exist, creating it.
>>>> > I: Regenerating file _tags
>>>> > I: File configure doesn't exist, creating it.
>>>> > I: File lib/META doesn't exist, creating it.
>>>> > I: File lib/fieldslib.mllib doesn't exist, creating it.
>>>> > I: File lib/fieldslib.odocl has not changed, skipping
>>>> > I: File myocamlbuild.ml doesn't exist, creating it.
>>>> > I: File setup.ml doesn't exist, creating it.
>>>> > I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
>>>> > patching file setup.ml
>>>> > Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
>>>> > Hunk #2 FAILED at 1286.
>>>> > Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
>>>> > Hunk #4 FAILED at 4269.
>>>> > 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
>>>> >
>>>> > And:
>>>> >
>>>> > $ cat setup.ml.rej
>>>> > --- setup.ml ? ?2012-01-26 09:04:49.000000000 +0000
>>>> > +++ setup.ml ? ?2012-01-26 09:25:06.000000000 +0000
>>>> > @@ -1286,6 +1287,7 @@
>>>> > ? ? ? ? source_file_exists is_native ext_lib ext_dll =
>>>> > ? ? (* The headers that should be compiled along *)
>>>> > ? ? let headers =
>>>> > + ? ? ?if lib.lib_pack then [] else
>>>> > ? ? ? List.fold_left
>>>> > ? ? ? ? (fun hdrs modul ->
>>>> > ? ? ? ? ? ?try
>>>> > @@ -4269,6 +4278,7 @@
>>>> > ? ? ? ? ? ? ? ? List.rev_append lib_extra acc
>>>> > ? ? ? ? ? ? ? in
>>>> > ? ? ? ? ? ? ? let acc =
>>>> > + ? ? ? ? ? ? ? ?if lib.lib_pack then acc else
>>>> > ? ? ? ? ? ? ? ? (* Add uncompiled header from the source tree *)
>>>> > ? ? ? ? ? ? ? ? let path =
>>>> > ? ? ? ? ? ? ? ? ? BaseFilePath.of_unix bs.bs_path
>>>> >
>>>> > Full output is attached as build-output3. I've also attached my
>>>> > setup.ml from fieldslib. I'm stuck with this one.


From dmhouse at gmail.com  Tue Jan 31 20:34:28 2012
From: dmhouse at gmail.com (David House)
Date: Tue, 31 Jan 2012 20:34:28 +0000
Subject: Problems building on Linux
In-Reply-To: <CACLX4jTyZGzw68eAKaso-xKQZCHK8n7hhQMcKsaK83+mSVf+2w@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
	<CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
	<CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>
	<CADy1MauqU8Ue99NmTfJURqUzJ9+LOtUvamdq=QV-QHZXHkpL2g@mail.gmail.com>
	<CACLX4jTyZGzw68eAKaso-xKQZCHK8n7hhQMcKsaK83+mSVf+2w@mail.gmail.com>
Message-ID: <CADy1MasZ+P1nr6c7-k+M08+tR0Gt72jAkyuJre98tQQOy-Os6Q@mail.gmail.com>


On 31 January 2012 19:45, Yaron Minsky <yminsky at janestreet.com> wrote:
>> 2. core seems to have a dependency on the res package which was not
>> documented. I guess this should go in the installation hints on the
>> wiki.
>
>
> Yes! ?Can you update the wiki? ?I'd love to not be the only person
> contributing...

I cloned and I have a patch, but I can't push. It asks me for a
username and password on push; I enter my bitbucket credentials, but
then I get "authorization failed".

>> 3. There are some integer literals bigger than 2^31, and my measly
>> four-bytes-to-a-word system couldn't cope :)
>> ?- core/extended/lib/bench.ml contains 1_000_000_000_000;
>> ?- extended_linux.ml in the same directory has three, on lines 127,
>> 138 and 139 (the CIFS_MAGIC_NUMBER, HPFS_SUPER_MAGIC and
>> HUGETLBFS_MAGIC lines).
>> I just commented out these lines. (But I expect the proper fix is to
>> make these things [Int64]s, seeing as numbers > 2^31 seem to be valid
>> inputs to these functions.)
>
>
> Maybe Int63's, our usual solution to wanting to work on 32bit and be fast on
> 64bit...

Right, of course. The numbers in question are still way below 2^63.


From dmhouse at gmail.com  Tue Jan 31 20:38:25 2012
From: dmhouse at gmail.com (David House)
Date: Tue, 31 Jan 2012 20:38:25 +0000
Subject: Problems building on Linux
In-Reply-To: <CADy1MasZ+P1nr6c7-k+M08+tR0Gt72jAkyuJre98tQQOy-Os6Q@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
	<CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
	<CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>
	<CADy1MauqU8Ue99NmTfJURqUzJ9+LOtUvamdq=QV-QHZXHkpL2g@mail.gmail.com>
	<CACLX4jTyZGzw68eAKaso-xKQZCHK8n7hhQMcKsaK83+mSVf+2w@mail.gmail.com>
	<CADy1MasZ+P1nr6c7-k+M08+tR0Gt72jAkyuJre98tQQOy-Os6Q@mail.gmail.com>
Message-ID: <CADy1MasZ9azTFN1Zvi==hN8pj9BWmbjYFOrSgQ3zpjT8JduEgw@mail.gmail.com>


On 31 January 2012 20:34, David House <dmhouse at gmail.com> wrote:
> On 31 January 2012 19:45, Yaron Minsky <yminsky at janestreet.com> wrote:
>>> 2. core seems to have a dependency on the res package which was not
>>> documented. I guess this should go in the installation hints on the
>>> wiki.
>>
>>
>> Yes! ?Can you update the wiki? ?I'd love to not be the only person
>> contributing...
>
> I cloned and I have a patch, but I can't push. It asks me for a
> username and password on push; I enter my bitbucket credentials, but
> then I get "authorization failed".

Never mind -- once I log in to BitBucket I see there is a link to edit
the wiki in my browser. Doing that seems easier than figuring out the
HTTP authentication.


From dmhouse at gmail.com  Tue Jan 31 21:57:28 2012
From: dmhouse at gmail.com (David House)
Date: Tue, 31 Jan 2012 21:57:28 +0000
Subject: Trouble building my first program
Message-ID: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>


I'm having a little trouble at the linking stage trying to build my
first program that uses core.

$ ocamlfind ocamlopt -package core -linkpkg -o simple_core
simple_core.ml -thread
gcc: error: lib/libcore.a: No such file or directory
gcc: error: lib/libbin_prot.a: No such file or directory
File "caml_startup", line 1, characters 0-1:
Error: Error during linking

$ cat simple_core.ml
module C = Core

let () =
  print_string "foo\n"

If I replace 'module C = Core' with 'module R = Res' and replace core
with res on the command line, then everything works just fine.

What should I try?


From yminsky at janestreet.com  Fri Jan  6 11:52:30 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 6 Jan 2012 06:52:30 -0500
Subject: Progress on the bitbucket repo
Message-ID: <CACLX4jR8oWD_PgFS3CW8-Ekw-eLyHP=g5uhEoB47b3hYYBUn5g@mail.gmail.com>

We now rescind our previous threat to delete and recreate the bitbucket
repo.  Yury's done a bit more work on getting things to build cleanly using
oasis.  You still need to patch Oasis in the way that Anil pointed out in
an earlier thread, but other than that, things should work.  Yury is going
to do some testing to make sure that this builds cleanly on a mac.  And
we'd be overjoyed to have people contribute patches, particularly for
solving portability problems.

To make it easier to deal with the fact that you need a patched oasis, Yury
is going to release a separate tarball of the files that Oasis generates,
so that people can just grab that and untar it on top of the repo without
needing an installed oasis.

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120106/979a739c/attachment-0001.html>

From mysnowls at 163.com  Sat Jan  7 12:28:18 2012
From: mysnowls at 163.com (Lin)
Date: Sat, 7 Jan 2012 04:28:18 -0800 (PST)
Subject: Short document / tutorial on Core
In-Reply-To: <20111007182456.GX14790@janestreet.com>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>
 <20111007182456.GX14790@janestreet.com>
Message-ID: <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>

Hello Yaron,

   I'd also suggest that there should be a wiki page to explain some 
differences between the conventions used in core and in std-lib, or else 
many guys would complain about this, like what I did toay. 

   Today I decided to use core for a previously std-lib based program. 
While core does give me quite a lot of convenience, such as `Time.format' 
to get handy timestamp string in my log module, I was really frustrated by 
the convention of returning am Option value rather than raise exception in 
`List.tl', `String.index`, etc. 

  Also in the std-lib, the first param to functions like `List.iter'  is 
the func, but in core the first param is the list being operated on. -_-!! 
  If there could be such a wiki page as I mentioned, I'd feel much more 
comfortable with core.

Lin
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/aca9698d/attachment-0001.html>

From yminsky at janestreet.com  Sat Jan  7 13:02:22 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 7 Jan 2012 08:02:22 -0500
Subject: Short document / tutorial on Core
In-Reply-To: <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>
	<20111007182456.GX14790@janestreet.com>
	<16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
Message-ID: <CACLX4jRyxT_9nr16-ukZTvuNADqry4zWOYxKNcx4_uUEUYAOAw@mail.gmail.com>

That's totally fair.  Here's a link to a blog post that covers some of
these issues:

   https://ocaml.janestreet.com/?q=node/28

I'll put this on the wiki as well.

y

On Sat, Jan 7, 2012 at 7:28 AM, Lin <mysnowls at 163.com> wrote:

> Hello Yaron,
>
>    I'd also suggest that there should be a wiki page to explain some
> differences between the conventions used in core and in std-lib, or else
> many guys would complain about this, like what I did toay.
>
>    Today I decided to use core for a previously std-lib based program.
> While core does give me quite a lot of convenience, such as `Time.format'
> to get handy timestamp string in my log module, I was really frustrated by
> the convention of returning am Option value rather than raise exception in
> `List.tl', `String.index`, etc.
>
>   Also in the std-lib, the first param to functions like `List.iter'  is
> the func, but in core the first param is the list being operated on. -_-!!
>   If there could be such a wiki page as I mentioned, I'd feel much more
> comfortable with core.
>
> Lin
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/ffc97177/attachment-0001.html>

From agarwal1975 at gmail.com  Sat Jan  7 13:58:48 2012
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Sat, 7 Jan 2012 08:58:48 -0500
Subject: Short document / tutorial on Core
In-Reply-To: <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>
 <20111007182456.GX14790@janestreet.com> <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
Message-ID: <CAMu2m2+BJ=QdNYnyTj8iWEwYp8FapwbKO7KZOFzK2gA0gSLqyw@mail.gmail.com>

In general you should not assume Core is a drop-in replacement for the
std-lib. It was deliberately designed with different conventions that were
felt to be better. Of course, documentation explaining common design
decisions and how they differ from the std-lib wouldn't hurt.

On Sat, Jan 7, 2012 at 7:28 AM, Lin <mysnowls at 163.com> wrote:

> Hello Yaron,
>
>    I'd also suggest that there should be a wiki page to explain some
> differences between the conventions used in core and in std-lib, or else
> many guys would complain about this, like what I did toay.
>
>    Today I decided to use core for a previously std-lib based program.
> While core does give me quite a lot of convenience, such as `Time.format'
> to get handy timestamp string in my log module, I was really frustrated by
> the convention of returning am Option value rather than raise exception in
> `List.tl', `String.index`, etc.
>
>   Also in the std-lib, the first param to functions like `List.iter'  is
> the func, but in core the first param is the list being operated on. -_-!!
>   If there could be such a wiki page as I mentioned, I'd feel much more
> comfortable with core.
>
> Lin
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/d9678eb1/attachment-0001.html>

From yminsky at janestreet.com  Sat Jan  7 14:39:44 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 7 Jan 2012 09:39:44 -0500
Subject: Short document / tutorial on Core
In-Reply-To: <4F08523C.80907@163.com>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>
	<20111007182456.GX14790@janestreet.com>
	<16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
	<CAMu2m2+BJ=QdNYnyTj8iWEwYp8FapwbKO7KZOFzK2gA0gSLqyw@mail.gmail.com>
	<4F08523C.80907@163.com>
Message-ID: <CACLX4jTseWLiOT4dBmWwBiHEu81KRdKOuj_UpcXyY+_qu=_+mw@mail.gmail.com>

There is now a "resources" list at the bottom of the main page on the wiki,
and it leads to a short summary of Core's coding standards, and a link to
the blog post.

On Sat, Jan 7, 2012 at 9:10 AM, Lin <mysnowls at 163.com> wrote:

> **
> Sure, but everything that I've googled told me core is JSC's alternative
> implentation of the std-lib, so it's quite natural for me as well as
> anybody else to assume core is  a drop-in replacement for std-lib.
>
>
> On 01/07/2012 09:58 PM, Ashish Agarwal wrote:
>
> In general you should not assume Core is a drop-in replacement for the
> std-lib. It was deliberately designed with different conventions that were
> felt to be better. Of course, documentation explaining common design
> decisions and how they differ from the std-lib wouldn't hurt.
>
> On Sat, Jan 7, 2012 at 7:28 AM, Lin <mysnowls at 163.com> wrote:
>
>> Hello Yaron,
>>
>>    I'd also suggest that there should be a wiki page to explain some
>> differences between the conventions used in core and in std-lib, or else
>> many guys would complain about this, like what I did toay.
>>
>>    Today I decided to use core for a previously std-lib based program.
>> While core does give me quite a lot of convenience, such as `Time.format'
>> to get handy timestamp string in my log module, I was really frustrated by
>> the convention of returning am Option value rather than raise exception in
>> `List.tl', `String.index`, etc.
>>
>>   Also in the std-lib, the first param to functions like `List.iter'  is
>> the func, but in core the first param is the list being operated on. -_-!!
>>   If there could be such a wiki page as I mentioned, I'd feel much more
>> comfortable with core.
>>
>> Lin
>>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/129da831/attachment-0001.html>

From dmhouse at gmail.com  Sat Jan  7 13:21:30 2012
From: dmhouse at gmail.com (David House)
Date: Sat, 7 Jan 2012 13:21:30 +0000
Subject: Short document / tutorial on Core
In-Reply-To: <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>
	<20111007182456.GX14790@janestreet.com>
	<16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33>
Message-ID: <CADy1MaumRn3oW+RjM19PW4Gh+0wcW58QaLSdEuDOhjDpW597Gg@mail.gmail.com>


On 7 January 2012 12:28, Lin <mysnowls at 163.com> wrote:
> ? Also in the std-lib, the first param to functions like `List.iter'? is the
> func, but in core the first param is the list being operated on. -_-!!

To be precise, in Core, you can do it either way around, because the
function argument is labelled. The following are both valid:

  List.iter my_list ~f:(fun x -> ...)
  List.iter ~f:(fun x -> ...) my_list


From sdefabbiakane at gmail.com  Sun Jan  8 05:06:01 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Sat, 7 Jan 2012 21:06:01 -0800 (PST)
Subject: HN Discussion
Message-ID: <4879289.1635.1325999161913.JavaMail.geo-discussion-forums@vbdz6>

There's a (little) bit of discussion about Core being on BitBucket on 
Hacker News right now:  http://news.ycombinator.com/item?id=3438084

There's at least one question I'm not very well-qualified to answer, if 
someone else would like to take a shot at it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/0a66586a/attachment-0001.html>

From mysnowls at 163.com  Sat Jan  7 14:04:24 2012
From: mysnowls at 163.com (Lin)
Date: Sat, 07 Jan 2012 22:04:24 +0800
Subject: Short document / tutorial on Core
In-Reply-To: <CACLX4jRyxT_9nr16-ukZTvuNADqry4zWOYxKNcx4_uUEUYAOAw@mail.gmail.com>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1>	<20111007182456.GX14790@janestreet.com>	<16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33> <CACLX4jRyxT_9nr16-ukZTvuNADqry4zWOYxKNcx4_uUEUYAOAw@mail.gmail.com>
Message-ID: <4F0850E8.7000008@163.com>

Yeah, the specs on this page is quite clear and well reasoned. I think 
it should be a must-read for every newcomers to core.

On 01/07/2012 09:02 PM, Yaron Minsky wrote:
> That's totally fair.  Here's a link to a blog post that covers some of 
> these issues:
>
> https://ocaml.janestreet.com/?q=node/28
>
> I'll put this on the wiki as well.
>
> y
>
> On Sat, Jan 7, 2012 at 7:28 AM, Lin <mysnowls at 163.com 
> <mailto:mysnowls at 163.com>> wrote:
>
>     Hello Yaron,
>
>        I'd also suggest that there should be a wiki page to explain
>     some differences between the conventions used in core and in
>     std-lib, or else many guys would complain about this, like what I
>     did toay.
>
>        Today I decided to use core for a previously std-lib based
>     program. While core does give me quite a lot of convenience, such
>     as `Time.format' to get handy timestamp string in my log module, I
>     was really frustrated by the convention of returning am Option
>     value rather than raise exception in `List.tl', `String.index`, etc.
>
>       Also in the std-lib, the first param to functions like
>     `List.iter'  is the func, but in core the first param is the list
>     being operated on. -_-!!   If there could be such a wiki page as I
>     mentioned, I'd feel much more comfortable with core.
>
>     Lin
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/d24be379/attachment-0001.html>

From mysnowls at 163.com  Sat Jan  7 14:10:04 2012
From: mysnowls at 163.com (Lin)
Date: Sat, 07 Jan 2012 22:10:04 +0800
Subject: Short document / tutorial on Core
In-Reply-To: <CAMu2m2+BJ=QdNYnyTj8iWEwYp8FapwbKO7KZOFzK2gA0gSLqyw@mail.gmail.com>
References: <31717188.154.1318007947457.JavaMail.geo-discussion-forums@prdw1> <20111007182456.GX14790@janestreet.com> <16152781.1011.1325939298967.JavaMail.geo-discussion-forums@prdv33> <CAMu2m2+BJ=QdNYnyTj8iWEwYp8FapwbKO7KZOFzK2gA0gSLqyw@mail.gmail.com>
Message-ID: <4F08523C.80907@163.com>

Sure, but everything that I've googled told me core is JSC's alternative 
implentation of the std-lib, so it's quite natural for me as well as 
anybody else to assume core is  a drop-in replacement for std-lib.

On 01/07/2012 09:58 PM, Ashish Agarwal wrote:
> In general you should not assume Core is a drop-in replacement for the 
> std-lib. It was deliberately designed with different conventions that 
> were felt to be better. Of course, documentation explaining common 
> design decisions and how they differ from the std-lib wouldn't hurt.
>
> On Sat, Jan 7, 2012 at 7:28 AM, Lin <mysnowls at 163.com 
> <mailto:mysnowls at 163.com>> wrote:
>
>     Hello Yaron,
>
>        I'd also suggest that there should be a wiki page to explain
>     some differences between the conventions used in core and in
>     std-lib, or else many guys would complain about this, like what I
>     did toay.
>
>        Today I decided to use core for a previously std-lib based
>     program. While core does give me quite a lot of convenience, such
>     as `Time.format' to get handy timestamp string in my log module, I
>     was really frustrated by the convention of returning am Option
>     value rather than raise exception in `List.tl', `String.index`, etc.
>
>       Also in the std-lib, the first param to functions like
>     `List.iter'  is the func, but in core the first param is the list
>     being operated on. -_-!!   If there could be such a wiki page as I
>     mentioned, I'd feel much more comfortable with core.
>
>     Lin
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120107/ed42fd29/attachment-0001.html>

From yminsky at gmail.com  Fri Jan 20 10:54:07 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Fri, 20 Jan 2012 05:54:07 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
References: <4F193D2F.6010107@163.com>
	<D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
Message-ID: <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>

That's a totally reasonable request.  We have some internal documentation
that might be worth brushing up and putting out on the wiki.  I'll see if I
can get that up today, and then we can think about where people would like
to see expanded documentation.

As for comparing Lwt and Async, I think I discussed some of the issues on
the caml list when Async came out, but the short version is:

1) very similar core design
2) much less C code in Async
3) Monitors instead of stuffing errors in the monads
4) Async has more disciplined distribution of unhandled exceptions, and a
more disciplined interleaving model
5) Lwt has more hooks into the outside world and is more widely used

(4) is a complicated one to explain, so perhaps that's one to expand upon
in a blog post.

Stephen also wrote up a detailed comparison of Async and Lwt right before
the release, which perhaps we should also clean up and post.

y

On Fri, Jan 20, 2012 at 5:13 AM, Anil Madhavapeddy <anil at recoil.org> wrote:

> Agreed, and a post contrasting Lwt and Async would be most gratefully
> received. Bonus points for the (hopefully simple) adapter code between Lwt
> and Async to let them both co-exist in the same event loop.
>
> -Anil
>
> On 20 Jan 2012, at 10:08, Lin wrote:
>
> > I see that in the ocaml-core repository at Bitbucket, there are several
> examples about using Async, which is of great help for users. But in my
> opinion, the primary concepts in  Async, such as stream, monitor, and the
> underlying threading model as well as the design principles needs more
> examples and illustration so that Async can be more widely used outside
> Jane Street.
> >
> >
> > Lin
> > 01/20/2012
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/f337c5ec/attachment-0001.html>

From yminsky at gmail.com  Fri Jan 20 11:06:28 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Fri, 20 Jan 2012 06:06:28 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org>
References: <4F193D2F.6010107@163.com>
	<D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
	<CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
	<D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org>
Message-ID: <CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>

On Jan 20, 2012 5:58 AM, "Anil Madhavapeddy" <anil at recoil.org> wrote:
>
> 3) and 4) are definitely interesting and great points in Async's favour.
 In our use of Lwt, exception propagation and the interface with normal
OCaml exceptions have been the most problematic parts of its design,
particularly with respect to space leaks due to exception handlers holding
onto values unexpectedly.
>
> 2) is perhaps a bit of of a low blow, since all the Async C code is
hidden in Core :-) There isn't a particularly large disparity between the
two if you include Core in the count.

Stephen read over lwt and was quite surprised by the amount and nature of
the c code, so on that basis I don't think this is just a line-accounting
trick.  The c code in core is largely wrapping system calls.  But I believe
that Stephen was saying that significant fractions of the complexity of the
runtime are in C.  Stephen, can you elaborate?

> -anil
>
> On 20 Jan 2012, at 10:54, Yaron Minsky wrote:
>
>> That's a totally reasonable request.  We have some internal
documentation that might be worth brushing up and putting out on the wiki.
 I'll see if I can get that up today, and then we can think about where
people would like to see expanded documentation.
>>
>> As for comparing Lwt and Async, I think I discussed some of the issues
on the caml list when Async came out, but the short version is:
>>
>> 1) very similar core design
>> 2) much less C code in Async
>> 3) Monitors instead of stuffing errors in the monads
>> 4) Async has more disciplined distribution of unhandled exceptions, and
a more disciplined interleaving model
>> 5) Lwt has more hooks into the outside world and is more widely used
>>
>> (4) is a complicated one to explain, so perhaps that's one to expand
upon in a blog post.
>>
>> Stephen also wrote up a detailed comparison of Async and Lwt right
before the release, which perhaps we should also clean up and post.
>>
>> y
>>
>> On Fri, Jan 20, 2012 at 5:13 AM, Anil Madhavapeddy <anil at recoil.org>
wrote:
>>>
>>> Agreed, and a post contrasting Lwt and Async would be most gratefully
received. Bonus points for the (hopefully simple) adapter code between Lwt
and Async to let them both co-exist in the same event loop.
>>>
>>> -Anil
>>>
>>> On 20 Jan 2012, at 10:08, Lin wrote:
>>>
>>> > I see that in the ocaml-core repository at Bitbucket, there are
several examples about using Async, which is of great help for users. But
in my opinion, the primary concepts in  Async, such as stream, monitor, and
the underlying threading model as well as the design principles needs more
examples and illustration so that Async can be more widely used outside
Jane Street.
>>> >
>>> >
>>> > Lin
>>> > 01/20/2012
>>> >
>>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/5a889b28/attachment-0001.html>

From yminsky at janestreet.com  Fri Jan 20 12:33:34 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 20 Jan 2012 07:33:34 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <20120120111728.GC17972@dark.recoil.org>
References: <4F193D2F.6010107@163.com>
	<D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
	<CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
	<D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org>
	<CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>
	<20120120111728.GC17972@dark.recoil.org>
Message-ID: <CACLX4jQUcuqNUMOKP-8LT686NXJ=J-WtGxXw+4zr2Csw1vWQQg@mail.gmail.com>

On Fri, Jan 20, 2012 at 6:17 AM, Anil Madhavapeddy <anil at recoil.org> wrote:

>
> There's a reasonable amount of Lwt C code to deal with the 'detached'
> threads which are mapped to pthreads. That's unfortunately necessary for
> the synchronous APIs in *NIX like DNS resolution and disk I/O. Luckily not
> such a big deal for my particular use case.
>

I don't think it's quite necessary.  We deal with the same issues without
the C code.


> The actual socket handling in the Lwt UNIX backend is also quite complex
> OCaml code, but this appear to be due to the need for cancellation to free
> resources like fds when Lwt.cancel is invoked (cancellation is another
> area of Lwt thats hard to use, but is generally hard with cooperative
> threads, and it sounds like monitors may be an easier solution).
>

We actually don't support cancellation of monitors, although it's easy to
implement, because of the complexity of cancellation semantics (how do you
deal with try-protect type idioms, for example?)


> Overall, both Async and Lwt are pretty good about implementing the
> majority of their logic in safe OCaml.  One of my favourite things about
> Lwt is how it explicitly has a src/core directory with the pure code, and
> src/unix with all the evaluation modules to drive the cothreads. It makes
> porting it to different platforms (or microkernels!) in stages an absolute
> breeze.


Look in bitbucket!   That is in fact a great idea, and Stephen rearranged
Async to follow the same design.

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/4e208761/attachment-0001.html>

From anil at recoil.org  Fri Jan 20 10:13:48 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 20 Jan 2012 10:13:48 +0000
Subject: hope to see some blog posts about Async
In-Reply-To: <4F193D2F.6010107@163.com>
References: <4F193D2F.6010107@163.com>
Message-ID: <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>


Agreed, and a post contrasting Lwt and Async would be most gratefully received. Bonus points for the (hopefully simple) adapter code between Lwt and Async to let them both co-exist in the same event loop.

-Anil

On 20 Jan 2012, at 10:08, Lin wrote:

> I see that in the ocaml-core repository at Bitbucket, there are several examples about using Async, which is of great help for users. But in my opinion, the primary concepts in  Async, such as stream, monitor, and the underlying threading model as well as the design principles needs more examples and illustration so that Async can be more widely used outside Jane Street.
> 
> 
> Lin
> 01/20/2012
> 



From anil at recoil.org  Fri Jan 20 10:58:30 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 20 Jan 2012 10:58:30 +0000
Subject: hope to see some blog posts about Async
In-Reply-To: <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
References: <4F193D2F.6010107@163.com> <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org> <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
Message-ID: <D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org>

3) and 4) are definitely interesting and great points in Async's favour.  In our use of Lwt, exception propagation and the interface with normal OCaml exceptions have been the most problematic parts of its design, particularly with respect to space leaks due to exception handlers holding onto values unexpectedly.

2) is perhaps a bit of of a low blow, since all the Async C code is hidden in Core :-) There isn't a particularly large disparity between the two if you include Core in the count.

-anil

On 20 Jan 2012, at 10:54, Yaron Minsky wrote:

> That's a totally reasonable request.  We have some internal documentation that might be worth brushing up and putting out on the wiki.  I'll see if I can get that up today, and then we can think about where people would like to see expanded documentation.
> 
> As for comparing Lwt and Async, I think I discussed some of the issues on the caml list when Async came out, but the short version is:
> 
> 1) very similar core design
> 2) much less C code in Async
> 3) Monitors instead of stuffing errors in the monads
> 4) Async has more disciplined distribution of unhandled exceptions, and a more disciplined interleaving model
> 5) Lwt has more hooks into the outside world and is more widely used
> 
> (4) is a complicated one to explain, so perhaps that's one to expand upon in a blog post.
> 
> Stephen also wrote up a detailed comparison of Async and Lwt right before the release, which perhaps we should also clean up and post.
> 
> y
> 
> On Fri, Jan 20, 2012 at 5:13 AM, Anil Madhavapeddy <anil at recoil.org> wrote:
> Agreed, and a post contrasting Lwt and Async would be most gratefully received. Bonus points for the (hopefully simple) adapter code between Lwt and Async to let them both co-exist in the same event loop.
> 
> -Anil
> 
> On 20 Jan 2012, at 10:08, Lin wrote:
> 
> > I see that in the ocaml-core repository at Bitbucket, there are several examples about using Async, which is of great help for users. But in my opinion, the primary concepts in  Async, such as stream, monitor, and the underlying threading model as well as the design principles needs more examples and illustration so that Async can be more widely used outside Jane Street.
> >
> >
> > Lin
> > 01/20/2012
> >
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/84b030ec/attachment-0001.html>

From anil at recoil.org  Fri Jan 20 11:17:28 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 20 Jan 2012 11:17:28 +0000
Subject: hope to see some blog posts about Async
In-Reply-To: <CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>
References: <4F193D2F.6010107@163.com>
 <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
 <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
 <D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org>
 <CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>
Message-ID: <20120120111728.GC17972@dark.recoil.org>


On Fri, Jan 20, 2012 at 06:06:28AM -0500, Yaron Minsky wrote:
> On Jan 20, 2012 5:58 AM, "Anil Madhavapeddy" <anil at recoil.org> wrote:
> >
> > 3) and 4) are definitely interesting and great points in Async's favour.
>  In our use of Lwt, exception propagation and the interface with normal
> OCaml exceptions have been the most problematic parts of its design,
> particularly with respect to space leaks due to exception handlers holding
> onto values unexpectedly.
> >
> > 2) is perhaps a bit of of a low blow, since all the Async C code is
> hidden in Core :-) There isn't a particularly large disparity between the
> two if you include Core in the count.
> 
> Stephen read over lwt and was quite surprised by the amount and nature of
> the c code, so on that basis I don't think this is just a line-accounting
> trick.  The c code in core is largely wrapping system calls.  But I believe
> that Stephen was saying that significant fractions of the complexity of the
> runtime are in C.  Stephen, can you elaborate?

There's a reasonable amount of Lwt C code to deal with the 'detached'
threads which are mapped to pthreads. That's unfortunately necessary for
the synchronous APIs in *NIX like DNS resolution and disk I/O. Luckily not
such a big deal for my particular use case.

The actual socket handling in the Lwt UNIX backend is also quite complex
OCaml code, but this appear to be due to the need for cancellation to free
resources like fds when Lwt.cancel is invoked (cancellation is another
area of Lwt thats hard to use, but is generally hard with cooperative
threads, and it sounds like monitors may be an easier solution).

Overall, both Async and Lwt are pretty good about implementing the
majority of their logic in safe OCaml.  One of my favourite things about
Lwt is how it explicitly has a src/core directory with the pure code, and
src/unix with all the evaluation modules to drive the cothreads. It makes
porting it to different platforms (or microkernels!) in stages an absolute
breeze.

-anil


From marius at monkey.org  Fri Jan 20 19:21:53 2012
From: marius at monkey.org (marius a. eriksen)
Date: Fri, 20 Jan 2012 11:21:53 -0800
Subject: hope to see some blog posts about Async
In-Reply-To: <CACLX4jQUcuqNUMOKP-8LT686NXJ=J-WtGxXw+4zr2Csw1vWQQg@mail.gmail.com>
References: <4F193D2F.6010107@163.com> <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
 <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
 <D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org> <CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>
 <20120120111728.GC17972@dark.recoil.org> <CACLX4jQUcuqNUMOKP-8LT686NXJ=J-WtGxXw+4zr2Csw1vWQQg@mail.gmail.com>
Message-ID: <CAPtk8tv97sxgeRd91iK+HHnofowwmugpJZBeg5Y5pCtwnZ88Hg@mail.gmail.com>


Cancellation is really tricky to get right. I think the correct choice
in many circumstances is to not support it at all, and instead use
some other mechanism when needed.

Concurrent ML presents a very nice solution to threads that require
cancellation: event synchronization is atomic. However, they don't
compose as well as futures do: For example, synchronization isn't
transitive across multiple processes.

What we ended up doing in Finagle[1], which I think worked out very
well, was to not support cancellation, but rather a cancellation
*signal* that flows in the opposite direction from value propagation. The
signal is level triggered, and any interested party can listen to it.
The propagation composes in the expected way (opposite in direction
from the value).

In other words:

  let composed = foo >>= (fun _ -> bar)

propagates cancellation signals on `composed' to `bar', just like values
are propagated from `bar' to `composed'.

You can then listen to the signal (in scala:

  on_cancellation bar (fun () -> (* whatever you like *))

The nice thing about this approach is that only the updater of the
value need worry about cancellation, and we can use this to guarantee
that there's *only one update path*. This actually solves all of the
try ? catch problems, because if there is cancellation, the signal
makes it all the way to the updater of the future, and *it* can decide
what to do. We introduced cancellation in this way about 6 months ago,
and there have yet to be any bugs surfaced from it.

btw: if Pipes weren't buffered, they'd essentially be CML's channels

[1] https://github.com/twitter/finagle


From yminsky at janestreet.com  Fri Jan 20 16:59:04 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 20 Jan 2012 11:59:04 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <4F1948FB.5020701@163.com>
References: <4F193D2F.6010107@163.com>
	<D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
	<CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
	<4F1948FB.5020701@163.com>
Message-ID: <CACLX4jRLb-MHCrqvr0E_6W+-TCEyH-VqJPyZU5o3dBLDV=AzcQ@mail.gmail.com>

Now you don't have to.  Take a look here:

https://bitbucket.org/yminsky/ocaml-core/wiki/DummiesGuideToAsync

Feedback/complaints highly welcome.

y

On Fri, Jan 20, 2012 at 5:59 AM, Lin <mysnowls at 163.com> wrote:

> **
> That's so good. Can't wait to see it.
>
>
> On 01/20/2012 06:54 PM, Yaron Minsky wrote:
>
> That's a totally reasonable request.  We have some internal documentation
> that might be worth brushing up and putting out on the wiki.  I'll see if I
> can get that up today, and then we can think about where people would like
> to see expanded documentation.
>
>  As for comparing Lwt and Async, I think I discussed some of the issues
> on the caml list when Async came out, but the short version is:
>
>  1) very similar core design
> 2) much less C code in Async
> 3) Monitors instead of stuffing errors in the monads
> 4) Async has more disciplined distribution of unhandled exceptions, and a
> more disciplined interleaving model
> 5) Lwt has more hooks into the outside world and is more widely used
>
>  (4) is a complicated one to explain, so perhaps that's one to expand
> upon in a blog post.
>
>  Stephen also wrote up a detailed comparison of Async and Lwt right
> before the release, which perhaps we should also clean up and post.
>
>  y
>
> On Fri, Jan 20, 2012 at 5:13 AM, Anil Madhavapeddy <anil at recoil.org>wrote:
>
>> Agreed, and a post contrasting Lwt and Async would be most gratefully
>> received. Bonus points for the (hopefully simple) adapter code between Lwt
>> and Async to let them both co-exist in the same event loop.
>>
>> -Anil
>>
>> On 20 Jan 2012, at 10:08, Lin wrote:
>>
>> > I see that in the ocaml-core repository at Bitbucket, there are several
>> examples about using Async, which is of great help for users. But in my
>> opinion, the primary concepts in  Async, such as stream, monitor, and the
>> underlying threading model as well as the design principles needs more
>> examples and illustration so that Async can be more widely used outside
>> Jane Street.
>> >
>> >
>> > Lin
>> > 01/20/2012
>> >
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/eda0ee40/attachment-0001.html>

From sweeks at sweeks.com  Fri Jan 20 18:31:40 2012
From: sweeks at sweeks.com (Stephen Weeks)
Date: Fri, 20 Jan 2012 13:31:40 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <CACLX4jQUcuqNUMOKP-8LT686NXJ=J-WtGxXw+4zr2Csw1vWQQg@mail.gmail.com>
References: <4F193D2F.6010107@163.com> <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
 <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
 <D2499022-6215-470A-93DF-C0E91AD0B725@recoil.org> <CADKNfh+tNq=N5Zub0ZNBeyUthXC4hR5z85G=T_yLiv32wPzDtQ@mail.gmail.com>
 <20120120111728.GC17972@dark.recoil.org> <CACLX4jQUcuqNUMOKP-8LT686NXJ=J-WtGxXw+4zr2Csw1vWQQg@mail.gmail.com>
Message-ID: <CAJsFioU4mDkUjta8ntn5ToeA18YushN5oN7RhF=UN7utdRxhsA@mail.gmail.com>

> 2) is perhaps a bit of of a low blow, since all the Async C code is
> hidden in Core :-) There isn't a particularly large disparity
> between the two if you include Core in the count.
..
> Stephen read over lwt and was quite surprised by the amount and
> nature of the c code, so on that basis I don't think this is just a
> line-accounting trick.  The c code in core is largely wrapping
> system calls.  But I believe that Stephen was saying that
> significant fractions of the complexity of the runtime are in C.
> Stephen, can you elaborate?

Core has approx 3k lines of C code, most of which isn't relevant to
Async.  If I had to write C bindings for Async from scratch without
using Core, I guess it would come in comfortably under 1k lines, maybe
even under 500.  One just needs basic wrappers for system calls (read,
write, select) and OCaml's existing Thread API.  The Async scheduler
and job handling are all implemented in OCaml using those.

LWT has approx 6k lines of C code, of which 5k lives in
lwt_unix_unix.c and lwt_unix_stubs.c.  I'm far from an expert on LWT,
but it does appear that much of that code has to do with the scheduler
and job handling.

> There's a reasonable amount of Lwt C code to deal with the 'detached'
> threads which are mapped to pthreads. That's unfortunately necessary for
> the synchronous APIs in *NIX like DNS resolution and disk I/O

I think this does not imply a need for lots of C code.  OCaml has a
thread API, and Async has OCaml code that uses threads to make
blocking calls (like DNS resolution and disk I/O).  Having a basic C
wrapper around the blocking call that releases the OCaml lock is
sufficient.  With that, one can do the rest in OCaml.

> The actual socket handling in the Lwt UNIX backend is also quite complex
> OCaml code, but this appear to be due to the need for cancellation to free
> resources like fds when Lwt.cancel is invoked

Again, I think this does not imply a need for lots of C code.  Async
supports interruptible socket operations, and frees up file
descriptors when the interrupt happens.  Of course, one needs access
to system calls, but the logic can be (and is, in Async) written in
OCaml.

> One of my favourite things about Lwt is how it explicitly has a
> src/core directory with the pure code, and src/unix with all the
> evaluation modules to drive the cothreads. It makes porting it to
> different platforms (or microkernels!) in stages an absolute breeze.
...
> That is in fact a great idea, and Stephen rearranged Async to follow
> the same design.

Yeah, I really liked that about LWT, and now that I copied the approach in
Async, I like that about Async too :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/a4164230/attachment-0001.html>

From sweeks at sweeks.com  Fri Jan 20 18:35:35 2012
From: sweeks at sweeks.com (Stephen Weeks)
Date: Fri, 20 Jan 2012 13:35:35 -0500
Subject: hope to see some blog posts about Async
In-Reply-To: <CACLX4jRLb-MHCrqvr0E_6W+-TCEyH-VqJPyZU5o3dBLDV=AzcQ@mail.gmail.com>
References: <4F193D2F.6010107@163.com> <D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org>
 <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
 <4F1948FB.5020701@163.com> <CACLX4jRLb-MHCrqvr0E_6W+-TCEyH-VqJPyZU5o3dBLDV=AzcQ@mail.gmail.com>
Message-ID: <CAJsFioVD_kMNfM-oRpX2hBud20S5wa_Pa3G-SU4MVnr9e7Lx7Q@mail.gmail.com>

> https://bitbucket.org/yminsky/ocaml-core/wiki/DummiesGuideToAsync

So people know, this document is a bit dated.  Async.Stream still exists in
the code but is being phased out and replaced by Async.Pipe, which
addresses the problems with Async.Stream (space leaks, lack of pushback on
producers by consumers).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/fff56d67/attachment-0001.html>

From mysnowls at 163.com  Fri Jan 20 10:08:47 2012
From: mysnowls at 163.com (Lin)
Date: Fri, 20 Jan 2012 18:08:47 +0800
Subject: hope to see some blog posts about Async
Message-ID: <4F193D2F.6010107@163.com>


I see that in the ocaml-core repository at Bitbucket, there are several 
examples about using Async, which is of great help for users. But in my 
opinion, the primary concepts in  Async, such as stream, monitor, and 
the underlying threading model as well as the design principles needs 
more examples and illustration so that Async can be more widely used 
outside Jane Street.


Lin
01/20/2012



From mysnowls at 163.com  Fri Jan 20 10:59:07 2012
From: mysnowls at 163.com (Lin)
Date: Fri, 20 Jan 2012 18:59:07 +0800
Subject: hope to see some blog posts about Async
In-Reply-To: <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
References: <4F193D2F.6010107@163.com>	<D3F96C1D-FF7E-435A-A14C-BCD0DC4BD729@recoil.org> <CADKNfh+2V8=zgcauKCJWZhXbLcL4xXYCbSwuoMdTkVUZB3aKXw@mail.gmail.com>
Message-ID: <4F1948FB.5020701@163.com>

That's so good. Can't wait to see it.

On 01/20/2012 06:54 PM, Yaron Minsky wrote:
> That's a totally reasonable request.  We have some internal 
> documentation that might be worth brushing up and putting out on the 
> wiki.  I'll see if I can get that up today, and then we can think 
> about where people would like to see expanded documentation.
>
> As for comparing Lwt and Async, I think I discussed some of the issues 
> on the caml list when Async came out, but the short version is:
>
> 1) very similar core design
> 2) much less C code in Async
> 3) Monitors instead of stuffing errors in the monads
> 4) Async has more disciplined distribution of unhandled exceptions, 
> and a more disciplined interleaving model
> 5) Lwt has more hooks into the outside world and is more widely used
>
> (4) is a complicated one to explain, so perhaps that's one to expand 
> upon in a blog post.
>
> Stephen also wrote up a detailed comparison of Async and Lwt right 
> before the release, which perhaps we should also clean up and post.
>
> y
>
> On Fri, Jan 20, 2012 at 5:13 AM, Anil Madhavapeddy <anil at recoil.org 
> <mailto:anil at recoil.org>> wrote:
>
>     Agreed, and a post contrasting Lwt and Async would be most
>     gratefully received. Bonus points for the (hopefully simple)
>     adapter code between Lwt and Async to let them both co-exist in
>     the same event loop.
>
>     -Anil
>
>     On 20 Jan 2012, at 10:08, Lin wrote:
>
>     > I see that in the ocaml-core repository at Bitbucket, there are
>     several examples about using Async, which is of great help for
>     users. But in my opinion, the primary concepts in  Async, such as
>     stream, monitor, and the underlying threading model as well as the
>     design principles needs more examples and illustration so that
>     Async can be more widely used outside Jane Street.
>     >
>     >
>     > Lin
>     > 01/20/2012
>     >
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120120/f27a46fc/attachment-0001.html>

From yminsky at janestreet.com  Sat Jan 21 05:13:57 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 21 Jan 2012 00:13:57 -0500
Subject: POPL
Message-ID: <CACLX4jQnrdq-Smpo-ihvC8o0yZUBXZng53rHuhNfZVnyku8RQw@mail.gmail.com>

As a random note: if any of you are going to be at POPL, Stephen Weeks and
Nathan Linger (both of whom are involved in the development of Core and the
related libraries) will be there on Thursday.  You should reach out and say
hello if you're going to be there too....

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/1736dfee/attachment-0001.html>

From yminsky at janestreet.com  Sat Jan 21 15:13:36 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 21 Jan 2012 10:13:36 -0500
Subject: build-and-install
Message-ID: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>

Has anyone succeeded in building Core on a mac using the build-and-install
script in the root?  When I try to run it, I get the following error:

ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
too many anonymous arguments: ./build-and-install -o j:h -l
jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
-- --disable-linux --disable-posix-tim\
ers
------ base/type-conv ------
~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
W: Field XMETAType is set but matching plugin is not enabled.
I: File INSTALL has not changed, skipping
I: File Makefile has not changed, skipping
I: Regenerating file _tags
I: File configure has not changed, skipping
I: File lib/type-conv.odocl has not changed, skipping
I: File myocamlbuild.ml has not changed, skipping
I: File setup.ml has not changed, skipping
I: File syntax/META has not changed, skipping
I: File syntax/pa_type_conv.mllib has not changed, skipping
I: Running command '/usr/local/bin/ocamlc.opt -config >
'/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
'/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
E: Don't know what to do with arguments: ''
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/8cf0749a/attachment-0001.html>

From yminsky at janestreet.com  Sat Jan 21 15:29:53 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 21 Jan 2012 10:29:53 -0500
Subject: build-and-install
In-Reply-To: <4F1AD8E6.6020202@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
Message-ID: <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>

The sexplib error is a bit surprising.  Did it successfully install sexplib
before building core?

I'm currently trying to build the packages by hand.  Here's my latest
problem:

core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
../../build-common.sh: line 88: undefined: unbound variable


If anyone knows how to get past that, I'd be much obliged...

I started a page on the wiki for collecting hints on how to do the
installation.  There's not much there yet, but I'll fill things out as I
figure them out.  Others should feel free to pile in their advice:

    https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints

y

On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:

> **
> I have been trying to build it by build-and-install script from two hous
> ago. With a few tweaks I can get it build everything before core(and
> async). I changed the last few lines of the script by discarding all the
> flags setting stuff, such that:
>
>   esac
>   ./oasis.sh
>   ./configure --prefix ~/godi
>   make build
>   make install || true
>   popd
> done
>
> But when building core there are some problems. First compiling
> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
> can be solved by just returning an caml_copy_string("Not implemented") for
> backtrace_get() on IA32 machines.
>
> Another problem is like this, which I don't know what to do with it:
>
> error : unbound module Sexplib
>
>
>
> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>
> Has anyone succeeded in building Core on a mac using the build-and-install
> script in the root?  When I try to run it, I get the following error:
>
>  ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> too many anonymous arguments: ./build-and-install -o j:h -l
> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
> -- --disable-linux --disable-posix-tim\
> ers
> ------ base/type-conv ------
> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> W: Field XMETAType is set but matching plugin is not enabled.
> I: File INSTALL has not changed, skipping
> I: File Makefile has not changed, skipping
> I: Regenerating file _tags
> I: File configure has not changed, skipping
> I: File lib/type-conv.odocl has not changed, skipping
> I: File myocamlbuild.ml has not changed, skipping
> I: File setup.ml has not changed, skipping
> I: File syntax/META has not changed, skipping
> I: File syntax/pa_type_conv.mllib has not changed, skipping
> I: Running command '/usr/local/bin/ocamlc.opt -config >
> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> E: Don't know what to do with arguments: ''
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/6d8a45a2/attachment-0001.html>

From yminsky at janestreet.com  Sat Jan 21 15:43:41 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 21 Jan 2012 10:43:41 -0500
Subject: build-and-install
In-Reply-To: <4F1ADC5A.5030901@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F1ADC5A.5030901@163.com>
Message-ID: <CACLX4jRJDqOr63Vcx8dFY3NYRMNSeS_-QtMZuwcqqCGy3+0R9g@mail.gmail.com>

Interesting.  I'll see if I hit the same problem when I get that far.

y

On Sat, Jan 21, 2012 at 10:40 AM, Lin <mysnowls at 163.com> wrote:

> **
>
> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>
> The sexplib error is a bit surprising.  Did it successfully install
> sexplib before building core?
>
>     I do installed sexplib. However when I use it in toplevel, after
> `requre "sexplib"' and `require "sexplib.syntax";  `open Sexplib' told me
> `unbound module Sexplib' while `open Sexp' is OK. But when I try to define
> something like `type t = int with sexp'  it also fails.
>
>
>  I'm currently trying to build the packages by hand.  Here's my latest
> problem:
>
>   core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>  ../../build-common.sh: line 88: undefined: unbound variable
>
>
>  If anyone knows how to get past that, I'd be much obliged...
>
>  I started a page on the wiki for collecting hints on how to do the
> installation.  There's not much there yet, but I'll fill things out as I
> figure them out.  Others should feel free to pile in their advice:
>
>      https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>
>  y
>
>  On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>
>>  I have been trying to build it by build-and-install script from two hous
>> ago. With a few tweaks I can get it build everything before core(and
>> async). I changed the last few lines of the script by discarding all the
>> flags setting stuff, such that:
>>
>>   esac
>>   ./oasis.sh
>>   ./configure --prefix ~/godi
>>   make build
>>   make install || true
>>   popd
>> done
>>
>> But when building core there are some problems. First compiling
>> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
>> can be solved by just returning an caml_copy_string("Not implemented") for
>> backtrace_get() on IA32 machines.
>>
>> Another problem is like this, which I don't know what to do with it:
>>
>> error : unbound module Sexplib
>>
>>
>>
>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>
>> Has anyone succeeded in building Core on a mac using the
>> build-and-install script in the root?  When I try to run it, I get the
>> following error:
>>
>>  ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>> too many anonymous arguments: ./build-and-install -o j:h -l
>> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>> -- --disable-linux --disable-posix-tim\
>> ers
>> ------ base/type-conv ------
>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>> W: Field XMETAType is set but matching plugin is not enabled.
>> I: File INSTALL has not changed, skipping
>> I: File Makefile has not changed, skipping
>> I: Regenerating file _tags
>> I: File configure has not changed, skipping
>> I: File lib/type-conv.odocl has not changed, skipping
>> I: File myocamlbuild.ml has not changed, skipping
>> I: File setup.ml has not changed, skipping
>> I: File syntax/META has not changed, skipping
>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>> I: Running command '/usr/local/bin/ocamlc.opt -config >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>> E: Don't know what to do with arguments: ''
>>
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/dc159dd5/attachment-0001.html>

From yminsky at janestreet.com  Sun Jan 22 01:38:08 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 21 Jan 2012 20:38:08 -0500
Subject: build-and-install
In-Reply-To: <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
Message-ID: <CACLX4jT1ppW3eo2tYqXahitowJFLovJZNFxbEJ6HM8kgOwt-dA@mail.gmail.com>

For what it's worth, I fixed this one, and I now have a branch with some
OS-X related fixes to the oasis scripts:

   https://bitbucket.org/yminsky/ocaml-core-mac-portabiility

I'm not quite out of the woods yet, but I hope to get things up and
building soon...

y

On Sat, Jan 21, 2012 at 10:29 AM, Yaron Minsky <yminsky at janestreet.com>wrote:

> The sexplib error is a bit surprising.  Did it successfully install
> sexplib before building core?
>
> I'm currently trying to build the packages by hand.  Here's my latest
> problem:
>
> core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
> ../../build-common.sh: line 88: undefined: unbound variable
>
>
> If anyone knows how to get past that, I'd be much obliged...
>
> I started a page on the wiki for collecting hints on how to do the
> installation.  There's not much there yet, but I'll fill things out as I
> figure them out.  Others should feel free to pile in their advice:
>
>     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>
> y
>
> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>
>> **
>> I have been trying to build it by build-and-install script from two hous
>> ago. With a few tweaks I can get it build everything before core(and
>> async). I changed the last few lines of the script by discarding all the
>> flags setting stuff, such that:
>>
>>   esac
>>   ./oasis.sh
>>   ./configure --prefix ~/godi
>>   make build
>>   make install || true
>>   popd
>> done
>>
>> But when building core there are some problems. First compiling
>> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
>> can be solved by just returning an caml_copy_string("Not implemented") for
>> backtrace_get() on IA32 machines.
>>
>> Another problem is like this, which I don't know what to do with it:
>>
>> error : unbound module Sexplib
>>
>>
>>
>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>
>> Has anyone succeeded in building Core on a mac using the
>> build-and-install script in the root?  When I try to run it, I get the
>> following error:
>>
>>  ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>> too many anonymous arguments: ./build-and-install -o j:h -l
>> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>> -- --disable-linux --disable-posix-tim\
>> ers
>> ------ base/type-conv ------
>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>> W: Field XMETAType is set but matching plugin is not enabled.
>> I: File INSTALL has not changed, skipping
>> I: File Makefile has not changed, skipping
>> I: Regenerating file _tags
>> I: File configure has not changed, skipping
>> I: File lib/type-conv.odocl has not changed, skipping
>> I: File myocamlbuild.ml has not changed, skipping
>> I: File setup.ml has not changed, skipping
>> I: File syntax/META has not changed, skipping
>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>> I: Running command '/usr/local/bin/ocamlc.opt -config >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>> E: Don't know what to do with arguments: ''
>>
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/861dc0c9/attachment-0001.html>

From mysnowls at 163.com  Sat Jan 21 15:25:26 2012
From: mysnowls at 163.com (Lin)
Date: Sat, 21 Jan 2012 23:25:26 +0800
Subject: build-and-install
In-Reply-To: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
Message-ID: <4F1AD8E6.6020202@163.com>

I have been trying to build it by build-and-install script from two hous 
ago. With a few tweaks I can get it build everything before core(and 
async). I changed the last few lines of the script by discarding all the 
flags setting stuff, such that:

   esac
   ./oasis.sh
   ./configure --prefix ~/godi
   make build
   make install || true
   popd
done

But when building core there are some problems. First compiling 
`backtrace_stubs.c' failed by the #error directive on IA32 machines. 
This can be solved by just returning an caml_copy_string("Not 
implemented") for backtrace_get() on IA32 machines.

Another problem is like this, which I don't know what to do with it:

error : unbound module Sexplib


On 01/21/2012 11:13 PM, Yaron Minsky wrote:
> Has anyone succeeded in building Core on a mac using the 
> build-and-install script in the root?  When I try to run it, I get the 
> following error:
>
> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> too many anonymous arguments: ./build-and-install -o j:h -l 
> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers 
> -- --disable-linux --disable-posix-tim\
> ers
> ------ base/type-conv ------
> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> W: Field XMETAType is set but matching plugin is not enabled.
> I: File INSTALL has not changed, skipping
> I: File Makefile has not changed, skipping
> I: Regenerating file _tags
> I: File configure has not changed, skipping
> I: File lib/type-conv.odocl has not changed, skipping
> I: File myocamlbuild.ml <http://myocamlbuild.ml> has not changed, skipping
> I: File setup.ml <http://setup.ml> has not changed, skipping
> I: File syntax/META has not changed, skipping
> I: File syntax/pa_type_conv.mllib has not changed, skipping
> I: Running command '/usr/local/bin/ocamlc.opt -config > 
> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib 
> > '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> E: Don't know what to do with arguments: ''

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/77ed950a/attachment-0001.html>

From mysnowls at 163.com  Sat Jan 21 15:40:10 2012
From: mysnowls at 163.com (Lin)
Date: Sat, 21 Jan 2012 23:40:10 +0800
Subject: build-and-install
In-Reply-To: <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
Message-ID: <4F1ADC5A.5030901@163.com>


On 01/21/2012 11:29 PM, Yaron Minsky wrote:
> The sexplib error is a bit surprising.  Did it successfully install 
> sexplib before building core?
     I do installed sexplib. However when I use it in toplevel, after 
`requre "sexplib"' and `require "sexplib.syntax";  `open Sexplib' told 
me `unbound module Sexplib' while `open Sexp' is OK. But when I try to 
define something like `type t = int with sexp'  it also fails.
>
> I'm currently trying to build the packages by hand.  Here's my latest 
> problem:
>
>     core $ ./oasis.sh && ocaml setup.ml <http://setup.ml> -build &&
>     ocaml setup.ml <http://setup.ml> -install
>     ../../build-common.sh: line 88: undefined: unbound variable
>
>
> If anyone knows how to get past that, I'd be much obliged...
>
> I started a page on the wiki for collecting hints on how to do the 
> installation.  There's not much there yet, but I'll fill things out as 
> I figure them out.  Others should feel free to pile in their advice:
>
> https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>
> y
>
> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com 
> <mailto:mysnowls at 163.com>> wrote:
>
>     I have been trying to build it by build-and-install script from
>     two hous ago. With a few tweaks I can get it build everything
>     before core(and async). I changed the last few lines of the script
>     by discarding all the flags setting stuff, such that:
>
>       esac
>       ./oasis.sh
>       ./configure --prefix ~/godi
>       make build
>       make install || true
>       popd
>     done
>
>     But when building core there are some problems. First compiling
>     `backtrace_stubs.c' failed by the #error directive on IA32
>     machines. This can be solved by just returning an
>     caml_copy_string("Not implemented") for backtrace_get() on IA32
>     machines.
>
>     Another problem is like this, which I don't know what to do with it:
>
>     error : unbound module Sexplib
>
>
>
>     On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>     Has anyone succeeded in building Core on a mac using the
>>     build-and-install script in the root?  When I try to run it, I
>>     get the following error:
>>
>>     ocaml-core $ ./build-and-install --disable-linux
>>     --disable-posix-timers
>>     too many anonymous arguments: ./build-and-install -o j:h -l
>>     jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>     -- --disable-linux --disable-posix-tim\
>>     ers
>>     ------ base/type-conv ------
>>     ~/Documents/code/ocaml-core/base/type-conv
>>     ~/Documents/code/ocaml-core
>>     W: Field XMETAType is set but matching plugin is not enabled.
>>     I: File INSTALL has not changed, skipping
>>     I: File Makefile has not changed, skipping
>>     I: Regenerating file _tags
>>     I: File configure has not changed, skipping
>>     I: File lib/type-conv.odocl has not changed, skipping
>>     I: File myocamlbuild.ml <http://myocamlbuild.ml> has not changed,
>>     skipping
>>     I: File setup.ml <http://setup.ml> has not changed, skipping
>>     I: File syntax/META has not changed, skipping
>>     I: File syntax/pa_type_conv.mllib has not changed, skipping
>>     I: Running command '/usr/local/bin/ocamlc.opt -config >
>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>     I: Running command '/usr/local/bin/ocamlfind query -format %v
>>     findlib >
>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>     E: Don't know what to do with arguments: ''
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120121/6649ed74/attachment-0001.html>

From mysnowls at 163.com  Sun Jan 22 06:44:51 2012
From: mysnowls at 163.com (Lin)
Date: Sun, 22 Jan 2012 14:44:51 +0800
Subject: build-and-install
In-Reply-To: <4F1ADC5A.5030901@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F1ADC5A.5030901@163.com>
Message-ID: <4F1BB063.9010107@163.com>

I  solved the sexplib problem by first uninstall the sexplib built from 
the Bitbucket repo(Version 5.2.2), and then build and installed a 7.0.2 
version.

But again the same problem for bin_prot happens.

File "lib/binable.mli", line 1, characters 0-21:
Error: Unbound module Bin_prot
Command exited with code 2.

Also in the toplevel, `open Bin_prot' fails but `open Binable' seems OK.



On 01/21/2012 11:40 PM, Lin wrote:
>
> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>> The sexplib error is a bit surprising.  Did it successfully install 
>> sexplib before building core?
>     I do installed sexplib. However when I use it in toplevel, after 
> `requre "sexplib"' and `require "sexplib.syntax";  `open Sexplib' told 
> me `unbound module Sexplib' while `open Sexp' is OK. But when I try to 
> define something like `type t = int with sexp'  it also fails.
>>
>> I'm currently trying to build the packages by hand.  Here's my latest 
>> problem:
>>
>>     core $ ./oasis.sh && ocaml setup.ml <http://setup.ml> -build &&
>>     ocaml setup.ml <http://setup.ml> -install
>>     ../../build-common.sh: line 88: undefined: unbound variable
>>
>>
>> If anyone knows how to get past that, I'd be much obliged...
>>
>> I started a page on the wiki for collecting hints on how to do the 
>> installation.  There's not much there yet, but I'll fill things out 
>> as I figure them out.  Others should feel free to pile in their advice:
>>
>> https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>
>> y
>>
>> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com 
>> <mailto:mysnowls at 163.com>> wrote:
>>
>>     I have been trying to build it by build-and-install script from
>>     two hous ago. With a few tweaks I can get it build everything
>>     before core(and async). I changed the last few lines of the
>>     script by discarding all the flags setting stuff, such that:
>>
>>       esac
>>       ./oasis.sh
>>       ./configure --prefix ~/godi
>>       make build
>>       make install || true
>>       popd
>>     done
>>
>>     But when building core there are some problems. First compiling
>>     `backtrace_stubs.c' failed by the #error directive on IA32
>>     machines. This can be solved by just returning an
>>     caml_copy_string("Not implemented") for backtrace_get() on IA32
>>     machines.
>>
>>     Another problem is like this, which I don't know what to do with it:
>>
>>     error : unbound module Sexplib
>>
>>
>>
>>     On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>     Has anyone succeeded in building Core on a mac using the
>>>     build-and-install script in the root?  When I try to run it, I
>>>     get the following error:
>>>
>>>     ocaml-core $ ./build-and-install --disable-linux
>>>     --disable-posix-timers
>>>     too many anonymous arguments: ./build-and-install -o j:h -l
>>>     jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>>     -- --disable-linux --disable-posix-tim\
>>>     ers
>>>     ------ base/type-conv ------
>>>     ~/Documents/code/ocaml-core/base/type-conv
>>>     ~/Documents/code/ocaml-core
>>>     W: Field XMETAType is set but matching plugin is not enabled.
>>>     I: File INSTALL has not changed, skipping
>>>     I: File Makefile has not changed, skipping
>>>     I: Regenerating file _tags
>>>     I: File configure has not changed, skipping
>>>     I: File lib/type-conv.odocl has not changed, skipping
>>>     I: File myocamlbuild.ml <http://myocamlbuild.ml> has not
>>>     changed, skipping
>>>     I: File setup.ml <http://setup.ml> has not changed, skipping
>>>     I: File syntax/META has not changed, skipping
>>>     I: File syntax/pa_type_conv.mllib has not changed, skipping
>>>     I: Running command '/usr/local/bin/ocamlc.opt -config >
>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>>     I: Running command '/usr/local/bin/ocamlfind query -format %v
>>>     findlib >
>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>>     E: Don't know what to do with arguments: ''
>>
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120122/bf390d41/attachment-0001.html>

From ocaml-core at googlegroups.com  Tue Jan 24 03:07:12 2012
From: ocaml-core at googlegroups.com (ocaml-core at googlegroups.com)
Date: Tue, 24 Jan 2012 03:07:12 +0000
Subject: Moderator's spam report for ocaml-core@googlegroups.com
Message-ID: <0016e6db2a8389c0c704b73d7135@google.com>


This message is being sent to you because you are a moderator of the group ocaml-core.

The following suspicious messages were sent to your group, but are being held in your moderation queue because they are classified as likely spam messages.

If you take no action, all the messages below will be discarded automatically as spam.

However, if you see any messages that are not spam below, you may approve them individually by going to:

http://groups.google.com/group/ocaml-core/pendmsg

Please do not mark this notification as spam; this is a service for group moderators. If you do not wish to receive these notifications in the future, you may change your preferences by going to:

http://groups.google.com/group/ocaml-core/manage_post


------- 1 of 1  -------
Subject: Re: build-and-install
>From: Lin <mysnowls at 163.com>
Date: Jan 22 06:17PM +0800

Maybe the problems I encountered have something to do with the oasis script.

After installation of sexplib, in the lib/ocaml/site-lib/sexplib/ 
directory I
got a dozen of cmi/cmx files, which should be packed into
sexplib.cmi/sexplib.cmxa; This

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=4751443194244465115


For more information about this message, please visit:
http://groups.google.com/support/bin/answer.py?hl=en&answer=165806



From mkoconnor at gmail.com  Wed Jan 25 21:26:29 2012
From: mkoconnor at gmail.com (Michael O'Connor)
Date: Wed, 25 Jan 2012 13:26:29 -0800 (PST)
Subject: build-and-install
In-Reply-To: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
Message-ID: <ad73695e-2eb2-4f6c-87f8-75b45706ab06@k28g2000yqn.googlegroups.com>


Just as info: I use the homebrew package manager on my home mac.
There's a pull request https://github.com/mxcl/homebrew/pull/9007
for it (it's a git repo) which adds the lwt package and it just builds
and works out of the box for me.

It'd be great if we get a similar thing up for core.

On Jan 21, 10:13?am, Yaron Minsky <ymin... at janestreet.com> wrote:
> Has anyone succeeded in building Core on a mac using the build-and-install
> script in the root? ?When I try to run it, I get the following error:
>
> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> too many anonymous arguments: ./build-and-install -o j:h -l
> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-tim?ers
> -- --disable-linux --disable-posix-tim\
> ers
> ------ base/type-conv ------
> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> W: Field XMETAType is set but matching plugin is not enabled.
> I: File INSTALL has not changed, skipping
> I: File Makefile has not changed, skipping
> I: Regenerating file _tags
> I: File configure has not changed, skipping
> I: File lib/type-conv.odocl has not changed, skipping
> I: File myocamlbuild.ml has not changed, skipping
> I: File setup.ml has not changed, skipping
> I: File syntax/META has not changed, skipping
> I: File syntax/pa_type_conv.mllib has not changed, skipping
> I: Running command '/usr/local/bin/ocamlc.opt -config >
> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> E: Don't know what to do with arguments: ''


From yminsky at janestreet.com  Wed Jan 25 23:05:22 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Wed, 25 Jan 2012 18:05:22 -0500
Subject: build-and-install
In-Reply-To: <ad73695e-2eb2-4f6c-87f8-75b45706ab06@k28g2000yqn.googlegroups.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<ad73695e-2eb2-4f6c-87f8-75b45706ab06@k28g2000yqn.googlegroups.com>
Message-ID: <CACLX4jQVU+hdcmoNcxbf0FMKNi=FuVvZDMEwvV=Oqd+u82n9aQ@mail.gmail.com>

Agreed, but first we have to get core building reliably on the mac!  I
still haven't had the time to push this through myself.  Yury is hoping to
make some progress on this soon.

y

On Wed, Jan 25, 2012 at 4:26 PM, Michael O'Connor <mkoconnor at gmail.com>wrote:

> Just as info: I use the homebrew package manager on my home mac.
> There's a pull request https://github.com/mxcl/homebrew/pull/9007
> for it (it's a git repo) which adds the lwt package and it just builds
> and works out of the box for me.
>
> It'd be great if we get a similar thing up for core.
>
> On Jan 21, 10:13 am, Yaron Minsky <ymin... at janestreet.com> wrote:
> > Has anyone succeeded in building Core on a mac using the
> build-and-install
> > script in the root?  When I try to run it, I get the following error:
> >
> > ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> > too many anonymous arguments: ./build-and-install -o j:h -l
> >
> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-tim?ers
> > -- --disable-linux --disable-posix-tim\
> > ers
> > ------ base/type-conv ------
> > ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> > W: Field XMETAType is set but matching plugin is not enabled.
> > I: File INSTALL has not changed, skipping
> > I: File Makefile has not changed, skipping
> > I: Regenerating file _tags
> > I: File configure has not changed, skipping
> > I: File lib/type-conv.odocl has not changed, skipping
> > I: File myocamlbuild.ml has not changed, skipping
> > I: File setup.ml has not changed, skipping
> > I: File syntax/META has not changed, skipping
> > I: File syntax/pa_type_conv.mllib has not changed, skipping
> > I: Running command '/usr/local/bin/ocamlc.opt -config >
> > '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> > I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
> > '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> > E: Don't know what to do with arguments: ''
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120125/1e11f0dd/attachment-0001.html>

From mysnowls at 163.com  Wed Jan 25 16:31:22 2012
From: mysnowls at 163.com (Lin)
Date: Thu, 26 Jan 2012 00:31:22 +0800
Subject: build-and-install
In-Reply-To: <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
Message-ID: <4F202E5A.9030601@163.com>

Well, this seems result from the fact that the official released oasis 
0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file, 
which is used for generate correct .mlpack files.  There is a patch for 
handling this option which has not been merged into oasis trunk :

http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294

I guess that in Jane Street you're using the patched version of oasis, 
so I can't get the library modules packed when trying to compile with 
the unpatched version.

And what it looks like is exactly a module packing problem, i.e. I can 
`open Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' 
because it's not packed at all.


On 01/21/2012 11:29 PM, Yaron Minsky wrote:
> The sexplib error is a bit surprising.  Did it successfully install 
> sexplib before building core?
>
> I'm currently trying to build the packages by hand.  Here's my latest 
> problem:
>
>     core $ ./oasis.sh && ocaml setup.ml <http://setup.ml> -build &&
>     ocaml setup.ml <http://setup.ml> -install
>     ../../build-common.sh: line 88: undefined: unbound variable
>
>
> If anyone knows how to get past that, I'd be much obliged...
>
> I started a page on the wiki for collecting hints on how to do the 
> installation.  There's not much there yet, but I'll fill things out as 
> I figure them out.  Others should feel free to pile in their advice:
>
> https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>
> y
>
> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com 
> <mailto:mysnowls at 163.com>> wrote:
>
>     I have been trying to build it by build-and-install script from
>     two hous ago. With a few tweaks I can get it build everything
>     before core(and async). I changed the last few lines of the script
>     by discarding all the flags setting stuff, such that:
>
>       esac
>       ./oasis.sh
>       ./configure --prefix ~/godi
>       make build
>       make install || true
>       popd
>     done
>
>     But when building core there are some problems. First compiling
>     `backtrace_stubs.c' failed by the #error directive on IA32
>     machines. This can be solved by just returning an
>     caml_copy_string("Not implemented") for backtrace_get() on IA32
>     machines.
>
>     Another problem is like this, which I don't know what to do with it:
>
>     error : unbound module Sexplib
>
>
>
>     On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>     Has anyone succeeded in building Core on a mac using the
>>     build-and-install script in the root?  When I try to run it, I
>>     get the following error:
>>
>>     ocaml-core $ ./build-and-install --disable-linux
>>     --disable-posix-timers
>>     too many anonymous arguments: ./build-and-install -o j:h -l
>>     jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>     -- --disable-linux --disable-posix-tim\
>>     ers
>>     ------ base/type-conv ------
>>     ~/Documents/code/ocaml-core/base/type-conv
>>     ~/Documents/code/ocaml-core
>>     W: Field XMETAType is set but matching plugin is not enabled.
>>     I: File INSTALL has not changed, skipping
>>     I: File Makefile has not changed, skipping
>>     I: Regenerating file _tags
>>     I: File configure has not changed, skipping
>>     I: File lib/type-conv.odocl has not changed, skipping
>>     I: File myocamlbuild.ml <http://myocamlbuild.ml> has not changed,
>>     skipping
>>     I: File setup.ml <http://setup.ml> has not changed, skipping
>>     I: File syntax/META has not changed, skipping
>>     I: File syntax/pa_type_conv.mllib has not changed, skipping
>>     I: Running command '/usr/local/bin/ocamlc.opt -config >
>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>     I: Running command '/usr/local/bin/ocamlfind query -format %v
>>     findlib >
>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>     E: Don't know what to do with arguments: ''
>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/f7bc2c11/attachment-0001.html>

From yminsky at janestreet.com  Thu Jan 26 16:07:49 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 26 Jan 2012 11:07:49 -0500
Subject: build-and-install
In-Reply-To: <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
Message-ID: <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>

For what it's worth, we just pushed Yury's changes to the bitbucket repo,
so those mac fixes should be in place.  I'll try to test them out myself at
home tonight.

Yury, do you think it makes sense for us to include the setup.ml files we
used directly in the repo?  I know it's a bit nasty to include generated
files (the release tarballs of course should include them), but I wonder if
it might make sense given the complexity of getting just the right version
of Oasis installed...

y

On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:

> Actually, we've managed to build and install all of the libraries on a
> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
> which changes the build scripts to patch the generated setup.ml files
> with support for packed libs. This way, we don't need to rely on a
> patched version of OASIS being installed.
>
> When these fixes hit the tree hosted on bitbucket, I hope that a
> 32-bit Linux system will be able to build the tree straight away.
>
> But I agree, patching the generated setup.ml files is hacky and it
> would be great if there were a released version of OASIS with support
> for the Pack option.
>
> Yury
>
> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org>
> wrote:
> > Why did you have to rebuild the setup.ml files? Were the ones included
> in
> > the various library tarballs incorrect?
> >
> > Also Sylvain: would it be possible just to commit those patches that are
> > outstanding against OASIS for pack support? They seem to work well
> enough,
> > and lots of people seem to run into it...
> >
> > -Anil
> >
> > On 26 Jan 2012, at 13:23, Lin wrote:
> >
> > For those interested, I finally managed to build and install all
> libraries
> > on 32-bit Linux. The steps are:
> >
> > 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the
> > `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
> >
> > 2) uninstall previously installed version of
> > type-conv/sexplib/bin_prot/fieldslib , etc.
> >
> > 3)  uncomment all `Pack:true' in every oasis.sh script in the directory
> tree
> > , if any
> >
> > 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
> >
> > On 01/26/2012 12:31 AM, Lin wrote:
> >
> > Well, this seems result from the fact that the official released oasis
> > 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
> > which is used for generate correct .mlpack files.  There is a patch for
> > handling this option which has not been merged into oasis trunk :
> >
> >
> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
> >
> > I guess that in Jane Street you're using the patched version of oasis,
> so I
> > can't get the library modules packed when trying to compile with the
> > unpatched version.
> >
> > And what it looks like is exactly a module packing problem, i.e. I can
> `open
> > Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because
> it's
> > not packed at all.
> >
> >
> > On 01/21/2012 11:29 PM, Yaron Minsky wrote:
> >
> > The sexplib error is a bit surprising.  Did it successfully install
> sexplib
> > before building core?
> >
> > I'm currently trying to build the packages by hand.  Here's my latest
> > problem:
> >
> > core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
> > ../../build-common.sh: line 88: undefined: unbound variable
> >
> >
> > If anyone knows how to get past that, I'd be much obliged...
> >
> > I started a page on the wiki for collecting hints on how to do the
> > installation.  There's not much there yet, but I'll fill things out as I
> > figure them out.  Others should feel free to pile in their advice:
> >
> >     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
> >
> > y
> >
> > On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
> >>
> >> I have been trying to build it by build-and-install script from two hous
> >> ago. With a few tweaks I can get it build everything before core(and
> async).
> >> I changed the last few lines of the script by discarding all the flags
> >> setting stuff, such that:
> >>
> >>   esac
> >>   ./oasis.sh
> >>   ./configure --prefix ~/godi
> >>   make build
> >>   make install || true
> >>   popd
> >> done
> >>
> >> But when building core there are some problems. First compiling
> >> `backtrace_stubs.c' failed by the #error directive on IA32 machines.
> This
> >> can be solved by just returning an caml_copy_string("Not implemented")
> for
> >> backtrace_get() on IA32 machines.
> >>
> >> Another problem is like this, which I don't know what to do with it:
> >>
> >> error : unbound module Sexplib
> >>
> >>
> >>
> >> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
> >>
> >> Has anyone succeeded in building Core on a mac using the
> build-and-install
> >> script in the root?  When I try to run it, I get the following error:
> >>
> >> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> >> too many anonymous arguments: ./build-and-install -o j:h -l
> >>
> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
> >> -- --disable-linux --disable-posix-tim\
> >> ers
> >> ------ base/type-conv ------
> >> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> >> W: Field XMETAType is set but matching plugin is not enabled.
> >> I: File INSTALL has not changed, skipping
> >> I: File Makefile has not changed, skipping
> >> I: Regenerating file _tags
> >> I: File configure has not changed, skipping
> >> I: File lib/type-conv.odocl has not changed, skipping
> >> I: File myocamlbuild.ml has not changed, skipping
> >> I: File setup.ml has not changed, skipping
> >> I: File syntax/META has not changed, skipping
> >> I: File syntax/pa_type_conv.mllib has not changed, skipping
> >> I: Running command '/usr/local/bin/ocamlc.opt -config >
> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> >> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> >> E: Don't know what to do with arguments: ''
> >>
> >>
> >
> >
> >
> >
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/8f6dedbf/attachment-0001.html>

From anil at recoil.org  Thu Jan 26 13:29:07 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 26 Jan 2012 13:29:07 +0000
Subject: build-and-install
In-Reply-To: <4F2153C2.8070409@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com>
Message-ID: <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>

Why did you have to rebuild the setup.ml files? Were the ones included in the various library tarballs incorrect?

Also Sylvain: would it be possible just to commit those patches that are outstanding against OASIS for pack support? They seem to work well enough, and lots of people seem to run into it...

-Anil

On 26 Jan 2012, at 13:23, Lin wrote:

> For those interested, I finally managed to build and install all libraries on 32-bit Linux. The steps are:
> 
> 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
> 
> 2) uninstall previously installed version of type-conv/sexplib/bin_prot/fieldslib , etc.
> 
> 3)  uncomment all `Pack:true' in every oasis.sh script in the directory tree , if any
> 
> 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
> 
> On 01/26/2012 12:31 AM, Lin wrote:
>> 
>> Well, this seems result from the fact that the official released oasis 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file, which is used for generate correct .mlpack files.  There is a patch for handling this option which has not been merged into oasis trunk :
>> 
>> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>> 
>> I guess that in Jane Street you're using the patched version of oasis, so I can't get the library modules packed when trying to compile with the unpatched version.
>> 
>> And what it looks like is exactly a module packing problem, i.e. I can `open Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because it's not packed at all.
>> 
>> 
>> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>>> 
>>> The sexplib error is a bit surprising.  Did it successfully install sexplib before building core?
>>> 
>>> I'm currently trying to build the packages by hand.  Here's my latest problem:
>>> 
>>> core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>>> ../../build-common.sh: line 88: undefined: unbound variable
>>> 
>>> If anyone knows how to get past that, I'd be much obliged...
>>> 
>>> I started a page on the wiki for collecting hints on how to do the installation.  There's not much there yet, but I'll fill things out as I figure them out.  Others should feel free to pile in their advice:
>>> 
>>>     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>> 
>>> y
>>> 
>>> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>>> I have been trying to build it by build-and-install script from two hous ago. With a few tweaks I can get it build everything before core(and async). I changed the last few lines of the script by discarding all the flags setting stuff, such that:
>>> 
>>>   esac
>>>   ./oasis.sh
>>>   ./configure --prefix ~/godi
>>>   make build
>>>   make install || true
>>>   popd
>>> done
>>> 
>>> But when building core there are some problems. First compiling `backtrace_stubs.c' failed by the #error directive on IA32 machines. This can be solved by just returning an caml_copy_string("Not implemented") for backtrace_get() on IA32 machines. 
>>> 
>>> Another problem is like this, which I don't know what to do with it:
>>> 
>>> error : unbound module Sexplib
>>> 
>>> 
>>> 
>>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>> 
>>>> Has anyone succeeded in building Core on a mac using the build-and-install script in the root?  When I try to run it, I get the following error:
>>>> 
>>>> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>>>> too many anonymous arguments: ./build-and-install -o j:h -l jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers -- --disable-linux --disable-posix-tim\
>>>> ers
>>>> ------ base/type-conv ------
>>>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>>>> W: Field XMETAType is set but matching plugin is not enabled.
>>>> I: File INSTALL has not changed, skipping
>>>> I: File Makefile has not changed, skipping
>>>> I: Regenerating file _tags
>>>> I: File configure has not changed, skipping
>>>> I: File lib/type-conv.odocl has not changed, skipping
>>>> I: File myocamlbuild.ml has not changed, skipping
>>>> I: File setup.ml has not changed, skipping
>>>> I: File syntax/META has not changed, skipping
>>>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>>>> I: Running command '/usr/local/bin/ocamlc.opt -config > '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib > '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>>> E: Don't know what to do with arguments: ''
>>> 
>>> 
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/0a7e8508/attachment-0001.html>

From yury.sulsky at gmail.com  Thu Jan 26 14:03:23 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 26 Jan 2012 14:03:23 +0000
Subject: build-and-install
In-Reply-To: <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
Message-ID: <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>


Actually, we've managed to build and install all of the libraries on a
32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
which changes the build scripts to patch the generated setup.ml files
with support for packed libs. This way, we don't need to rely on a
patched version of OASIS being installed.

When these fixes hit the tree hosted on bitbucket, I hope that a
32-bit Linux system will be able to build the tree straight away.

But I agree, patching the generated setup.ml files is hacky and it
would be great if there were a released version of OASIS with support
for the Pack option.

Yury

On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> Why did you have to rebuild the setup.ml files? Were the ones included in
> the various library tarballs incorrect?
>
> Also Sylvain: would it be possible just to commit those patches that are
> outstanding against OASIS for pack support? They seem to work well enough,
> and lots of people seem to run into it...
>
> -Anil
>
> On 26 Jan 2012, at 13:23, Lin wrote:
>
> For those interested, I finally managed to build and install all libraries
> on 32-bit Linux. The steps are:
>
> 1)? build a patched version of oasis 0.2.1~alpha1 which can handle the
> `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
>
> 2) uninstall previously installed version of
> type-conv/sexplib/bin_prot/fieldslib , etc.
>
> 3)? uncomment all `Pack:true' in every oasis.sh script in the directory tree
> , if any
>
> 4)? patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>
> On 01/26/2012 12:31 AM, Lin wrote:
>
> Well, this seems result from the fact that the official released oasis
> 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
> which is used for generate correct .mlpack files.? There is a patch for
> handling this option which has not been merged into oasis trunk :
>
> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>
> I guess that in Jane Street you're using the patched version of oasis, so I
> can't get the library modules packed when trying to compile with the
> unpatched version.
>
> And what it looks like is exactly a module packing problem, i.e. I can `open
> Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because it's
> not packed at all.
>
>
> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>
> The sexplib error is a bit surprising. ?Did it successfully install sexplib
> before building core?
>
> I'm currently trying to build the packages by hand. ?Here's my latest
> problem:
>
> core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
> ../../build-common.sh: line 88: undefined: unbound variable
>
>
> If anyone knows how to get past that, I'd be much obliged...
>
> I started a page on the wiki for collecting hints on how to do the
> installation. ?There's not much there yet, but I'll fill things out as I
> figure them out. ?Others should feel free to pile in their advice:
>
> ? ? https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>
> y
>
> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>>
>> I have been trying to build it by build-and-install script from two hous
>> ago. With a few tweaks I can get it build everything before core(and async).
>> I changed the last few lines of the script by discarding all the flags
>> setting stuff, such that:
>>
>> ? esac
>> ? ./oasis.sh
>> ? ./configure --prefix ~/godi
>> ? make build
>> ? make install || true
>> ? popd
>> done
>>
>> But when building core there are some problems. First compiling
>> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
>> can be solved by just returning an caml_copy_string("Not implemented") for
>> backtrace_get() on IA32 machines.
>>
>> Another problem is like this, which I don't know what to do with it:
>>
>> error : unbound module Sexplib
>>
>>
>>
>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>
>> Has anyone succeeded in building Core on a mac using the build-and-install
>> script in the root? ?When I try to run it, I get the following error:
>>
>> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>> too many anonymous arguments: ./build-and-install -o j:h -l
>> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>> -- --disable-linux --disable-posix-tim\
>> ers
>> ------ base/type-conv ------
>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>> W: Field XMETAType is set but matching plugin is not enabled.
>> I: File INSTALL has not changed, skipping
>> I: File Makefile has not changed, skipping
>> I: Regenerating file _tags
>> I: File configure has not changed, skipping
>> I: File lib/type-conv.odocl has not changed, skipping
>> I: File myocamlbuild.ml has not changed, skipping
>> I: File setup.ml has not changed, skipping
>> I: File syntax/META has not changed, skipping
>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>> I: Running command '/usr/local/bin/ocamlc.opt -config >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>> E: Don't know what to do with arguments: ''
>>
>>
>
>
>
>


From anil at recoil.org  Thu Jan 26 16:11:41 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 26 Jan 2012 16:11:41 +0000
Subject: build-and-install
In-Reply-To: <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com> <4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com> <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org> <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com> <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
Message-ID: <0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>

Including the autogenerated files does make bisecting changes a bit of a pain in the future.

It would be much better just to get an OASIS release out, since anyone else creating OCaml libraries has this exact same issue.

-anil

On 26 Jan 2012, at 16:07, Yaron Minsky wrote:

> For what it's worth, we just pushed Yury's changes to the bitbucket repo, so those mac fixes should be in place.  I'll try to test them out myself at home tonight.
> 
> Yury, do you think it makes sense for us to include the setup.ml files we used directly in the repo?  I know it's a bit nasty to include generated files (the release tarballs of course should include them), but I wonder if it might make sense given the complexity of getting just the right version of Oasis installed...
> 
> y
> 
> On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> Actually, we've managed to build and install all of the libraries on a
> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
> which changes the build scripts to patch the generated setup.ml files
> with support for packed libs. This way, we don't need to rely on a
> patched version of OASIS being installed.
> 
> When these fixes hit the tree hosted on bitbucket, I hope that a
> 32-bit Linux system will be able to build the tree straight away.
> 
> But I agree, patching the generated setup.ml files is hacky and it
> would be great if there were a released version of OASIS with support
> for the Pack option.
> 
> Yury
> 
> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> > Why did you have to rebuild the setup.ml files? Were the ones included in
> > the various library tarballs incorrect?
> >
> > Also Sylvain: would it be possible just to commit those patches that are
> > outstanding against OASIS for pack support? They seem to work well enough,
> > and lots of people seem to run into it...
> >
> > -Anil
> >
> > On 26 Jan 2012, at 13:23, Lin wrote:
> >
> > For those interested, I finally managed to build and install all libraries
> > on 32-bit Linux. The steps are:
> >
> > 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the
> > `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
> >
> > 2) uninstall previously installed version of
> > type-conv/sexplib/bin_prot/fieldslib , etc.
> >
> > 3)  uncomment all `Pack:true' in every oasis.sh script in the directory tree
> > , if any
> >
> > 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
> >
> > On 01/26/2012 12:31 AM, Lin wrote:
> >
> > Well, this seems result from the fact that the official released oasis
> > 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
> > which is used for generate correct .mlpack files.  There is a patch for
> > handling this option which has not been merged into oasis trunk :
> >
> > http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
> >
> > I guess that in Jane Street you're using the patched version of oasis, so I
> > can't get the library modules packed when trying to compile with the
> > unpatched version.
> >
> > And what it looks like is exactly a module packing problem, i.e. I can `open
> > Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because it's
> > not packed at all.
> >
> >
> > On 01/21/2012 11:29 PM, Yaron Minsky wrote:
> >
> > The sexplib error is a bit surprising.  Did it successfully install sexplib
> > before building core?
> >
> > I'm currently trying to build the packages by hand.  Here's my latest
> > problem:
> >
> > core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
> > ../../build-common.sh: line 88: undefined: unbound variable
> >
> >
> > If anyone knows how to get past that, I'd be much obliged...
> >
> > I started a page on the wiki for collecting hints on how to do the
> > installation.  There's not much there yet, but I'll fill things out as I
> > figure them out.  Others should feel free to pile in their advice:
> >
> >     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
> >
> > y
> >
> > On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
> >>
> >> I have been trying to build it by build-and-install script from two hous
> >> ago. With a few tweaks I can get it build everything before core(and async).
> >> I changed the last few lines of the script by discarding all the flags
> >> setting stuff, such that:
> >>
> >>   esac
> >>   ./oasis.sh
> >>   ./configure --prefix ~/godi
> >>   make build
> >>   make install || true
> >>   popd
> >> done
> >>
> >> But when building core there are some problems. First compiling
> >> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
> >> can be solved by just returning an caml_copy_string("Not implemented") for
> >> backtrace_get() on IA32 machines.
> >>
> >> Another problem is like this, which I don't know what to do with it:
> >>
> >> error : unbound module Sexplib
> >>
> >>
> >>
> >> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
> >>
> >> Has anyone succeeded in building Core on a mac using the build-and-install
> >> script in the root?  When I try to run it, I get the following error:
> >>
> >> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
> >> too many anonymous arguments: ./build-and-install -o j:h -l
> >> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
> >> -- --disable-linux --disable-posix-tim\
> >> ers
> >> ------ base/type-conv ------
> >> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
> >> W: Field XMETAType is set but matching plugin is not enabled.
> >> I: File INSTALL has not changed, skipping
> >> I: File Makefile has not changed, skipping
> >> I: Regenerating file _tags
> >> I: File configure has not changed, skipping
> >> I: File lib/type-conv.odocl has not changed, skipping
> >> I: File myocamlbuild.ml has not changed, skipping
> >> I: File setup.ml has not changed, skipping
> >> I: File syntax/META has not changed, skipping
> >> I: File syntax/pa_type_conv.mllib has not changed, skipping
> >> I: Running command '/usr/local/bin/ocamlc.opt -config >
> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
> >> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
> >> E: Don't know what to do with arguments: ''
> >>
> >>
> >
> >
> >
> >
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/2f2bfb33/attachment-0001.html>

From anil at recoil.org  Thu Jan 26 16:15:48 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 26 Jan 2012 16:15:48 +0000
Subject: build-and-install
In-Reply-To: <0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com> <4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com> <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org> <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com> <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com> <0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
Message-ID: <802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>

I'm just trying this all again on my Mac, with OASIS-trunk + the pack patches.

What is:

  XMETAType:          syntax

...intended for in type-conv/_oasis (pa_type_conv)?

It gives me an unknown plugin warning, which is hopefully not important.

-Anil

On 26 Jan 2012, at 16:11, Anil Madhavapeddy wrote:

> Including the autogenerated files does make bisecting changes a bit of a pain in the future.
> 
> It would be much better just to get an OASIS release out, since anyone else creating OCaml libraries has this exact same issue.
> 
> -anil
> 
> On 26 Jan 2012, at 16:07, Yaron Minsky wrote:
> 
>> For what it's worth, we just pushed Yury's changes to the bitbucket repo, so those mac fixes should be in place.  I'll try to test them out myself at home tonight.
>> 
>> Yury, do you think it makes sense for us to include the setup.ml files we used directly in the repo?  I know it's a bit nasty to include generated files (the release tarballs of course should include them), but I wonder if it might make sense given the complexity of getting just the right version of Oasis installed...
>> 
>> y
>> 
>> On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>> Actually, we've managed to build and install all of the libraries on a
>> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
>> which changes the build scripts to patch the generated setup.ml files
>> with support for packed libs. This way, we don't need to rely on a
>> patched version of OASIS being installed.
>> 
>> When these fixes hit the tree hosted on bitbucket, I hope that a
>> 32-bit Linux system will be able to build the tree straight away.
>> 
>> But I agree, patching the generated setup.ml files is hacky and it
>> would be great if there were a released version of OASIS with support
>> for the Pack option.
>> 
>> Yury
>> 
>> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> > Why did you have to rebuild the setup.ml files? Were the ones included in
>> > the various library tarballs incorrect?
>> >
>> > Also Sylvain: would it be possible just to commit those patches that are
>> > outstanding against OASIS for pack support? They seem to work well enough,
>> > and lots of people seem to run into it...
>> >
>> > -Anil
>> >
>> > On 26 Jan 2012, at 13:23, Lin wrote:
>> >
>> > For those interested, I finally managed to build and install all libraries
>> > on 32-bit Linux. The steps are:
>> >
>> > 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the
>> > `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
>> >
>> > 2) uninstall previously installed version of
>> > type-conv/sexplib/bin_prot/fieldslib , etc.
>> >
>> > 3)  uncomment all `Pack:true' in every oasis.sh script in the directory tree
>> > , if any
>> >
>> > 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>> >
>> > On 01/26/2012 12:31 AM, Lin wrote:
>> >
>> > Well, this seems result from the fact that the official released oasis
>> > 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
>> > which is used for generate correct .mlpack files.  There is a patch for
>> > handling this option which has not been merged into oasis trunk :
>> >
>> > http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>> >
>> > I guess that in Jane Street you're using the patched version of oasis, so I
>> > can't get the library modules packed when trying to compile with the
>> > unpatched version.
>> >
>> > And what it looks like is exactly a module packing problem, i.e. I can `open
>> > Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because it's
>> > not packed at all.
>> >
>> >
>> > On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>> >
>> > The sexplib error is a bit surprising.  Did it successfully install sexplib
>> > before building core?
>> >
>> > I'm currently trying to build the packages by hand.  Here's my latest
>> > problem:
>> >
>> > core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>> > ../../build-common.sh: line 88: undefined: unbound variable
>> >
>> >
>> > If anyone knows how to get past that, I'd be much obliged...
>> >
>> > I started a page on the wiki for collecting hints on how to do the
>> > installation.  There's not much there yet, but I'll fill things out as I
>> > figure them out.  Others should feel free to pile in their advice:
>> >
>> >     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>> >
>> > y
>> >
>> > On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>> >>
>> >> I have been trying to build it by build-and-install script from two hous
>> >> ago. With a few tweaks I can get it build everything before core(and async).
>> >> I changed the last few lines of the script by discarding all the flags
>> >> setting stuff, such that:
>> >>
>> >>   esac
>> >>   ./oasis.sh
>> >>   ./configure --prefix ~/godi
>> >>   make build
>> >>   make install || true
>> >>   popd
>> >> done
>> >>
>> >> But when building core there are some problems. First compiling
>> >> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
>> >> can be solved by just returning an caml_copy_string("Not implemented") for
>> >> backtrace_get() on IA32 machines.
>> >>
>> >> Another problem is like this, which I don't know what to do with it:
>> >>
>> >> error : unbound module Sexplib
>> >>
>> >>
>> >>
>> >> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>> >>
>> >> Has anyone succeeded in building Core on a mac using the build-and-install
>> >> script in the root?  When I try to run it, I get the following error:
>> >>
>> >> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>> >> too many anonymous arguments: ./build-and-install -o j:h -l
>> >> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>> >> -- --disable-linux --disable-posix-tim\
>> >> ers
>> >> ------ base/type-conv ------
>> >> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>> >> W: Field XMETAType is set but matching plugin is not enabled.
>> >> I: File INSTALL has not changed, skipping
>> >> I: File Makefile has not changed, skipping
>> >> I: Regenerating file _tags
>> >> I: File configure has not changed, skipping
>> >> I: File lib/type-conv.odocl has not changed, skipping
>> >> I: File myocamlbuild.ml has not changed, skipping
>> >> I: File setup.ml has not changed, skipping
>> >> I: File syntax/META has not changed, skipping
>> >> I: File syntax/pa_type_conv.mllib has not changed, skipping
>> >> I: Running command '/usr/local/bin/ocamlc.opt -config >
>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>> >> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>> >> E: Don't know what to do with arguments: ''
>> >>
>> >>
>> >
>> >
>> >
>> >
>> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/50293840/attachment-0001.html>

From yury.sulsky at gmail.com  Thu Jan 26 16:34:50 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 26 Jan 2012 16:34:50 +0000
Subject: build-and-install
In-Reply-To: <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
Message-ID: <CAEDxudwJ6f5F3Ef6YPW75bJ=z9jFUrM6NsL1ijCjMJpcv8wAOQ@mail.gmail.com>


On Thu, Jan 26, 2012 at 4:07 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Yury, do you think it makes sense for us to include the setup.ml files we
> used directly in the repo? ?I know it's a bit nasty to include generated
> files (the release tarballs of course should include them), but I wonder if
> it might make sense given the complexity of getting just the right version
> of Oasis installed...

Hmm, I'm not sure. The oasis.sh files that are currently in the repo
generate different _oasis files depending on the options passed in and
what the platform supports. I think that the "setup.ml" files
themselves should be the same across all of the platforms, but the
other files differ, so people would still need to run oasis.

But now the right version of OASIS should be the 0.2.0, which should
be easy to get and install.


From yury.sulsky at gmail.com  Thu Jan 26 16:41:54 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 26 Jan 2012 16:41:54 +0000
Subject: build-and-install
In-Reply-To: <802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
Message-ID: <CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>


That tells oasis to add some flags to the library's META file, which
in turn tells ocamlfind that the package should be loaded as a syntax
extension: http://projects.camlcity.org/projects/dl/findlib-1.2.6/doc/guide-html/x412.html

On Thu, Jan 26, 2012 at 4:15 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> I'm just trying this all again on my Mac, with OASIS-trunk + the pack
> patches.
>
> What is:
>
> ? XMETAType: ? ? ? ? ?syntax
>
> ...intended for in type-conv/_oasis (pa_type_conv)?
>
> It gives me an unknown plugin warning, which is hopefully not important.
>
> -Anil
>
> On 26 Jan 2012, at 16:11, Anil Madhavapeddy wrote:
>
> Including the autogenerated files does make bisecting changes a bit of a
> pain in the future.
>
> It would be much better just to get an OASIS release out, since anyone else
> creating OCaml libraries has this exact same issue.
>
> -anil
>
> On 26 Jan 2012, at 16:07, Yaron Minsky wrote:
>
> For what it's worth, we just pushed Yury's changes to the bitbucket repo, so
> those mac fixes should be in place. ?I'll try to test them out myself at
> home tonight.
>
> Yury, do you think it makes sense for us to include the setup.ml files we
> used directly in the repo? ?I know it's a bit nasty to include generated
> files (the release tarballs of course should include them), but I wonder if
> it might make sense given the complexity of getting just the right version
> of Oasis installed...
>
> y
>
> On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>>
>> Actually, we've managed to build and install all of the libraries on a
>> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
>> which changes the build scripts to patch the generated setup.ml files
>> with support for packed libs. This way, we don't need to rely on a
>> patched version of OASIS being installed.
>>
>> When these fixes hit the tree hosted on bitbucket, I hope that a
>> 32-bit Linux system will be able to build the tree straight away.
>>
>> But I agree, patching the generated setup.ml files is hacky and it
>> would be great if there were a released version of OASIS with support
>> for the Pack option.
>>
>> Yury
>>
>> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org>
>> wrote:
>> > Why did you have to rebuild the setup.ml files? Were the ones included
>> > in
>> > the various library tarballs incorrect?
>> >
>> > Also Sylvain: would it be possible just to commit those patches that are
>> > outstanding against OASIS for pack support? They seem to work well
>> > enough,
>> > and lots of people seem to run into it...
>> >
>> > -Anil
>> >
>> > On 26 Jan 2012, at 13:23, Lin wrote:
>> >
>> > For those interested, I finally managed to build and install all
>> > libraries
>> > on 32-bit Linux. The steps are:
>> >
>> > 1)? build a patched version of oasis 0.2.1~alpha1 which can handle the
>> > `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le
>> > Gall)
>> >
>> > 2) uninstall previously installed version of
>> > type-conv/sexplib/bin_prot/fieldslib , etc.
>> >
>> > 3)? uncomment all `Pack:true' in every oasis.sh script in the directory
>> > tree
>> > , if any
>> >
>> > 4)? patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>> >
>> > On 01/26/2012 12:31 AM, Lin wrote:
>> >
>> > Well, this seems result from the fact that the official released oasis
>> > 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
>> > which is used for generate correct .mlpack files.? There is a patch for
>> > handling this option which has not been merged into oasis trunk :
>> >
>> >
>> > http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>> >
>> > I guess that in Jane Street you're using the patched version of oasis,
>> > so I
>> > can't get the library modules packed when trying to compile with the
>> > unpatched version.
>> >
>> > And what it looks like is exactly a module packing problem, i.e. I can
>> > `open
>> > Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because
>> > it's
>> > not packed at all.
>> >
>> >
>> > On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>> >
>> > The sexplib error is a bit surprising. ?Did it successfully install
>> > sexplib
>> > before building core?
>> >
>> > I'm currently trying to build the packages by hand. ?Here's my latest
>> > problem:
>> >
>> > core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>> > ../../build-common.sh: line 88: undefined: unbound variable
>> >
>> >
>> > If anyone knows how to get past that, I'd be much obliged...
>> >
>> > I started a page on the wiki for collecting hints on how to do the
>> > installation. ?There's not much there yet, but I'll fill things out as I
>> > figure them out. ?Others should feel free to pile in their advice:
>> >
>> > ? ? https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>> >
>> > y
>> >
>> > On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>> >>
>> >> I have been trying to build it by build-and-install script from two
>> >> hous
>> >> ago. With a few tweaks I can get it build everything before core(and
>> >> async).
>> >> I changed the last few lines of the script by discarding all the flags
>> >> setting stuff, such that:
>> >>
>> >> ? esac
>> >> ? ./oasis.sh
>> >> ? ./configure --prefix ~/godi
>> >> ? make build
>> >> ? make install || true
>> >> ? popd
>> >> done
>> >>
>> >> But when building core there are some problems. First compiling
>> >> `backtrace_stubs.c' failed by the #error directive on IA32 machines.
>> >> This
>> >> can be solved by just returning an caml_copy_string("Not implemented")
>> >> for
>> >> backtrace_get() on IA32 machines.
>> >>
>> >> Another problem is like this, which I don't know what to do with it:
>> >>
>> >> error : unbound module Sexplib
>> >>
>> >>
>> >>
>> >> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>> >>
>> >> Has anyone succeeded in building Core on a mac using the
>> >> build-and-install
>> >> script in the root? ?When I try to run it, I get the following error:
>> >>
>> >> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>> >> too many anonymous arguments: ./build-and-install -o j:h -l
>> >>
>> >> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>> >> -- --disable-linux --disable-posix-tim\
>> >> ers
>> >> ------ base/type-conv ------
>> >> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>> >> W: Field XMETAType is set but matching plugin is not enabled.
>> >> I: File INSTALL has not changed, skipping
>> >> I: File Makefile has not changed, skipping
>> >> I: Regenerating file _tags
>> >> I: File configure has not changed, skipping
>> >> I: File lib/type-conv.odocl has not changed, skipping
>> >> I: File myocamlbuild.ml has not changed, skipping
>> >> I: File setup.ml has not changed, skipping
>> >> I: File syntax/META has not changed, skipping
>> >> I: File syntax/pa_type_conv.mllib has not changed, skipping
>> >> I: Running command '/usr/local/bin/ocamlc.opt -config >
>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>> >> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>> >> E: Don't know what to do with arguments: ''
>> >>
>> >>
>> >
>> >
>> >
>> >
>
>
>
>


From yury.sulsky at gmail.com  Thu Jan 26 16:42:58 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Thu, 26 Jan 2012 16:42:58 +0000
Subject: build-and-install
In-Reply-To: <CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
Message-ID: <CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>


When you run oasis, could you make sure that the generated META file
contain these lines?

archive(syntax,preprocessor) = "pa_type_conv.cma"
archive(syntax,toploop) = "pa_type_conv.cma"

Thanks,
Yury

On Thu, Jan 26, 2012 at 4:41 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> That tells oasis to add some flags to the library's META file, which
> in turn tells ocamlfind that the package should be loaded as a syntax
> extension: http://projects.camlcity.org/projects/dl/findlib-1.2.6/doc/guide-html/x412.html
>
> On Thu, Jan 26, 2012 at 4:15 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> I'm just trying this all again on my Mac, with OASIS-trunk + the pack
>> patches.
>>
>> What is:
>>
>> ? XMETAType: ? ? ? ? ?syntax
>>
>> ...intended for in type-conv/_oasis (pa_type_conv)?
>>
>> It gives me an unknown plugin warning, which is hopefully not important.
>>
>> -Anil
>>
>> On 26 Jan 2012, at 16:11, Anil Madhavapeddy wrote:
>>
>> Including the autogenerated files does make bisecting changes a bit of a
>> pain in the future.
>>
>> It would be much better just to get an OASIS release out, since anyone else
>> creating OCaml libraries has this exact same issue.
>>
>> -anil
>>
>> On 26 Jan 2012, at 16:07, Yaron Minsky wrote:
>>
>> For what it's worth, we just pushed Yury's changes to the bitbucket repo, so
>> those mac fixes should be in place. ?I'll try to test them out myself at
>> home tonight.
>>
>> Yury, do you think it makes sense for us to include the setup.ml files we
>> used directly in the repo? ?I know it's a bit nasty to include generated
>> files (the release tarballs of course should include them), but I wonder if
>> it might make sense given the complexity of getting just the right version
>> of Oasis installed...
>>
>> y
>>
>> On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>>>
>>> Actually, we've managed to build and install all of the libraries on a
>>> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
>>> which changes the build scripts to patch the generated setup.ml files
>>> with support for packed libs. This way, we don't need to rely on a
>>> patched version of OASIS being installed.
>>>
>>> When these fixes hit the tree hosted on bitbucket, I hope that a
>>> 32-bit Linux system will be able to build the tree straight away.
>>>
>>> But I agree, patching the generated setup.ml files is hacky and it
>>> would be great if there were a released version of OASIS with support
>>> for the Pack option.
>>>
>>> Yury
>>>
>>> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org>
>>> wrote:
>>> > Why did you have to rebuild the setup.ml files? Were the ones included
>>> > in
>>> > the various library tarballs incorrect?
>>> >
>>> > Also Sylvain: would it be possible just to commit those patches that are
>>> > outstanding against OASIS for pack support? They seem to work well
>>> > enough,
>>> > and lots of people seem to run into it...
>>> >
>>> > -Anil
>>> >
>>> > On 26 Jan 2012, at 13:23, Lin wrote:
>>> >
>>> > For those interested, I finally managed to build and install all
>>> > libraries
>>> > on 32-bit Linux. The steps are:
>>> >
>>> > 1)? build a patched version of oasis 0.2.1~alpha1 which can handle the
>>> > `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le
>>> > Gall)
>>> >
>>> > 2) uninstall previously installed version of
>>> > type-conv/sexplib/bin_prot/fieldslib , etc.
>>> >
>>> > 3)? uncomment all `Pack:true' in every oasis.sh script in the directory
>>> > tree
>>> > , if any
>>> >
>>> > 4)? patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>>> >
>>> > On 01/26/2012 12:31 AM, Lin wrote:
>>> >
>>> > Well, this seems result from the fact that the official released oasis
>>> > 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
>>> > which is used for generate correct .mlpack files.? There is a patch for
>>> > handling this option which has not been merged into oasis trunk :
>>> >
>>> >
>>> > http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>>> >
>>> > I guess that in Jane Street you're using the patched version of oasis,
>>> > so I
>>> > can't get the library modules packed when trying to compile with the
>>> > unpatched version.
>>> >
>>> > And what it looks like is exactly a module packing problem, i.e. I can
>>> > `open
>>> > Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because
>>> > it's
>>> > not packed at all.
>>> >
>>> >
>>> > On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>>> >
>>> > The sexplib error is a bit surprising. ?Did it successfully install
>>> > sexplib
>>> > before building core?
>>> >
>>> > I'm currently trying to build the packages by hand. ?Here's my latest
>>> > problem:
>>> >
>>> > core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>>> > ../../build-common.sh: line 88: undefined: unbound variable
>>> >
>>> >
>>> > If anyone knows how to get past that, I'd be much obliged...
>>> >
>>> > I started a page on the wiki for collecting hints on how to do the
>>> > installation. ?There's not much there yet, but I'll fill things out as I
>>> > figure them out. ?Others should feel free to pile in their advice:
>>> >
>>> > ? ? https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>> >
>>> > y
>>> >
>>> > On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>>> >>
>>> >> I have been trying to build it by build-and-install script from two
>>> >> hous
>>> >> ago. With a few tweaks I can get it build everything before core(and
>>> >> async).
>>> >> I changed the last few lines of the script by discarding all the flags
>>> >> setting stuff, such that:
>>> >>
>>> >> ? esac
>>> >> ? ./oasis.sh
>>> >> ? ./configure --prefix ~/godi
>>> >> ? make build
>>> >> ? make install || true
>>> >> ? popd
>>> >> done
>>> >>
>>> >> But when building core there are some problems. First compiling
>>> >> `backtrace_stubs.c' failed by the #error directive on IA32 machines.
>>> >> This
>>> >> can be solved by just returning an caml_copy_string("Not implemented")
>>> >> for
>>> >> backtrace_get() on IA32 machines.
>>> >>
>>> >> Another problem is like this, which I don't know what to do with it:
>>> >>
>>> >> error : unbound module Sexplib
>>> >>
>>> >>
>>> >>
>>> >> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>> >>
>>> >> Has anyone succeeded in building Core on a mac using the
>>> >> build-and-install
>>> >> script in the root? ?When I try to run it, I get the following error:
>>> >>
>>> >> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>>> >> too many anonymous arguments: ./build-and-install -o j:h -l
>>> >>
>>> >> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>> >> -- --disable-linux --disable-posix-tim\
>>> >> ers
>>> >> ------ base/type-conv ------
>>> >> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>>> >> W: Field XMETAType is set but matching plugin is not enabled.
>>> >> I: File INSTALL has not changed, skipping
>>> >> I: File Makefile has not changed, skipping
>>> >> I: Regenerating file _tags
>>> >> I: File configure has not changed, skipping
>>> >> I: File lib/type-conv.odocl has not changed, skipping
>>> >> I: File myocamlbuild.ml has not changed, skipping
>>> >> I: File setup.ml has not changed, skipping
>>> >> I: File syntax/META has not changed, skipping
>>> >> I: File syntax/pa_type_conv.mllib has not changed, skipping
>>> >> I: Running command '/usr/local/bin/ocamlc.opt -config >
>>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>> >> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>>> >> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>> >> E: Don't know what to do with arguments: ''
>>> >>
>>> >>
>>> >
>>> >
>>> >
>>> >
>>
>>
>>
>>


From markus.mottl at gmail.com  Fri Jan 27 01:51:28 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 26 Jan 2012 20:51:28 -0500
Subject: build-and-install
In-Reply-To: <CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
Message-ID: <CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>


Hi everybody,

I have managed to completely build all libraries on my Mac using my
fork of ocaml-core (ocaml-core-mmottl).  This fork incorporates all
changes from the previously "official" releases of type-conv,
bin-prot, and sexplib on OCaml Forge.

Sadly, there still seem to be issues with Oasis (I'm using 0.2.0, the
one in Godi) that lead to incorrect link flags.  It is hence still not
possible to actually build applications.  Sylvain, could you please
look into this?  It seems the library linker (ocamlc/ocamlopt -a) gets
an extra library argument that shouldn't be there.  E.g.
lib/libbin_prot.a in the following build log entry of bin-prot:

  ocamlfind ocamlopt -a -cclib -lbin_prot lib/bin_prot.cmx
lib/libbin_prot.a -o lib/bin_prot.cmxa

I think it is related to the following myocamlbuild.ml lines:

----------
  (* When ocaml link something that use the C library, then one
      need that file to be up to date.
    *)
    dep  ["link"; "ocaml"; "use_lib"^lib]
      [dir/"lib"^lib^"."^(!Options.ext_lib)];
----------

"link" used to be "compile" in a different version of Oasis, not sure
which one.  It seemed to work there.  It would be great if we could
all agree on the Oasis version to use, preferably the one in Godi,
which is easy to install.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri Jan 27 02:07:27 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 26 Jan 2012 21:07:27 -0500
Subject: Unit tests
Message-ID: <CAP_800q=cGW9LpqGdvNmOh6okwknfKFaG6vWtDX34FokvDY2oA@mail.gmail.com>


Hi,

I've just noticed that there are no unit tests for bin-prot and
sexplib anymore.  They used to be in lib_test subdirectories.  Since
especially the ones for bin-prot are of great importance, I wondered
how you want to test ocaml-core libraries?  Are there any plans to add
those test suites back in later again?

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Fri Jan 27 02:10:19 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 26 Jan 2012 21:10:19 -0500
Subject: Unit tests
In-Reply-To: <CAP_800q=cGW9LpqGdvNmOh6okwknfKFaG6vWtDX34FokvDY2oA@mail.gmail.com>
References: <CAP_800q=cGW9LpqGdvNmOh6okwknfKFaG6vWtDX34FokvDY2oA@mail.gmail.com>
Message-ID: <CACLX4jSnA6U7sqZ3JHiOPhkH7OzKJtYScC5xrmEhq9y39opm+w@mail.gmail.com>

Sorry.  The tests are all still in existence, but presumably not exported
by our script.  Yury, can you get the lib-test directories added?
On Jan 26, 2012 9:07 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:

> Hi,
>
> I've just noticed that there are no unit tests for bin-prot and
> sexplib anymore.  They used to be in lib_test subdirectories.  Since
> especially the ones for bin-prot are of great importance, I wondered
> how you want to test ocaml-core libraries?  Are there any plans to add
> those test suites back in later again?
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/38c5a463/attachment-0001.html>

From mysnowls at 163.com  Thu Jan 26 13:23:14 2012
From: mysnowls at 163.com (Lin)
Date: Thu, 26 Jan 2012 21:23:14 +0800
Subject: build-and-install
In-Reply-To: <4F202E5A.9030601@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com>
Message-ID: <4F2153C2.8070409@163.com>

For those interested, I finally managed to build and install all 
libraries on 32-bit Linux. The steps are:

1)  build a patched version of oasis 0.2.1~alpha1 which can handle the 
`Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)

2) uninstall previously installed version of 
type-conv/sexplib/bin_prot/fieldslib , etc.

3)  uncomment all `Pack:true' in every oasis.sh script in the directory 
tree , if any

4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines

On 01/26/2012 12:31 AM, Lin wrote:
> Well, this seems result from the fact that the official released oasis 
> 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis 
> file, which is used for generate correct .mlpack files.  There is a 
> patch for handling this option which has not been merged into oasis 
> trunk :
>
> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>
> I guess that in Jane Street you're using the patched version of oasis, 
> so I can't get the library modules packed when trying to compile with 
> the unpatched version.
>
> And what it looks like is exactly a module packing problem, i.e. I can 
> `open Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' 
> because it's not packed at all.
>
>
> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>> The sexplib error is a bit surprising.  Did it successfully install 
>> sexplib before building core?
>>
>> I'm currently trying to build the packages by hand.  Here's my latest 
>> problem:
>>
>>     core $ ./oasis.sh && ocaml setup.ml <http://setup.ml> -build &&
>>     ocaml setup.ml <http://setup.ml> -install
>>     ../../build-common.sh: line 88: undefined: unbound variable
>>
>>
>> If anyone knows how to get past that, I'd be much obliged...
>>
>> I started a page on the wiki for collecting hints on how to do the 
>> installation.  There's not much there yet, but I'll fill things out 
>> as I figure them out.  Others should feel free to pile in their advice:
>>
>> https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>
>> y
>>
>> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com 
>> <mailto:mysnowls at 163.com>> wrote:
>>
>>     I have been trying to build it by build-and-install script from
>>     two hous ago. With a few tweaks I can get it build everything
>>     before core(and async). I changed the last few lines of the
>>     script by discarding all the flags setting stuff, such that:
>>
>>       esac
>>       ./oasis.sh
>>       ./configure --prefix ~/godi
>>       make build
>>       make install || true
>>       popd
>>     done
>>
>>     But when building core there are some problems. First compiling
>>     `backtrace_stubs.c' failed by the #error directive on IA32
>>     machines. This can be solved by just returning an
>>     caml_copy_string("Not implemented") for backtrace_get() on IA32
>>     machines.
>>
>>     Another problem is like this, which I don't know what to do with it:
>>
>>     error : unbound module Sexplib
>>
>>
>>
>>     On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>     Has anyone succeeded in building Core on a mac using the
>>>     build-and-install script in the root?  When I try to run it, I
>>>     get the following error:
>>>
>>>     ocaml-core $ ./build-and-install --disable-linux
>>>     --disable-posix-timers
>>>     too many anonymous arguments: ./build-and-install -o j:h -l
>>>     jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>>     -- --disable-linux --disable-posix-tim\
>>>     ers
>>>     ------ base/type-conv ------
>>>     ~/Documents/code/ocaml-core/base/type-conv
>>>     ~/Documents/code/ocaml-core
>>>     W: Field XMETAType is set but matching plugin is not enabled.
>>>     I: File INSTALL has not changed, skipping
>>>     I: File Makefile has not changed, skipping
>>>     I: Regenerating file _tags
>>>     I: File configure has not changed, skipping
>>>     I: File lib/type-conv.odocl has not changed, skipping
>>>     I: File myocamlbuild.ml <http://myocamlbuild.ml> has not
>>>     changed, skipping
>>>     I: File setup.ml <http://setup.ml> has not changed, skipping
>>>     I: File syntax/META has not changed, skipping
>>>     I: File syntax/pa_type_conv.mllib has not changed, skipping
>>>     I: Running command '/usr/local/bin/ocamlc.opt -config >
>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>>     I: Running command '/usr/local/bin/ocamlfind query -format %v
>>>     findlib >
>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>>     E: Don't know what to do with arguments: ''
>>
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/dcbaebaa/attachment-0001.html>

From markus.mottl at gmail.com  Fri Jan 27 02:29:16 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 26 Jan 2012 21:29:16 -0500
Subject: Documentation
Message-ID: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>


Hi,

the documentation (doc) directory in sexplib was apparently removed.
I found an intro.txt file in the lib-directory instead.  I wasn't
quite sure what format it was, but the contents definitely seemed out
of date.  I have hence re-added the more recent doc-directory with
LaTeX documentation in my fork.  Please let me know what your plans
are wrt. documentation (manuals, not source) so that we can have a
unified approach.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Fri Jan 27 02:53:02 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 26 Jan 2012 21:53:02 -0500
Subject: Documentation
In-Reply-To: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>
References: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>
Message-ID: <CACLX4jQPm94wXHTa93wZvL_JdpP9whEP6cTmmKnVbG+DNn_QJg@mail.gmail.com>

On Thu, Jan 26, 2012 at 9:29 PM, Markus Mottl <markus.mottl at gmail.com>wrote:

> Hi,
>
> the documentation (doc) directory in sexplib was apparently removed.
> I found an intro.txt file in the lib-directory instead.  I wasn't
> quite sure what format it was, but the contents definitely seemed out
> of date.  I have hence re-added the more recent doc-directory with
> LaTeX documentation in my fork.  Please let me know what your plans
> are wrt. documentation (manuals, not source) so that we can have a
> unified approach.
>

I looked at our internal tree, and indeed there is no sexplib/doc directory
in our internal tree, which surprises me.    I'm certainly happy to have it
back.

We've moved most of our internal documentation to markdown, which I think
is generally easier to manage and deal with, and easier to read as
plain-text.  And it generates perfectly usable latex output as well.

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/0c9da6ff/attachment-0001.html>

From mysnowls at 163.com  Thu Jan 26 13:55:22 2012
From: mysnowls at 163.com (Lin)
Date: Thu, 26 Jan 2012 21:55:22 +0800
Subject: build-and-install
In-Reply-To: <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com> <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
Message-ID: <4F215B4A.9040009@163.com>

There is no setup.ml files in the current Bitbucket repo of Core, only 
an `oasis.sh' script for each specific library, so you need to generate 
all the configure files yourself.

I don't know whether Sylvain subscribed to this list, but I got help 
from him via email.  The whole story is:

There is actually a patch for the 0.2.1~alpha1 release to handle the 
pack option, contributed by Adrien Nader, who told me about this on 
#ocaml IRC channel.

http://www.forge.ocamlcore.org/tracker/download.php/54/294/573/151/0001-Apply-for-pack-patch-and-make-tests-work.patch

The patch works fine, except for only one problem, so I emailed Sylvain 
for help, who told me that it is brought by some incompatiablity with 
the newest version of ounit, and told me to apply this patch he pushed:

http://darcs.ocamlcore.org/cgi-bin/darcsweb.cgi?r=oasis/oasis;a=commit;h=20120123214332-a43a9-10c8acd791c07a240a69f022d2d13565dd5a7e39.gz

There are indeed only three lines to change, so I modified it by hand, 
and everything is DONE.


On 01/26/2012 09:29 PM, Anil Madhavapeddy wrote:
> Why did you have to rebuild the setup.ml files? Were the ones included 
> in the various library tarballs incorrect?
>
> Also Sylvain: would it be possible just to commit those patches that 
> are outstanding against OASIS for pack support? They seem to work well 
> enough, and lots of people seem to run into it...
>
> -Anil
>
> On 26 Jan 2012, at 13:23, Lin wrote:
>
>> For those interested, I finally managed to build and install all 
>> libraries on 32-bit Linux. The steps are:
>>
>> 1)  build a patched version of oasis 0.2.1~alpha1 which can handle 
>> the `Pack:true' option (thanks to help from Adrien Nader and Sylvain 
>> Le Gall)
>>
>> 2) uninstall previously installed version of 
>> type-conv/sexplib/bin_prot/fieldslib , etc.
>>
>> 3)  uncomment all `Pack:true' in every oasis.sh script in the 
>> directory tree , if any
>>
>> 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>>
>> On 01/26/2012 12:31 AM, Lin wrote:
>>> Well, this seems result from the fact that the official released 
>>> oasis 0.2.1~alpha1 does not handle the `Pack:true' option in the 
>>> _oasis file, which is used for generate correct .mlpack files.  
>>> There is a patch for handling this option which has not been merged 
>>> into oasis trunk :
>>>
>>> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>>>
>>> I guess that in Jane Street you're using the patched version of 
>>> oasis, so I can't get the library modules packed when trying to 
>>> compile with the unpatched version.
>>>
>>> And what it looks like is exactly a module packing problem, i.e. I 
>>> can `open Sexp', which should be `Sexplib.Sexp', and can't `open 
>>> Sexplib' because it's not packed at all.
>>>
>>>
>>> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>>>> The sexplib error is a bit surprising.  Did it successfully install 
>>>> sexplib before building core?
>>>>
>>>> I'm currently trying to build the packages by hand.  Here's my 
>>>> latest problem:
>>>>
>>>>     core $ ./oasis.sh && ocaml setup.ml <http://setup.ml/> -build
>>>>     && ocaml setup.ml <http://setup.ml/> -install
>>>>     ../../build-common.sh: line 88: undefined: unbound variable
>>>>
>>>>
>>>> If anyone knows how to get past that, I'd be much obliged...
>>>>
>>>> I started a page on the wiki for collecting hints on how to do the 
>>>> installation.  There's not much there yet, but I'll fill things out 
>>>> as I figure them out.  Others should feel free to pile in their advice:
>>>>
>>>> https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>>>
>>>> y
>>>>
>>>> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com 
>>>> <mailto:mysnowls at 163.com>> wrote:
>>>>
>>>>     I have been trying to build it by build-and-install script from
>>>>     two hous ago. With a few tweaks I can get it build everything
>>>>     before core(and async). I changed the last few lines of the
>>>>     script by discarding all the flags setting stuff, such that:
>>>>
>>>>       esac
>>>>       ./oasis.sh
>>>>       ./configure --prefix ~/godi
>>>>       make build
>>>>       make install || true
>>>>       popd
>>>>     done
>>>>
>>>>     But when building core there are some problems. First compiling
>>>>     `backtrace_stubs.c' failed by the #error directive on IA32
>>>>     machines. This can be solved by just returning an
>>>>     caml_copy_string("Not implemented") for backtrace_get() on IA32
>>>>     machines.
>>>>
>>>>     Another problem is like this, which I don't know what to do
>>>>     with it:
>>>>
>>>>     error : unbound module Sexplib
>>>>
>>>>
>>>>
>>>>     On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>>>     Has anyone succeeded in building Core on a mac using the
>>>>>     build-and-install script in the root?  When I try to run it, I
>>>>>     get the following error:
>>>>>
>>>>>     ocaml-core $ ./build-and-install --disable-linux
>>>>>     --disable-posix-timers
>>>>>     too many anonymous arguments: ./build-and-install -o j:h -l
>>>>>     jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>>>>     -- --disable-linux --disable-posix-tim\
>>>>>     ers
>>>>>     ------ base/type-conv ------
>>>>>     ~/Documents/code/ocaml-core/base/type-conv
>>>>>     ~/Documents/code/ocaml-core
>>>>>     W: Field XMETAType is set but matching plugin is not enabled.
>>>>>     I: File INSTALL has not changed, skipping
>>>>>     I: File Makefile has not changed, skipping
>>>>>     I: Regenerating file _tags
>>>>>     I: File configure has not changed, skipping
>>>>>     I: File lib/type-conv.odocl has not changed, skipping
>>>>>     I: File myocamlbuild.ml <http://myocamlbuild.ml/> has not
>>>>>     changed, skipping
>>>>>     I: File setup.ml <http://setup.ml/> has not changed, skipping
>>>>>     I: File syntax/META has not changed, skipping
>>>>>     I: File syntax/pa_type_conv.mllib has not changed, skipping
>>>>>     I: Running command '/usr/local/bin/ocamlc.opt -config >
>>>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>>>>     I: Running command '/usr/local/bin/ocamlfind query -format %v
>>>>>     findlib >
>>>>>     '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>>>>     E: Don't know what to do with arguments: ''
>>>>
>>>>
>>>
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/ec9d793e/attachment-0001.html>

From mysnowls at 163.com  Thu Jan 26 14:13:04 2012
From: mysnowls at 163.com (Lin)
Date: Thu, 26 Jan 2012 22:13:04 +0800
Subject: build-and-install
In-Reply-To: <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>	<4F1AD8E6.6020202@163.com>	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>	<4F202E5A.9030601@163.com>	<4F2153C2.8070409@163.com>	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org> <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
Message-ID: <4F215F70.8010407@163.com>


According to Sylvain, the pack option may be supported in the 0.3.0 
release of oasis. see this link:

http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294

Actually, I don't think this can be of a  problem. If  you can check in 
all the files generated by oasis into the Hg tree,  normal users would 
not need to care about oasis at all.

On 01/26/2012 10:03 PM, Yury Sulsky wrote:
> Actually, we've managed to build and install all of the libraries on a
> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
> which changes the build scripts to patch the generated setup.ml files
> with support for packed libs. This way, we don't need to rely on a
> patched version of OASIS being installed.
>
> When these fixes hit the tree hosted on bitbucket, I hope that a
> 32-bit Linux system will be able to build the tree straight away.
>
> But I agree, patching the generated setup.ml files is hacky and it
> would be great if there were a released version of OASIS with support
> for the Pack option.
>
> Yury
>
> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy<anil at recoil.org>  wrote:
>> Why did you have to rebuild the setup.ml files? Were the ones included in
>> the various library tarballs incorrect?
>>
>> Also Sylvain: would it be possible just to commit those patches that are
>> outstanding against OASIS for pack support? They seem to work well enough,
>> and lots of people seem to run into it...
>>
>> -Anil
>>
>> On 26 Jan 2012, at 13:23, Lin wrote:
>>
>> For those interested, I finally managed to build and install all libraries
>> on 32-bit Linux. The steps are:
>>
>> 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the
>> `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le Gall)
>>
>> 2) uninstall previously installed version of
>> type-conv/sexplib/bin_prot/fieldslib , etc.
>>
>> 3)  uncomment all `Pack:true' in every oasis.sh script in the directory tree
>> , if any
>>
>> 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>>
>> On 01/26/2012 12:31 AM, Lin wrote:
>>
>> Well, this seems result from the fact that the official released oasis
>> 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
>> which is used for generate correct .mlpack files.  There is a patch for
>> handling this option which has not been merged into oasis trunk :
>>
>> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>>
>> I guess that in Jane Street you're using the patched version of oasis, so I
>> can't get the library modules packed when trying to compile with the
>> unpatched version.
>>
>> And what it looks like is exactly a module packing problem, i.e. I can `open
>> Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because it's
>> not packed at all.
>>
>>
>> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>>
>> The sexplib error is a bit surprising.  Did it successfully install sexplib
>> before building core?
>>
>> I'm currently trying to build the packages by hand.  Here's my latest
>> problem:
>>
>> core $ ./oasis.sh&&  ocaml setup.ml -build&&  ocaml setup.ml -install
>> ../../build-common.sh: line 88: undefined: unbound variable
>>
>>
>> If anyone knows how to get past that, I'd be much obliged...
>>
>> I started a page on the wiki for collecting hints on how to do the
>> installation.  There's not much there yet, but I'll fill things out as I
>> figure them out.  Others should feel free to pile in their advice:
>>
>>      https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>
>> y
>>
>> On Sat, Jan 21, 2012 at 10:25 AM, Lin<mysnowls at 163.com>  wrote:
>>> I have been trying to build it by build-and-install script from two hous
>>> ago. With a few tweaks I can get it build everything before core(and async).
>>> I changed the last few lines of the script by discarding all the flags
>>> setting stuff, such that:
>>>
>>>    esac
>>>    ./oasis.sh
>>>    ./configure --prefix ~/godi
>>>    make build
>>>    make install || true
>>>    popd
>>> done
>>>
>>> But when building core there are some problems. First compiling
>>> `backtrace_stubs.c' failed by the #error directive on IA32 machines. This
>>> can be solved by just returning an caml_copy_string("Not implemented") for
>>> backtrace_get() on IA32 machines.
>>>
>>> Another problem is like this, which I don't know what to do with it:
>>>
>>> error : unbound module Sexplib
>>>
>>>
>>>
>>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>
>>> Has anyone succeeded in building Core on a mac using the build-and-install
>>> script in the root?  When I try to run it, I get the following error:
>>>
>>> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>>> too many anonymous arguments: ./build-and-install -o j:h -l
>>> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>> -- --disable-linux --disable-posix-tim\
>>> ers
>>> ------ base/type-conv ------
>>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>>> W: Field XMETAType is set but matching plugin is not enabled.
>>> I: File INSTALL has not changed, skipping
>>> I: File Makefile has not changed, skipping
>>> I: Regenerating file _tags
>>> I: File configure has not changed, skipping
>>> I: File lib/type-conv.odocl has not changed, skipping
>>> I: File myocamlbuild.ml has not changed, skipping
>>> I: File setup.ml has not changed, skipping
>>> I: File syntax/META has not changed, skipping
>>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>>> I: Running command '/usr/local/bin/ocamlc.opt -config>
>>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib>
>>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>> E: Don't know what to do with arguments: ''
>>>
>>>
>>
>>
>>




From anil at recoil.org  Thu Jan 26 22:14:39 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 26 Jan 2012 22:14:39 +0000
Subject: build-and-install
In-Reply-To: <CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com> <4F1AD8E6.6020202@163.com> <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com> <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com> <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org> <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com> <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com> <0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org> <802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org> <CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com> <CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
Message-ID: <E726BA63-F4CF-45C4-9914-690FD14034A0@recoil.org>


Yup, both those exist despite the warning. This is the full META file:

# OASIS_START
# DO NOT EDIT (digest: 0db3e3d863cd3be314dcea4d54ef71a5)
version = "2.3.0"
description = "Syntax extension for type-conv"
requires = "camlp4"
archive(syntax, preprocessor) = "pa_type_conv.cma"
archive(syntax, toploop) = "pa_type_conv.cma"
exists_if = "pa_type_conv.cma"
# OASIS_STOP

-anil

On 26 Jan 2012, at 16:42, Yury Sulsky wrote:

> When you run oasis, could you make sure that the generated META file
> contain these lines?
> 
> archive(syntax,preprocessor) = "pa_type_conv.cma"
> archive(syntax,toploop) = "pa_type_conv.cma"
> 
> Thanks,
> Yury
> 
> On Thu, Jan 26, 2012 at 4:41 PM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>> That tells oasis to add some flags to the library's META file, which
>> in turn tells ocamlfind that the package should be loaded as a syntax
>> extension: http://projects.camlcity.org/projects/dl/findlib-1.2.6/doc/guide-html/x412.html
>> 
>> On Thu, Jan 26, 2012 at 4:15 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> I'm just trying this all again on my Mac, with OASIS-trunk + the pack
>>> patches.
>>> 
>>> What is:
>>> 
>>>   XMETAType:          syntax
>>> 
>>> ...intended for in type-conv/_oasis (pa_type_conv)?
>>> 
>>> It gives me an unknown plugin warning, which is hopefully not important.
>>> 
>>> -Anil
>>> 
>>> On 26 Jan 2012, at 16:11, Anil Madhavapeddy wrote:
>>> 
>>> Including the autogenerated files does make bisecting changes a bit of a
>>> pain in the future.
>>> 
>>> It would be much better just to get an OASIS release out, since anyone else
>>> creating OCaml libraries has this exact same issue.
>>> 
>>> -anil
>>> 
>>> On 26 Jan 2012, at 16:07, Yaron Minsky wrote:
>>> 
>>> For what it's worth, we just pushed Yury's changes to the bitbucket repo, so
>>> those mac fixes should be in place.  I'll try to test them out myself at
>>> home tonight.
>>> 
>>> Yury, do you think it makes sense for us to include the setup.ml files we
>>> used directly in the repo?  I know it's a bit nasty to include generated
>>> files (the release tarballs of course should include them), but I wonder if
>>> it might make sense given the complexity of getting just the right version
>>> of Oasis installed...
>>> 
>>> y
>>> 
>>> On Thu, Jan 26, 2012 at 9:03 AM, Yury Sulsky <yury.sulsky at gmail.com> wrote:
>>>> 
>>>> Actually, we've managed to build and install all of the libraries on a
>>>> 32-bit Mac OSX machine. We're pushing a few fixes to the tree, one of
>>>> which changes the build scripts to patch the generated setup.ml files
>>>> with support for packed libs. This way, we don't need to rely on a
>>>> patched version of OASIS being installed.
>>>> 
>>>> When these fixes hit the tree hosted on bitbucket, I hope that a
>>>> 32-bit Linux system will be able to build the tree straight away.
>>>> 
>>>> But I agree, patching the generated setup.ml files is hacky and it
>>>> would be great if there were a released version of OASIS with support
>>>> for the Pack option.
>>>> 
>>>> Yury
>>>> 
>>>> On Thu, Jan 26, 2012 at 1:29 PM, Anil Madhavapeddy <anil at recoil.org>
>>>> wrote:
>>>>> Why did you have to rebuild the setup.ml files? Were the ones included
>>>>> in
>>>>> the various library tarballs incorrect?
>>>>> 
>>>>> Also Sylvain: would it be possible just to commit those patches that are
>>>>> outstanding against OASIS for pack support? They seem to work well
>>>>> enough,
>>>>> and lots of people seem to run into it...
>>>>> 
>>>>> -Anil
>>>>> 
>>>>> On 26 Jan 2012, at 13:23, Lin wrote:
>>>>> 
>>>>> For those interested, I finally managed to build and install all
>>>>> libraries
>>>>> on 32-bit Linux. The steps are:
>>>>> 
>>>>> 1)  build a patched version of oasis 0.2.1~alpha1 which can handle the
>>>>> `Pack:true' option (thanks to help from Adrien Nader and Sylvain Le
>>>>> Gall)
>>>>> 
>>>>> 2) uninstall previously installed version of
>>>>> type-conv/sexplib/bin_prot/fieldslib , etc.
>>>>> 
>>>>> 3)  uncomment all `Pack:true' in every oasis.sh script in the directory
>>>>> tree
>>>>> , if any
>>>>> 
>>>>> 4)  patch base/core/lib/backtrace_stubs.c to compile on 32-bit machines
>>>>> 
>>>>> On 01/26/2012 12:31 AM, Lin wrote:
>>>>> 
>>>>> Well, this seems result from the fact that the official released oasis
>>>>> 0.2.1~alpha1 does not handle the `Pack:true' option in the _oasis file,
>>>>> which is used for generate correct .mlpack files.  There is a patch for
>>>>> handling this option which has not been merged into oasis trunk :
>>>>> 
>>>>> 
>>>>> http://www.forge.ocamlcore.org/tracker/index.php?func=detail&aid=573&group_id=54&atid=294
>>>>> 
>>>>> I guess that in Jane Street you're using the patched version of oasis,
>>>>> so I
>>>>> can't get the library modules packed when trying to compile with the
>>>>> unpatched version.
>>>>> 
>>>>> And what it looks like is exactly a module packing problem, i.e. I can
>>>>> `open
>>>>> Sexp', which should be `Sexplib.Sexp', and can't `open Sexplib' because
>>>>> it's
>>>>> not packed at all.
>>>>> 
>>>>> 
>>>>> On 01/21/2012 11:29 PM, Yaron Minsky wrote:
>>>>> 
>>>>> The sexplib error is a bit surprising.  Did it successfully install
>>>>> sexplib
>>>>> before building core?
>>>>> 
>>>>> I'm currently trying to build the packages by hand.  Here's my latest
>>>>> problem:
>>>>> 
>>>>> core $ ./oasis.sh && ocaml setup.ml -build && ocaml setup.ml -install
>>>>> ../../build-common.sh: line 88: undefined: unbound variable
>>>>> 
>>>>> 
>>>>> If anyone knows how to get past that, I'd be much obliged...
>>>>> 
>>>>> I started a page on the wiki for collecting hints on how to do the
>>>>> installation.  There's not much there yet, but I'll fill things out as I
>>>>> figure them out.  Others should feel free to pile in their advice:
>>>>> 
>>>>>     https://bitbucket.org/yminsky/ocaml-core/wiki/InstallationHints
>>>>> 
>>>>> y
>>>>> 
>>>>> On Sat, Jan 21, 2012 at 10:25 AM, Lin <mysnowls at 163.com> wrote:
>>>>>> 
>>>>>> I have been trying to build it by build-and-install script from two
>>>>>> hous
>>>>>> ago. With a few tweaks I can get it build everything before core(and
>>>>>> async).
>>>>>> I changed the last few lines of the script by discarding all the flags
>>>>>> setting stuff, such that:
>>>>>> 
>>>>>>   esac
>>>>>>   ./oasis.sh
>>>>>>   ./configure --prefix ~/godi
>>>>>>   make build
>>>>>>   make install || true
>>>>>>   popd
>>>>>> done
>>>>>> 
>>>>>> But when building core there are some problems. First compiling
>>>>>> `backtrace_stubs.c' failed by the #error directive on IA32 machines.
>>>>>> This
>>>>>> can be solved by just returning an caml_copy_string("Not implemented")
>>>>>> for
>>>>>> backtrace_get() on IA32 machines.
>>>>>> 
>>>>>> Another problem is like this, which I don't know what to do with it:
>>>>>> 
>>>>>> error : unbound module Sexplib
>>>>>> 
>>>>>> 
>>>>>> 
>>>>>> On 01/21/2012 11:13 PM, Yaron Minsky wrote:
>>>>>> 
>>>>>> Has anyone succeeded in building Core on a mac using the
>>>>>> build-and-install
>>>>>> script in the root?  When I try to run it, I get the following error:
>>>>>> 
>>>>>> ocaml-core $ ./build-and-install --disable-linux --disable-posix-timers
>>>>>> too many anonymous arguments: ./build-and-install -o j:h -l
>>>>>> 
>>>>>> jobs:,help,enable-linux,disable-linux,enable-posix-timers,disable-posix-timers
>>>>>> -- --disable-linux --disable-posix-tim\
>>>>>> ers
>>>>>> ------ base/type-conv ------
>>>>>> ~/Documents/code/ocaml-core/base/type-conv ~/Documents/code/ocaml-core
>>>>>> W: Field XMETAType is set but matching plugin is not enabled.
>>>>>> I: File INSTALL has not changed, skipping
>>>>>> I: File Makefile has not changed, skipping
>>>>>> I: Regenerating file _tags
>>>>>> I: File configure has not changed, skipping
>>>>>> I: File lib/type-conv.odocl has not changed, skipping
>>>>>> I: File myocamlbuild.ml has not changed, skipping
>>>>>> I: File setup.ml has not changed, skipping
>>>>>> I: File syntax/META has not changed, skipping
>>>>>> I: File syntax/pa_type_conv.mllib has not changed, skipping
>>>>>> I: Running command '/usr/local/bin/ocamlc.opt -config >
>>>>>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-ee87eb.txt''
>>>>>> I: Running command '/usr/local/bin/ocamlfind query -format %v findlib >
>>>>>> '/var/folders/sy/cj86bh9d2cz0z_wvct_pbd8r0000gn/T/oasis-3ad4a1.txt''
>>>>>> E: Don't know what to do with arguments: ''
>>>>>> 
>>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>>>> 
>>> 
>>> 
>>> 
>>> 
> 



From markus.mottl at gmail.com  Fri Jan 27 03:35:40 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 26 Jan 2012 22:35:40 -0500
Subject: Documentation
In-Reply-To: <CACLX4jQPm94wXHTa93wZvL_JdpP9whEP6cTmmKnVbG+DNn_QJg@mail.gmail.com>
References: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>
	<CACLX4jQPm94wXHTa93wZvL_JdpP9whEP6cTmmKnVbG+DNn_QJg@mail.gmail.com>
Message-ID: <CAP_800qks1GC1+E0xHHeOvPe+YGSEjJYSHCQVPOkZ+Q1GxJ=1A@mail.gmail.com>


It's actually on my TODO list to move my library documentation away
from LaTeX to something that's more readable like Markdown.  What
dialect or tool do you use for that?

Markus

On Thu, Jan 26, 2012 at 21:53, Yaron Minsky <yminsky at janestreet.com> wrote:
> On Thu, Jan 26, 2012 at 9:29 PM, Markus Mottl <markus.mottl at gmail.com>
> wrote:
>>
>> Hi,
>>
>> the documentation (doc) directory in sexplib was apparently removed.
>> I found an intro.txt file in the lib-directory instead. ?I wasn't
>> quite sure what format it was, but the contents definitely seemed out
>> of date. ?I have hence re-added the more recent doc-directory with
>> LaTeX documentation in my fork. ?Please let me know what your plans
>> are wrt. documentation (manuals, not source) so that we can have a
>> unified approach.
>
>
> I looked at our internal tree, and indeed there is no sexplib/doc directory
> in our internal tree, which surprises me. ? ?I'm certainly happy to have it
> back.
>
> We've moved most of our internal documentation to markdown, which I think is
> generally easier to manage and deal with, and easier to read as plain-text.
> ?And it generates perfectly usable latex output as well.
>
> y



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Fri Jan 27 03:38:11 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 26 Jan 2012 22:38:11 -0500
Subject: Documentation
In-Reply-To: <CAP_800qks1GC1+E0xHHeOvPe+YGSEjJYSHCQVPOkZ+Q1GxJ=1A@mail.gmail.com>
References: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>
	<CACLX4jQPm94wXHTa93wZvL_JdpP9whEP6cTmmKnVbG+DNn_QJg@mail.gmail.com>
	<CAP_800qks1GC1+E0xHHeOvPe+YGSEjJYSHCQVPOkZ+Q1GxJ=1A@mail.gmail.com>
Message-ID: <CACLX4jTJooPmfKoSD6dFfYQYWgfwcowwLf31PxezJP7RdsgTkg@mail.gmail.com>

Pandoc.  It's the nicest tool for markdown conversion I've seen.
On Jan 26, 2012 10:35 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:

> It's actually on my TODO list to move my library documentation away
> from LaTeX to something that's more readable like Markdown.  What
> dialect or tool do you use for that?
>
> Markus
>
> On Thu, Jan 26, 2012 at 21:53, Yaron Minsky <yminsky at janestreet.com>
> wrote:
> > On Thu, Jan 26, 2012 at 9:29 PM, Markus Mottl <markus.mottl at gmail.com>
> > wrote:
> >>
> >> Hi,
> >>
> >> the documentation (doc) directory in sexplib was apparently removed.
> >> I found an intro.txt file in the lib-directory instead.  I wasn't
> >> quite sure what format it was, but the contents definitely seemed out
> >> of date.  I have hence re-added the more recent doc-directory with
> >> LaTeX documentation in my fork.  Please let me know what your plans
> >> are wrt. documentation (manuals, not source) so that we can have a
> >> unified approach.
> >
> >
> > I looked at our internal tree, and indeed there is no sexplib/doc
> directory
> > in our internal tree, which surprises me.    I'm certainly happy to have
> it
> > back.
> >
> > We've moved most of our internal documentation to markdown, which I
> think is
> > generally easier to manage and deal with, and easier to read as
> plain-text.
> >  And it generates perfectly usable latex output as well.
> >
> > y
>
>
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120126/157aabc3/attachment-0001.html>

From markus.mottl at gmail.com  Fri Jan 27 03:51:01 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 26 Jan 2012 22:51:01 -0500
Subject: Documentation
In-Reply-To: <CACLX4jTJooPmfKoSD6dFfYQYWgfwcowwLf31PxezJP7RdsgTkg@mail.gmail.com>
References: <CAP_800re+D-stjWE0a6CEHtD4sevhnaeADoVwp5o7fHK0yGQrA@mail.gmail.com>
	<CACLX4jQPm94wXHTa93wZvL_JdpP9whEP6cTmmKnVbG+DNn_QJg@mail.gmail.com>
	<CAP_800qks1GC1+E0xHHeOvPe+YGSEjJYSHCQVPOkZ+Q1GxJ=1A@mail.gmail.com>
	<CACLX4jTJooPmfKoSD6dFfYQYWgfwcowwLf31PxezJP7RdsgTkg@mail.gmail.com>
Message-ID: <CAP_800qPt7ppocJWSAwx1Q_mKS6D_Jh2NWA5d-D+H0es8YwisA@mail.gmail.com>


Thanks, just looked at it a few minutes ago.  When I saw it's in
Haskell, I was basically sold on it ;)

Markus

On Thu, Jan 26, 2012 at 22:38, Yaron Minsky <yminsky at janestreet.com> wrote:
> Pandoc.? It's the nicest tool for markdown conversion I've seen.
>
> On Jan 26, 2012 10:35 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:
>>
>> It's actually on my TODO list to move my library documentation away
>> from LaTeX to something that's more readable like Markdown. ?What
>> dialect or tool do you use for that?
>>
>> Markus
>>
>> On Thu, Jan 26, 2012 at 21:53, Yaron Minsky <yminsky at janestreet.com>
>> wrote:
>> > On Thu, Jan 26, 2012 at 9:29 PM, Markus Mottl <markus.mottl at gmail.com>
>> > wrote:
>> >>
>> >> Hi,
>> >>
>> >> the documentation (doc) directory in sexplib was apparently removed.
>> >> I found an intro.txt file in the lib-directory instead. ?I wasn't
>> >> quite sure what format it was, but the contents definitely seemed out
>> >> of date. ?I have hence re-added the more recent doc-directory with
>> >> LaTeX documentation in my fork. ?Please let me know what your plans
>> >> are wrt. documentation (manuals, not source) so that we can have a
>> >> unified approach.
>> >
>> >
>> > I looked at our internal tree, and indeed there is no sexplib/doc
>> > directory
>> > in our internal tree, which surprises me. ? ?I'm certainly happy to have
>> > it
>> > back.
>> >
>> > We've moved most of our internal documentation to markdown, which I
>> > think is
>> > generally easier to manage and deal with, and easier to read as
>> > plain-text.
>> > ?And it generates perfectly usable latex output as well.
>> >
>> > y
>>
>>
>>
>> --
>> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com



-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From ocaml-core at googlegroups.com  Fri Jan 27 02:26:12 2012
From: ocaml-core at googlegroups.com (ocaml-core at googlegroups.com)
Date: Fri, 27 Jan 2012 02:26:12 +0000
Subject: Moderator's spam report for ocaml-core@googlegroups.com
Message-ID: <0016367fb4c76df81b04b7793891@google.com>


This message is being sent to you because you are a moderator of the group ocaml-core.

The following suspicious messages were sent to your group, but are being held in your moderation queue because they are classified as likely spam messages.

If you take no action, all the messages below will be discarded automatically as spam.

However, if you see any messages that are not spam below, you may approve them individually by going to:

http://groups.google.com/group/ocaml-core/pendmsg

Please do not mark this notification as spam; this is a service for group moderators. If you do not wish to receive these notifications in the future, you may change your preferences by going to:

http://groups.google.com/group/ocaml-core/manage_post


------- 1 of 3  -------
Subject: A wiki of my  reading of the Async library code
>From: Lin <mysnowls at 163.com>
Date: Jan 24 02:15PM +0800

Hi all,

    These days I have been reading the source code of the Async library, 
both for learning OCaml itself and the internal of Async.
And I've setup a wiki on Bitbucket, and would post a series of articles 
on my understanding of the

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=8499100554198459689

------- 2 of 3  -------
Subject: Re: build-and-install
>From: Lin <mysnowls at 163.com>
Date: Jan 26 01:33PM +0800

For those interested, I finally managed to build and install all 
libraries on 32-bit Linux. The steps are:

1)  build a patched version of oasis 0.2.1~alpha1 which can handle the 
`Pack:true' option (thanks to help from Adrien Nader and Sylvain

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=7932455113160341402

------- 3 of 3  -------
Subject: Revolutionary R&D creates SSL certificate tool
>From: "White Paper Library" <whitepapers at cityslugger.com>
Date: Jan 26 10:57AM -0500

Learn how this revolutionary technology can centrally manage enterprise SSL certificates. Keep your organization safe from digital threats and data breaches.

This science breaking technology is WebTrust certified by Ernst & Young and there is no

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=7327489072769736096


For more information about this message, please visit:
http://groups.google.com/support/bin/answer.py?hl=en&answer=165806



From yury.sulsky at gmail.com  Fri Jan 27 07:13:04 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Fri, 27 Jan 2012 07:13:04 +0000
Subject: Unit tests
In-Reply-To: <CACLX4jSnA6U7sqZ3JHiOPhkH7OzKJtYScC5xrmEhq9y39opm+w@mail.gmail.com>
References: <CAP_800q=cGW9LpqGdvNmOh6okwknfKFaG6vWtDX34FokvDY2oA@mail.gmail.com>
	<CACLX4jSnA6U7sqZ3JHiOPhkH7OzKJtYScC5xrmEhq9y39opm+w@mail.gmail.com>
Message-ID: <CAEDxudzWi6LX33N7OVHzW=3hoqdHdjOFETdmpHyhfwfDy8xdMQ@mail.gmail.com>


Sorry! I mistakenly thought that we wouldn't be exporting the
lib_tests. I'll add those back in.

On Fri, Jan 27, 2012 at 2:10 AM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Sorry.? The tests are all still in existence, but presumably not exported by
> our script.? Yury, can you get the lib-test directories added?
>
> On Jan 26, 2012 9:07 PM, "Markus Mottl" <markus.mottl at gmail.com> wrote:
>>
>> Hi,
>>
>> I've just noticed that there are no unit tests for bin-prot and
>> sexplib anymore. ?They used to be in lib_test subdirectories. ?Since
>> especially the ones for bin-prot are of great importance, I wondered
>> how you want to test ocaml-core libraries? ?Are there any plans to add
>> those test suites back in later again?
>>
>> Regards,
>> Markus
>>
>> --
>> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri Jan 27 20:48:37 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 27 Jan 2012 15:48:37 -0500
Subject: build-and-install
In-Reply-To: <CAOCAUGN9gzpmscDFB3ZkDeuGz4gmiAqvpT-sSF4sJ9Za0UcuLg@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CAOCAUGN9gzpmscDFB3ZkDeuGz4gmiAqvpT-sSF4sJ9Za0UcuLg@mail.gmail.com>
Message-ID: <CAP_800rUq_PPTqLX1Xt-WSY18h8ZHapN6drDsLjLQbeWzBBYbw@mail.gmail.com>


On Fri, Jan 27, 2012 at 04:42, Sylvain Le Gall <gildor at ocamlcore.org> wrote:
> Have a look here:
> https://forge.ocamlcore.org/tracker/index.php?func=detail&aid=791&group_id=54&atid=291
>
> The bug is known a planned to be fixed in 0.2.1.

Great, good to know this will be fixed soon.

> You'll probably have to wait 0.2.1 in GODI. But this is something that
> can happen quite fast (depending on my confidence on the current
> version).

It was certainly a very helpful move to provide Oasis through Godi.
Installation before was tedious.  This should make upgrades much
easier in the future.

I'd also recommend to "release early, release often".  Oasis is not
considered stable yet anyway so most people would probably not mind
working with versions you are not totally confident in.  Fast
turnaround in the early stages of development seems more important
than stability.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Fri Jan 27 21:18:32 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Fri, 27 Jan 2012 16:18:32 -0500
Subject: build-and-install
In-Reply-To: <CAOCAUGNDx9fTStofR-QJbF6pSF0vrSRMOmV72q2CouBqcck4HA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CAOCAUGN9gzpmscDFB3ZkDeuGz4gmiAqvpT-sSF4sJ9Za0UcuLg@mail.gmail.com>
	<CAP_800rUq_PPTqLX1Xt-WSY18h8ZHapN6drDsLjLQbeWzBBYbw@mail.gmail.com>
	<CAOCAUGNDx9fTStofR-QJbF6pSF0vrSRMOmV72q2CouBqcck4HA@mail.gmail.com>
Message-ID: <CAP_800r3rD-DOSQv-KQpPA8LmTDHd7X6Xk-Tjo4da+k4ef0Q5w@mail.gmail.com>


On Fri, Jan 27, 2012 at 16:05, Sylvain Le Gall <gildor at ocamlcore.org> wrote:
> I'll turn the remaining bugs in "fix in the next minor release" and will
> release.

Awesome, thank you very much for your hard work!

Cheers,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Sat Jan 28 11:45:09 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 28 Jan 2012 06:45:09 -0500
Subject: Pull requests
Message-ID: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>

There are a number of outstanding pull requests, and I wanted to mention
that I'm holding off on including them mostly because we don't yet have a
contributor license agreement set up.  We're working on this now, but I
just wanted people to understand what the holdup is.

y
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120128/9889f909/attachment-0001.html>

From yminsky at janestreet.com  Sat Jan 28 12:25:34 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sat, 28 Jan 2012 07:25:34 -0500
Subject: build-and-install
In-Reply-To: <CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
Message-ID: <CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>

I can confirm that I can build from Markus' tree (except for Async, which
I'm still working on).  Right now it looks like native-code executables
work (at least, very trivial ones do), but byte-code using core fails right
out of the gate:

unique1 $ ./unique
Fatal error: unknown C primitive `unix_get_terminal_size'

Looks to me like we've got some more portability issues to resolve.

By the way, we've done some more work we've done of late on how to deal
with non-portable code.  We're going to start having functions that are
platform dependent show up as possibly being absent explicitly in the
signature.  So, you might have a function like:

  val some_linux_specific_hack : (float -> int -> bool) Or_error.t

Which means that your code can now at run-time respond to whether or not
the functionality in question is there or not.  This should make it so that
the IFDEFs required are restricted to the module that implements the
functionality, and the rest of the codebase can operated using ordinary
OCaml.

y

On Thu, Jan 26, 2012 at 8:51 PM, Markus Mottl <markus.mottl at gmail.com>wrote:

> Hi everybody,
>
> I have managed to completely build all libraries on my Mac using my
> fork of ocaml-core (ocaml-core-mmottl).  This fork incorporates all
> changes from the previously "official" releases of type-conv,
> bin-prot, and sexplib on OCaml Forge.
>
> Sadly, there still seem to be issues with Oasis (I'm using 0.2.0, the
> one in Godi) that lead to incorrect link flags.  It is hence still not
> possible to actually build applications.  Sylvain, could you please
> look into this?  It seems the library linker (ocamlc/ocamlopt -a) gets
> an extra library argument that shouldn't be there.  E.g.
> lib/libbin_prot.a in the following build log entry of bin-prot:
>
>  ocamlfind ocamlopt -a -cclib -lbin_prot lib/bin_prot.cmx
> lib/libbin_prot.a -o lib/bin_prot.cmxa
>
> I think it is related to the following myocamlbuild.ml lines:
>
> ----------
>  (* When ocaml link something that use the C library, then one
>      need that file to be up to date.
>    *)
>    dep  ["link"; "ocaml"; "use_lib"^lib]
>      [dir/"lib"^lib^"."^(!Options.ext_lib)];
> ----------
>
> "link" used to be "compile" in a different version of Oasis, not sure
> which one.  It seemed to work there.  It would be great if we could
> all agree on the Oasis version to use, preferably the one in Godi,
> which is easy to install.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120128/155a4516/attachment-0001.html>

From markus.mottl at gmail.com  Sun Jan 29 01:43:25 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sat, 28 Jan 2012 20:43:25 -0500
Subject: build-and-install
In-Reply-To: <CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
Message-ID: <CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>


On Sat, Jan 28, 2012 at 07:25, Yaron Minsky <yminsky at janestreet.com> wrote:
> I can confirm that I can build from Markus' tree (except for Async, which
> I'm still working on). ?Right now it looks like native-code executables work
> (at least, very trivial ones do), but byte-code using core fails right out
> of the gate:

Strange, the whole tree built for me, including async.  I guess your
Oasis version may be different?  I'm still using Oasis 0.2.0 from
Godi.

> By the way, we've done some more work we've done of late on how to deal with
> non-portable code. ?We're going to start having functions that are platform
> dependent show up as possibly being absent explicitly in the signature. ?So,
> you might have a function like:
>
> ? val some_linux_specific_hack : (float -> int -> bool) Or_error.t
>
> Which means that your code can now at run-time respond to whether or not the
> functionality in question is there or not. ?This should make it so that the
> IFDEFs required are restricted to the module that implements the
> functionality, and the rest of the codebase can operated using ordinary
> OCaml.

What happened to the first class module approach that has been
discussed recently for related groups of functions (e.g.
platform-specific system calls)?  Library users would surely rather
have to pattern-match just once for the group rather than for each
function separately.

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Sun Jan 29 22:38:40 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 17:38:40 -0500
Subject: build-and-install
In-Reply-To: <CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
Message-ID: <CACLX4jS0-dsbQWPt_yFGQEgAM7G4HXgMvhWN5ve=uc7K9zwiUQ@mail.gmail.com>


On Sat, Jan 28, 2012 at 8:43 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Sat, Jan 28, 2012 at 07:25, Yaron Minsky <yminsky at janestreet.com> wrote:
> Strange, the whole tree built for me, including async. ?I guess your
> Oasis version may be different? ?I'm still using Oasis 0.2.0 from
> Godi.

I downgraded to Oasis 0.2.0 before starting, but to no avail.  I'll
try to sort it out.

> What happened to the first class module approach that has been
> discussed recently for related groups of functions (e.g.
> platform-specific system calls)? ?Library users would surely rather
> have to pattern-match just once for the group rather than for each
> function separately.

For the moment, I don't think it's worth it.  For one thing, we don't
really have large blocks of well-defined functionality for different
platforms.  And individual pieces of functionality we do build may
work on different subsets of platforms.  Also, the first-class module
solution requires a decent amount of overhead per use.  So I think the
option-per-function is about right.

As a side note, we should probably rename Linux_ext to something like
Unix_ext, since the calls aren't necessarily Linux-specific.

y


From yminsky at janestreet.com  Sun Jan 29 22:40:02 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 17:40:02 -0500
Subject: ocaml-core-mac-portability typo
In-Reply-To: <CADy1MauHoYNe1iZAGHaaMgrg3-R2pDoHBaXex7gCSdra=dBfnQ@mail.gmail.com>
References: <CADy1MauHoYNe1iZAGHaaMgrg3-R2pDoHBaXex7gCSdra=dBfnQ@mail.gmail.com>
Message-ID: <CACLX4jRC09RR-eK2-0=Tt_7DOBe1QM7CrKWA2BYxXKK5HbPCWA@mail.gmail.com>


My guess is that this repo should be abandoned rather than merged in.
Others have made more progress than I. I'll blow it away.

y

On Sun, Jan 29, 2012 at 5:22 PM, David House <dmhouse at gmail.com> wrote:
> I notice that the ocaml-core-mac-portabiility repo has a typo in its
> name. If this is about to get merged in to ocaml-core then I guess
> this is fine, but just in case.


From yminsky at janestreet.com  Sun Jan 29 22:40:39 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 17:40:39 -0500
Subject: Problems building on Linux
In-Reply-To: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
Message-ID: <CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>


Which version of Oasis do you have installed?  I wouldn't expect it to
work with anything but 0.2.0.

y

On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com> wrote:
> Hi all,
>
> $ uname -a
> Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
> 2012 i686 athlon i386 GNU/Linux
>
> I'm now not 100% sure of the state of my system, because I've had a
> few aborted attempts at installing the core packages. But if I clone a
> fresh checkout of the tree, and `ocamlfind remove' all the packages,
> then use build-and-install, the following problems occur:
>
> 1. I get the 'Don't know what do with arguments: ""' error that Ron
> described. (Full output attached as build-output1.) I "fixed" this by
> replacing:
> ?./oasis.sh $optflags "${configopts[@]-}"
> with:
> ?./oasis.sh
> in build-and-install.sh.
>
> 2. The following error occurs when building compare:
>
> ------ base/compare ------
> ~/ocaml/core/base/compare ~/ocaml/core
> ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or directory
>
> (Full output attached as build-output2.) I "fixed" this by mkdir'ing
> base/compare/lib.
>
> 3. patch fails in the fieldslib directory. Here's the error:
>
> ------ base/fieldslib ------
> ~/ocaml/core/base/fieldslib ~/ocaml/core
> W: Field XMETAType is set but matching plugin is not enabled.
> I: File INSTALL doesn't exist, creating it.
> I: File Makefile doesn't exist, creating it.
> I: Regenerating file _tags
> I: File configure doesn't exist, creating it.
> I: File lib/META doesn't exist, creating it.
> I: File lib/fieldslib.mllib doesn't exist, creating it.
> I: File lib/fieldslib.odocl has not changed, skipping
> I: File myocamlbuild.ml doesn't exist, creating it.
> I: File setup.ml doesn't exist, creating it.
> I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
> patching file setup.ml
> Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
> Hunk #2 FAILED at 1286.
> Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
> Hunk #4 FAILED at 4269.
> 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
>
> And:
>
> $ cat setup.ml.rej
> --- setup.ml ? ?2012-01-26 09:04:49.000000000 +0000
> +++ setup.ml ? ?2012-01-26 09:25:06.000000000 +0000
> @@ -1286,6 +1287,7 @@
> ? ? ? ? source_file_exists is_native ext_lib ext_dll =
> ? ? (* The headers that should be compiled along *)
> ? ? let headers =
> + ? ? ?if lib.lib_pack then [] else
> ? ? ? List.fold_left
> ? ? ? ? (fun hdrs modul ->
> ? ? ? ? ? ?try
> @@ -4269,6 +4278,7 @@
> ? ? ? ? ? ? ? ? List.rev_append lib_extra acc
> ? ? ? ? ? ? ? in
> ? ? ? ? ? ? ? let acc =
> + ? ? ? ? ? ? ? ?if lib.lib_pack then acc else
> ? ? ? ? ? ? ? ? (* Add uncompiled header from the source tree *)
> ? ? ? ? ? ? ? ? let path =
> ? ? ? ? ? ? ? ? ? BaseFilePath.of_unix bs.bs_path
>
> Full output is attached as build-output3. I've also attached my
> setup.ml from fieldslib. I'm stuck with this one.


From yminsky at janestreet.com  Sun Jan 29 22:43:35 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 17:43:35 -0500
Subject: build-and-install
In-Reply-To: <CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
Message-ID: <CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>


On Sat, Jan 28, 2012 at 8:43 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Sat, Jan 28, 2012 at 07:25, Yaron Minsky <yminsky at janestreet.com> wrote:
>> I can confirm that I can build from Markus' tree (except for Async, which
>> I'm still working on). ?Right now it looks like native-code executables work
>> (at least, very trivial ones do), but byte-code using core fails right out
>> of the gate:
>
> Strange, the whole tree built for me, including async. ?I guess your
> Oasis version may be different? ?I'm still using Oasis 0.2.0 from
> Godi.

By the way, what version of OS X are you running?  I'm on 10.7.2.

y

>> By the way, we've done some more work we've done of late on how to deal with
>> non-portable code. ?We're going to start having functions that are platform
>> dependent show up as possibly being absent explicitly in the signature. ?So,
>> you might have a function like:
>>
>> ? val some_linux_specific_hack : (float -> int -> bool) Or_error.t
>>
>> Which means that your code can now at run-time respond to whether or not the
>> functionality in question is there or not. ?This should make it so that the
>> IFDEFs required are restricted to the module that implements the
>> functionality, and the rest of the codebase can operated using ordinary
>> OCaml.
>
> What happened to the first class module approach that has been
> discussed recently for related groups of functions (e.g.
> platform-specific system calls)? ?Library users would surely rather
> have to pattern-match just once for the group rather than for each
> function separately.
>
> Regards,
> Markus
>
> --
> Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From yminsky at janestreet.com  Sun Jan 29 22:45:54 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 17:45:54 -0500
Subject: Problems building on Linux
In-Reply-To: <CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
Message-ID: <CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>


Will do.  Sorry for the misdirection.

On Sun, Jan 29, 2012 at 5:43 PM, David House <dmhouse at gmail.com> wrote:
> The version that the installation hints specify, which is 0.2.1. (Which was,
> incidentally, a real pain to install!) I'll try again tomorrow with a
> downgraded version. Could you change the wiki?
>
> On Jan 29, 2012 10:40 PM, "Yaron Minsky" <yminsky at janestreet.com> wrote:
>>
>> Which version of Oasis do you have installed? ?I wouldn't expect it to
>> work with anything but 0.2.0.
>>
>> y
>>
>> On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com> wrote:
>> > Hi all,
>> >
>> > $ uname -a
>> > Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
>> > 2012 i686 athlon i386 GNU/Linux
>> >
>> > I'm now not 100% sure of the state of my system, because I've had a
>> > few aborted attempts at installing the core packages. But if I clone a
>> > fresh checkout of the tree, and `ocamlfind remove' all the packages,
>> > then use build-and-install, the following problems occur:
>> >
>> > 1. I get the 'Don't know what do with arguments: ""' error that Ron
>> > described. (Full output attached as build-output1.) I "fixed" this by
>> > replacing:
>> > ?./oasis.sh $optflags "${configopts[@]-}"
>> > with:
>> > ?./oasis.sh
>> > in build-and-install.sh.
>> >
>> > 2. The following error occurs when building compare:
>> >
>> > ------ base/compare ------
>> > ~/ocaml/core/base/compare ~/ocaml/core
>> > ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or
>> > directory
>> >
>> > (Full output attached as build-output2.) I "fixed" this by mkdir'ing
>> > base/compare/lib.
>> >
>> > 3. patch fails in the fieldslib directory. Here's the error:
>> >
>> > ------ base/fieldslib ------
>> > ~/ocaml/core/base/fieldslib ~/ocaml/core
>> > W: Field XMETAType is set but matching plugin is not enabled.
>> > I: File INSTALL doesn't exist, creating it.
>> > I: File Makefile doesn't exist, creating it.
>> > I: Regenerating file _tags
>> > I: File configure doesn't exist, creating it.
>> > I: File lib/META doesn't exist, creating it.
>> > I: File lib/fieldslib.mllib doesn't exist, creating it.
>> > I: File lib/fieldslib.odocl has not changed, skipping
>> > I: File myocamlbuild.ml doesn't exist, creating it.
>> > I: File setup.ml doesn't exist, creating it.
>> > I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
>> > patching file setup.ml
>> > Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
>> > Hunk #2 FAILED at 1286.
>> > Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
>> > Hunk #4 FAILED at 4269.
>> > 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
>> >
>> > And:
>> >
>> > $ cat setup.ml.rej
>> > --- setup.ml ? ?2012-01-26 09:04:49.000000000 +0000
>> > +++ setup.ml ? ?2012-01-26 09:25:06.000000000 +0000
>> > @@ -1286,6 +1287,7 @@
>> > ? ? ? ? source_file_exists is_native ext_lib ext_dll =
>> > ? ? (* The headers that should be compiled along *)
>> > ? ? let headers =
>> > + ? ? ?if lib.lib_pack then [] else
>> > ? ? ? List.fold_left
>> > ? ? ? ? (fun hdrs modul ->
>> > ? ? ? ? ? ?try
>> > @@ -4269,6 +4278,7 @@
>> > ? ? ? ? ? ? ? ? List.rev_append lib_extra acc
>> > ? ? ? ? ? ? ? in
>> > ? ? ? ? ? ? ? let acc =
>> > + ? ? ? ? ? ? ? ?if lib.lib_pack then acc else
>> > ? ? ? ? ? ? ? ? (* Add uncompiled header from the source tree *)
>> > ? ? ? ? ? ? ? ? let path =
>> > ? ? ? ? ? ? ? ? ? BaseFilePath.of_unix bs.bs_path
>> >
>> > Full output is attached as build-output3. I've also attached my
>> > setup.ml from fieldslib. I'm stuck with this one.


From yminsky at gmail.com  Sun Jan 29 23:13:39 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 18:13:39 -0500
Subject: Pull requests
In-Reply-To: <A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org>
References: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>
	<A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org>
Message-ID: <CADKNfhKzEDY7==Zj2vZosWjeiDVUHYsH9W3mw99O7Ki_BkEBpw@mail.gmail.com>

I think we'll end up with something like the Apache agreement, which
doesn't seem to require much overhead, except for signing something.  Does
that strike you as onerous?

y

On Sun, Jan 29, 2012 at 5:16 PM, Anil Madhavapeddy <anil at recoil.org> wrote:

> (off-list)
>
> Again, I just want to highlight my concerns with putting barriers in place
> for outside contributors. I'm also very against assigning my copyright to
> someone else for free software (its different for commercial software of
> course).  This would make it painful for another company to depend on Core
> as legal would have to get involved to sign the indemnity.
>
> The Linux/Xen solution I mentioned is *far* more scalable and lightweight,
> unless there's something that you're trying to protect Jane Street from
> (which could very well be the case! apologies if so).
>
> -anil
>
> On 28 Jan 2012, at 11:45, Yaron Minsky wrote:
>
> > There are a number of outstanding pull requests, and I wanted to mention
> that I'm holding off on including them mostly because we don't yet have a
> contributor license agreement set up.  We're working on this now, but I
> just wanted people to understand what the holdup is.
> >
> > y
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/f1575ebb/attachment-0001.html>

From yminsky at gmail.com  Mon Jan 30 00:17:04 2012
From: yminsky at gmail.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 19:17:04 -0500
Subject: Pull requests
In-Reply-To: <2B312922-E9DE-4225-AD9A-ADBBC26691B9@recoil.org>
References: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>
	<A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org>
	<CADKNfhKzEDY7==Zj2vZosWjeiDVUHYsH9W3mw99O7Ki_BkEBpw@mail.gmail.com>
	<2B312922-E9DE-4225-AD9A-ADBBC26691B9@recoil.org>
Message-ID: <CADKNfh+y-jQ_9oJfihHgwzDYqv-Lrbqer1LCvWQfjLoKTTYoAw@mail.gmail.com>

I guess I hadn't fully understood your earlier proposal.  I had thought
that the signed-off idea was a protection in addition to signing a CLA, but
now looking back I realize the intent is that it be instead.

But what's the advantage?  In terms of traceability of patches, I've been
thinking that bitbucket's user authentication would be sufficient, since
we'd have the name of the author of each patch clearly visible.  As a
pragmatic matter, it seems like that would identify users to us and allow
us to back out changes if need be.

I guess signing an agreement is somewhat onerous, and I agree that they
might not be able to sign such an agreement, depending on the agreements
they have with their employers.  But the "Developers Certificate of
Origin", which people are implicitly signing on to, seems to carry the same
problem.  And having people actually sign the agreement seems to improve
the chance that people are actually paying attention to the rules and
following whatever their IP restrictions are.

Honestly, I'd rather not have submissions from people who aren't allowed to
contribute by their employer, and requiring people to sign a CLA seems to
improve the chance that people get this right.

y

On Sun, Jan 29, 2012 at 6:19 PM, Anil Madhavapeddy <anil at recoil.org> wrote:

> Yeah, as most engineering contributors from companies wont have direct
> signing authority. So even if they *do* sign it as a personal thing,
> chances are their companies have a claim on their IPR.
>
> I've been through this before for FSF patches for gcc, and it was painful
> enough.  It may be easier now since Apache is well known, but really, why
> bother with all this?  If you do get a bad egg who signs this agreement,
> what recourse do you have against them in practise? And if there's no
> recourse, what's the purpose of the agreement?  Establishing a provenance
> trail is way more important so you can *undo* patches that later prove bad,
> and that's what Signed-off-by is all about.
>
> -Anil
>
> On 29 Jan 2012, at 23:13, Yaron Minsky wrote:
>
> I think we'll end up with something like the Apache agreement, which
> doesn't seem to require much overhead, except for signing something.  Does
> that strike you as onerous?
>
> y
>
> On Sun, Jan 29, 2012 at 5:16 PM, Anil Madhavapeddy <anil at recoil.org>wrote:
>
>> (off-list)
>>
>> Again, I just want to highlight my concerns with putting barriers in
>> place for outside contributors. I'm also very against assigning my
>> copyright to someone else for free software (its different for commercial
>> software of course).  This would make it painful for another company to
>> depend on Core as legal would have to get involved to sign the indemnity.
>>
>> The Linux/Xen solution I mentioned is *far* more scalable and
>> lightweight, unless there's something that you're trying to protect Jane
>> Street from (which could very well be the case! apologies if so).
>>
>> -anil
>>
>> On 28 Jan 2012, at 11:45, Yaron Minsky wrote:
>>
>> > There are a number of outstanding pull requests, and I wanted to
>> mention that I'm holding off on including them mostly because we don't yet
>> have a contributor license agreement set up.  We're working on this now,
>> but I just wanted people to understand what the holdup is.
>> >
>> > y
>>
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/498c584b/attachment-0001.html>

From markus.mottl at gmail.com  Mon Jan 30 01:43:33 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 29 Jan 2012 20:43:33 -0500
Subject: build-and-install
In-Reply-To: <CACLX4jS0-dsbQWPt_yFGQEgAM7G4HXgMvhWN5ve=uc7K9zwiUQ@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jS0-dsbQWPt_yFGQEgAM7G4HXgMvhWN5ve=uc7K9zwiUQ@mail.gmail.com>
Message-ID: <CAP_800qe1zEKw41KoMQ+VrznrrdrECzThmigMqro6yiNNLBavg@mail.gmail.com>


On Sun, Jan 29, 2012 at 17:38, Yaron Minsky <yminsky at janestreet.com> wrote:
> For the moment, I don't think it's worth it. ?For one thing, we don't
> really have large blocks of well-defined functionality for different
> platforms. ?And individual pieces of functionality we do build may
> work on different subsets of platforms.

Fair enough.

> Also, the first-class module
> solution requires a decent amount of overhead per use. ?So I think the
> option-per-function is about right.

Doesn't seem too bad, since it's a one time effort for the whole
application.  E.g. assuming "Core" contains:

  let opt_linux_ext =
    Some (module struct
      let kpoll = ()
    end : S)

Then the user may only need to write something like the following once
for their whole application:

  module Linux_ext =
    (val Option.value_exn_message "need to run on Linux" opt_linux_ext : S)

I'm not sure, but the computational overhead of accessing functions is
likely negligible, too, since neither solution can get inlined at the
point of function use anyway.

> As a side note, we should probably rename Linux_ext to something like
> Unix_ext, since the calls aren't necessarily Linux-specific.

I guess some may also be available elsewhere.  There are definitely
some functions that don't seem to belong there, e.g. the POSIX timer
stuff and anything else that's likely well-standardized.
Multi-platform support is certainly a notoriously messy undertaking...

Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From markus.mottl at gmail.com  Mon Jan 30 01:46:34 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 29 Jan 2012 20:46:34 -0500
Subject: build-and-install
In-Reply-To: <CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
Message-ID: <CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>


On Sun, Jan 29, 2012 at 17:43, Yaron Minsky <yminsky at janestreet.com> wrote:
> By the way, what version of OS X are you running? ?I'm on 10.7.2.

Ditto.

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From anil at recoil.org  Sun Jan 29 22:16:36 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 29 Jan 2012 22:16:36 +0000
Subject: Pull requests
In-Reply-To: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>
References: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>
Message-ID: <A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org>


(off-list)

Again, I just want to highlight my concerns with putting barriers in place for outside contributors. I'm also very against assigning my copyright to someone else for free software (its different for commercial software of course).  This would make it painful for another company to depend on Core as legal would have to get involved to sign the indemnity.

The Linux/Xen solution I mentioned is *far* more scalable and lightweight, unless there's something that you're trying to protect Jane Street from (which could very well be the case! apologies if so).

-anil

On 28 Jan 2012, at 11:45, Yaron Minsky wrote:

> There are a number of outstanding pull requests, and I wanted to mention that I'm holding off on including them mostly because we don't yet have a contributor license agreement set up.  We're working on this now, but I just wanted people to understand what the holdup is.
> 
> y



From yminsky at janestreet.com  Mon Jan 30 03:17:14 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Sun, 29 Jan 2012 22:17:14 -0500
Subject: build-and-install
In-Reply-To: <CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
	<CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
Message-ID: <CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>

How did you actually build and install async?  core, scheduler and extras
were all straightforward, but then when I tried to build the lib directory
by invoking "ocaml setup.ml -build" from the top-level directory, it looked
like it tried (and failed) to rebuild stuff from scheduler, and got this
error:

I: Running command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa
lib/async.a -tag debug'
ocamlfind ocamldep -package threads -package sexplib.syntax -package
sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax
-package fieldslib -package core -p\
ackage camlp4.macro -package bin_prot.syntax -package bin_prot -package
async_core -syntax camlp4o -modules scheduler/lib/writer.mli >
scheduler/lib/writer.mli.depends
+ ocamlfind ocamldep -package threads -package sexplib.syntax -package
sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax
-package fieldslib -package core \
-package camlp4.macro -package bin_prot.syntax -package bin_prot -package
async_core -syntax camlp4o -modules scheduler/lib/writer.mli >
scheduler/lib/writer.mli.depends
File "scheduler/lib/writer.mli", line 122, characters 8-20:
I/O error: "config.mlh: No such file or directory"
Preprocessing error on file scheduler/lib/writer.mli
Command exited with code 2.
E: Command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa
lib/async.a -tag debug' terminated with error code 10


On Sun, Jan 29, 2012 at 8:46 PM, Markus Mottl <markus.mottl at gmail.com>
wrote:
> On Sun, Jan 29, 2012 at 17:43, Yaron Minsky <yminsky at janestreet.com>
wrote:
>> By the way, what version of OS X are you running?  I'm on 10.7.2.
>
> Ditto.
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/6ffd6f76/attachment-0001.html>

From dmhouse at gmail.com  Sun Jan 29 22:19:48 2012
From: dmhouse at gmail.com (David House)
Date: Sun, 29 Jan 2012 22:19:48 +0000
Subject: Problems building on Linux
Message-ID: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>

Hi all,

$ uname -a
Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
2012 i686 athlon i386 GNU/Linux

I'm now not 100% sure of the state of my system, because I've had a
few aborted attempts at installing the core packages. But if I clone a
fresh checkout of the tree, and `ocamlfind remove' all the packages,
then use build-and-install, the following problems occur:

1. I get the 'Don't know what do with arguments: ""' error that Ron
described. (Full output attached as build-output1.) I "fixed" this by
replacing:
  ./oasis.sh $optflags "${configopts[@]-}"
with:
  ./oasis.sh
in build-and-install.sh.

2. The following error occurs when building compare:

------ base/compare ------
~/ocaml/core/base/compare ~/ocaml/core
./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or directory

(Full output attached as build-output2.) I "fixed" this by mkdir'ing
base/compare/lib.

3. patch fails in the fieldslib directory. Here's the error:

------ base/fieldslib ------
~/ocaml/core/base/fieldslib ~/ocaml/core
W: Field XMETAType is set but matching plugin is not enabled.
I: File INSTALL doesn't exist, creating it.
I: File Makefile doesn't exist, creating it.
I: Regenerating file _tags
I: File configure doesn't exist, creating it.
I: File lib/META doesn't exist, creating it.
I: File lib/fieldslib.mllib doesn't exist, creating it.
I: File lib/fieldslib.odocl has not changed, skipping
I: File myocamlbuild.ml doesn't exist, creating it.
I: File setup.ml doesn't exist, creating it.
I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
patching file setup.ml
Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
Hunk #2 FAILED at 1286.
Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
Hunk #4 FAILED at 4269.
2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej

And:

$ cat setup.ml.rej
--- setup.ml	2012-01-26 09:04:49.000000000 +0000
+++ setup.ml	2012-01-26 09:25:06.000000000 +0000
@@ -1286,6 +1287,7 @@
         source_file_exists is_native ext_lib ext_dll =
     (* The headers that should be compiled along *)
     let headers =
+      if lib.lib_pack then [] else
       List.fold_left
         (fun hdrs modul ->
            try
@@ -4269,6 +4278,7 @@
                 List.rev_append lib_extra acc
               in
               let acc =
+                if lib.lib_pack then acc else
                 (* Add uncompiled header from the source tree *)
                 let path =
                   BaseFilePath.of_unix bs.bs_path

Full output is attached as build-output3. I've also attached my
setup.ml from fieldslib. I'm stuck with this one.
-------------- next part --------------
A non-text attachment was scrubbed...
Name: build-output
Type: application/octet-stream
Size: 70 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/54d273bf/attachment-0003.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: build-output2
Type: application/octet-stream
Size: 7840 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/54d273bf/attachment-0004.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: build-output3
Type: application/octet-stream
Size: 16565 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/54d273bf/attachment-0005.obj>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: setup.ml
Type: text/x-ocaml
Size: 133286 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/54d273bf/attachment-0001.bin>

From dmhouse at gmail.com  Sun Jan 29 22:22:19 2012
From: dmhouse at gmail.com (David House)
Date: Sun, 29 Jan 2012 22:22:19 +0000
Subject: ocaml-core-mac-portability typo
Message-ID: <CADy1MauHoYNe1iZAGHaaMgrg3-R2pDoHBaXex7gCSdra=dBfnQ@mail.gmail.com>


I notice that the ocaml-core-mac-portabiility repo has a typo in its
name. If this is about to get merged in to ocaml-core then I guess
this is fine, but just in case.


From dmhouse at gmail.com  Sun Jan 29 22:43:47 2012
From: dmhouse at gmail.com (David House)
Date: Sun, 29 Jan 2012 22:43:47 +0000
Subject: Problems building on Linux
In-Reply-To: <CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
Message-ID: <CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>

The version that the installation hints specify, which is 0.2.1. (Which
was, incidentally, a real pain to install!) I'll try again tomorrow with a
downgraded version. Could you change the wiki?
On Jan 29, 2012 10:40 PM, "Yaron Minsky" <yminsky at janestreet.com> wrote:

> Which version of Oasis do you have installed?  I wouldn't expect it to
> work with anything but 0.2.0.
>
> y
>
> On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com> wrote:
> > Hi all,
> >
> > $ uname -a
> > Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
> > 2012 i686 athlon i386 GNU/Linux
> >
> > I'm now not 100% sure of the state of my system, because I've had a
> > few aborted attempts at installing the core packages. But if I clone a
> > fresh checkout of the tree, and `ocamlfind remove' all the packages,
> > then use build-and-install, the following problems occur:
> >
> > 1. I get the 'Don't know what do with arguments: ""' error that Ron
> > described. (Full output attached as build-output1.) I "fixed" this by
> > replacing:
> >  ./oasis.sh $optflags "${configopts[@]-}"
> > with:
> >  ./oasis.sh
> > in build-and-install.sh.
> >
> > 2. The following error occurs when building compare:
> >
> > ------ base/compare ------
> > ~/ocaml/core/base/compare ~/ocaml/core
> > ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or
> directory
> >
> > (Full output attached as build-output2.) I "fixed" this by mkdir'ing
> > base/compare/lib.
> >
> > 3. patch fails in the fieldslib directory. Here's the error:
> >
> > ------ base/fieldslib ------
> > ~/ocaml/core/base/fieldslib ~/ocaml/core
> > W: Field XMETAType is set but matching plugin is not enabled.
> > I: File INSTALL doesn't exist, creating it.
> > I: File Makefile doesn't exist, creating it.
> > I: Regenerating file _tags
> > I: File configure doesn't exist, creating it.
> > I: File lib/META doesn't exist, creating it.
> > I: File lib/fieldslib.mllib doesn't exist, creating it.
> > I: File lib/fieldslib.odocl has not changed, skipping
> > I: File myocamlbuild.ml doesn't exist, creating it.
> > I: File setup.ml doesn't exist, creating it.
> > I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
> > patching file setup.ml
> > Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
> > Hunk #2 FAILED at 1286.
> > Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
> > Hunk #4 FAILED at 4269.
> > 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
> >
> > And:
> >
> > $ cat setup.ml.rej
> > --- setup.ml    2012-01-26 09:04:49.000000000 +0000
> > +++ setup.ml    2012-01-26 09:25:06.000000000 +0000
> > @@ -1286,6 +1287,7 @@
> >         source_file_exists is_native ext_lib ext_dll =
> >     (* The headers that should be compiled along *)
> >     let headers =
> > +      if lib.lib_pack then [] else
> >       List.fold_left
> >         (fun hdrs modul ->
> >            try
> > @@ -4269,6 +4278,7 @@
> >                 List.rev_append lib_extra acc
> >               in
> >               let acc =
> > +                if lib.lib_pack then acc else
> >                 (* Add uncompiled header from the source tree *)
> >                 let path =
> >                   BaseFilePath.of_unix bs.bs_path
> >
> > Full output is attached as build-output3. I've also attached my
> > setup.ml from fieldslib. I'm stuck with this one.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/4b3e05d0/attachment-0001.html>

From anil at recoil.org  Sun Jan 29 23:19:57 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 29 Jan 2012 23:19:57 +0000
Subject: Pull requests
In-Reply-To: <CADKNfhKzEDY7==Zj2vZosWjeiDVUHYsH9W3mw99O7Ki_BkEBpw@mail.gmail.com>
References: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com> <A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org> <CADKNfhKzEDY7==Zj2vZosWjeiDVUHYsH9W3mw99O7Ki_BkEBpw@mail.gmail.com>
Message-ID: <2B312922-E9DE-4225-AD9A-ADBBC26691B9@recoil.org>

Yeah, as most engineering contributors from companies wont have direct signing authority. So even if they *do* sign it as a personal thing, chances are their companies have a claim on their IPR.

I've been through this before for FSF patches for gcc, and it was painful enough.  It may be easier now since Apache is well known, but really, why bother with all this?  If you do get a bad egg who signs this agreement, what recourse do you have against them in practise? And if there's no recourse, what's the purpose of the agreement?  Establishing a provenance trail is way more important so you can *undo* patches that later prove bad, and that's what Signed-off-by is all about.

-Anil

On 29 Jan 2012, at 23:13, Yaron Minsky wrote:

> I think we'll end up with something like the Apache agreement, which doesn't seem to require much overhead, except for signing something.  Does that strike you as onerous?
> 
> y
> 
> On Sun, Jan 29, 2012 at 5:16 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> (off-list)
> 
> Again, I just want to highlight my concerns with putting barriers in place for outside contributors. I'm also very against assigning my copyright to someone else for free software (its different for commercial software of course).  This would make it painful for another company to depend on Core as legal would have to get involved to sign the indemnity.
> 
> The Linux/Xen solution I mentioned is *far* more scalable and lightweight, unless there's something that you're trying to protect Jane Street from (which could very well be the case! apologies if so).
> 
> -anil
> 
> On 28 Jan 2012, at 11:45, Yaron Minsky wrote:
> 
> > There are a number of outstanding pull requests, and I wanted to mention that I'm holding off on including them mostly because we don't yet have a contributor license agreement set up.  We're working on this now, but I just wanted people to understand what the holdup is.
> >
> > y
> 
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120129/5027ea99/attachment-0001.html>

From yminsky at janestreet.com  Mon Jan 30 13:57:26 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 30 Jan 2012 08:57:26 -0500
Subject: build-and-install
In-Reply-To: <5baef3c.a470.1352cd76179.Coremail.mysnowls@163.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
	<CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
	<CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
	<5baef3c.a470.1352cd76179.Coremail.mysnowls@163.com>
Message-ID: <CACLX4jTf6_YbNvDhUWKAqAgsHbhDOvhyY-7f1TaBuEZDmV__rg@mail.gmail.com>

Of course.  I forgot about the weird machinations around this.  As to the
structure of the async packages, we definitely need to clean this up before
we make a real release.

y

2012/1/29 Lin <mysnowls at 163.com>

> I've encountered the same problem on Linux. I solved it by:
>
> * first build and install the core/scheduler/extra pacakges individually
>
> * follow the steps in buidl-and-install.sh manually :
>
> build-and-install.sh, line 76:
>
>           dest=$(mktemp -d)
>           mkdir -p "$dest/base/async"
>           cp -t "$dest/"     -a ../../build-common.sh
>           cp -t "$dest/base/async" -a lib oasis.sh
>           cd $dest/base/async
>
> P.S. The idea of splitting async srtucture to core/scheduler/exra is great
> , but it's weired that people have to install four packages in total, since
> people would always only use `Async.Std'. If there isn't  any sound reason
> for this, I'd like to suggest make all of them one package of Async instead
> of four.
>
> Regards,
> Lin
>
>
> At 2012-01-30 11:17:21,"Yaron Minsky" <yminsky at janestreet.com> wrote:
>
> How did you actually build and install async?  core, scheduler and extras
> were all straightforward, but then when I tried to build the lib directory
> by invoking "ocaml setup.ml -build" from the top-level directory, it
> looked like it tried (and failed) to rebuild stuff from scheduler, and got
> this error:
>
> I: Running command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa
> lib/async.a -tag debug'
> ocamlfind ocamldep -package threads -package sexplib.syntax -package
> sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax
> -package fieldslib -package core -p\
> ackage camlp4.macro -package bin_prot.syntax -package bin_prot -package
> async_core -syntax camlp4o -modules scheduler/lib/writer.mli >
> scheduler/lib/writer.mli.depends
> + ocamlfind ocamldep -package threads -package sexplib.syntax -package
> sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax
> -package fieldslib -package core \
> -package camlp4.macro -package bin_prot.syntax -package bin_prot -package
> async_core -syntax camlp4o -modules scheduler/lib/writer.mli >
> scheduler/lib/writer.mli.depends
> File "scheduler/lib/writer.mli", line 122, characters 8-20:
> I/O error: "config.mlh: No such file or directory"
> Preprocessing error on file scheduler/lib/writer.mli
> Command exited with code 2.
> E: Command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa
> lib/async.a -tag debug' terminated with error code 10
>
>
> On Sun, Jan 29, 2012 at 8:46 PM, Markus Mottl <markus.mottl at gmail.com>
> wrote:
> > On Sun, Jan 29, 2012 at 17:43, Yaron Minsky <yminsky at janestreet.com>
> wrote:
> >> By the way, what version of OS X are you running?  I'm on 10.7.2.
> >
> > Ditto.
> >
> > --
> > Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120130/65ee61c0/attachment-0001.html>

From markus.mottl at gmail.com  Mon Jan 30 15:34:34 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Mon, 30 Jan 2012 10:34:34 -0500
Subject: build-and-install
In-Reply-To: <CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
	<CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
	<CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
Message-ID: <CAP_800pmw8YHCNOiutyNu1rOoXvWDQyGzmrTu-ZAHYvJG0jFiA@mail.gmail.com>


On Sun, Jan 29, 2012 at 22:17, Yaron Minsky <yminsky at janestreet.com> wrote:
> How did you actually build and install async? ?core, scheduler and extras
> were all straightforward, but then when I tried to build the lib directory
> by invoking "ocaml setup.ml -build" from the top-level directory, it looked
> like it tried (and failed) to rebuild stuff from scheduler, and got this
> error:

I guess you are using my fork?  I've just verified it again, it's
really just a matter of running the "build-and-install" script for me.
 Everything, including Async, builds and installs.

Surprisingly, I have also been able to execute Async stuff from within
the toplevel.  It's just compilation (both byte- and native code)
that's apparently still slightly screwed up due to incorrect linking
flags stored in the .cma/.cmxa files.  E.g. the following works just
fine for me:

# #require "async";;
/Users/mmottl/local/lib/findlib/async_core: added to search path
/Users/mmottl/local/lib/findlib/async_core/async_core.cma: loaded
/Users/mmottl/local/lib/findlib/async_scheduler: added to search path
/Users/mmottl/local/lib/findlib/async_scheduler/async_scheduler.cma: loaded
/Users/mmottl/local/lib/findlib/async_extra: added to search path
/Users/mmottl/local/lib/findlib/async_extra/async_extra.cma: loaded
/Users/mmottl/local/lib/findlib/async: added to search path
/Users/mmottl/local/lib/findlib/async/async.cma: loaded
# open Async.Std;;
# Scheduler.go_main () ~main:(fun () -> Clock.after (Time.Span.of_sec
1.) >>> fun () -> print_endline "Hello world!");;
Hello world!

Regards,
Markus

-- 
Markus Mottl? ? ? ? http://www.ocaml.info? ? ? ? markus.mottl at gmail.com


From thelema314 at gmail.com  Mon Jan 30 16:58:41 2012
From: thelema314 at gmail.com (Edgar Friendly)
Date: Mon, 30 Jan 2012 11:58:41 -0500
Subject: build-and-install
In-Reply-To: <CAP_800pmw8YHCNOiutyNu1rOoXvWDQyGzmrTu-ZAHYvJG0jFiA@mail.gmail.com>
References: <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
	<4F1AD8E6.6020202@163.com>
	<CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
	<4F202E5A.9030601@163.com>
	<4F2153C2.8070409@163.com>
	<14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
	<CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
	<CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
	<0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
	<802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
	<CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
	<CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
	<CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
	<CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
	<CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
	<CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
	<CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
	<CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
	<CAP_800pmw8YHCNOiutyNu1rOoXvWDQyGzmrTu-ZAHYvJG0jFiA@mail.gmail.com>
Message-ID: <CAL-jcAmcQyaShMBx5BemwwagVg6GqEFEBe6JLHD9N1CDyO_=+A@mail.gmail.com>

For the purposes of having consistent installation of packages with
dependencies, it may be beneficial to build on `odb`[1].  It auto-detects
oasis/omake/make package types and runs them in a consistent manner.  Its
new `packages` feature decouples it from oasis-db, so that local package
descriptions can be specified, including dependencies and VCS(hg
included)/HTTP URLs to download from.  If an example would be useful, I can
make up one, but better to just look at the example packages[2] file in the
repo.

If there's any questions or suggestions, I'm open to improving things and
explaining further exactly what and how odb works, although it's a small
program with pretty straightforward code.  It has rudimentary version
dependencies, but at the moment, there's only room in its package lookup
for one version of each package, which limits the complexity of what has to
be dealt with.  By default it installs packages to ~/.odb/lib, but there's
command-line switches to use sudo or to just go ahead and install normally
for users with write access to ocamlfind.

E.

[1] https://github.com/thelema/odb
[2] https://github.com/thelema/odb/blob/master/packages

On Mon, Jan 30, 2012 at 10:34 AM, Markus Mottl <markus.mottl at gmail.com>wrote:

> On Sun, Jan 29, 2012 at 22:17, Yaron Minsky <yminsky at janestreet.com>
> wrote:
> > How did you actually build and install async?  core, scheduler and extras
> > were all straightforward, but then when I tried to build the lib
> directory
> > by invoking "ocaml setup.ml -build" from the top-level directory, it
> looked
> > like it tried (and failed) to rebuild stuff from scheduler, and got this
> > error:
>
> I guess you are using my fork?  I've just verified it again, it's
> really just a matter of running the "build-and-install" script for me.
>  Everything, including Async, builds and installs.
>
> Surprisingly, I have also been able to execute Async stuff from within
> the toplevel.  It's just compilation (both byte- and native code)
> that's apparently still slightly screwed up due to incorrect linking
> flags stored in the .cma/.cmxa files.  E.g. the following works just
> fine for me:
>
> # #require "async";;
> /Users/mmottl/local/lib/findlib/async_core: added to search path
> /Users/mmottl/local/lib/findlib/async_core/async_core.cma: loaded
> /Users/mmottl/local/lib/findlib/async_scheduler: added to search path
> /Users/mmottl/local/lib/findlib/async_scheduler/async_scheduler.cma: loaded
> /Users/mmottl/local/lib/findlib/async_extra: added to search path
> /Users/mmottl/local/lib/findlib/async_extra/async_extra.cma: loaded
> /Users/mmottl/local/lib/findlib/async: added to search path
> /Users/mmottl/local/lib/findlib/async/async.cma: loaded
> # open Async.Std;;
> # Scheduler.go_main () ~main:(fun () -> Clock.after (Time.Span.of_sec
> 1.) >>> fun () -> print_endline "Hello world!");;
> Hello world!
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120130/2f8d5749/attachment-0001.html>

From mysnowls at 163.com  Mon Jan 30 04:20:07 2012
From: mysnowls at 163.com (Lin)
Date: Mon, 30 Jan 2012 12:20:07 +0800 (CST)
Subject: build-and-install
In-Reply-To: <CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
References: <CACLX4jQnHGzyGo2tbcYtFaatM4pJ5GYaXsgbYed66Bs8k2JL0w@mail.gmail.com>
 <CACLX4jSM2Ew1L0GsO5wXLmFW0AhDBY-78G+mH89mi+BPcHoL=Q@mail.gmail.com>
 <4F1AD8E6.6020202@163.com>
 <CACLX4jSka9Q+P+J=gQrm39vox-TG69b410Yp6ps7hUWHMaC_yQ@mail.gmail.com>
 <4F202E5A.9030601@163.com> <4F2153C2.8070409@163.com>
 <14BB79D6-4502-4B73-9DAE-D4789F656842@recoil.org>
 <CAEDxudyRBpAnJqMBr=d7cngByofMOBwep8ND6ZSUr7wB8cUgDQ@mail.gmail.com>
 <CACLX4jR+Wm=AVFo68Q=QfhXrJqt4QADMUvjLqmn7-cTCQXVeEw@mail.gmail.com>
 <0D694988-D466-4D07-9AF2-1CBA21721B42@recoil.org>
 <802341B3-024D-457F-8CCF-3A492F87A1B5@recoil.org>
 <CAEDxudwP6f9gK+RK9L1w2TG0FsSCQ70ktNApGrxHZ3R54GonOQ@mail.gmail.com>
 <CAEDxudyNerg5CLtokzpWM4Yphx+BfchNzmsC3O27h4whuAAXVw@mail.gmail.com>
 <CAP_800r9cwNYCET4NkmN0L5qRXhV+mH7ZexyP8br_Wub5cav5A@mail.gmail.com>
 <CACLX4jRi7U4CZVMR81B8tamMNPWGM3VveS=97FfQT+2apjhnQA@mail.gmail.com>
 <CAP_800oMCsGeAg3ZrtXi1hoD6g6O5hEZeS++JwYwABg62dY6xA@mail.gmail.com>
 <CACLX4jStb27bON6jYMOJcpjKzeZ7N4FTbFoXLN9817wna0n-1A@mail.gmail.com>
 <CAP_800qdOqKqs=7A35pbQmJU71YTVqk4n6AvNq0OekK7+bb-nA@mail.gmail.com>
Message-ID: <5baef3c.a470.1352cd76179.Coremail.mysnowls@163.com>

I've encountered the same problem on Linux. I solved it by:

* first build and install the core/scheduler/extra pacakges individually

* follow the steps in buidl-and-install.sh manually :

build-and-install.sh, line 76:

          dest=$(mktemp -d)
          mkdir -p "$dest/base/async"
          cp -t "$dest/"     -a ../../build-common.sh
          cp -t "$dest/base/async" -a lib oasis.sh
          cd $dest/base/async

P.S. The idea of splitting async srtucture to core/scheduler/exra is great , but it's weired that people have to install four packages in total, since people would always only use `Async.Std'. If there isn't  any sound reason for this, I'd like to suggest make all of them one package of Async instead of four.


Regards,
Lin



At 2012-01-30 11:17:21,"Yaron Minsky" <yminsky at janestreet.com> wrote:
How did you actually build and install async?  core, scheduler and extras were all straightforward, but then when I tried to build the lib directory by invoking "ocaml setup.ml -build" from the top-level directory, it looked like it tried (and failed) to rebuild stuff from scheduler, and got this error:

I: Running command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa lib/async.a -tag debug'
ocamlfind ocamldep -package threads -package sexplib.syntax -package sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax -package fieldslib -package core -p\
ackage camlp4.macro -package bin_prot.syntax -package bin_prot -package async_core -syntax camlp4o -modules scheduler/lib/writer.mli > scheduler/lib/writer.mli.depends
+ ocamlfind ocamldep -package threads -package sexplib.syntax -package sexplib -package pa_pipebang -package pa_ounit -package fieldslib.syntax -package fieldslib -package core \
-package camlp4.macro -package bin_prot.syntax -package bin_prot -package async_core -syntax camlp4o -modules scheduler/lib/writer.mli > scheduler/lib/writer.mli.depends
File "scheduler/lib/writer.mli", line 122, characters 8-20:
I/O error: "config.mlh: No such file or directory"
Preprocessing error on file scheduler/lib/writer.mli
Command exited with code 2.
E: Command '/usr/local/bin/ocamlbuild lib/async.cma lib/async.cmxa lib/async.a -tag debug' terminated with error code 10
On Sun, Jan 29, 2012 at 8:46 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Sun, Jan 29, 2012 at 17:43, Yaron Minsky <yminsky at janestreet.com> wrote:
>> By the way, what version of OS X are you running?  I'm on 10.7.2.
>
> Ditto.
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120130/2f1b33c8/attachment-0001.html>

From ocaml-core at googlegroups.com  Tue Jan 31 02:37:15 2012
From: ocaml-core at googlegroups.com (ocaml-core at googlegroups.com)
Date: Tue, 31 Jan 2012 02:37:15 +0000
Subject: Moderator's spam report for ocaml-core@googlegroups.com
Message-ID: <0016e6db2a8348f56604b7c9d7c1@google.com>


This message is being sent to you because you are a moderator of the group ocaml-core.

The following suspicious messages were sent to your group, but are being held in your moderation queue because they are classified as likely spam messages.

If you take no action, all the messages below will be discarded automatically as spam.

However, if you see any messages that are not spam below, you may approve them individually by going to:

http://groups.google.com/group/ocaml-core/pendmsg

Please do not mark this notification as spam; this is a service for group moderators. If you do not wish to receive these notifications in the future, you may change your preferences by going to:

http://groups.google.com/group/ocaml-core/manage_post


------- 1 of 2  -------
Subject: Revolutionary R&D creates SSL certificate tool
>From: "White Paper Library" <whitepapers at b2bonlineoffers.com>
Date: Jan 27 03:25PM -0500

Learn how this revolutionary technology can centrally manage enterprise SSL certificates. Keep your organization safe from digital threats and data breaches.

This science breaking technology is WebTrust certified by Ernst & Young and there is no

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=2216607130139722683

------- 2 of 2  -------
Subject: Re: build-and-install
>From: Lin <mysnowls at 163.com>
Date: Jan 30 12:10PM +0800

I've encountered exactly this problem on Linux.  I solved it by:

1. first build and install the core/exta/scheduler packages
2. then manually do these steps in `build-and-install.sh'


# line 76:
                # horrible hack (avoids

Approve: http://groups.google.com/group/ocaml-core/pendmsg?view=full&pending_id=4199136405165210740


For more information about this message, please visit:
http://groups.google.com/support/bin/answer.py?hl=en&answer=165806



From yury.sulsky at gmail.com  Tue Jan 31 11:19:13 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Tue, 31 Jan 2012 11:19:13 +0000
Subject: Problems building on Linux
In-Reply-To: <CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
	<CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
Message-ID: <CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>


Thanks David! Fixes for all three issues are making their way to the
public tree.

The changes are:
 - use this bit of bash awesome to pass arrays that may be empty in
the build-and-install script:
     ${foo[@]:+${foo[@]}} (from http://stackoverflow.com/q/7577052)
 - I was creating the a directory after using it. I forget which way time flows.
 - use patch -l (ignore whitespace) when patching the setup.ml files
(which should make it work on 0.2.1)


On Sun, Jan 29, 2012 at 10:45 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> Will do. ?Sorry for the misdirection.
>
> On Sun, Jan 29, 2012 at 5:43 PM, David House <dmhouse at gmail.com> wrote:
>> The version that the installation hints specify, which is 0.2.1. (Which was,
>> incidentally, a real pain to install!) I'll try again tomorrow with a
>> downgraded version. Could you change the wiki?
>>
>> On Jan 29, 2012 10:40 PM, "Yaron Minsky" <yminsky at janestreet.com> wrote:
>>>
>>> Which version of Oasis do you have installed? ?I wouldn't expect it to
>>> work with anything but 0.2.0.
>>>
>>> y
>>>
>>> On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com> wrote:
>>> > Hi all,
>>> >
>>> > $ uname -a
>>> > Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
>>> > 2012 i686 athlon i386 GNU/Linux
>>> >
>>> > I'm now not 100% sure of the state of my system, because I've had a
>>> > few aborted attempts at installing the core packages. But if I clone a
>>> > fresh checkout of the tree, and `ocamlfind remove' all the packages,
>>> > then use build-and-install, the following problems occur:
>>> >
>>> > 1. I get the 'Don't know what do with arguments: ""' error that Ron
>>> > described. (Full output attached as build-output1.) I "fixed" this by
>>> > replacing:
>>> > ?./oasis.sh $optflags "${configopts[@]-}"
>>> > with:
>>> > ?./oasis.sh
>>> > in build-and-install.sh.
>>> >
>>> > 2. The following error occurs when building compare:
>>> >
>>> > ------ base/compare ------
>>> > ~/ocaml/core/base/compare ~/ocaml/core
>>> > ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or
>>> > directory
>>> >
>>> > (Full output attached as build-output2.) I "fixed" this by mkdir'ing
>>> > base/compare/lib.
>>> >
>>> > 3. patch fails in the fieldslib directory. Here's the error:
>>> >
>>> > ------ base/fieldslib ------
>>> > ~/ocaml/core/base/fieldslib ~/ocaml/core
>>> > W: Field XMETAType is set but matching plugin is not enabled.
>>> > I: File INSTALL doesn't exist, creating it.
>>> > I: File Makefile doesn't exist, creating it.
>>> > I: Regenerating file _tags
>>> > I: File configure doesn't exist, creating it.
>>> > I: File lib/META doesn't exist, creating it.
>>> > I: File lib/fieldslib.mllib doesn't exist, creating it.
>>> > I: File lib/fieldslib.odocl has not changed, skipping
>>> > I: File myocamlbuild.ml doesn't exist, creating it.
>>> > I: File setup.ml doesn't exist, creating it.
>>> > I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
>>> > patching file setup.ml
>>> > Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
>>> > Hunk #2 FAILED at 1286.
>>> > Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
>>> > Hunk #4 FAILED at 4269.
>>> > 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
>>> >
>>> > And:
>>> >
>>> > $ cat setup.ml.rej
>>> > --- setup.ml ? ?2012-01-26 09:04:49.000000000 +0000
>>> > +++ setup.ml ? ?2012-01-26 09:25:06.000000000 +0000
>>> > @@ -1286,6 +1287,7 @@
>>> > ? ? ? ? source_file_exists is_native ext_lib ext_dll =
>>> > ? ? (* The headers that should be compiled along *)
>>> > ? ? let headers =
>>> > + ? ? ?if lib.lib_pack then [] else
>>> > ? ? ? List.fold_left
>>> > ? ? ? ? (fun hdrs modul ->
>>> > ? ? ? ? ? ?try
>>> > @@ -4269,6 +4278,7 @@
>>> > ? ? ? ? ? ? ? ? List.rev_append lib_extra acc
>>> > ? ? ? ? ? ? ? in
>>> > ? ? ? ? ? ? ? let acc =
>>> > + ? ? ? ? ? ? ? ?if lib.lib_pack then acc else
>>> > ? ? ? ? ? ? ? ? (* Add uncompiled header from the source tree *)
>>> > ? ? ? ? ? ? ? ? let path =
>>> > ? ? ? ? ? ? ? ? ? BaseFilePath.of_unix bs.bs_path
>>> >
>>> > Full output is attached as build-output3. I've also attached my
>>> > setup.ml from fieldslib. I'm stuck with this one.


From yminsky at janestreet.com  Tue Jan 31 19:45:02 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 31 Jan 2012 14:45:02 -0500
Subject: Problems building on Linux
In-Reply-To: <CADy1MauqU8Ue99NmTfJURqUzJ9+LOtUvamdq=QV-QHZXHkpL2g@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
	<CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
	<CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>
	<CADy1MauqU8Ue99NmTfJURqUzJ9+LOtUvamdq=QV-QHZXHkpL2g@mail.gmail.com>
Message-ID: <CACLX4jTyZGzw68eAKaso-xKQZCHK8n7hhQMcKsaK83+mSVf+2w@mail.gmail.com>

On Tue, Jan 31, 2012 at 2:27 PM, David House <dmhouse at gmail.com> wrote:

> Great! I applied your changes manually since they're not in the public
> repo yet.
>
> I ran in to a few more problems.
>
> 1. The pre-build command for bin-prot wasn't working: I was getting
> 'no such file or directory: lib/*.{h,mlh}'. I fixed this by expanding
> the braces in oasis.sh to be 'cp lib/*.h lib/*.mlh _build'.
>
> 2. core seems to have a dependency on the res package which was not
> documented. I guess this should go in the installation hints on the
> wiki.
>

Yes!  Can you update the wiki?  I'd love to not be the only person
contributing...


> 3. There are some integer literals bigger than 2^31, and my measly
> four-bytes-to-a-word system couldn't cope :)
>  - core/extended/lib/bench.ml contains 1_000_000_000_000;
>  - extended_linux.ml in the same directory has three, on lines 127,
> 138 and 139 (the CIFS_MAGIC_NUMBER, HPFS_SUPER_MAGIC and
> HUGETLBFS_MAGIC lines).
> I just commented out these lines. (But I expect the proper fix is to
> make these things [Int64]s, seeing as numbers > 2^31 seem to be valid
> inputs to these functions.)
>

Maybe Int63's, our usual solution to wanting to work on 32bit and be fast
on 64bit...


> I actually downgraded to Oasis 0.2.0 when I hit these, in case they
> fixed the errors. So I haven't tested with Oasis 0.2.1; but I also
> don't think supporting Oasis 0.2.1 is really a high priority.
>
> Async installed just fine, by the way.
>
> On 31 January 2012 11:19, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> > Thanks David! Fixes for all three issues are making their way to the
> > public tree.
> >
> > The changes are:
> >  - use this bit of bash awesome to pass arrays that may be empty in
> > the build-and-install script:
> >     ${foo[@]:+${foo[@]}} (from http://stackoverflow.com/q/7577052)
> >  - I was creating the a directory after using it. I forget which way
> time flows.
> >  - use patch -l (ignore whitespace) when patching the setup.ml files
> > (which should make it work on 0.2.1)
> >
> >
> > On Sun, Jan 29, 2012 at 10:45 PM, Yaron Minsky <yminsky at janestreet.com>
> wrote:
> >> Will do.  Sorry for the misdirection.
> >>
> >> On Sun, Jan 29, 2012 at 5:43 PM, David House <dmhouse at gmail.com> wrote:
> >>> The version that the installation hints specify, which is 0.2.1.
> (Which was,
> >>> incidentally, a real pain to install!) I'll try again tomorrow with a
> >>> downgraded version. Could you change the wiki?
> >>>
> >>> On Jan 29, 2012 10:40 PM, "Yaron Minsky" <yminsky at janestreet.com>
> wrote:
> >>>>
> >>>> Which version of Oasis do you have installed?  I wouldn't expect it to
> >>>> work with anything but 0.2.0.
> >>>>
> >>>> y
> >>>>
> >>>> On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com>
> wrote:
> >>>> > Hi all,
> >>>> >
> >>>> > $ uname -a
> >>>> > Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15
> UTC
> >>>> > 2012 i686 athlon i386 GNU/Linux
> >>>> >
> >>>> > I'm now not 100% sure of the state of my system, because I've had a
> >>>> > few aborted attempts at installing the core packages. But if I
> clone a
> >>>> > fresh checkout of the tree, and `ocamlfind remove' all the packages,
> >>>> > then use build-and-install, the following problems occur:
> >>>> >
> >>>> > 1. I get the 'Don't know what do with arguments: ""' error that Ron
> >>>> > described. (Full output attached as build-output1.) I "fixed" this
> by
> >>>> > replacing:
> >>>> >  ./oasis.sh $optflags "${configopts[@]-}"
> >>>> > with:
> >>>> >  ./oasis.sh
> >>>> > in build-and-install.sh.
> >>>> >
> >>>> > 2. The following error occurs when building compare:
> >>>> >
> >>>> > ------ base/compare ------
> >>>> > ~/ocaml/core/base/compare ~/ocaml/core
> >>>> > ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or
> >>>> > directory
> >>>> >
> >>>> > (Full output attached as build-output2.) I "fixed" this by mkdir'ing
> >>>> > base/compare/lib.
> >>>> >
> >>>> > 3. patch fails in the fieldslib directory. Here's the error:
> >>>> >
> >>>> > ------ base/fieldslib ------
> >>>> > ~/ocaml/core/base/fieldslib ~/ocaml/core
> >>>> > W: Field XMETAType is set but matching plugin is not enabled.
> >>>> > I: File INSTALL doesn't exist, creating it.
> >>>> > I: File Makefile doesn't exist, creating it.
> >>>> > I: Regenerating file _tags
> >>>> > I: File configure doesn't exist, creating it.
> >>>> > I: File lib/META doesn't exist, creating it.
> >>>> > I: File lib/fieldslib.mllib doesn't exist, creating it.
> >>>> > I: File lib/fieldslib.odocl has not changed, skipping
> >>>> > I: File myocamlbuild.ml doesn't exist, creating it.
> >>>> > I: File setup.ml doesn't exist, creating it.
> >>>> > I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
> >>>> > patching file setup.ml
> >>>> > Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
> >>>> > Hunk #2 FAILED at 1286.
> >>>> > Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
> >>>> > Hunk #4 FAILED at 4269.
> >>>> > 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
> >>>> >
> >>>> > And:
> >>>> >
> >>>> > $ cat setup.ml.rej
> >>>> > --- setup.ml    2012-01-26 09:04:49.000000000 +0000
> >>>> > +++ setup.ml    2012-01-26 09:25:06.000000000 +0000
> >>>> > @@ -1286,6 +1287,7 @@
> >>>> >         source_file_exists is_native ext_lib ext_dll =
> >>>> >     (* The headers that should be compiled along *)
> >>>> >     let headers =
> >>>> > +      if lib.lib_pack then [] else
> >>>> >       List.fold_left
> >>>> >         (fun hdrs modul ->
> >>>> >            try
> >>>> > @@ -4269,6 +4278,7 @@
> >>>> >                 List.rev_append lib_extra acc
> >>>> >               in
> >>>> >               let acc =
> >>>> > +                if lib.lib_pack then acc else
> >>>> >                 (* Add uncompiled header from the source tree *)
> >>>> >                 let path =
> >>>> >                   BaseFilePath.of_unix bs.bs_path
> >>>> >
> >>>> > Full output is attached as build-output3. I've also attached my
> >>>> > setup.ml from fieldslib. I'm stuck with this one.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120131/a644a28f/attachment-0001.html>

From anil at recoil.org  Tue Jan 31 15:37:22 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 31 Jan 2012 15:37:22 +0000
Subject: Pull requests
In-Reply-To: <CADKNfh+y-jQ_9oJfihHgwzDYqv-Lrbqer1LCvWQfjLoKTTYoAw@mail.gmail.com>
References: <CACLX4jRwwLAOC7iq-Cn04hFzKxMpUFieM7Fv2zcT6Aq3ywwWcA@mail.gmail.com>
 <A2AB2E0A-D313-4872-96E0-840E24A83A04@recoil.org>
 <CADKNfhKzEDY7==Zj2vZosWjeiDVUHYsH9W3mw99O7Ki_BkEBpw@mail.gmail.com>
 <2B312922-E9DE-4225-AD9A-ADBBC26691B9@recoil.org>
 <CADKNfh+y-jQ_9oJfihHgwzDYqv-Lrbqer1LCvWQfjLoKTTYoAw@mail.gmail.com>
Message-ID: <20120131153720.GA18629@dark.recoil.org>


On Sun, Jan 29, 2012 at 07:17:04PM -0500, Yaron Minsky wrote:
> I guess I hadn't fully understood your earlier proposal.  I had thought
> that the signed-off idea was a protection in addition to signing a CLA, but
> now looking back I realize the intent is that it be instead.
> 
> But what's the advantage?  In terms of traceability of patches, I've been
> thinking that bitbucket's user authentication would be sufficient, since
> we'd have the name of the author of each patch clearly visible.  As a
> pragmatic matter, it seems like that would identify users to us and allow
> us to back out changes if need be.

Bitbucket's user authentication is pretty orthogonal, as patches come in
through Mercurial. The DVCSes separate the committer from the author, so
that it can be applied by a project committer (of which Xen only has 3)
and patches can come from the general public (of which Xen has 100s of
different patch sources).

This permits you to nominate a trusted core (no pun intended) of people
who can apply changes to the main repository, and they also check that the
patch came from a sensible source. The Acked-By mechanism lets subsystem
maintainers also certify it on the way through.

All of this is only useful in two cases: 1) you're trying to track down a
bug, and you can auto-bisect from a known-good working changeset and find
a set of people to blame. 2) is that there is an IPR contest over a
particular patch, and you can both remove that code, and also understand
why the people who authorized it failed to spot the error.

> I guess signing an agreement is somewhat onerous, and I agree that they
> might not be able to sign such an agreement, depending on the agreements
> they have with their employers.  But the "Developers Certificate of
> Origin", which people are implicitly signing on to, seems to carry the same
> problem.  And having people actually sign the agreement seems to improve
> the chance that people are actually paying attention to the rules and
> following whatever their IP restrictions are.

The DCO isn't perfect, but it's got the big advantage that it doesn't have
an unnecessary contract to sign as the CLA does.  Most engineers would
either just sign a contract (no clear personal damages, and they are
limited liablity if at work) or not bother contributing code as going
through legal is too much hassle.

Either way, the real question is what you're trying to protect yourself
against in all this. If (as I suspect) you want to avoid tainting your
so-far pristine codebase with potentially plagiarised code, then setting
up a system that lets you rollback the bad bits is far more important than
getting people to sign a contract. The DCO does this, and it's no accident
that Linux and Xen both handle a hugely complex IPR situation without
getting lawyers involved. How often have you seen IBM, Microsoft, AMD,
Intel and HP all submit patches to a shared codebase without (much) drama?
We can only dream of getting OCaml Core to such giddy heights :-)

> Honestly, I'd rather not have submissions from people who aren't allowed to
> contribute by their employer, and requiring people to sign a CLA seems to
> improve the chance that people get this right.

You should be extremely wary of people who do not have the rights to
submit code, but the DCO covers this as explicitly as the CLA.

-anil


From ogunden at phauna.org  Tue Jan 31 20:49:03 2012
From: ogunden at phauna.org (Owen Gunden)
Date: Tue, 31 Jan 2012 15:49:03 -0500
Subject: license
Message-ID: <CA+LP8rTu-NBPfTT=MFPT-rCbux5pZ9rJp82RxbLj=Htiid1vRg@mail.gmail.com>


One of the Mlstate developers pointed out that there's no license
information readily available in the bitbucket repo. I couldn't find
any either.

Is that something that can be easily added?


From ogunden at phauna.org  Tue Jan 31 22:08:29 2012
From: ogunden at phauna.org (Owen Gunden)
Date: Tue, 31 Jan 2012 17:08:29 -0500
Subject: Trouble building my first program
In-Reply-To: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
Message-ID: <CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>


Try adding -verbose to your ocamlfind call. Check the path to
libcore.a in the gcc call. My guess is that your install is not
getting the path quite right.

On Tue, Jan 31, 2012 at 4:57 PM, David House <dmhouse at gmail.com> wrote:
> I'm having a little trouble at the linking stage trying to build my
> first program that uses core.
>
> $ ocamlfind ocamlopt -package core -linkpkg -o simple_core
> simple_core.ml -thread
> gcc: error: lib/libcore.a: No such file or directory
> gcc: error: lib/libbin_prot.a: No such file or directory
> File "caml_startup", line 1, characters 0-1:
> Error: Error during linking
>
> $ cat simple_core.ml
> module C = Core
>
> let () =
> ?print_string "foo\n"
>
> If I replace 'module C = Core' with 'module R = Res' and replace core
> with res on the command line, then everything works just fine.
>
> What should I try?


From ogunden at phauna.org  Tue Jan 31 22:10:23 2012
From: ogunden at phauna.org (Owen Gunden)
Date: Tue, 31 Jan 2012 17:10:23 -0500
Subject: Trouble building my first program
In-Reply-To: <CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
References: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>
	<CA+LP8rSveqC8_P3Oa+PRvk5YS98BJU-Ka5TcxLn8HqzG-em4xA@mail.gmail.com>
Message-ID: <CA+LP8rSHC=xDtT+4fH=Rd62LDmw_SyxpHfk4tNX-AzurhHgKKQ@mail.gmail.com>


On Tue, Jan 31, 2012 at 5:08 PM, Owen Gunden <ogunden at phauna.org> wrote:
> Try adding -verbose to your ocamlfind call. Check the path to
> libcore.a in the gcc call. My guess is that your install is not
> getting the path quite right.

(Your command line works fine on my machine)


From yminsky at janestreet.com  Tue Jan 31 23:11:44 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Tue, 31 Jan 2012 18:11:44 -0500
Subject: license
In-Reply-To: <CA+LP8rTu-NBPfTT=MFPT-rCbux5pZ9rJp82RxbLj=Htiid1vRg@mail.gmail.com>
References: <CA+LP8rTu-NBPfTT=MFPT-rCbux5pZ9rJp82RxbLj=Htiid1vRg@mail.gmail.com>
Message-ID: <CACLX4jS8m46ihRPnktYjbcLRgEbfiGeVNtCRAVZaPtfE9MKmqA@mail.gmail.com>

Hey Owen!  Long time no see!

Yup!  We're currently getting some lawyerly advice, and once we do, we're
going to clean up the indications of licensing there.  For the curious, the
license is the standard LGPL+linking exception (though we may change that
for something more lenient in the near future.)

On Tue, Jan 31, 2012 at 3:49 PM, Owen Gunden <ogunden at phauna.org> wrote:

> One of the Mlstate developers pointed out that there's no license
> information readily available in the bitbucket repo. I couldn't find
> any either.
>
> Is that something that can be easily added?
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120131/7146c01d/attachment-0001.html>

From dmhouse at gmail.com  Tue Jan 31 19:27:36 2012
From: dmhouse at gmail.com (David House)
Date: Tue, 31 Jan 2012 19:27:36 +0000
Subject: Problems building on Linux
In-Reply-To: <CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
	<CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
	<CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>
Message-ID: <CADy1MauqU8Ue99NmTfJURqUzJ9+LOtUvamdq=QV-QHZXHkpL2g@mail.gmail.com>


Great! I applied your changes manually since they're not in the public repo yet.

I ran in to a few more problems.

1. The pre-build command for bin-prot wasn't working: I was getting
'no such file or directory: lib/*.{h,mlh}'. I fixed this by expanding
the braces in oasis.sh to be 'cp lib/*.h lib/*.mlh _build'.

2. core seems to have a dependency on the res package which was not
documented. I guess this should go in the installation hints on the
wiki.

3. There are some integer literals bigger than 2^31, and my measly
four-bytes-to-a-word system couldn't cope :)
  - core/extended/lib/bench.ml contains 1_000_000_000_000;
  - extended_linux.ml in the same directory has three, on lines 127,
138 and 139 (the CIFS_MAGIC_NUMBER, HPFS_SUPER_MAGIC and
HUGETLBFS_MAGIC lines).
I just commented out these lines. (But I expect the proper fix is to
make these things [Int64]s, seeing as numbers > 2^31 seem to be valid
inputs to these functions.)

I actually downgraded to Oasis 0.2.0 when I hit these, in case they
fixed the errors. So I haven't tested with Oasis 0.2.1; but I also
don't think supporting Oasis 0.2.1 is really a high priority.

Async installed just fine, by the way.

On 31 January 2012 11:19, Yury Sulsky <yury.sulsky at gmail.com> wrote:
> Thanks David! Fixes for all three issues are making their way to the
> public tree.
>
> The changes are:
> ?- use this bit of bash awesome to pass arrays that may be empty in
> the build-and-install script:
> ? ? ${foo[@]:+${foo[@]}} (from http://stackoverflow.com/q/7577052)
> ?- I was creating the a directory after using it. I forget which way time flows.
> ?- use patch -l (ignore whitespace) when patching the setup.ml files
> (which should make it work on 0.2.1)
>
>
> On Sun, Jan 29, 2012 at 10:45 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> Will do. ?Sorry for the misdirection.
>>
>> On Sun, Jan 29, 2012 at 5:43 PM, David House <dmhouse at gmail.com> wrote:
>>> The version that the installation hints specify, which is 0.2.1. (Which was,
>>> incidentally, a real pain to install!) I'll try again tomorrow with a
>>> downgraded version. Could you change the wiki?
>>>
>>> On Jan 29, 2012 10:40 PM, "Yaron Minsky" <yminsky at janestreet.com> wrote:
>>>>
>>>> Which version of Oasis do you have installed? ?I wouldn't expect it to
>>>> work with anything but 0.2.0.
>>>>
>>>> y
>>>>
>>>> On Sun, Jan 29, 2012 at 5:19 PM, David House <dmhouse at gmail.com> wrote:
>>>> > Hi all,
>>>> >
>>>> > $ uname -a
>>>> > Linux tarn 3.0.0-15-generic-pae #25-Ubuntu SMP Mon Jan 2 19:40:15 UTC
>>>> > 2012 i686 athlon i386 GNU/Linux
>>>> >
>>>> > I'm now not 100% sure of the state of my system, because I've had a
>>>> > few aborted attempts at installing the core packages. But if I clone a
>>>> > fresh checkout of the tree, and `ocamlfind remove' all the packages,
>>>> > then use build-and-install, the following problems occur:
>>>> >
>>>> > 1. I get the 'Don't know what do with arguments: ""' error that Ron
>>>> > described. (Full output attached as build-output1.) I "fixed" this by
>>>> > replacing:
>>>> > ?./oasis.sh $optflags "${configopts[@]-}"
>>>> > with:
>>>> > ?./oasis.sh
>>>> > in build-and-install.sh.
>>>> >
>>>> > 2. The following error occurs when building compare:
>>>> >
>>>> > ------ base/compare ------
>>>> > ~/ocaml/core/base/compare ~/ocaml/core
>>>> > ./oasis.sh: line 45: ./lib/comparelib_dummy.ml: No such file or
>>>> > directory
>>>> >
>>>> > (Full output attached as build-output2.) I "fixed" this by mkdir'ing
>>>> > base/compare/lib.
>>>> >
>>>> > 3. patch fails in the fieldslib directory. Here's the error:
>>>> >
>>>> > ------ base/fieldslib ------
>>>> > ~/ocaml/core/base/fieldslib ~/ocaml/core
>>>> > W: Field XMETAType is set but matching plugin is not enabled.
>>>> > I: File INSTALL doesn't exist, creating it.
>>>> > I: File Makefile doesn't exist, creating it.
>>>> > I: Regenerating file _tags
>>>> > I: File configure doesn't exist, creating it.
>>>> > I: File lib/META doesn't exist, creating it.
>>>> > I: File lib/fieldslib.mllib doesn't exist, creating it.
>>>> > I: File lib/fieldslib.odocl has not changed, skipping
>>>> > I: File myocamlbuild.ml doesn't exist, creating it.
>>>> > I: File setup.ml doesn't exist, creating it.
>>>> > I: File syntax/pa_fields_conv.mllib doesn't exist, creating it.
>>>> > patching file setup.ml
>>>> > Hunk #1 succeeded at 979 with fuzz 1 (offset -13 lines).
>>>> > Hunk #2 FAILED at 1286.
>>>> > Hunk #3 succeeded at 1315 with fuzz 2 (offset -9 lines).
>>>> > Hunk #4 FAILED at 4269.
>>>> > 2 out of 4 hunks FAILED -- saving rejects to file setup.ml.rej
>>>> >
>>>> > And:
>>>> >
>>>> > $ cat setup.ml.rej
>>>> > --- setup.ml ? ?2012-01-26 09:04:49.000000000 +0000
>>>> > +++ setup.ml ? ?2012-01-26 09:25:06.000000000 +0000
>>>> > @@ -1286,6 +1287,7 @@
>>>> > ? ? ? ? source_file_exists is_native ext_lib ext_dll =
>>>> > ? ? (* The headers that should be compiled along *)
>>>> > ? ? let headers =
>>>> > + ? ? ?if lib.lib_pack then [] else
>>>> > ? ? ? List.fold_left
>>>> > ? ? ? ? (fun hdrs modul ->
>>>> > ? ? ? ? ? ?try
>>>> > @@ -4269,6 +4278,7 @@
>>>> > ? ? ? ? ? ? ? ? List.rev_append lib_extra acc
>>>> > ? ? ? ? ? ? ? in
>>>> > ? ? ? ? ? ? ? let acc =
>>>> > + ? ? ? ? ? ? ? ?if lib.lib_pack then acc else
>>>> > ? ? ? ? ? ? ? ? (* Add uncompiled header from the source tree *)
>>>> > ? ? ? ? ? ? ? ? let path =
>>>> > ? ? ? ? ? ? ? ? ? BaseFilePath.of_unix bs.bs_path
>>>> >
>>>> > Full output is attached as build-output3. I've also attached my
>>>> > setup.ml from fieldslib. I'm stuck with this one.


From dmhouse at gmail.com  Tue Jan 31 20:34:28 2012
From: dmhouse at gmail.com (David House)
Date: Tue, 31 Jan 2012 20:34:28 +0000
Subject: Problems building on Linux
In-Reply-To: <CACLX4jTyZGzw68eAKaso-xKQZCHK8n7hhQMcKsaK83+mSVf+2w@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
	<CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
	<CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>
	<CADy1MauqU8Ue99NmTfJURqUzJ9+LOtUvamdq=QV-QHZXHkpL2g@mail.gmail.com>
	<CACLX4jTyZGzw68eAKaso-xKQZCHK8n7hhQMcKsaK83+mSVf+2w@mail.gmail.com>
Message-ID: <CADy1MasZ+P1nr6c7-k+M08+tR0Gt72jAkyuJre98tQQOy-Os6Q@mail.gmail.com>


On 31 January 2012 19:45, Yaron Minsky <yminsky at janestreet.com> wrote:
>> 2. core seems to have a dependency on the res package which was not
>> documented. I guess this should go in the installation hints on the
>> wiki.
>
>
> Yes! ?Can you update the wiki? ?I'd love to not be the only person
> contributing...

I cloned and I have a patch, but I can't push. It asks me for a
username and password on push; I enter my bitbucket credentials, but
then I get "authorization failed".

>> 3. There are some integer literals bigger than 2^31, and my measly
>> four-bytes-to-a-word system couldn't cope :)
>> ?- core/extended/lib/bench.ml contains 1_000_000_000_000;
>> ?- extended_linux.ml in the same directory has three, on lines 127,
>> 138 and 139 (the CIFS_MAGIC_NUMBER, HPFS_SUPER_MAGIC and
>> HUGETLBFS_MAGIC lines).
>> I just commented out these lines. (But I expect the proper fix is to
>> make these things [Int64]s, seeing as numbers > 2^31 seem to be valid
>> inputs to these functions.)
>
>
> Maybe Int63's, our usual solution to wanting to work on 32bit and be fast on
> 64bit...

Right, of course. The numbers in question are still way below 2^63.


From dmhouse at gmail.com  Tue Jan 31 20:38:25 2012
From: dmhouse at gmail.com (David House)
Date: Tue, 31 Jan 2012 20:38:25 +0000
Subject: Problems building on Linux
In-Reply-To: <CADy1MasZ+P1nr6c7-k+M08+tR0Gt72jAkyuJre98tQQOy-Os6Q@mail.gmail.com>
References: <CADy1MatrS7Y3fequqp9y0qYba61mQR6Jq=EM=e2Xp77w9v-VPg@mail.gmail.com>
	<CACLX4jQP75WS3doc7MXiCi=PoutfEPi7SaJ4yGS8Wuzb=MBwPg@mail.gmail.com>
	<CADy1MaukMde_QQ41pU7_ouo4PwBd2NVOk3Om-gKf6ogW9my1Sw@mail.gmail.com>
	<CACLX4jTgq_eh8OPHc9OCMTuTwGLASPDFavDV0M1vMS1Aw0NwVQ@mail.gmail.com>
	<CAEDxudwYHURuyFnVr1sXoGJRGjEtwSfJdCL9R=fpiwoRtDQUzA@mail.gmail.com>
	<CADy1MauqU8Ue99NmTfJURqUzJ9+LOtUvamdq=QV-QHZXHkpL2g@mail.gmail.com>
	<CACLX4jTyZGzw68eAKaso-xKQZCHK8n7hhQMcKsaK83+mSVf+2w@mail.gmail.com>
	<CADy1MasZ+P1nr6c7-k+M08+tR0Gt72jAkyuJre98tQQOy-Os6Q@mail.gmail.com>
Message-ID: <CADy1MasZ9azTFN1Zvi==hN8pj9BWmbjYFOrSgQ3zpjT8JduEgw@mail.gmail.com>


On 31 January 2012 20:34, David House <dmhouse at gmail.com> wrote:
> On 31 January 2012 19:45, Yaron Minsky <yminsky at janestreet.com> wrote:
>>> 2. core seems to have a dependency on the res package which was not
>>> documented. I guess this should go in the installation hints on the
>>> wiki.
>>
>>
>> Yes! ?Can you update the wiki? ?I'd love to not be the only person
>> contributing...
>
> I cloned and I have a patch, but I can't push. It asks me for a
> username and password on push; I enter my bitbucket credentials, but
> then I get "authorization failed".

Never mind -- once I log in to BitBucket I see there is a link to edit
the wiki in my browser. Doing that seems easier than figuring out the
HTTP authentication.


From dmhouse at gmail.com  Tue Jan 31 21:57:28 2012
From: dmhouse at gmail.com (David House)
Date: Tue, 31 Jan 2012 21:57:28 +0000
Subject: Trouble building my first program
Message-ID: <CADy1Mavgmwj=W3T91MqZLisbd8sVXeV-Fe4tTpmEuiUfvjMKaw@mail.gmail.com>


I'm having a little trouble at the linking stage trying to build my
first program that uses core.

$ ocamlfind ocamlopt -package core -linkpkg -o simple_core
simple_core.ml -thread
gcc: error: lib/libcore.a: No such file or directory
gcc: error: lib/libbin_prot.a: No such file or directory
File "caml_startup", line 1, characters 0-1:
Error: Error during linking

$ cat simple_core.ml
module C = Core

let () =
  print_string "foo\n"

If I replace 'module C = Core' with 'module R = Res' and replace core
with res on the command line, then everything works just fine.

What should I try?


