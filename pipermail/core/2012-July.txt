From sylvain at le-gall.net  Mon Jul  2 10:18:57 2012
From: sylvain at le-gall.net (Sylvain Le Gall)
Date: Mon, 2 Jul 2012 11:18:57 +0200
Subject: [was: [Caml-list] [ANN] oasis v0.3.0: Architecture for building OCaml
 libraries and applications] Pb with type_conv
Message-ID: <CAOCAUGNz5cTXk1dRqKVUr_-ky_kOBF0TswQhC059+UG3rwNCKQ@mail.gmail.com>


Hi,

2012/7/2 Daniel B?nzli <daniel.buenzli at erratique.ch>:
> Hello,
>
> Trying to install with odb.ml and ocaml 4.00.0+beta2, with
>
> ocaml odb.ml --unstable oasis
>
> But typeconv fails with [1]. Is there a magic invocation to override that warnings are errors flag ?
>

I think Jane Street Core team added the "-w @Aemr-28" flags. They did
it in myocamlbuild.ml section not managed by OASIS. The only solution
is to change by hand.

I CC the core mailing list which will provide you more information
about this issue (I have the same kind of issue because of "@" on
Windows).

> Thanks,
>
> Daniel
>
> [1]
>
> Configuration:
> ocamlfind: ........................................... /usr/local/bin/ocamlfind
> ocamlc: .............................................. /usr/local/bin/ocamlc.opt
> ocamlopt: ............................................ /usr/local/bin/ocamlopt.opt
> ocamlbuild: .......................................... /usr/local/bin/ocamlbuild
> Package name: ........................................ type_conv
> Package version: ..................................... 108.00.01
> os_type: ............................................. Unix
> system: .............................................. macosx
> architecture: ........................................ amd64
> ccomp_type: .......................................... cc
> ocaml_version: ....................................... 4.00.0
> standard_library_default: ............................ /usr/local/lib/ocaml
> standard_library: .................................... /usr/local/lib/ocaml
> standard_runtime: .................................... /usr/local/bin/ocamlrun
> bytecomp_c_compiler: ................................. gcc -fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
> native_c_compiler: ................................... gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT
> model: ............................................... default
> ext_obj: ............................................. .o
> ext_asm: ............................................. .s
> ext_lib: ............................................. .a
> ext_dll: ............................................. .so
> default_executable_name: ............................. a.out
> systhread_supported: ................................. true
> Install architecture-independent files dir: .......... /Users/dbuenzli/.odb
> Install architecture-dependent files in dir: ......... $prefix
> User executables: .................................... $exec_prefix/bin
> System admin executables: ............................ $exec_prefix/sbin
> Program executables: ................................. $exec_prefix/libexec
> Read-only single-machine data: ....................... $prefix/etc
> Modifiable architecture-independent data: ............ $prefix/com
> Modifiable single-machine data: ...................... $prefix/var
> Object code libraries: ............................... $exec_prefix/lib
> Read-only arch-independent data root: ................ $prefix/share
> Read-only architecture-independent data: ............. $datarootdir
> Info documentation: .................................. $datarootdir/info
> Locale-dependent data: ............................... $datarootdir/locale
> Man documentation: ................................... $datarootdir/man
> Documentation root: .................................. $datarootdir/doc/$pkg_name
> HTML documentation: .................................. $docdir
> DVI documentation: ................................... $docdir
> PDF documentation: ................................... $docdir
> PS documentation: .................................... $docdir
> findlib_version: ..................................... 1.3.2
> is_native: ........................................... true
> suffix_program: ......................................
> Remove a file.: ...................................... rm -f
> Remove a directory.: ................................. rm -rf
> Turn ocaml debug flag on: ............................ true
> Turn ocaml profile flag on: .......................... false
> Compiler support generation of .cmxs.: ............... true
> OCamlbuild additional flags: .........................
> Create documentations: ............................... true
> Compile tests executable and library and run them: ... false
> camlp4o: ............................................. /usr/local/bin/camlp4o
> pkg_camlp4_quotations: ............................... /usr/local/lib/ocaml/camlp4
> pkg_camlp4_extend: ................................... /usr/local/lib/ocaml/camlp4
> ocamldoc: ............................................ /usr/local/bin/ocamldoc
> Finished, 1 target (0 cached) in 00:00:00.
> getconf: no such configuration parameter `LFS64_CFLAGS'
> + ocamlfind ocamlc -c -g -w @Aemr-28 -strict-sequence -package camlp4.quotations -package camlp4.extend -syntax camlp4o -I lib -o lib/pa_type_conv.cmo lib/pa_type_conv.ml
> File "lib/pa_type_conv.ml", line 275, characters 19-1267:
> Warning 8: this pattern-matching is not exhaustive.
> Here is an example of a value that is not matched:
> (TyTypePol (_, _, _)|TyAnP _|TyAnM _)
> File "lib/pa_type_conv.ml", line 4, characters 0-11:
> Warning 33: unused open Lexing.
> File "lib/pa_type_conv.ml", line 12, characters 4-8:
> Warning 32: unused value both.
> File "lib/pa_type_conv.ml", line 1:
> Error: Error-enabled warnings (3 occurrences)
> Command exited with code 2.
> Compilation unsuccessful after building 4 targets (0 cached) in 00:00:01.
> E: Failure("Command '/usr/local/bin/ocamlbuild lib/pa_type_conv.cma -tag debug' terminated with error code 10")
> Exception: Failure "Could not build type_conv".
>
>
>


From gabriel.scherer at gmail.com  Mon Jul  2 14:01:12 2012
From: gabriel.scherer at gmail.com (Gabriel Scherer)
Date: Mon, 2 Jul 2012 15:01:12 +0200
Subject: [was: [Caml-list] [ANN] oasis v0.3.0: Architecture for building
 OCaml libraries and applications] Pb with type_conv
In-Reply-To: <CAOCAUGNz5cTXk1dRqKVUr_-ky_kOBF0TswQhC059+UG3rwNCKQ@mail.gmail.com>
References: <CAOCAUGNz5cTXk1dRqKVUr_-ky_kOBF0TswQhC059+UG3rwNCKQ@mail.gmail.com>
Message-ID: <CAPFanBFvYahCvzv_XiDE3qSHycFXN8on-HyDrwB8jsqyY+JBgQ@mail.gmail.com>


I react to "the @ issue on Windows", because I'm the one to blame in this case.

This was discussed on the OCaml bug tracker (
http://caml.inria.fr/mantis/view.php?id=5312 ) and later on the Caml
mailing-list ( http://www.mail-archive.com/caml-list at inria.fr/msg01993.html
), and it was decided to remove support for @responsefiles from OCaml
to solve that conflict with the warning specification syntax.

Fate assigned the bug to me, but I've been busy with other things and
have not implemented it (if someone wants to help on this, feel
free!). As we're late in the release process, I don't think it would
go in for 4.00, so the best bet for now is to consider this warning
specification unportable and use -warn-error instead.

I welcome feedback on such issues on the bugtracker or mailing-list;
feedback helps setting good priorities.
Sorry for not taking care of this earlier.

On Mon, Jul 2, 2012 at 11:18 AM, Sylvain Le Gall <sylvain at le-gall.net> wrote:
> Hi,
>
> 2012/7/2 Daniel B?nzli <daniel.buenzli at erratique.ch>:
>> Hello,
>>
>> Trying to install with odb.ml and ocaml 4.00.0+beta2, with
>>
>> ocaml odb.ml --unstable oasis
>>
>> But typeconv fails with [1]. Is there a magic invocation to override that warnings are errors flag ?
>>
>
> I think Jane Street Core team added the "-w @Aemr-28" flags. They did
> it in myocamlbuild.ml section not managed by OASIS. The only solution
> is to change by hand.
>
> I CC the core mailing list which will provide you more information
> about this issue (I have the same kind of issue because of "@" on
> Windows).
>
>> Thanks,
>>
>> Daniel
>>
>> [1]
>>
>> Configuration:
>> ocamlfind: ........................................... /usr/local/bin/ocamlfind
>> ocamlc: .............................................. /usr/local/bin/ocamlc.opt
>> ocamlopt: ............................................ /usr/local/bin/ocamlopt.opt
>> ocamlbuild: .......................................... /usr/local/bin/ocamlbuild
>> Package name: ........................................ type_conv
>> Package version: ..................................... 108.00.01
>> os_type: ............................................. Unix
>> system: .............................................. macosx
>> architecture: ........................................ amd64
>> ccomp_type: .......................................... cc
>> ocaml_version: ....................................... 4.00.0
>> standard_library_default: ............................ /usr/local/lib/ocaml
>> standard_library: .................................... /usr/local/lib/ocaml
>> standard_runtime: .................................... /usr/local/bin/ocamlrun
>> bytecomp_c_compiler: ................................. gcc -fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
>> native_c_compiler: ................................... gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT
>> model: ............................................... default
>> ext_obj: ............................................. .o
>> ext_asm: ............................................. .s
>> ext_lib: ............................................. .a
>> ext_dll: ............................................. .so
>> default_executable_name: ............................. a.out
>> systhread_supported: ................................. true
>> Install architecture-independent files dir: .......... /Users/dbuenzli/.odb
>> Install architecture-dependent files in dir: ......... $prefix
>> User executables: .................................... $exec_prefix/bin
>> System admin executables: ............................ $exec_prefix/sbin
>> Program executables: ................................. $exec_prefix/libexec
>> Read-only single-machine data: ....................... $prefix/etc
>> Modifiable architecture-independent data: ............ $prefix/com
>> Modifiable single-machine data: ...................... $prefix/var
>> Object code libraries: ............................... $exec_prefix/lib
>> Read-only arch-independent data root: ................ $prefix/share
>> Read-only architecture-independent data: ............. $datarootdir
>> Info documentation: .................................. $datarootdir/info
>> Locale-dependent data: ............................... $datarootdir/locale
>> Man documentation: ................................... $datarootdir/man
>> Documentation root: .................................. $datarootdir/doc/$pkg_name
>> HTML documentation: .................................. $docdir
>> DVI documentation: ................................... $docdir
>> PDF documentation: ................................... $docdir
>> PS documentation: .................................... $docdir
>> findlib_version: ..................................... 1.3.2
>> is_native: ........................................... true
>> suffix_program: ......................................
>> Remove a file.: ...................................... rm -f
>> Remove a directory.: ................................. rm -rf
>> Turn ocaml debug flag on: ............................ true
>> Turn ocaml profile flag on: .......................... false
>> Compiler support generation of .cmxs.: ............... true
>> OCamlbuild additional flags: .........................
>> Create documentations: ............................... true
>> Compile tests executable and library and run them: ... false
>> camlp4o: ............................................. /usr/local/bin/camlp4o
>> pkg_camlp4_quotations: ............................... /usr/local/lib/ocaml/camlp4
>> pkg_camlp4_extend: ................................... /usr/local/lib/ocaml/camlp4
>> ocamldoc: ............................................ /usr/local/bin/ocamldoc
>> Finished, 1 target (0 cached) in 00:00:00.
>> getconf: no such configuration parameter `LFS64_CFLAGS'
>> + ocamlfind ocamlc -c -g -w @Aemr-28 -strict-sequence -package camlp4.quotations -package camlp4.extend -syntax camlp4o -I lib -o lib/pa_type_conv.cmo lib/pa_type_conv.ml
>> File "lib/pa_type_conv.ml", line 275, characters 19-1267:
>> Warning 8: this pattern-matching is not exhaustive.
>> Here is an example of a value that is not matched:
>> (TyTypePol (_, _, _)|TyAnP _|TyAnM _)
>> File "lib/pa_type_conv.ml", line 4, characters 0-11:
>> Warning 33: unused open Lexing.
>> File "lib/pa_type_conv.ml", line 12, characters 4-8:
>> Warning 32: unused value both.
>> File "lib/pa_type_conv.ml", line 1:
>> Error: Error-enabled warnings (3 occurrences)
>> Command exited with code 2.
>> Compilation unsuccessful after building 4 targets (0 cached) in 00:00:01.
>> E: Failure("Command '/usr/local/bin/ocamlbuild lib/pa_type_conv.cma -tag debug' terminated with error code 10")
>> Exception: Failure "Could not build type_conv".
>>
>>
>>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

-- 
Caml-list mailing list.  Subscription management and archives:
https://sympa-roc.inria.fr/wws/info/caml-list
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
Bug reports: http://caml.inria.fr/bin/caml-bugs



From sdefabbiakane at gmail.com  Tue Jul  3 05:34:54 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Mon, 2 Jul 2012 21:34:54 -0700 (PDT)
Subject: Erlang-like Gen server using Async
In-Reply-To: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
Message-ID: <9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>

I haven't had a chance to take a very long look, but I do have a few 
comments. Feel free to ignore me if I'm misunderstanding what you're trying 
to do :).

You're refererencing some things in Async's Deferred module (like 
'Deferred.return', etc) with their qualified names, which is unnecessary: 
you can just use 'return'. This is partially a style point, but Deferred is 
generally understood to be the top-level monad if you have Async open. 
(This is also the case for some functions in other modules, like printf, 
which is in the top level in Core.)

You're also using the named 'bind', 'upon', etc. Unless there's a good 
reason to do that, I'd use the inline operators instead--they're much nicer 
to read. (>>= is bind, >>> is upon, >>| is map) For example, with minimal 
other changes, this is how I'd write your 'test_gen_server' function:

let test_gen_server () =
  Test_server.start 0
  >>> function
  | Result.Error _ -> shutdown 2
  | Result.Ok gs   ->
    incr gs 1;
    incr gs 2;
    Ivar.read (get gs) 
    >>> function
    | 3 -> shutdown gs
    | n ->
      eprintf "Error: Got %d\n" n; (* eprintf goes to stderr instead of 
stdout *)
      Shutdown.shutdown 1

Also, I see a lot of use of upon, return, and ivars. There are certainly 
times to use all of them, but there are often nicer abstractions already in 
Async that do the hard work for you. Take a look at the Pipe module: I 
think you'll be able to eliminate a lot of code (and better types for your 
own interfaces will flow much more naturally from the underlying types). 
Generally functions that do deferred things should generally have a 
Deferred type. Don't use upon to try to give yourself functions of type 
'unit'.




On Tuesday, July 3, 2012 4:05:09 AM UTC+8, orbitz wrote:
>
> Hello!
>
> I implemented an Erlang-like gen server in Async and was hoping someone 
> familiar with Core might provide some feedback.  Is the code good?  Is the 
> idea good?
>
> The code is here:
>
> https://github.com/orbitz/web_typed/blob/master/libs/ort_async/gen_server.ml
>
> And an example is here:
>
> https://github.com/orbitz/web_typed/blob/master/libs/ort_async/gen_server_test.ml
>
> One thing that I do not like about this is the init function.  The problem 
> is:
> I want the init function to get a reference to itself so it can create 
> other services and give itself to that service.  The problem is, the type 
> that represents the server doesn't exist when the init function is defined 
> so I can't pass it a value.  Instead I pass it the server stream and exited 
> Ivar, but that is rather ugly since it really breaks the abstraction.  Any 
> suggestions?
>
> Thank you.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120702/be2d2acb/attachment.html>

From orbitz at gmail.com  Mon Jul  2 21:05:09 2012
From: orbitz at gmail.com (orbitz)
Date: Mon, 2 Jul 2012 22:05:09 +0200
Subject: Erlang-like Gen server using Async
Message-ID: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>

Hello!

I implemented an Erlang-like gen server in Async and was hoping someone
familiar with Core might provide some feedback.  Is the code good?  Is the
idea good?

The code is here:
https://github.com/orbitz/web_typed/blob/master/libs/ort_async/gen_server.ml

And an example is here:
https://github.com/orbitz/web_typed/blob/master/libs/ort_async/gen_server_test.ml

One thing that I do not like about this is the init function.  The problem
is:
I want the init function to get a reference to itself so it can create
other services and give itself to that service.  The problem is, the type
that represents the server doesn't exist when the init function is defined
so I can't pass it a value.  Instead I pass it the server stream and exited
Ivar, but that is rather ugly since it really breaks the abstraction.  Any
suggestions?

Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120702/e715a233/attachment.html>

From dhouse at janestreet.com  Tue Jul  3 07:46:15 2012
From: dhouse at janestreet.com (David House)
Date: Tue, 3 Jul 2012 07:46:15 +0100
Subject: Erlang-like Gen server using Async
In-Reply-To: <9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
	<9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
Message-ID: <CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>


On Tue, Jul 3, 2012 at 5:34 AM, Sam <sdefabbiakane at gmail.com> wrote:
> You're refererencing some things in Async's Deferred module (like
> 'Deferred.return', etc) with their qualified names, which is unnecessary:
> you can just use 'return'. This is partially a style point, but Deferred is
> generally understood to be the top-level monad if you have Async open. (This
> is also the case for some functions in other modules, like printf, which is
> in the top level in Core.)

Not sure I totally agree -- I think Deferred.return is a clearer name
than return on its own. I generally try to avoid use of return by
using map instead of bind as the last chained infix operator, e.g.:

  foo
  >>= fun a ->
  bar a
  >>= fun () ->
  baz
  >>| fun c ->
  quux c

(This also shows another style point I'm a fan of: arrange your code
with binds/maps on the left, so that it is clear where they all are.
This is important, because they're basically the possible context
switch points in your code. So you should be aware where they are. The
above example looks silly, but generally you have much longer lines
between the binds, and it looks fine.)

> Generally functions that do deferred things should generally have a Deferred
> type. Don't use upon to try to give yourself functions of type 'unit'.

+1, and in fact I'd say any use of upon is supicious. Note that [x >>>
f] is equivalent (pretty much) to [whenever (x >>= f)] (at some point
we are renaming "whenever" to "don't_wait_for" -- I can't remember
whether that has hit yet). But as you say, you should just let things
have deferred return types if they do deferred things. This means that
clients of that function have the choice whether to wait for that
function (by binding on it), or not to (by calling
whenever/don't_wait_for).

The only exception is very tight loops, where upon is more efficient
than bind, because it avoids allocating an extra deferred.


From orbitz at gmail.com  Tue Jul  3 09:11:19 2012
From: orbitz at gmail.com (orbitz)
Date: Tue, 3 Jul 2012 10:11:19 +0200
Subject: Erlang-like Gen server using Async
In-Reply-To: <CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
	<9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
	<CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>
Message-ID: <CAAHaHtnUyhDyimPx517eXSAubZog743_kjCzQSisp=iXEbCUyw@mail.gmail.com>

Thank you for the responses.  I'm probably going to switch to the >>=, >>>,
>>| operators.  I wasn't sure if I liked them when I first started but I'll
try them out.  They will probably be clearer now that I have had time to
think about the code in terms of bind and upon.

For the upon code, in gen_server_test.ml that should be switched to bind, I
agree.  In gen_server.ml, I use upon to represent the event loop, which
represents a detached computation so nobody should ever wait on that  I
think the use of upon there is valid, but let me know if you disagree.

For the original problem I raised, about a gen server being able to
reference itself, the best solution I've come up with is passing the init
function a tuple of (msg -> unit * exited Ivar.t).  The init function can
give this tuple to other services it wants to create.  I'm still not a big
fan of it though, but my Ocaml-type-fu is weak.

Thanks again

On Tue, Jul 3, 2012 at 8:46 AM, David House <dhouse at janestreet.com> wrote:

> On Tue, Jul 3, 2012 at 5:34 AM, Sam <sdefabbiakane at gmail.com> wrote:
> > You're refererencing some things in Async's Deferred module (like
> > 'Deferred.return', etc) with their qualified names, which is unnecessary:
> > you can just use 'return'. This is partially a style point, but Deferred
> is
> > generally understood to be the top-level monad if you have Async open.
> (This
> > is also the case for some functions in other modules, like printf, which
> is
> > in the top level in Core.)
>
> Not sure I totally agree -- I think Deferred.return is a clearer name
> than return on its own. I generally try to avoid use of return by
> using map instead of bind as the last chained infix operator, e.g.:
>
>   foo
>   >>= fun a ->
>   bar a
>   >>= fun () ->
>   baz
>   >>| fun c ->
>   quux c
>
> (This also shows another style point I'm a fan of: arrange your code
> with binds/maps on the left, so that it is clear where they all are.
> This is important, because they're basically the possible context
> switch points in your code. So you should be aware where they are. The
> above example looks silly, but generally you have much longer lines
> between the binds, and it looks fine.)
>
> > Generally functions that do deferred things should generally have a
> Deferred
> > type. Don't use upon to try to give yourself functions of type 'unit'.
>
> +1, and in fact I'd say any use of upon is supicious. Note that [x >>>
> f] is equivalent (pretty much) to [whenever (x >>= f)] (at some point
> we are renaming "whenever" to "don't_wait_for" -- I can't remember
> whether that has hit yet). But as you say, you should just let things
> have deferred return types if they do deferred things. This means that
> clients of that function have the choice whether to wait for that
> function (by binding on it), or not to (by calling
> whenever/don't_wait_for).
>
> The only exception is very tight loops, where upon is more efficient
> than bind, because it avoids allocating an extra deferred.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120703/42e4fe58/attachment.html>

From sdefabbiakane at gmail.com  Wed Jul  4 05:24:59 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Tue, 3 Jul 2012 21:24:59 -0700 (PDT)
Subject: Erlang-like Gen server using Async
In-Reply-To: <CAAHaHtnUyhDyimPx517eXSAubZog743_kjCzQSisp=iXEbCUyw@mail.gmail.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
 <9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
 <CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>
 <CAAHaHtnUyhDyimPx517eXSAubZog743_kjCzQSisp=iXEbCUyw@mail.gmail.com>
Message-ID: <c46b26d9-8afc-406b-a3e7-544c0841075f@googlegroups.com>

Bind will do the same thing as upon in the way that you're using it. (In 
fact, bind is implemented with upon.) When you hit a bind/upon/map/etc, all 
you're doing is saying "schedule this function to run when this deferred 
becomes determined". You're not forcing the computation to happen right 
then, because the scheduler's free to run anything else it wants there.

Basically everything you're doing in Async is a detached unit of blocking 
computation. Bind/upon/etc are boundaries between those units where the 
scheduler takes over. When you're using bind/upon/etc, all you're doing is 
defining two units of blocking computation and specifying a dependency 
between them.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120703/42662fe1/attachment.html>

From orbitz at gmail.com  Wed Jul  4 09:07:31 2012
From: orbitz at gmail.com (orbitz)
Date: Wed, 4 Jul 2012 10:07:31 +0200
Subject: Erlang-like Gen server using Async
In-Reply-To: <c46b26d9-8afc-406b-a3e7-544c0841075f@googlegroups.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
	<9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
	<CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>
	<CAAHaHtnUyhDyimPx517eXSAubZog743_kjCzQSisp=iXEbCUyw@mail.gmail.com>
	<c46b26d9-8afc-406b-a3e7-544c0841075f@googlegroups.com>
Message-ID: <CAAHaHtkP6oOZ+UrggckHKCdWPS85S7DAxDsqcyT-py0Ah+WiSA@mail.gmail.com>

Yes, I'm referring to the semantics of the gen server loop.  Semantically,
if you're waiting on its deferred, you're doing it wrong.  It never returns
anything and is completely detached.

On Wed, Jul 4, 2012 at 6:24 AM, Sam <sdefabbiakane at gmail.com> wrote:

> Bind will do the same thing as upon in the way that you're using it. (In
> fact, bind is implemented with upon.) When you hit a bind/upon/map/etc, all
> you're doing is saying "schedule this function to run when this deferred
> becomes determined". You're not forcing the computation to happen right
> then, because the scheduler's free to run anything else it wants there.
>
> Basically everything you're doing in Async is a detached unit of blocking
> computation. Bind/upon/etc are boundaries between those units where the
> scheduler takes over. When you're using bind/upon/etc, all you're doing is
> defining two units of blocking computation and specifying a dependency
> between them.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120704/0bdbfac0/attachment.html>

From sdefabbiakane at gmail.com  Thu Jul  5 04:22:42 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Wed, 4 Jul 2012 20:22:42 -0700 (PDT)
Subject: Erlang-like Gen server using Async
In-Reply-To: <CAAHaHtkP6oOZ+UrggckHKCdWPS85S7DAxDsqcyT-py0Ah+WiSA@mail.gmail.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
 <9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
 <CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>
 <CAAHaHtnUyhDyimPx517eXSAubZog743_kjCzQSisp=iXEbCUyw@mail.gmail.com>
 <c46b26d9-8afc-406b-a3e7-544c0841075f@googlegroups.com>
 <CAAHaHtkP6oOZ+UrggckHKCdWPS85S7DAxDsqcyT-py0Ah+WiSA@mail.gmail.com>
Message-ID: <ff0cf05c-33ec-442d-aeef-c21ecffd35d8@googlegroups.com>

That's true for the upon in 'start', but not for the other two in 'loop'. 
You do wait on those deferreds to continue, you're just using upon to get 
the unit type you want. I think what you really want to be doing is calling 
"whenever (Stream.iter' ...)" in 'start', since you're basically 
implementing Stream.iter yourself with 'loop' anyway. Whenever is like the 
standard ignore function, except it only takes things if type unit deferred.

You also definitely want a map instead of bind in 'start'.

As I was saying before (or maybe as I meant to say before), using upon and 
things like raw ivars a lot isn't necessarily wrong, but it does suggest 
that you're working at a lower level of abstraction than is usually 
necessary.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120704/80aa99ff/attachment.html>

From markus.mottl at gmail.com  Mon Jul  9 03:02:02 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 8 Jul 2012 22:02:02 -0400
Subject: type_conv/ocaml4 release
In-Reply-To: <1EF0B8CE-34C2-43BC-A88D-4119833BC828@recoil.org>
References: <1EF0B8CE-34C2-43BC-A88D-4119833BC828@recoil.org>
Message-ID: <CAP_800qE1n138t0OKWE9EJmqWJfEUWV4P1Ad21Fn1G_MkXeTag@mail.gmail.com>


On Sun, Jul 8, 2012 at 5:12 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> Also, is it necessary to have warnings-are-errors enabled in the released tarballs? It makes it awkward to test out new compiler versions, which usually introduce new ones every release.

I agree with Anil that warnings-as-errors should not be enabled in
releases, only during development work.

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From anil at recoil.org  Sun Jul  8 22:12:02 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 8 Jul 2012 22:12:02 +0100
Subject: type_conv/ocaml4 release
Message-ID: <1EF0B8CE-34C2-43BC-A88D-4119833BC828@recoil.org>


Hi, is there an ETA for a release of type_conv that builds under ocaml4 (using Markus' patchqueue) ?  

I'm doing bulk builds of OCaml4 packages on odd platforms (Linux/ARM and OpenBSD/PowerPC) using the new OPAM package manager to cover as many packages as possible.  Unfortunately, the type-conv warning/errors cause many dependent packages to fail to build.

OPAM doesn't yet have patch support, but if it'll take more than a day or two for a type_conv release, then I'll roll my own to unblock the build.  Just checking just in case...

Also, is it necessary to have warnings-are-errors enabled in the released tarballs? It makes it awkward to test out new compiler versions, which usually introduce new ones every release.

cheers,
Anil



From yury.sulsky at gmail.com  Mon Jul  9 17:03:25 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Mon, 9 Jul 2012 12:03:25 -0400
Subject: type_conv/ocaml4 release
In-Reply-To: <CAP_800qE1n138t0OKWE9EJmqWJfEUWV4P1Ad21Fn1G_MkXeTag@mail.gmail.com>
References: <1EF0B8CE-34C2-43BC-A88D-4119833BC828@recoil.org>
	<CAP_800qE1n138t0OKWE9EJmqWJfEUWV4P1Ad21Fn1G_MkXeTag@mail.gmail.com>
Message-ID: <CAEDxudxyZd=jEU2HakWAB68SZYMN6PX8eAZtGGAQQ6LE55FgnQ@mail.gmail.com>


Hi guys,

I'll go ahead and generate a new point-release with Markus' fixes.
They'll also make it into the mercurial tree as part of the next
release. I'll get back to you as soon as they're up.

On Sun, Jul 8, 2012 at 10:02 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Sun, Jul 8, 2012 at 5:12 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> Also, is it necessary to have warnings-are-errors enabled in the released tarballs? It makes it awkward to test out new compiler versions, which usually introduce new ones every release.
>
> I agree with Anil that warnings-as-errors should not be enabled in
> releases, only during development work.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From anil at recoil.org  Mon Jul  9 17:06:15 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 9 Jul 2012 17:06:15 +0100
Subject: type_conv/ocaml4 release
In-Reply-To: <CAEDxudxyZd=jEU2HakWAB68SZYMN6PX8eAZtGGAQQ6LE55FgnQ@mail.gmail.com>
References: <1EF0B8CE-34C2-43BC-A88D-4119833BC828@recoil.org> <CAP_800qE1n138t0OKWE9EJmqWJfEUWV4P1Ad21Fn1G_MkXeTag@mail.gmail.com> <CAEDxudxyZd=jEU2HakWAB68SZYMN6PX8eAZtGGAQQ6LE55FgnQ@mail.gmail.com>
Message-ID: <C765A709-9FA5-4BB4-9F7B-E116B4E882E2@recoil.org>


Thanks! Gerd also just released an ocamlfind-1.3.3 that works with both
OCaml4 and 3, so I'll retry everything tonight with OPAM and see how far it
gets.

-anil

On 9 Jul 2012, at 17:03, Yury Sulsky wrote:

> Hi guys,
> 
> I'll go ahead and generate a new point-release with Markus' fixes.
> They'll also make it into the mercurial tree as part of the next
> release. I'll get back to you as soon as they're up.
> 
> On Sun, Jul 8, 2012 at 10:02 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
>> On Sun, Jul 8, 2012 at 5:12 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> Also, is it necessary to have warnings-are-errors enabled in the released tarballs? It makes it awkward to test out new compiler versions, which usually introduce new ones every release.
>> 
>> I agree with Anil that warnings-as-errors should not be enabled in
>> releases, only during development work.
>> 
>> Regards,
>> Markus
>> 
>> --
>> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
> 



From damien.doligez at inria.fr  Mon Jul  9 17:05:42 2012
From: damien.doligez at inria.fr (Damien Doligez)
Date: Mon, 9 Jul 2012 18:05:42 +0200
Subject: [was: [Caml-list] [ANN] oasis v0.3.0: Architecture for building
 OCaml libraries and applications] Pb with type_conv
In-Reply-To: <CAPFanBFvYahCvzv_XiDE3qSHycFXN8on-HyDrwB8jsqyY+JBgQ@mail.gmail.com>
References: <CAOCAUGNz5cTXk1dRqKVUr_-ky_kOBF0TswQhC059+UG3rwNCKQ@mail.gmail.com> <CAPFanBFvYahCvzv_XiDE3qSHycFXN8on-HyDrwB8jsqyY+JBgQ@mail.gmail.com>
Message-ID: <B5BFE7A3-0037-418D-B6C2-645FC2ACD588@inria.fr>


I think I'm the one to blame here: I chose the @ character for
this purpose.

A workaround for the authors of the original software (and indeed
a portability note for all OCaml software):

Instead of "-w @Aemr-28", you can use "-w A at Aemr-28", which will
do exactly the same thing, without triggering the bug.  Just avoid
having the @ at the beginning of the argument.

-- Damien



On 2012-07-02, at 15:01, Gabriel Scherer wrote:

> I react to "the @ issue on Windows", because I'm the one to blame in this case.
> 
> This was discussed on the OCaml bug tracker (
> http://caml.inria.fr/mantis/view.php?id=5312 ) and later on the Caml
> mailing-list ( http://www.mail-archive.com/caml-list at inria.fr/msg01993.html
> ), and it was decided to remove support for @responsefiles from OCaml
> to solve that conflict with the warning specification syntax.
> 
> Fate assigned the bug to me, but I've been busy with other things and
> have not implemented it (if someone wants to help on this, feel
> free!). As we're late in the release process, I don't think it would
> go in for 4.00, so the best bet for now is to consider this warning
> specification unportable and use -warn-error instead.
> 
> I welcome feedback on such issues on the bugtracker or mailing-list;
> feedback helps setting good priorities.
> Sorry for not taking care of this earlier.
> 
> On Mon, Jul 2, 2012 at 11:18 AM, Sylvain Le Gall <sylvain at le-gall.net> wrote:
>> Hi,
>> 
>> 2012/7/2 Daniel B?nzli <daniel.buenzli at erratique.ch>:
>>> Hello,
>>> 
>>> Trying to install with odb.ml and ocaml 4.00.0+beta2, with
>>> 
>>> ocaml odb.ml --unstable oasis
>>> 
>>> But typeconv fails with [1]. Is there a magic invocation to override that warnings are errors flag ?
>>> 
>> 
>> I think Jane Street Core team added the "-w @Aemr-28" flags. They did
>> it in myocamlbuild.ml section not managed by OASIS. The only solution
>> is to change by hand.
>> 
>> I CC the core mailing list which will provide you more information
>> about this issue (I have the same kind of issue because of "@" on
>> Windows).
>> 
>>> Thanks,
>>> 
>>> Daniel
>>> 
>>> [1]
>>> 
>>> Configuration:
>>> ocamlfind: ........................................... /usr/local/bin/ocamlfind
>>> ocamlc: .............................................. /usr/local/bin/ocamlc.opt
>>> ocamlopt: ............................................ /usr/local/bin/ocamlopt.opt
>>> ocamlbuild: .......................................... /usr/local/bin/ocamlbuild
>>> Package name: ........................................ type_conv
>>> Package version: ..................................... 108.00.01
>>> os_type: ............................................. Unix
>>> system: .............................................. macosx
>>> architecture: ........................................ amd64
>>> ccomp_type: .......................................... cc
>>> ocaml_version: ....................................... 4.00.0
>>> standard_library_default: ............................ /usr/local/lib/ocaml
>>> standard_library: .................................... /usr/local/lib/ocaml
>>> standard_runtime: .................................... /usr/local/bin/ocamlrun
>>> bytecomp_c_compiler: ................................. gcc -fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
>>> native_c_compiler: ................................... gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT
>>> model: ............................................... default
>>> ext_obj: ............................................. .o
>>> ext_asm: ............................................. .s
>>> ext_lib: ............................................. .a
>>> ext_dll: ............................................. .so
>>> default_executable_name: ............................. a.out
>>> systhread_supported: ................................. true
>>> Install architecture-independent files dir: .......... /Users/dbuenzli/.odb
>>> Install architecture-dependent files in dir: ......... $prefix
>>> User executables: .................................... $exec_prefix/bin
>>> System admin executables: ............................ $exec_prefix/sbin
>>> Program executables: ................................. $exec_prefix/libexec
>>> Read-only single-machine data: ....................... $prefix/etc
>>> Modifiable architecture-independent data: ............ $prefix/com
>>> Modifiable single-machine data: ...................... $prefix/var
>>> Object code libraries: ............................... $exec_prefix/lib
>>> Read-only arch-independent data root: ................ $prefix/share
>>> Read-only architecture-independent data: ............. $datarootdir
>>> Info documentation: .................................. $datarootdir/info
>>> Locale-dependent data: ............................... $datarootdir/locale
>>> Man documentation: ................................... $datarootdir/man
>>> Documentation root: .................................. $datarootdir/doc/$pkg_name
>>> HTML documentation: .................................. $docdir
>>> DVI documentation: ................................... $docdir
>>> PDF documentation: ................................... $docdir
>>> PS documentation: .................................... $docdir
>>> findlib_version: ..................................... 1.3.2
>>> is_native: ........................................... true
>>> suffix_program: ......................................
>>> Remove a file.: ...................................... rm -f
>>> Remove a directory.: ................................. rm -rf
>>> Turn ocaml debug flag on: ............................ true
>>> Turn ocaml profile flag on: .......................... false
>>> Compiler support generation of .cmxs.: ............... true
>>> OCamlbuild additional flags: .........................
>>> Create documentations: ............................... true
>>> Compile tests executable and library and run them: ... false
>>> camlp4o: ............................................. /usr/local/bin/camlp4o
>>> pkg_camlp4_quotations: ............................... /usr/local/lib/ocaml/camlp4
>>> pkg_camlp4_extend: ................................... /usr/local/lib/ocaml/camlp4
>>> ocamldoc: ............................................ /usr/local/bin/ocamldoc
>>> Finished, 1 target (0 cached) in 00:00:00.
>>> getconf: no such configuration parameter `LFS64_CFLAGS'
>>> + ocamlfind ocamlc -c -g -w @Aemr-28 -strict-sequence -package camlp4.quotations -package camlp4.extend -syntax camlp4o -I lib -o lib/pa_type_conv.cmo lib/pa_type_conv.ml
>>> File "lib/pa_type_conv.ml", line 275, characters 19-1267:
>>> Warning 8: this pattern-matching is not exhaustive.
>>> Here is an example of a value that is not matched:
>>> (TyTypePol (_, _, _)|TyAnP _|TyAnM _)
>>> File "lib/pa_type_conv.ml", line 4, characters 0-11:
>>> Warning 33: unused open Lexing.
>>> File "lib/pa_type_conv.ml", line 12, characters 4-8:
>>> Warning 32: unused value both.
>>> File "lib/pa_type_conv.ml", line 1:
>>> Error: Error-enabled warnings (3 occurrences)
>>> Command exited with code 2.
>>> Compilation unsuccessful after building 4 targets (0 cached) in 00:00:01.
>>> E: Failure("Command '/usr/local/bin/ocamlbuild lib/pa_type_conv.cma -tag debug' terminated with error code 10")
>>> Exception: Failure "Could not build type_conv".
>>> 
>>> 
>>> 
>> 
>> --
>> Caml-list mailing list.  Subscription management and archives:
>> https://sympa-roc.inria.fr/wws/info/caml-list
>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>> Bug reports: http://caml.inria.fr/bin/caml-bugs
>> 
> 
> -- 
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs


-- 
Caml-list mailing list.  Subscription management and archives:
https://sympa-roc.inria.fr/wws/info/caml-list
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
Bug reports: http://caml.inria.fr/bin/caml-bugs



From francois.berenger.working at gmail.com  Wed Jul 11 14:40:04 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Wed, 11 Jul 2012 06:40:04 -0700 (PDT)
Subject: Fwd: [Caml-list] library/framework needed for distributed
 programming in OCaml
Message-ID: <4d398a3f-7a06-4690-8473-8e7ca09a0370@googlegroups.com>



On Wednesday, July 11, 2012 3:40:25 PM UTC+9, Francois Berenger wrote:
>
> Dear list, 
>
> Please forgive me to open this possibly re-occurring thread 
> but I need an up to date version of the answer. 
>
> I once wrote a parallel and distributed toy program 
> in Python which proved to be quite useful ( 
> http://savannah.nongnu.org/projects/par/ 
> ). 
> It was quite simple and easy to write because I used 
> a "library that enables you to build applications in which objects can 
> talk to each other over the network" (http://pypi.python.org/pypi/Pyro4). 
>
> So, I am looking for the gold standard to write 
> modules in OCaml that can talk to each other over the network 
> (not objects, I don't like them so much). 
>
> Here are some requirements, in a random order: 
>
> - the target execution environment is composed of 
>    about 10 Linux workstations. It may switch to 1 or 
>    2 interconnected clusters in the future (about 512 cores max). 
>    So, not as large a scale as a company doing big data. 
> - the system will be used to transfer files of various sizes 
>    (big files like a few Gb included, tiny ones also) 
> - pure OCaml code, so JoCaml and CamlP3l are out. 
>    I don't like so much if there is some C part in the library 
>    but this is not a show stopper. 
> - I really dislike syntax extensions (or things that force 
>    me to do a lot of sysadmin strange configuration) so user-land only 
>    would be great 
> - preserving type-safety and abstraction as mentioned 
>    in the Quicksilver/OCaml paper would be cool ( 
>    www.kb.ecei.tohoku.ac.jp/~sumii/pub/qs.pdf<http://www.kb.ecei.tohoku.ac.jp/%7Esumii/pub/qs.pdf> 
>    ) but not mandatory. 
>    Ideally, encryption or compression of communications should 
>    be a user-toggable feature. 
> - tolerance to partial failures would be nice but not 
>    mandatory (because my target environment is not so error prone 
>    and not so large) 
> - the project should be actively maintained and preferably used 
>    in production somewhere ("je n'aime pas essuyer les platres") 
> - I don't like to use huge frameworks/libraries (j'essaye d'eviter "les 
>    usines a gaz") 
>
> I would be satisfied with even just links to things that 
> satisfy most of my requirements. 
>
> For the moment, the few things that I could find that looks useful are: 
>   - Client-server part of 
>     http://caml.inria.fr/pub/docs/oreilly-book/html.bak/book-ora187.html 
>   - maybe the SunRPC part of 
>     http://projects.camlcity.org/projects/ocamlnet.html 
>
> Thanks a lot for your suggestions, 
> Francois. 
>
> -- 
> Caml-list mailing list.  Subscription management and archives: 
> https://sympa-roc.inria.fr/wws/info/caml-list 
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners 
> Bug reports: http://caml.inria.fr/bin/caml-bugs 
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120711/276807e8/attachment.html>

From francois.berenger.working at gmail.com  Thu Jul 12 04:54:32 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Wed, 11 Jul 2012 20:54:32 -0700 (PDT)
Subject: issue and a fix proposed on the ocaml-core bitbucket website
Message-ID: <1a132f9f-0333-44c8-8ab4-fa7c95b89afa@googlegroups.com>

https://bitbucket.org/yminsky/ocaml-core/issues?status=new&status=open

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120711/978f1698/attachment.html>

From francois.berenger.working at gmail.com  Thu Jul 12 09:48:26 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Thu, 12 Jul 2012 01:48:26 -0700 (PDT)
Subject: [Caml-list] library/framework needed for distributed
 programming in OCaml
Message-ID: <f55ae3a1-1bdc-4dee-a073-abc9a260d428@googlegroups.com>

-------- Original Message --------
Subject:        Re: [Caml-list] library/framework needed
for distributed programming in OCaml
Date:   Thu, 12 Jul 2012 17:46:06 +0900
>From:   Francois Berenger

Hello,

For the moment, the best answer I got privately in my mailbox
is to combine Janestreet's bin_prot and async libraries
or Martin Jambon's biniou with Lwt.

I kind of like what I read on async and bin_prot.

On 07/11/2012 07:21 PM, Lauri Alanko wrote:
 > Hi.
 >
 > I also had need of such a library when I started working on a
 > distributed programming project, but as I couldn't find anything that
 > fulfilled my requirements, I wrote my own.
 >
 > The library is Lwt-based, and provides pretty straightforward remotely
 > callable procedures:
 >
 > type ('a, 'r) handle
 > val ($) : ('a, 'r) handle -> 'a -> 'r Lwt.t
 > val publish : ('a -> 'r Lwt.t) -> ('a, 'r) handle
 >
 > The library is designed to work in a firewalled environment: firewalled
 > nodes can join the distributed network by connecting to any accessible
 > host of that network with an open listener. All messages between nodes
 > are routed through the network.
 >
 > type connection
 > val connect :
 > ?host:string -> ?port:int -> unit -> connection Lwt.t
 > val listen :
 > ?port:int -> unit -> unit Lwt.t
 >
 > Initial values are obtained with "roots". A root (usually a handle, or a
 > record or first-class module containing handles) is keyed to a string,
 > and once set by a node, it can be discovered by any node in the network:
 >
 > val get_root : string -> 'a Lwt.t
 > val set_root : string -> 'a -> unit Lwt.t
 >
 > This is the only unsafe part of the interface: the getter and setter
 > _must_ agree on the type of the root or all hell breaks loose.
 >
 > I haven't published the library yet, since I have wanted to feel free to
 > modify it as required by my application, but if you are interested, and
 > cannot find a more mature solution, I'd be happy to provide it for your
 > inspection.

If you publish your code somewhere (github is really nice), I would
be very happy to have a look at it.

Thanks a lot,
F.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120712/a1b70103/attachment.html>

From 5764c029b688c1c0d24a2e97cd764f at gmail.com  Thu Jul 12 13:11:20 2012
From: 5764c029b688c1c0d24a2e97cd764f at gmail.com (Matej Kosik)
Date: Thu, 12 Jul 2012 05:11:20 -0700 (PDT)
Subject: Core_int32.of_int ... when does it return None value?
Message-ID: <4d690176-0a5b-4e62-b154-335022dbd1f3@googlegroups.com>

Hello,

I am making my first steps with the Core library so this will sound dumb, 
sorry...

In my code, I call Core.int32.of_int function.

I has a curious type. At what occasions does it return None value?

(the doc
http://www.janestreet.com/ocaml/doc/core/Core_int32.html
is mute concerning this topic)

Thanks in advance... :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120712/3959cce8/attachment.html>

From yminsky at janestreet.com  Thu Jul 12 12:26:09 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 12 Jul 2012 07:26:09 -0400
Subject: [Caml-list] library/framework needed for distributed programming
 in OCaml
In-Reply-To: <f55ae3a1-1bdc-4dee-a073-abc9a260d428@googlegroups.com>
References: <f55ae3a1-1bdc-4dee-a073-abc9a260d428@googlegroups.com>
Message-ID: <CACLX4jTyD9wtxxyxTEMt4FGzH6-3aDYjDEmr-Uf74gSZf6zwUA@mail.gmail.com>


One library that you might find of use is Async's RPC library, which
allows you to specify simple RPC-like protocols, where the messages
are all handled by bin-prot.

There is no framework-level compression, however.  That needs to be
done at the application level.

y

On Thu, Jul 12, 2012 at 4:48 AM, Francois Berenger
<francois.berenger.working at gmail.com> wrote:
> -------- Original Message --------
> Subject:        Re: [Caml-list] library/framework needed
> for distributed programming in OCaml
> Date:   Thu, 12 Jul 2012 17:46:06 +0900
> From:   Francois Berenger
>
> Hello,
>
> For the moment, the best answer I got privately in my mailbox
> is to combine Janestreet's bin_prot and async libraries
> or Martin Jambon's biniou with Lwt.
>
> I kind of like what I read on async and bin_prot.
>
> On 07/11/2012 07:21 PM, Lauri Alanko wrote:
>  > Hi.
>  >
>  > I also had need of such a library when I started working on a
>  > distributed programming project, but as I couldn't find anything that
>  > fulfilled my requirements, I wrote my own.
>  >
>  > The library is Lwt-based, and provides pretty straightforward remotely
>  > callable procedures:
>  >
>  > type ('a, 'r) handle
>  > val ($) : ('a, 'r) handle -> 'a -> 'r Lwt.t
>  > val publish : ('a -> 'r Lwt.t) -> ('a, 'r) handle
>  >
>  > The library is designed to work in a firewalled environment: firewalled
>  > nodes can join the distributed network by connecting to any accessible
>  > host of that network with an open listener. All messages between nodes
>  > are routed through the network.
>  >
>  > type connection
>  > val connect :
>  > ?host:string -> ?port:int -> unit -> connection Lwt.t
>  > val listen :
>  > ?port:int -> unit -> unit Lwt.t
>  >
>  > Initial values are obtained with "roots". A root (usually a handle, or a
>  > record or first-class module containing handles) is keyed to a string,
>  > and once set by a node, it can be discovered by any node in the network:
>  >
>  > val get_root : string -> 'a Lwt.t
>  > val set_root : string -> 'a -> unit Lwt.t
>  >
>  > This is the only unsafe part of the interface: the getter and setter
>  > _must_ agree on the type of the root or all hell breaks loose.
>  >
>  > I haven't published the library yet, since I have wanted to feel free to
>  > modify it as required by my application, but if you are interested, and
>  > cannot find a more mature solution, I'd be happy to provide it for your
>  > inspection.
>
> If you publish your code somewhere (github is really nice), I would
> be very happy to have a look at it.
>
> Thanks a lot,
> F.


From dhouse at janestreet.com  Thu Jul 12 13:19:29 2012
From: dhouse at janestreet.com (David House)
Date: Thu, 12 Jul 2012 13:19:29 +0100
Subject: Core_int32.of_int ... when does it return None value?
In-Reply-To: <4d690176-0a5b-4e62-b154-335022dbd1f3@googlegroups.com>
References: <4d690176-0a5b-4e62-b154-335022dbd1f3@googlegroups.com>
Message-ID: <CAK=fH+h7DVZ9nBBfGDr3mMptW-_HmDDqGTXBY7NSnLX6ymcuwQ@mail.gmail.com>


When the input is out of range. If you are on a 64-bit machine, then
the range of [int] is -2^62 .. 2^62 - 1 (note 62 not 63 -- one bit is
lost because of the tagging trick that keeps ints as immediates) But
the range of [Int32] is only -2^31 .. 2^31 - 1.

By the way, you should not refer to the module as Core_int32. If you
open Core.Std, then you can (and should) refer to the module as just
Int32. The fact that the filename is core_int32.ml is an unfortunate
inconvenience, necessary because there is a module in the caml
standard library that is also called Int32.

On Thu, Jul 12, 2012 at 1:11 PM, Matej Kosik
<5764c029b688c1c0d24a2e97cd764f at gmail.com> wrote:
> Hello,
>
> I am making my first steps with the Core library so this will sound dumb,
> sorry...
>
> In my code, I call Core.int32.of_int function.
>
> I has a curious type. At what occasions does it return None value?
>
> (the doc
> http://www.janestreet.com/ocaml/doc/core/Core_int32.html
> is mute concerning this topic)
>
> Thanks in advance... :-)


From yminsky at janestreet.com  Thu Jul 12 18:39:48 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 12 Jul 2012 13:39:48 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
Message-ID: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>


A new downloads page is now available.  I'm going to delete the
downloads from the bitbucket page because bitbucket doesn't give a
good way of automating uploads or organizing them in directories.

There's also a new set of tarballs (108.00.02) with support for OCaml 4.0.

Enjoy!

y


From markus.mottl at gmail.com  Thu Jul 12 19:07:24 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 12 Jul 2012 14:07:24 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
Message-ID: <CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>


On Thu, Jul 12, 2012 at 1:39 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> A new downloads page is now available.  I'm going to delete the
> downloads from the bitbucket page because bitbucket doesn't give a
> good way of automating uploads or organizing them in directories.

Have you considered creating a static website on Bitbucket?  I'm going
to try it myself soon, and it seems easy enough:

  https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+bitbucket

It's all version-controlled, too.  You can apparently upload arbitrary
files, but I haven't tested it yet.

> There's also a new set of tarballs (108.00.02) with support for OCaml 4.0.

Is this related to your submissions patch queue?  Just wondering,
because there has been no activity on Bitbucket for a while.

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From yminsky at janestreet.com  Thu Jul 12 19:11:56 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 12 Jul 2012 14:11:56 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
	<CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
Message-ID: <CACLX4jSVrAwRRN7RZpkQAv78PXB0ik58AVpbgJPSgAGBYTdJ9g@mail.gmail.com>


On Thu, Jul 12, 2012 at 2:07 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Thu, Jul 12, 2012 at 1:39 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> A new downloads page is now available.  I'm going to delete the
>> downloads from the bitbucket page because bitbucket doesn't give a
>> good way of automating uploads or organizing them in directories.
>
> Have you considered creating a static website on Bitbucket?  I'm going
> to try it myself soon, and it seems easy enough:
>
>   https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+bitbucket
>
> It's all version-controlled, too.  You can apparently upload arbitrary
> files, but I haven't tested it yet.
>
>> There's also a new set of tarballs (108.00.02) with support for OCaml 4.0.
>
> Is this related to your submissions patch queue?  Just wondering,
> because there has been no activity on Bitbucket for a while.

This was more of a quick hack.  We're now doing an internal CR cycle
which has stuff pulled in from the patch queue, which we hope to put
out again soon.  Getting this process to work smoothly has been
something of a chore, but I'm hoping it will be in good shape soon.

y

> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From yminsky at janestreet.com  Thu Jul 12 19:13:59 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 12 Jul 2012 14:13:59 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
	<CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
Message-ID: <CACLX4jRWP_T3Qa4DwgPW7VZU6EPaTmCUKOcnbjjEXO+ZRauGdQ@mail.gmail.com>


And the static web-page seems like a nice idea.  For it to be a
reasonable URL, we'll need to create a "team" account with a name like
"ocamlcoresuite" or somesuch.  Otherwise, it looks like we'd end up
with yminsky.bitbucket.org, which is no good...

y

On Thu, Jul 12, 2012 at 2:07 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Thu, Jul 12, 2012 at 1:39 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> A new downloads page is now available.  I'm going to delete the
>> downloads from the bitbucket page because bitbucket doesn't give a
>> good way of automating uploads or organizing them in directories.
>
> Have you considered creating a static website on Bitbucket?  I'm going
> to try it myself soon, and it seems easy enough:
>
>   https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+bitbucket
>
> It's all version-controlled, too.  You can apparently upload arbitrary
> files, but I haven't tested it yet.
>
>> There's also a new set of tarballs (108.00.02) with support for OCaml 4.0.
>
> Is this related to your submissions patch queue?  Just wondering,
> because there has been no activity on Bitbucket for a while.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From markus.mottl at gmail.com  Thu Jul 12 19:21:18 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 12 Jul 2012 14:21:18 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CACLX4jSVrAwRRN7RZpkQAv78PXB0ik58AVpbgJPSgAGBYTdJ9g@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
	<CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
	<CACLX4jSVrAwRRN7RZpkQAv78PXB0ik58AVpbgJPSgAGBYTdJ9g@mail.gmail.com>
Message-ID: <CAP_800o5aced2bC8Mfm6=-Apy+7Sb-CFK=MtN2gorcPRUUJiXg@mail.gmail.com>


On Thu, Jul 12, 2012 at 2:11 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> On Thu, Jul 12, 2012 at 2:07 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
>> Is this related to your submissions patch queue?  Just wondering,
>> because there has been no activity on Bitbucket for a while.
>
> This was more of a quick hack.  We're now doing an internal CR cycle
> which has stuff pulled in from the patch queue, which we hope to put
> out again soon.  Getting this process to work smoothly has been
> something of a chore, but I'm hoping it will be in good shape soon.

Since the patch queue approach is still new, it may be helpful to get
feedback on what works well for you, e.g. on how to properly structure
patches such that your work is minimized (= acceptance rate
maximized).

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From markus.mottl at gmail.com  Thu Jul 12 19:25:26 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 12 Jul 2012 14:25:26 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CACLX4jRWP_T3Qa4DwgPW7VZU6EPaTmCUKOcnbjjEXO+ZRauGdQ@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
	<CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
	<CACLX4jRWP_T3Qa4DwgPW7VZU6EPaTmCUKOcnbjjEXO+ZRauGdQ@mail.gmail.com>
Message-ID: <CAP_800qCwakq9ReB9hfAbinoqpU2kHek8Rznqh2S2rFBKGc3YQ@mail.gmail.com>


On Thu, Jul 12, 2012 at 2:13 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> And the static web-page seems like a nice idea.  For it to be a
> reasonable URL, we'll need to create a "team" account with a name like
> "ocamlcoresuite" or somesuch.  Otherwise, it looks like we'd end up
> with yminsky.bitbucket.org, which is no good...

Hm, yeah, the login name requirement is somewhat annoying.  It's
probably not too hard to just create a new account with a more generic
name.  The Oasis files also refer to https://bitbucket.org/yminsky/...
as package homepage, which could then be improved, too.

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From francois.berenger.working at gmail.com  Fri Jul 13 02:30:06 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Thu, 12 Jul 2012 18:30:06 -0700 (PDT)
Subject: any logger in core?
Message-ID: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com>

Hi,

Is there a logger in core or recommended to use with core?

I used one which is derived from batteries logger but I'm
not so happy with it (I need to preprocess files to expand
the log directives).

Thanks,
F.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120712/ef5e1ef3/attachment.html>

From sylvain at le-gall.net  Thu Jul 12 18:59:08 2012
From: sylvain at le-gall.net (Sylvain Le Gall)
Date: Thu, 12 Jul 2012 19:59:08 +0200
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
Message-ID: <CAOCAUGO_430HmbRMVJ=iUCcUzpM-W7RjJ7_sMUSF0nGDED-73w@mail.gmail.com>


Hello,

2012/7/12 Yaron Minsky <yminsky at janestreet.com>:
> A new downloads page is now available.  I'm going to delete the
> downloads from the bitbucket page because bitbucket doesn't give a
> good way of automating uploads or organizing them in directories.
>
> There's also a new set of tarballs (108.00.02) with support for OCaml 4.0.

If you are interested it's possible to upload automatically to
forge.ocamlcore.org. I have the (python) script to do that. Not sure
what you want to do with directories and if the forge will fit you
need. You can of course host just the files there and keep your hg
repo on bitbucket (which is way nicer than what we can offer with our
simple mercurial webserver).

Ping me if you want the script.

Cheers
Sylvain


From yminsky at janestreet.com  Fri Jul 13 04:10:52 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 12 Jul 2012 23:10:52 -0400
Subject: any logger in core?
In-Reply-To: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com>
References: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com>
Message-ID: <CACLX4jQt56bfewfQVxS7X5qL-bO-nLn=WD=rzMU8hsheLhb0xA@mail.gmail.com>


There's a logging module in Async that we use internally, that will be
added to the public release in the next release, which should be
within a month.

y

On Thu, Jul 12, 2012 at 9:30 PM, Francois Berenger
<francois.berenger.working at gmail.com> wrote:
> Hi,
>
> Is there a logger in core or recommended to use with core?
>
> I used one which is derived from batteries logger but I'm
> not so happy with it (I need to preprocess files to expand
> the log directives).
>
> Thanks,
> F.
>


From yminsky at janestreet.com  Fri Jul 13 11:44:44 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 13 Jul 2012 06:44:44 -0400
Subject: any logger in core?
In-Reply-To: <117B162E-CB0D-4901-BB27-327AD6C654C7@recoil.org>
References: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com>
	<CACLX4jQt56bfewfQVxS7X5qL-bO-nLn=WD=rzMU8hsheLhb0xA@mail.gmail.com>
	<117B162E-CB0D-4901-BB27-327AD6C654C7@recoil.org>
Message-ID: <CACLX4jTYb3ZP4RP+zFcr63=jZHDaLjaOmjjtM6k60H6WCDKTeQ@mail.gmail.com>


Not as a camlp4 extension, and I'm not sure it's worthwhile in most
cases.  Usually, if we want the ability to debug in our program, we
want it as a runtime option in production, not as a compile-time
option.  So when we have code that generates errors that we may not
use, we use a type called Error.t, which is a lazy datastructure.
Thus, we can call:

Error.create "Blorb wasn't found among the list of blonks" (blorb,blonks)
   <:sexp_of<Blorb.t * Blonk.t list>>

which runs in just a handful of nanos, and creates the Error.  Only
when you actually serialize to a string do you pay the full conversion
costs.  In our world, many errors are generated that aren't serialized
(they're serialized on demand when someone queries the system to look
at what's gone wrong), and this covers most of the horrible logging
cost.

y

On Fri, Jul 13, 2012 at 5:11 AM, Anil Madhavapeddy <anil at recoil.org> wrote:
> Does it have a camlp4 facility to remove some logging statements at
> compile-time (e.g. expensive debug prints), out of interest?  This is
> a pretty neat feature of Pa_lwt_log.
>
> -anil
>
> On 13 Jul 2012, at 04:10, Yaron Minsky wrote:
>
>> There's a logging module in Async that we use internally, that will be
>> added to the public release in the next release, which should be
>> within a month.
>>
>> y
>>
>> On Thu, Jul 12, 2012 at 9:30 PM, Francois Berenger
>> <francois.berenger.working at gmail.com> wrote:
>>> Hi,
>>>
>>> Is there a logger in core or recommended to use with core?
>>>
>>> I used one which is derived from batteries logger but I'm
>>> not so happy with it (I need to preprocess files to expand
>>> the log directives).
>>>
>>> Thanks,
>>> F.
>>>
>>
>


From francois.berenger.working at gmail.com  Fri Jul 13 01:47:03 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Fri, 13 Jul 2012 09:47:03 +0900
Subject: [Caml-list] library/framework needed for distributed programming
 in OCaml
In-Reply-To: <CACLX4jTyD9wtxxyxTEMt4FGzH6-3aDYjDEmr-Uf74gSZf6zwUA@mail.gmail.com>
References: <f55ae3a1-1bdc-4dee-a073-abc9a260d428@googlegroups.com>
	<CACLX4jTyD9wtxxyxTEMt4FGzH6-3aDYjDEmr-Uf74gSZf6zwUA@mail.gmail.com>
Message-ID: <CAMQaOgNFmxc6YFS3RuiX_ZS5pwQBRjuho6BvAkvpaEgsL-MGNg@mail.gmail.com>


On Thu, Jul 12, 2012 at 8:26 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> One library that you might find of use is Async's RPC library, which
> allows you to specify simple RPC-like protocols, where the messages
> are all handled by bin-prot.
>
> There is no framework-level compression, however.  That needs to be
> done at the application level.

Thanks! I'll have a look at this too then.

> y
>
> On Thu, Jul 12, 2012 at 4:48 AM, Francois Berenger
> <francois.berenger.working at gmail.com> wrote:
>> -------- Original Message --------
>> Subject:        Re: [Caml-list] library/framework needed
>> for distributed programming in OCaml
>> Date:   Thu, 12 Jul 2012 17:46:06 +0900
>> From:   Francois Berenger
>>
>> Hello,
>>
>> For the moment, the best answer I got privately in my mailbox
>> is to combine Janestreet's bin_prot and async libraries
>> or Martin Jambon's biniou with Lwt.
>>
>> I kind of like what I read on async and bin_prot.
>>
>> On 07/11/2012 07:21 PM, Lauri Alanko wrote:
>>  > Hi.
>>  >
>>  > I also had need of such a library when I started working on a
>>  > distributed programming project, but as I couldn't find anything that
>>  > fulfilled my requirements, I wrote my own.
>>  >
>>  > The library is Lwt-based, and provides pretty straightforward remotely
>>  > callable procedures:
>>  >
>>  > type ('a, 'r) handle
>>  > val ($) : ('a, 'r) handle -> 'a -> 'r Lwt.t
>>  > val publish : ('a -> 'r Lwt.t) -> ('a, 'r) handle
>>  >
>>  > The library is designed to work in a firewalled environment: firewalled
>>  > nodes can join the distributed network by connecting to any accessible
>>  > host of that network with an open listener. All messages between nodes
>>  > are routed through the network.
>>  >
>>  > type connection
>>  > val connect :
>>  > ?host:string -> ?port:int -> unit -> connection Lwt.t
>>  > val listen :
>>  > ?port:int -> unit -> unit Lwt.t
>>  >
>>  > Initial values are obtained with "roots". A root (usually a handle, or a
>>  > record or first-class module containing handles) is keyed to a string,
>>  > and once set by a node, it can be discovered by any node in the network:
>>  >
>>  > val get_root : string -> 'a Lwt.t
>>  > val set_root : string -> 'a -> unit Lwt.t
>>  >
>>  > This is the only unsafe part of the interface: the getter and setter
>>  > _must_ agree on the type of the root or all hell breaks loose.
>>  >
>>  > I haven't published the library yet, since I have wanted to feel free to
>>  > modify it as required by my application, but if you are interested, and
>>  > cannot find a more mature solution, I'd be happy to provide it for your
>>  > inspection.
>>
>> If you publish your code somewhere (github is really nice), I would
>> be very happy to have a look at it.
>>
>> Thanks a lot,
>> F.


From anil at recoil.org  Fri Jul 13 10:11:44 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 13 Jul 2012 10:11:44 +0100
Subject: any logger in core?
In-Reply-To: <CACLX4jQt56bfewfQVxS7X5qL-bO-nLn=WD=rzMU8hsheLhb0xA@mail.gmail.com>
References: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com> <CACLX4jQt56bfewfQVxS7X5qL-bO-nLn=WD=rzMU8hsheLhb0xA@mail.gmail.com>
Message-ID: <117B162E-CB0D-4901-BB27-327AD6C654C7@recoil.org>


Does it have a camlp4 facility to remove some logging statements at 
compile-time (e.g. expensive debug prints), out of interest?  This is
a pretty neat feature of Pa_lwt_log.

-anil

On 13 Jul 2012, at 04:10, Yaron Minsky wrote:

> There's a logging module in Async that we use internally, that will be
> added to the public release in the next release, which should be
> within a month.
> 
> y
> 
> On Thu, Jul 12, 2012 at 9:30 PM, Francois Berenger
> <francois.berenger.working at gmail.com> wrote:
>> Hi,
>> 
>> Is there a logger in core or recommended to use with core?
>> 
>> I used one which is derived from batteries logger but I'm
>> not so happy with it (I need to preprocess files to expand
>> the log directives).
>> 
>> Thanks,
>> F.
>> 
> 



From anil at recoil.org  Sat Jul 14 17:15:18 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 14 Jul 2012 17:15:18 +0100
Subject: any logger in core?
In-Reply-To: <CACLX4jTYb3ZP4RP+zFcr63=jZHDaLjaOmjjtM6k60H6WCDKTeQ@mail.gmail.com>
References: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com>
 <CACLX4jQt56bfewfQVxS7X5qL-bO-nLn=WD=rzMU8hsheLhb0xA@mail.gmail.com>
 <117B162E-CB0D-4901-BB27-327AD6C654C7@recoil.org>
 <CACLX4jTYb3ZP4RP+zFcr63=jZHDaLjaOmjjtM6k60H6WCDKTeQ@mail.gmail.com>
Message-ID: <20120714161518.GJ14582@dark.recoil.org>


This is really nice, as the caller could render the Error in a more
structured way (e.g. in a js_of_ocaml-driven page).  The Pa_lwt_log is a
simple extension that just converts a "log" entry into a "if level then
log" equivalent.

-anil

On Fri, Jul 13, 2012 at 06:44:44AM -0400, Yaron Minsky wrote:
> Not as a camlp4 extension, and I'm not sure it's worthwhile in most
> cases.  Usually, if we want the ability to debug in our program, we
> want it as a runtime option in production, not as a compile-time
> option.  So when we have code that generates errors that we may not
> use, we use a type called Error.t, which is a lazy datastructure.
> Thus, we can call:
> 
> Error.create "Blorb wasn't found among the list of blonks" (blorb,blonks)
>    <:sexp_of<Blorb.t * Blonk.t list>>
> 
> which runs in just a handful of nanos, and creates the Error.  Only
> when you actually serialize to a string do you pay the full conversion
> costs.  In our world, many errors are generated that aren't serialized
> (they're serialized on demand when someone queries the system to look
> at what's gone wrong), and this covers most of the horrible logging
> cost.
> 
> y
> 
> On Fri, Jul 13, 2012 at 5:11 AM, Anil Madhavapeddy <anil at recoil.org> wrote:
> > Does it have a camlp4 facility to remove some logging statements at
> > compile-time (e.g. expensive debug prints), out of interest?  This is
> > a pretty neat feature of Pa_lwt_log.
> >
> > -anil
> >
> > On 13 Jul 2012, at 04:10, Yaron Minsky wrote:
> >
> >> There's a logging module in Async that we use internally, that will be
> >> added to the public release in the next release, which should be
> >> within a month.
> >>
> >> y
> >>
> >> On Thu, Jul 12, 2012 at 9:30 PM, Francois Berenger
> >> <francois.berenger.working at gmail.com> wrote:
> >>> Hi,
> >>>
> >>> Is there a logger in core or recommended to use with core?
> >>>
> >>> I used one which is derived from batteries logger but I'm
> >>> not so happy with it (I need to preprocess files to expand
> >>> the log directives).
> >>>
> >>> Thanks,
> >>> F.
> >>>


From markus.mottl at gmail.com  Sun Jul 15 03:56:22 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sat, 14 Jul 2012 22:56:22 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CACLX4jRWP_T3Qa4DwgPW7VZU6EPaTmCUKOcnbjjEXO+ZRauGdQ@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
	<CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
	<CACLX4jRWP_T3Qa4DwgPW7VZU6EPaTmCUKOcnbjjEXO+ZRauGdQ@mail.gmail.com>
Message-ID: <CAP_800q-Vf1905CqOG1K=HCp_Bpkhkpiptq6W+w-Q23c8oE5+w@mail.gmail.com>


On Thu, Jul 12, 2012 at 2:13 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> And the static web-page seems like a nice idea.  For it to be a
> reasonable URL, we'll need to create a "team" account with a name like
> "ocamlcoresuite" or somesuch.  Otherwise, it looks like we'd end up
> with yminsky.bitbucket.org, which is no good...

Just saw this, which might address your "reasonable URL" problem:

  https://confluence.atlassian.com/display/BITBUCKET/Using+your+Own+bitbucket+Domain+Name

I won't need the above DNS approach for my purposes, but I've tested
their static web server now and uploaded API-documentation for all
projects I maintain (including type_conv, bin_prot, and sexplib):
http://mmottl.bitbucket.org

Those Bitbucket guys are really making life too easy...

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From seanmcl at gmail.com  Mon Jul 16 14:45:21 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Mon, 16 Jul 2012 09:45:21 -0400
Subject: installation feature-request
Message-ID: <CAO4dZbemz7AaCKNsuE+MTiOhywyCK7JcBuGVZ29RoHg6Q42jZQ@mail.gmail.com>


Hi,

I think it would be nice if

ocaml-core/build-and-install

would fail immediately if you don't have required libraries installed.
 Now it gets quite a ways and then tells you to install res, ounit,
etc.
Then re-running build-and-install takes a significant time before it
gets back to where it failed.

Best,

Sean


From seanmcl at gmail.com  Mon Jul 16 14:47:27 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Mon, 16 Jul 2012 09:47:27 -0400
Subject: installation feature-request
In-Reply-To: <CAO4dZbemz7AaCKNsuE+MTiOhywyCK7JcBuGVZ29RoHg6Q42jZQ@mail.gmail.com>
References: <CAO4dZbemz7AaCKNsuE+MTiOhywyCK7JcBuGVZ29RoHg6Q42jZQ@mail.gmail.com>
Message-ID: <CAO4dZbe9_oCUwFPT2TaLCjKzmY9pukmygrMp7sJf+-5B=mc0Cw@mail.gmail.com>


Note that this request is for lazy people like me that don't read Readme.txt :)

On Mon, Jul 16, 2012 at 9:45 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Hi,
>
> I think it would be nice if
>
> ocaml-core/build-and-install
>
> would fail immediately if you don't have required libraries installed.
>  Now it gets quite a ways and then tells you to install res, ounit,
> etc.
> Then re-running build-and-install takes a significant time before it
> gets back to where it failed.
>
> Best,
>
> Sean


From seanmcl at gmail.com  Mon Jul 16 15:47:16 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Mon, 16 Jul 2012 10:47:16 -0400
Subject: Shell.mkdir on OSX
Message-ID: <CAO4dZbdKcg3vjs35GJUsg85Mhm9xf-Q+h7J4xBh476fieOWH9Q@mail.gmail.com>


Hi,

Shell.mkdir ~perm:0o777 "foo"

runs

/bin/mkdir --mode 777 foo

--mode is not an option on OSX.  -m works on both.  Should we

1) change the flag (which could lead to many such changes)
2) do conditional directives as in other os-dependent modules
3) Assume Shell only works on Linux and write our own OSX Shell module?

Sean


From seanmcl at gmail.com  Mon Jul 16 15:49:45 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Mon, 16 Jul 2012 10:49:45 -0400
Subject: Shell.mkdir on OSX
In-Reply-To: <CAO4dZbdKcg3vjs35GJUsg85Mhm9xf-Q+h7J4xBh476fieOWH9Q@mail.gmail.com>
References: <CAO4dZbdKcg3vjs35GJUsg85Mhm9xf-Q+h7J4xBh476fieOWH9Q@mail.gmail.com>
Message-ID: <CAO4dZbeW9YovWbon7Re3Ei4G+x=xtAii-uqHydHhCEfOsf=0mA@mail.gmail.com>


Another option is to use gmkdir on OSX, from the gnu-coreutils
package, but that's another conditional.

On Mon, Jul 16, 2012 at 10:47 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Hi,
>
> Shell.mkdir ~perm:0o777 "foo"
>
> runs
>
> /bin/mkdir --mode 777 foo
>
> --mode is not an option on OSX.  -m works on both.  Should we
>
> 1) change the flag (which could lead to many such changes)
> 2) do conditional directives as in other os-dependent modules
> 3) Assume Shell only works on Linux and write our own OSX Shell module?
>
> Sean


From yury.sulsky at gmail.com  Mon Jul 16 16:35:07 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Mon, 16 Jul 2012 11:35:07 -0400
Subject: installation feature-request
In-Reply-To: <CAO4dZbe9_oCUwFPT2TaLCjKzmY9pukmygrMp7sJf+-5B=mc0Cw@mail.gmail.com>
References: <CAO4dZbemz7AaCKNsuE+MTiOhywyCK7JcBuGVZ29RoHg6Q42jZQ@mail.gmail.com>
	<CAO4dZbe9_oCUwFPT2TaLCjKzmY9pukmygrMp7sJf+-5B=mc0Cw@mail.gmail.com>
Message-ID: <CAEDxudztW+o+aSNid5PWztErAYm6JLTD91cO+ef6=8YA_GsGiQ@mail.gmail.com>


Good idea, Sean! I'll add the checks to the script.

On Mon, Jul 16, 2012 at 9:47 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Note that this request is for lazy people like me that don't read Readme.txt :)
>
> On Mon, Jul 16, 2012 at 9:45 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
>> Hi,
>>
>> I think it would be nice if
>>
>> ocaml-core/build-and-install
>>
>> would fail immediately if you don't have required libraries installed.
>>  Now it gets quite a ways and then tells you to install res, ounit,
>> etc.
>> Then re-running build-and-install takes a significant time before it
>> gets back to where it failed.
>>
>> Best,
>>
>> Sean


From yminsky at janestreet.com  Mon Jul 16 22:54:57 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 16 Jul 2012 22:54:57 +0100
Subject: Shell.mkdir on OSX
In-Reply-To: <CAO4dZbeW9YovWbon7Re3Ei4G+x=xtAii-uqHydHhCEfOsf=0mA@mail.gmail.com>
References: <CAO4dZbdKcg3vjs35GJUsg85Mhm9xf-Q+h7J4xBh476fieOWH9Q@mail.gmail.com>
	<CAO4dZbeW9YovWbon7Re3Ei4G+x=xtAii-uqHydHhCEfOsf=0mA@mail.gmail.com>
Message-ID: <CACLX4jS9wwSOEGmw9TqGRrJ_Y=CvKAUG1Qh3H2XgW+X5YWKgDA@mail.gmail.com>


-m seems like the better solution.  I'll get a quick patch to that
effect into our current tree.

y

On Mon, Jul 16, 2012 at 3:49 PM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Another option is to use gmkdir on OSX, from the gnu-coreutils
> package, but that's another conditional.
>
> On Mon, Jul 16, 2012 at 10:47 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
>> Hi,
>>
>> Shell.mkdir ~perm:0o777 "foo"
>>
>> runs
>>
>> /bin/mkdir --mode 777 foo
>>
>> --mode is not an option on OSX.  -m works on both.  Should we
>>
>> 1) change the flag (which could lead to many such changes)
>> 2) do conditional directives as in other os-dependent modules
>> 3) Assume Shell only works on Linux and write our own OSX Shell module?
>>
>> Sean


From francois.berenger.working at gmail.com  Tue Jul 17 03:41:52 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Tue, 17 Jul 2012 11:41:52 +0900
Subject: installation feature-request
In-Reply-To: <CAO4dZbe9_oCUwFPT2TaLCjKzmY9pukmygrMp7sJf+-5B=mc0Cw@mail.gmail.com>
References: <CAO4dZbemz7AaCKNsuE+MTiOhywyCK7JcBuGVZ29RoHg6Q42jZQ@mail.gmail.com>
	<CAO4dZbe9_oCUwFPT2TaLCjKzmY9pukmygrMp7sJf+-5B=mc0Cw@mail.gmail.com>
Message-ID: <CAMQaOgP2fNj0EObDmCQtH8bPaOVK1qp=3kiJauBbTBYbee5ofQ@mail.gmail.com>


On Mon, Jul 16, 2012 at 10:47 PM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Note that this request is for lazy people like me that don't read Readme.txt :)

But, if it can be programmed instead of being in a text file, that benefits
everybody so your remark is pertinent.

> On Mon, Jul 16, 2012 at 9:45 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
>> Hi,
>>
>> I think it would be nice if
>>
>> ocaml-core/build-and-install
>>
>> would fail immediately if you don't have required libraries installed.
>>  Now it gets quite a ways and then tells you to install res, ounit,
>> etc.
>> Then re-running build-and-install takes a significant time before it
>> gets back to where it failed.
>>
>> Best,
>>
>> Sean


From francois.berenger.working at gmail.com  Wed Jul 18 05:15:38 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Tue, 17 Jul 2012 21:15:38 -0700 (PDT)
Subject: distributed map function on lists using async and bin_prot
Message-ID: <a762565e-39fe-493e-b7f4-5e437ecfe4b3@googlegroups.com>

Hello,

As I am a great fan of the parmap library 
(https://github.com/rdicosmo/parmap),
in order to get me started with async and bin_prot, I'd like to
try writing a function to distribute computations (List.map).

Does it sounds like a feasible thing?

I'm open to pointers to inspiring source code.

The final goal would be to be able to combine
distributed computations with parallel ones.
Lilke with the MPI and OpenMP couple in the C world.

Thanks a lot,
F.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120717/27043c2b/attachment.html>

From 5764c029b688c1c0d24a2e97cd764f at gmail.com  Wed Jul 18 10:39:37 2012
From: 5764c029b688c1c0d24a2e97cd764f at gmail.com (Matej Kosik)
Date: Wed, 18 Jul 2012 10:39:37 +0100
Subject: String.to_list
Message-ID: <50068459.1070504@gmail.com>


Hi,

I am somewhat puzzled by the fact that when I use Core, in addition to:

	String.to_list_rev

, which is mentioned in the documentation, I can also call

	String.to_list

. Where did that function come from? I cannot find it in StringLabels
module (in the standard library). I could live with this but I would
rather like to know why is that. :-)

Thanks in advance for helping me.


From dhouse at janestreet.com  Wed Jul 18 10:43:37 2012
From: dhouse at janestreet.com (David House)
Date: Wed, 18 Jul 2012 10:43:37 +0100
Subject: String.to_list
In-Reply-To: <50068459.1070504@gmail.com>
References: <50068459.1070504@gmail.com>
Message-ID: <CAK=fH+hJ2THpsCTd_HoR84T2avyNMOyj6YOhaE_ebzUPi1xccg@mail.gmail.com>


The [to_list] function comes from the Container interface. So if
you're wondering why you can't see it in core_string.mli, it's because
at the top of that file we say "include Container.S0". If you're
wondering why it's not in the OCamlDocs documentation, the reason is
similar: you should be able to click on the Container link near the
top of the page to see that signature. (That being said, OCamlDocs
doesn't cope too well with webs of includes and functors, so I
wouldn't be totally surprised if this didn't work completely well.)

On Wed, Jul 18, 2012 at 10:39 AM, Matej Kosik
<5764c029b688c1c0d24a2e97cd764f at gmail.com> wrote:
> Hi,
>
> I am somewhat puzzled by the fact that when I use Core, in addition to:
>
>         String.to_list_rev
>
> , which is mentioned in the documentation, I can also call
>
>         String.to_list
>
> . Where did that function come from? I cannot find it in StringLabels
> module (in the standard library). I could live with this but I would
> rather like to know why is that. :-)
>
> Thanks in advance for helping me.


From orbitz at gmail.com  Wed Jul 25 00:56:25 2012
From: orbitz at gmail.com (orbitz)
Date: Wed, 25 Jul 2012 01:56:25 +0200
Subject: Running external processes in Async?
Message-ID: <CAAHaHt=8J4UsTL9u1Fi35BR8HXq-Dm1=Kn7m2v_Mb0vtYcaxDg@mail.gmail.com>

Hello! I am trying to run external programs without blocking. Am I just
missing the module that defines that for I am not seeing anything?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120725/b574d675/attachment.html>

From dhouse at janestreet.com  Wed Jul 25 09:10:43 2012
From: dhouse at janestreet.com (David House)
Date: Wed, 25 Jul 2012 09:10:43 +0100
Subject: Running external processes in Async?
In-Reply-To: <CAAHaHt=8J4UsTL9u1Fi35BR8HXq-Dm1=Kn7m2v_Mb0vtYcaxDg@mail.gmail.com>
References: <CAAHaHt=8J4UsTL9u1Fi35BR8HXq-Dm1=Kn7m2v_Mb0vtYcaxDg@mail.gmail.com>
Message-ID: <CAK=fH+gCCMQTLwH7ifJczb6s=UTrCLwUTav495awhirzavAVQA@mail.gmail.com>


The general way of calling blocking things from inside async is to use
the In_thread module. In particular, here you should be able to do
something like:

  In_thread.run (fun () ->
    Core.Unix.create_process ~prog:"/usr/bin/ssh" ~args:["my-host";
"ls"; "/tmp"])

On Wed, Jul 25, 2012 at 12:56 AM, orbitz <orbitz at gmail.com> wrote:
> Hello! I am trying to run external programs without blocking. Am I just
> missing the module that defines that for I am not seeing anything?
>
> Thanks.
>


From 5764c029b688c1c0d24a2e97cd764f at gmail.com  Fri Jul 27 15:54:14 2012
From: 5764c029b688c1c0d24a2e97cd764f at gmail.com (Matej Kosik)
Date: Fri, 27 Jul 2012 15:54:14 +0100
Subject: String.sexpable
Message-ID: <5012AB96.3080906@gmail.com>


Hello,

I have used library on Debian, where it is easily installable.

I would like to adjust those programs so that I can compile and run them
on CentOS.

There, I have to use GODI.
I have managed to compile and install Core from source.
(specificly:
 https://ocaml.janestreet.com/ocaml-core/108.00.01/core-suite-108.00.01.tar.gz
)

Is there any documentation on the web matching this particular Core version?
If not, is there a way how I can rebuild it and get something like this:

	http://www.janestreet.com/ocaml/janestreet-ocamldocs/core/index.html

but something fresher.

Thank you in advance.


From yury.sulsky at gmail.com  Mon Jul 30 13:11:39 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Mon, 30 Jul 2012 08:11:39 -0400
Subject: String.sexpable
In-Reply-To: <CAMu2m2+rDrSpDGkkhWWUF=ZS45bzNc9Xw_pSz1Yy98NkUuXoTw@mail.gmail.com>
References: <5012AB96.3080906@gmail.com>
	<CAMu2m2+rDrSpDGkkhWWUF=ZS45bzNc9Xw_pSz1Yy98NkUuXoTw@mail.gmail.com>
Message-ID: <CAEDxudy6y0yHi93zZVxBdzcB10d1qeAO-6qpWR9Nyn=iHz2Nqw@mail.gmail.com>

Hi Ashish,

I think Matej just wants some ocamldoc-generated documentation available to
browse online. We're going to post it today. Sorry for not doing that
sooner!

Yury
On Jul 30, 2012 6:35 AM, "Ashish Agarwal" <agarwal1975 at gmail.com> wrote:

> Can you explain more specifically what trouble you are having. I'm not
> sure if you are having a problem compiling Core, a program that uses Core,
> Core's documentation, all of these, or something else. You also mention
> sexpable in the subject line but don't ask a question about it.
>
> On Friday, July 27, 2012, Matej Kosik <
> 5764c029b688c1c0d24a2e97cd764f at gmail.com> wrote:
>
>> Hello,
>>
>> I have used library on Debian, where it is easily installable.
>>
>> I would like to adjust those programs so that I can compile and run them
>> on CentOS.
>>
>> There, I have to use GODI.
>> I have managed to compile and install Core from source.
>> (specificly:
>>
>> https://ocaml.janestreet.com/ocaml-core/108.00.01/core-suite-108.00.01.tar.gz
>> )
>>
>> Is there any documentation on the web matching this particular Core
>> version?
>> If not, is there a way how I can rebuild it and get something like this:
>>
>>
>> http://www.janestreet.com/ocaml/janestreet-ocamldocs/core/index.html
>>
>> but something fresher.
>>
>> Thank you in advance.
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120730/adc5f255/attachment.html>

From agarwal1975 at gmail.com  Mon Jul 30 11:35:11 2012
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Mon, 30 Jul 2012 11:35:11 +0100
Subject: String.sexpable
In-Reply-To: <5012AB96.3080906@gmail.com>
References: <5012AB96.3080906@gmail.com>
Message-ID: <CAMu2m2+rDrSpDGkkhWWUF=ZS45bzNc9Xw_pSz1Yy98NkUuXoTw@mail.gmail.com>

Can you explain more specifically what trouble you are having. I'm not sure
if you are having a problem compiling Core, a program that uses Core,
Core's documentation, all of these, or something else. You also mention
sexpable in the subject line but don't ask a question about it.

On Friday, July 27, 2012, Matej Kosik <
5764c029b688c1c0d24a2e97cd764f at gmail.com> wrote:

> Hello,
>
> I have used library on Debian, where it is easily installable.
>
> I would like to adjust those programs so that I can compile and run them
> on CentOS.
>
> There, I have to use GODI.
> I have managed to compile and install Core from source.
> (specificly:
>
> https://ocaml.janestreet.com/ocaml-core/108.00.01/core-suite-108.00.01.tar.gz
> )
>
> Is there any documentation on the web matching this particular Core
> version?
> If not, is there a way how I can rebuild it and get something like this:
>
>
> http://www.janestreet.com/ocaml/janestreet-ocamldocs/core/index.html
>
> but something fresher.
>
> Thank you in advance.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120730/c7d35f4c/attachment.html>

From 5764c029b688c1c0d24a2e97cd764f at gmail.com  Mon Jul 30 16:14:23 2012
From: 5764c029b688c1c0d24a2e97cd764f at gmail.com (Matej Kosik)
Date: Mon, 30 Jul 2012 16:14:23 +0100
Subject: String.sexpable
In-Reply-To: <CAEDxudy6y0yHi93zZVxBdzcB10d1qeAO-6qpWR9Nyn=iHz2Nqw@mail.gmail.com>
References: <5012AB96.3080906@gmail.com> <CAMu2m2+rDrSpDGkkhWWUF=ZS45bzNc9Xw_pSz1Yy98NkUuXoTw@mail.gmail.com> <CAEDxudy6y0yHi93zZVxBdzcB10d1qeAO-6qpWR9Nyn=iHz2Nqw@mail.gmail.com>
Message-ID: <5016A4CF.3070906@gmail.com>


On 30/07/12 13:11, Yury Sulsky wrote:
> Hi Ashish,
> 
> I think Matej just wants some ocamldoc-generated documentation available
> to browse online. We're going to post it today. Sorry for not doing that
> sooner!

Actually, if I were not too afraid, I would peer inside deeper in the
source-code and consequently found out, that the documentation could be
easily generated.

So the original question was quite dumb; as usual :-)
But sometimes one has to ask in order to figure out the answer himself.


From yury.sulsky at gmail.com  Tue Jul 31 00:16:36 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Mon, 30 Jul 2012 19:16:36 -0400
Subject: String.sexpable
In-Reply-To: <5016A4CF.3070906@gmail.com>
References: <5012AB96.3080906@gmail.com>
	<CAMu2m2+rDrSpDGkkhWWUF=ZS45bzNc9Xw_pSz1Yy98NkUuXoTw@mail.gmail.com>
	<CAEDxudy6y0yHi93zZVxBdzcB10d1qeAO-6qpWR9Nyn=iHz2Nqw@mail.gmail.com>
	<5016A4CF.3070906@gmail.com>
Message-ID: <CAEDxudzdH1KbVYxJcfE_Sh40b44cozcAre5PH0sU-gwBOgzRqg@mail.gmail.com>

Hi Matej,

It's true that you can generate documentation yourself. But Here it is in
browseable form online:
https://ocaml.janestreet.com/ocaml-core/108.00.02/doc/

It's far from perfect, but  we'll improve it in the next release.

On Mon, Jul 30, 2012 at 11:14 AM, Matej Kosik <
5764c029b688c1c0d24a2e97cd764f at gmail.com> wrote:

> On 30/07/12 13:11, Yury Sulsky wrote:
> > Hi Ashish,
> >
> > I think Matej just wants some ocamldoc-generated documentation available
> > to browse online. We're going to post it today. Sorry for not doing that
> > sooner!
>
> Actually, if I were not too afraid, I would peer inside deeper in the
> source-code and consequently found out, that the documentation could be
> easily generated.
>
> So the original question was quite dumb; as usual :-)
> But sometimes one has to ask in order to figure out the answer himself.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120730/6f36e90c/attachment.html>

From sylvain at le-gall.net  Mon Jul  2 10:18:57 2012
From: sylvain at le-gall.net (Sylvain Le Gall)
Date: Mon, 2 Jul 2012 11:18:57 +0200
Subject: [was: [Caml-list] [ANN] oasis v0.3.0: Architecture for building OCaml
 libraries and applications] Pb with type_conv
Message-ID: <CAOCAUGNz5cTXk1dRqKVUr_-ky_kOBF0TswQhC059+UG3rwNCKQ@mail.gmail.com>


Hi,

2012/7/2 Daniel B?nzli <daniel.buenzli at erratique.ch>:
> Hello,
>
> Trying to install with odb.ml and ocaml 4.00.0+beta2, with
>
> ocaml odb.ml --unstable oasis
>
> But typeconv fails with [1]. Is there a magic invocation to override that warnings are errors flag ?
>

I think Jane Street Core team added the "-w @Aemr-28" flags. They did
it in myocamlbuild.ml section not managed by OASIS. The only solution
is to change by hand.

I CC the core mailing list which will provide you more information
about this issue (I have the same kind of issue because of "@" on
Windows).

> Thanks,
>
> Daniel
>
> [1]
>
> Configuration:
> ocamlfind: ........................................... /usr/local/bin/ocamlfind
> ocamlc: .............................................. /usr/local/bin/ocamlc.opt
> ocamlopt: ............................................ /usr/local/bin/ocamlopt.opt
> ocamlbuild: .......................................... /usr/local/bin/ocamlbuild
> Package name: ........................................ type_conv
> Package version: ..................................... 108.00.01
> os_type: ............................................. Unix
> system: .............................................. macosx
> architecture: ........................................ amd64
> ccomp_type: .......................................... cc
> ocaml_version: ....................................... 4.00.0
> standard_library_default: ............................ /usr/local/lib/ocaml
> standard_library: .................................... /usr/local/lib/ocaml
> standard_runtime: .................................... /usr/local/bin/ocamlrun
> bytecomp_c_compiler: ................................. gcc -fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
> native_c_compiler: ................................... gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT
> model: ............................................... default
> ext_obj: ............................................. .o
> ext_asm: ............................................. .s
> ext_lib: ............................................. .a
> ext_dll: ............................................. .so
> default_executable_name: ............................. a.out
> systhread_supported: ................................. true
> Install architecture-independent files dir: .......... /Users/dbuenzli/.odb
> Install architecture-dependent files in dir: ......... $prefix
> User executables: .................................... $exec_prefix/bin
> System admin executables: ............................ $exec_prefix/sbin
> Program executables: ................................. $exec_prefix/libexec
> Read-only single-machine data: ....................... $prefix/etc
> Modifiable architecture-independent data: ............ $prefix/com
> Modifiable single-machine data: ...................... $prefix/var
> Object code libraries: ............................... $exec_prefix/lib
> Read-only arch-independent data root: ................ $prefix/share
> Read-only architecture-independent data: ............. $datarootdir
> Info documentation: .................................. $datarootdir/info
> Locale-dependent data: ............................... $datarootdir/locale
> Man documentation: ................................... $datarootdir/man
> Documentation root: .................................. $datarootdir/doc/$pkg_name
> HTML documentation: .................................. $docdir
> DVI documentation: ................................... $docdir
> PDF documentation: ................................... $docdir
> PS documentation: .................................... $docdir
> findlib_version: ..................................... 1.3.2
> is_native: ........................................... true
> suffix_program: ......................................
> Remove a file.: ...................................... rm -f
> Remove a directory.: ................................. rm -rf
> Turn ocaml debug flag on: ............................ true
> Turn ocaml profile flag on: .......................... false
> Compiler support generation of .cmxs.: ............... true
> OCamlbuild additional flags: .........................
> Create documentations: ............................... true
> Compile tests executable and library and run them: ... false
> camlp4o: ............................................. /usr/local/bin/camlp4o
> pkg_camlp4_quotations: ............................... /usr/local/lib/ocaml/camlp4
> pkg_camlp4_extend: ................................... /usr/local/lib/ocaml/camlp4
> ocamldoc: ............................................ /usr/local/bin/ocamldoc
> Finished, 1 target (0 cached) in 00:00:00.
> getconf: no such configuration parameter `LFS64_CFLAGS'
> + ocamlfind ocamlc -c -g -w @Aemr-28 -strict-sequence -package camlp4.quotations -package camlp4.extend -syntax camlp4o -I lib -o lib/pa_type_conv.cmo lib/pa_type_conv.ml
> File "lib/pa_type_conv.ml", line 275, characters 19-1267:
> Warning 8: this pattern-matching is not exhaustive.
> Here is an example of a value that is not matched:
> (TyTypePol (_, _, _)|TyAnP _|TyAnM _)
> File "lib/pa_type_conv.ml", line 4, characters 0-11:
> Warning 33: unused open Lexing.
> File "lib/pa_type_conv.ml", line 12, characters 4-8:
> Warning 32: unused value both.
> File "lib/pa_type_conv.ml", line 1:
> Error: Error-enabled warnings (3 occurrences)
> Command exited with code 2.
> Compilation unsuccessful after building 4 targets (0 cached) in 00:00:01.
> E: Failure("Command '/usr/local/bin/ocamlbuild lib/pa_type_conv.cma -tag debug' terminated with error code 10")
> Exception: Failure "Could not build type_conv".
>
>
>


From gabriel.scherer at gmail.com  Mon Jul  2 14:01:12 2012
From: gabriel.scherer at gmail.com (Gabriel Scherer)
Date: Mon, 2 Jul 2012 15:01:12 +0200
Subject: [was: [Caml-list] [ANN] oasis v0.3.0: Architecture for building
 OCaml libraries and applications] Pb with type_conv
In-Reply-To: <CAOCAUGNz5cTXk1dRqKVUr_-ky_kOBF0TswQhC059+UG3rwNCKQ@mail.gmail.com>
References: <CAOCAUGNz5cTXk1dRqKVUr_-ky_kOBF0TswQhC059+UG3rwNCKQ@mail.gmail.com>
Message-ID: <CAPFanBFvYahCvzv_XiDE3qSHycFXN8on-HyDrwB8jsqyY+JBgQ@mail.gmail.com>


I react to "the @ issue on Windows", because I'm the one to blame in this case.

This was discussed on the OCaml bug tracker (
http://caml.inria.fr/mantis/view.php?id=5312 ) and later on the Caml
mailing-list ( http://www.mail-archive.com/caml-list at inria.fr/msg01993.html
), and it was decided to remove support for @responsefiles from OCaml
to solve that conflict with the warning specification syntax.

Fate assigned the bug to me, but I've been busy with other things and
have not implemented it (if someone wants to help on this, feel
free!). As we're late in the release process, I don't think it would
go in for 4.00, so the best bet for now is to consider this warning
specification unportable and use -warn-error instead.

I welcome feedback on such issues on the bugtracker or mailing-list;
feedback helps setting good priorities.
Sorry for not taking care of this earlier.

On Mon, Jul 2, 2012 at 11:18 AM, Sylvain Le Gall <sylvain at le-gall.net> wrote:
> Hi,
>
> 2012/7/2 Daniel B?nzli <daniel.buenzli at erratique.ch>:
>> Hello,
>>
>> Trying to install with odb.ml and ocaml 4.00.0+beta2, with
>>
>> ocaml odb.ml --unstable oasis
>>
>> But typeconv fails with [1]. Is there a magic invocation to override that warnings are errors flag ?
>>
>
> I think Jane Street Core team added the "-w @Aemr-28" flags. They did
> it in myocamlbuild.ml section not managed by OASIS. The only solution
> is to change by hand.
>
> I CC the core mailing list which will provide you more information
> about this issue (I have the same kind of issue because of "@" on
> Windows).
>
>> Thanks,
>>
>> Daniel
>>
>> [1]
>>
>> Configuration:
>> ocamlfind: ........................................... /usr/local/bin/ocamlfind
>> ocamlc: .............................................. /usr/local/bin/ocamlc.opt
>> ocamlopt: ............................................ /usr/local/bin/ocamlopt.opt
>> ocamlbuild: .......................................... /usr/local/bin/ocamlbuild
>> Package name: ........................................ type_conv
>> Package version: ..................................... 108.00.01
>> os_type: ............................................. Unix
>> system: .............................................. macosx
>> architecture: ........................................ amd64
>> ccomp_type: .......................................... cc
>> ocaml_version: ....................................... 4.00.0
>> standard_library_default: ............................ /usr/local/lib/ocaml
>> standard_library: .................................... /usr/local/lib/ocaml
>> standard_runtime: .................................... /usr/local/bin/ocamlrun
>> bytecomp_c_compiler: ................................. gcc -fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
>> native_c_compiler: ................................... gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT
>> model: ............................................... default
>> ext_obj: ............................................. .o
>> ext_asm: ............................................. .s
>> ext_lib: ............................................. .a
>> ext_dll: ............................................. .so
>> default_executable_name: ............................. a.out
>> systhread_supported: ................................. true
>> Install architecture-independent files dir: .......... /Users/dbuenzli/.odb
>> Install architecture-dependent files in dir: ......... $prefix
>> User executables: .................................... $exec_prefix/bin
>> System admin executables: ............................ $exec_prefix/sbin
>> Program executables: ................................. $exec_prefix/libexec
>> Read-only single-machine data: ....................... $prefix/etc
>> Modifiable architecture-independent data: ............ $prefix/com
>> Modifiable single-machine data: ...................... $prefix/var
>> Object code libraries: ............................... $exec_prefix/lib
>> Read-only arch-independent data root: ................ $prefix/share
>> Read-only architecture-independent data: ............. $datarootdir
>> Info documentation: .................................. $datarootdir/info
>> Locale-dependent data: ............................... $datarootdir/locale
>> Man documentation: ................................... $datarootdir/man
>> Documentation root: .................................. $datarootdir/doc/$pkg_name
>> HTML documentation: .................................. $docdir
>> DVI documentation: ................................... $docdir
>> PDF documentation: ................................... $docdir
>> PS documentation: .................................... $docdir
>> findlib_version: ..................................... 1.3.2
>> is_native: ........................................... true
>> suffix_program: ......................................
>> Remove a file.: ...................................... rm -f
>> Remove a directory.: ................................. rm -rf
>> Turn ocaml debug flag on: ............................ true
>> Turn ocaml profile flag on: .......................... false
>> Compiler support generation of .cmxs.: ............... true
>> OCamlbuild additional flags: .........................
>> Create documentations: ............................... true
>> Compile tests executable and library and run them: ... false
>> camlp4o: ............................................. /usr/local/bin/camlp4o
>> pkg_camlp4_quotations: ............................... /usr/local/lib/ocaml/camlp4
>> pkg_camlp4_extend: ................................... /usr/local/lib/ocaml/camlp4
>> ocamldoc: ............................................ /usr/local/bin/ocamldoc
>> Finished, 1 target (0 cached) in 00:00:00.
>> getconf: no such configuration parameter `LFS64_CFLAGS'
>> + ocamlfind ocamlc -c -g -w @Aemr-28 -strict-sequence -package camlp4.quotations -package camlp4.extend -syntax camlp4o -I lib -o lib/pa_type_conv.cmo lib/pa_type_conv.ml
>> File "lib/pa_type_conv.ml", line 275, characters 19-1267:
>> Warning 8: this pattern-matching is not exhaustive.
>> Here is an example of a value that is not matched:
>> (TyTypePol (_, _, _)|TyAnP _|TyAnM _)
>> File "lib/pa_type_conv.ml", line 4, characters 0-11:
>> Warning 33: unused open Lexing.
>> File "lib/pa_type_conv.ml", line 12, characters 4-8:
>> Warning 32: unused value both.
>> File "lib/pa_type_conv.ml", line 1:
>> Error: Error-enabled warnings (3 occurrences)
>> Command exited with code 2.
>> Compilation unsuccessful after building 4 targets (0 cached) in 00:00:01.
>> E: Failure("Command '/usr/local/bin/ocamlbuild lib/pa_type_conv.cma -tag debug' terminated with error code 10")
>> Exception: Failure "Could not build type_conv".
>>
>>
>>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

-- 
Caml-list mailing list.  Subscription management and archives:
https://sympa-roc.inria.fr/wws/info/caml-list
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
Bug reports: http://caml.inria.fr/bin/caml-bugs



From sdefabbiakane at gmail.com  Tue Jul  3 05:34:54 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Mon, 2 Jul 2012 21:34:54 -0700 (PDT)
Subject: Erlang-like Gen server using Async
In-Reply-To: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
Message-ID: <9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>

I haven't had a chance to take a very long look, but I do have a few 
comments. Feel free to ignore me if I'm misunderstanding what you're trying 
to do :).

You're refererencing some things in Async's Deferred module (like 
'Deferred.return', etc) with their qualified names, which is unnecessary: 
you can just use 'return'. This is partially a style point, but Deferred is 
generally understood to be the top-level monad if you have Async open. 
(This is also the case for some functions in other modules, like printf, 
which is in the top level in Core.)

You're also using the named 'bind', 'upon', etc. Unless there's a good 
reason to do that, I'd use the inline operators instead--they're much nicer 
to read. (>>= is bind, >>> is upon, >>| is map) For example, with minimal 
other changes, this is how I'd write your 'test_gen_server' function:

let test_gen_server () =
  Test_server.start 0
  >>> function
  | Result.Error _ -> shutdown 2
  | Result.Ok gs   ->
    incr gs 1;
    incr gs 2;
    Ivar.read (get gs) 
    >>> function
    | 3 -> shutdown gs
    | n ->
      eprintf "Error: Got %d\n" n; (* eprintf goes to stderr instead of 
stdout *)
      Shutdown.shutdown 1

Also, I see a lot of use of upon, return, and ivars. There are certainly 
times to use all of them, but there are often nicer abstractions already in 
Async that do the hard work for you. Take a look at the Pipe module: I 
think you'll be able to eliminate a lot of code (and better types for your 
own interfaces will flow much more naturally from the underlying types). 
Generally functions that do deferred things should generally have a 
Deferred type. Don't use upon to try to give yourself functions of type 
'unit'.




On Tuesday, July 3, 2012 4:05:09 AM UTC+8, orbitz wrote:
>
> Hello!
>
> I implemented an Erlang-like gen server in Async and was hoping someone 
> familiar with Core might provide some feedback.  Is the code good?  Is the 
> idea good?
>
> The code is here:
>
> https://github.com/orbitz/web_typed/blob/master/libs/ort_async/gen_server.ml
>
> And an example is here:
>
> https://github.com/orbitz/web_typed/blob/master/libs/ort_async/gen_server_test.ml
>
> One thing that I do not like about this is the init function.  The problem 
> is:
> I want the init function to get a reference to itself so it can create 
> other services and give itself to that service.  The problem is, the type 
> that represents the server doesn't exist when the init function is defined 
> so I can't pass it a value.  Instead I pass it the server stream and exited 
> Ivar, but that is rather ugly since it really breaks the abstraction.  Any 
> suggestions?
>
> Thank you.
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120702/be2d2acb/attachment-0001.html>

From orbitz at gmail.com  Mon Jul  2 21:05:09 2012
From: orbitz at gmail.com (orbitz)
Date: Mon, 2 Jul 2012 22:05:09 +0200
Subject: Erlang-like Gen server using Async
Message-ID: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>

Hello!

I implemented an Erlang-like gen server in Async and was hoping someone
familiar with Core might provide some feedback.  Is the code good?  Is the
idea good?

The code is here:
https://github.com/orbitz/web_typed/blob/master/libs/ort_async/gen_server.ml

And an example is here:
https://github.com/orbitz/web_typed/blob/master/libs/ort_async/gen_server_test.ml

One thing that I do not like about this is the init function.  The problem
is:
I want the init function to get a reference to itself so it can create
other services and give itself to that service.  The problem is, the type
that represents the server doesn't exist when the init function is defined
so I can't pass it a value.  Instead I pass it the server stream and exited
Ivar, but that is rather ugly since it really breaks the abstraction.  Any
suggestions?

Thank you.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120702/e715a233/attachment-0001.html>

From dhouse at janestreet.com  Tue Jul  3 07:46:15 2012
From: dhouse at janestreet.com (David House)
Date: Tue, 3 Jul 2012 07:46:15 +0100
Subject: Erlang-like Gen server using Async
In-Reply-To: <9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
	<9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
Message-ID: <CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>


On Tue, Jul 3, 2012 at 5:34 AM, Sam <sdefabbiakane at gmail.com> wrote:
> You're refererencing some things in Async's Deferred module (like
> 'Deferred.return', etc) with their qualified names, which is unnecessary:
> you can just use 'return'. This is partially a style point, but Deferred is
> generally understood to be the top-level monad if you have Async open. (This
> is also the case for some functions in other modules, like printf, which is
> in the top level in Core.)

Not sure I totally agree -- I think Deferred.return is a clearer name
than return on its own. I generally try to avoid use of return by
using map instead of bind as the last chained infix operator, e.g.:

  foo
  >>= fun a ->
  bar a
  >>= fun () ->
  baz
  >>| fun c ->
  quux c

(This also shows another style point I'm a fan of: arrange your code
with binds/maps on the left, so that it is clear where they all are.
This is important, because they're basically the possible context
switch points in your code. So you should be aware where they are. The
above example looks silly, but generally you have much longer lines
between the binds, and it looks fine.)

> Generally functions that do deferred things should generally have a Deferred
> type. Don't use upon to try to give yourself functions of type 'unit'.

+1, and in fact I'd say any use of upon is supicious. Note that [x >>>
f] is equivalent (pretty much) to [whenever (x >>= f)] (at some point
we are renaming "whenever" to "don't_wait_for" -- I can't remember
whether that has hit yet). But as you say, you should just let things
have deferred return types if they do deferred things. This means that
clients of that function have the choice whether to wait for that
function (by binding on it), or not to (by calling
whenever/don't_wait_for).

The only exception is very tight loops, where upon is more efficient
than bind, because it avoids allocating an extra deferred.


From orbitz at gmail.com  Tue Jul  3 09:11:19 2012
From: orbitz at gmail.com (orbitz)
Date: Tue, 3 Jul 2012 10:11:19 +0200
Subject: Erlang-like Gen server using Async
In-Reply-To: <CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
	<9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
	<CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>
Message-ID: <CAAHaHtnUyhDyimPx517eXSAubZog743_kjCzQSisp=iXEbCUyw@mail.gmail.com>

Thank you for the responses.  I'm probably going to switch to the >>=, >>>,
>>| operators.  I wasn't sure if I liked them when I first started but I'll
try them out.  They will probably be clearer now that I have had time to
think about the code in terms of bind and upon.

For the upon code, in gen_server_test.ml that should be switched to bind, I
agree.  In gen_server.ml, I use upon to represent the event loop, which
represents a detached computation so nobody should ever wait on that  I
think the use of upon there is valid, but let me know if you disagree.

For the original problem I raised, about a gen server being able to
reference itself, the best solution I've come up with is passing the init
function a tuple of (msg -> unit * exited Ivar.t).  The init function can
give this tuple to other services it wants to create.  I'm still not a big
fan of it though, but my Ocaml-type-fu is weak.

Thanks again

On Tue, Jul 3, 2012 at 8:46 AM, David House <dhouse at janestreet.com> wrote:

> On Tue, Jul 3, 2012 at 5:34 AM, Sam <sdefabbiakane at gmail.com> wrote:
> > You're refererencing some things in Async's Deferred module (like
> > 'Deferred.return', etc) with their qualified names, which is unnecessary:
> > you can just use 'return'. This is partially a style point, but Deferred
> is
> > generally understood to be the top-level monad if you have Async open.
> (This
> > is also the case for some functions in other modules, like printf, which
> is
> > in the top level in Core.)
>
> Not sure I totally agree -- I think Deferred.return is a clearer name
> than return on its own. I generally try to avoid use of return by
> using map instead of bind as the last chained infix operator, e.g.:
>
>   foo
>   >>= fun a ->
>   bar a
>   >>= fun () ->
>   baz
>   >>| fun c ->
>   quux c
>
> (This also shows another style point I'm a fan of: arrange your code
> with binds/maps on the left, so that it is clear where they all are.
> This is important, because they're basically the possible context
> switch points in your code. So you should be aware where they are. The
> above example looks silly, but generally you have much longer lines
> between the binds, and it looks fine.)
>
> > Generally functions that do deferred things should generally have a
> Deferred
> > type. Don't use upon to try to give yourself functions of type 'unit'.
>
> +1, and in fact I'd say any use of upon is supicious. Note that [x >>>
> f] is equivalent (pretty much) to [whenever (x >>= f)] (at some point
> we are renaming "whenever" to "don't_wait_for" -- I can't remember
> whether that has hit yet). But as you say, you should just let things
> have deferred return types if they do deferred things. This means that
> clients of that function have the choice whether to wait for that
> function (by binding on it), or not to (by calling
> whenever/don't_wait_for).
>
> The only exception is very tight loops, where upon is more efficient
> than bind, because it avoids allocating an extra deferred.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120703/42e4fe58/attachment-0001.html>

From sdefabbiakane at gmail.com  Wed Jul  4 05:24:59 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Tue, 3 Jul 2012 21:24:59 -0700 (PDT)
Subject: Erlang-like Gen server using Async
In-Reply-To: <CAAHaHtnUyhDyimPx517eXSAubZog743_kjCzQSisp=iXEbCUyw@mail.gmail.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
 <9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
 <CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>
 <CAAHaHtnUyhDyimPx517eXSAubZog743_kjCzQSisp=iXEbCUyw@mail.gmail.com>
Message-ID: <c46b26d9-8afc-406b-a3e7-544c0841075f@googlegroups.com>

Bind will do the same thing as upon in the way that you're using it. (In 
fact, bind is implemented with upon.) When you hit a bind/upon/map/etc, all 
you're doing is saying "schedule this function to run when this deferred 
becomes determined". You're not forcing the computation to happen right 
then, because the scheduler's free to run anything else it wants there.

Basically everything you're doing in Async is a detached unit of blocking 
computation. Bind/upon/etc are boundaries between those units where the 
scheduler takes over. When you're using bind/upon/etc, all you're doing is 
defining two units of blocking computation and specifying a dependency 
between them.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120703/42662fe1/attachment-0001.html>

From orbitz at gmail.com  Wed Jul  4 09:07:31 2012
From: orbitz at gmail.com (orbitz)
Date: Wed, 4 Jul 2012 10:07:31 +0200
Subject: Erlang-like Gen server using Async
In-Reply-To: <c46b26d9-8afc-406b-a3e7-544c0841075f@googlegroups.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
	<9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
	<CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>
	<CAAHaHtnUyhDyimPx517eXSAubZog743_kjCzQSisp=iXEbCUyw@mail.gmail.com>
	<c46b26d9-8afc-406b-a3e7-544c0841075f@googlegroups.com>
Message-ID: <CAAHaHtkP6oOZ+UrggckHKCdWPS85S7DAxDsqcyT-py0Ah+WiSA@mail.gmail.com>

Yes, I'm referring to the semantics of the gen server loop.  Semantically,
if you're waiting on its deferred, you're doing it wrong.  It never returns
anything and is completely detached.

On Wed, Jul 4, 2012 at 6:24 AM, Sam <sdefabbiakane at gmail.com> wrote:

> Bind will do the same thing as upon in the way that you're using it. (In
> fact, bind is implemented with upon.) When you hit a bind/upon/map/etc, all
> you're doing is saying "schedule this function to run when this deferred
> becomes determined". You're not forcing the computation to happen right
> then, because the scheduler's free to run anything else it wants there.
>
> Basically everything you're doing in Async is a detached unit of blocking
> computation. Bind/upon/etc are boundaries between those units where the
> scheduler takes over. When you're using bind/upon/etc, all you're doing is
> defining two units of blocking computation and specifying a dependency
> between them.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120704/0bdbfac0/attachment-0001.html>

From sdefabbiakane at gmail.com  Thu Jul  5 04:22:42 2012
From: sdefabbiakane at gmail.com (Sam)
Date: Wed, 4 Jul 2012 20:22:42 -0700 (PDT)
Subject: Erlang-like Gen server using Async
In-Reply-To: <CAAHaHtkP6oOZ+UrggckHKCdWPS85S7DAxDsqcyT-py0Ah+WiSA@mail.gmail.com>
References: <CAAHaHtniNpwQX=sEvEaQ96pWWbf2W=_t-=yCLp5uyXiaMKCm=Q@mail.gmail.com>
 <9b40d1e9-72c2-455e-be65-7c6787d54d44@googlegroups.com>
 <CAK=fH+iDZTWTn6W21u8iWWbfstg3AnrpX3TbsoNn93ORMocu1Q@mail.gmail.com>
 <CAAHaHtnUyhDyimPx517eXSAubZog743_kjCzQSisp=iXEbCUyw@mail.gmail.com>
 <c46b26d9-8afc-406b-a3e7-544c0841075f@googlegroups.com>
 <CAAHaHtkP6oOZ+UrggckHKCdWPS85S7DAxDsqcyT-py0Ah+WiSA@mail.gmail.com>
Message-ID: <ff0cf05c-33ec-442d-aeef-c21ecffd35d8@googlegroups.com>

That's true for the upon in 'start', but not for the other two in 'loop'. 
You do wait on those deferreds to continue, you're just using upon to get 
the unit type you want. I think what you really want to be doing is calling 
"whenever (Stream.iter' ...)" in 'start', since you're basically 
implementing Stream.iter yourself with 'loop' anyway. Whenever is like the 
standard ignore function, except it only takes things if type unit deferred.

You also definitely want a map instead of bind in 'start'.

As I was saying before (or maybe as I meant to say before), using upon and 
things like raw ivars a lot isn't necessarily wrong, but it does suggest 
that you're working at a lower level of abstraction than is usually 
necessary.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120704/80aa99ff/attachment-0001.html>

From markus.mottl at gmail.com  Mon Jul  9 03:02:02 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sun, 8 Jul 2012 22:02:02 -0400
Subject: type_conv/ocaml4 release
In-Reply-To: <1EF0B8CE-34C2-43BC-A88D-4119833BC828@recoil.org>
References: <1EF0B8CE-34C2-43BC-A88D-4119833BC828@recoil.org>
Message-ID: <CAP_800qE1n138t0OKWE9EJmqWJfEUWV4P1Ad21Fn1G_MkXeTag@mail.gmail.com>


On Sun, Jul 8, 2012 at 5:12 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> Also, is it necessary to have warnings-are-errors enabled in the released tarballs? It makes it awkward to test out new compiler versions, which usually introduce new ones every release.

I agree with Anil that warnings-as-errors should not be enabled in
releases, only during development work.

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From anil at recoil.org  Sun Jul  8 22:12:02 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 8 Jul 2012 22:12:02 +0100
Subject: type_conv/ocaml4 release
Message-ID: <1EF0B8CE-34C2-43BC-A88D-4119833BC828@recoil.org>


Hi, is there an ETA for a release of type_conv that builds under ocaml4 (using Markus' patchqueue) ?  

I'm doing bulk builds of OCaml4 packages on odd platforms (Linux/ARM and OpenBSD/PowerPC) using the new OPAM package manager to cover as many packages as possible.  Unfortunately, the type-conv warning/errors cause many dependent packages to fail to build.

OPAM doesn't yet have patch support, but if it'll take more than a day or two for a type_conv release, then I'll roll my own to unblock the build.  Just checking just in case...

Also, is it necessary to have warnings-are-errors enabled in the released tarballs? It makes it awkward to test out new compiler versions, which usually introduce new ones every release.

cheers,
Anil



From yury.sulsky at gmail.com  Mon Jul  9 17:03:25 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Mon, 9 Jul 2012 12:03:25 -0400
Subject: type_conv/ocaml4 release
In-Reply-To: <CAP_800qE1n138t0OKWE9EJmqWJfEUWV4P1Ad21Fn1G_MkXeTag@mail.gmail.com>
References: <1EF0B8CE-34C2-43BC-A88D-4119833BC828@recoil.org>
	<CAP_800qE1n138t0OKWE9EJmqWJfEUWV4P1Ad21Fn1G_MkXeTag@mail.gmail.com>
Message-ID: <CAEDxudxyZd=jEU2HakWAB68SZYMN6PX8eAZtGGAQQ6LE55FgnQ@mail.gmail.com>


Hi guys,

I'll go ahead and generate a new point-release with Markus' fixes.
They'll also make it into the mercurial tree as part of the next
release. I'll get back to you as soon as they're up.

On Sun, Jul 8, 2012 at 10:02 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Sun, Jul 8, 2012 at 5:12 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> Also, is it necessary to have warnings-are-errors enabled in the released tarballs? It makes it awkward to test out new compiler versions, which usually introduce new ones every release.
>
> I agree with Anil that warnings-as-errors should not be enabled in
> releases, only during development work.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From anil at recoil.org  Mon Jul  9 17:06:15 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 9 Jul 2012 17:06:15 +0100
Subject: type_conv/ocaml4 release
In-Reply-To: <CAEDxudxyZd=jEU2HakWAB68SZYMN6PX8eAZtGGAQQ6LE55FgnQ@mail.gmail.com>
References: <1EF0B8CE-34C2-43BC-A88D-4119833BC828@recoil.org> <CAP_800qE1n138t0OKWE9EJmqWJfEUWV4P1Ad21Fn1G_MkXeTag@mail.gmail.com> <CAEDxudxyZd=jEU2HakWAB68SZYMN6PX8eAZtGGAQQ6LE55FgnQ@mail.gmail.com>
Message-ID: <C765A709-9FA5-4BB4-9F7B-E116B4E882E2@recoil.org>


Thanks! Gerd also just released an ocamlfind-1.3.3 that works with both
OCaml4 and 3, so I'll retry everything tonight with OPAM and see how far it
gets.

-anil

On 9 Jul 2012, at 17:03, Yury Sulsky wrote:

> Hi guys,
> 
> I'll go ahead and generate a new point-release with Markus' fixes.
> They'll also make it into the mercurial tree as part of the next
> release. I'll get back to you as soon as they're up.
> 
> On Sun, Jul 8, 2012 at 10:02 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
>> On Sun, Jul 8, 2012 at 5:12 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> Also, is it necessary to have warnings-are-errors enabled in the released tarballs? It makes it awkward to test out new compiler versions, which usually introduce new ones every release.
>> 
>> I agree with Anil that warnings-as-errors should not be enabled in
>> releases, only during development work.
>> 
>> Regards,
>> Markus
>> 
>> --
>> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com
> 



From damien.doligez at inria.fr  Mon Jul  9 17:05:42 2012
From: damien.doligez at inria.fr (Damien Doligez)
Date: Mon, 9 Jul 2012 18:05:42 +0200
Subject: [was: [Caml-list] [ANN] oasis v0.3.0: Architecture for building
 OCaml libraries and applications] Pb with type_conv
In-Reply-To: <CAPFanBFvYahCvzv_XiDE3qSHycFXN8on-HyDrwB8jsqyY+JBgQ@mail.gmail.com>
References: <CAOCAUGNz5cTXk1dRqKVUr_-ky_kOBF0TswQhC059+UG3rwNCKQ@mail.gmail.com> <CAPFanBFvYahCvzv_XiDE3qSHycFXN8on-HyDrwB8jsqyY+JBgQ@mail.gmail.com>
Message-ID: <B5BFE7A3-0037-418D-B6C2-645FC2ACD588@inria.fr>


I think I'm the one to blame here: I chose the @ character for
this purpose.

A workaround for the authors of the original software (and indeed
a portability note for all OCaml software):

Instead of "-w @Aemr-28", you can use "-w A at Aemr-28", which will
do exactly the same thing, without triggering the bug.  Just avoid
having the @ at the beginning of the argument.

-- Damien



On 2012-07-02, at 15:01, Gabriel Scherer wrote:

> I react to "the @ issue on Windows", because I'm the one to blame in this case.
> 
> This was discussed on the OCaml bug tracker (
> http://caml.inria.fr/mantis/view.php?id=5312 ) and later on the Caml
> mailing-list ( http://www.mail-archive.com/caml-list at inria.fr/msg01993.html
> ), and it was decided to remove support for @responsefiles from OCaml
> to solve that conflict with the warning specification syntax.
> 
> Fate assigned the bug to me, but I've been busy with other things and
> have not implemented it (if someone wants to help on this, feel
> free!). As we're late in the release process, I don't think it would
> go in for 4.00, so the best bet for now is to consider this warning
> specification unportable and use -warn-error instead.
> 
> I welcome feedback on such issues on the bugtracker or mailing-list;
> feedback helps setting good priorities.
> Sorry for not taking care of this earlier.
> 
> On Mon, Jul 2, 2012 at 11:18 AM, Sylvain Le Gall <sylvain at le-gall.net> wrote:
>> Hi,
>> 
>> 2012/7/2 Daniel B?nzli <daniel.buenzli at erratique.ch>:
>>> Hello,
>>> 
>>> Trying to install with odb.ml and ocaml 4.00.0+beta2, with
>>> 
>>> ocaml odb.ml --unstable oasis
>>> 
>>> But typeconv fails with [1]. Is there a magic invocation to override that warnings are errors flag ?
>>> 
>> 
>> I think Jane Street Core team added the "-w @Aemr-28" flags. They did
>> it in myocamlbuild.ml section not managed by OASIS. The only solution
>> is to change by hand.
>> 
>> I CC the core mailing list which will provide you more information
>> about this issue (I have the same kind of issue because of "@" on
>> Windows).
>> 
>>> Thanks,
>>> 
>>> Daniel
>>> 
>>> [1]
>>> 
>>> Configuration:
>>> ocamlfind: ........................................... /usr/local/bin/ocamlfind
>>> ocamlc: .............................................. /usr/local/bin/ocamlc.opt
>>> ocamlopt: ............................................ /usr/local/bin/ocamlopt.opt
>>> ocamlbuild: .......................................... /usr/local/bin/ocamlbuild
>>> Package name: ........................................ type_conv
>>> Package version: ..................................... 108.00.01
>>> os_type: ............................................. Unix
>>> system: .............................................. macosx
>>> architecture: ........................................ amd64
>>> ccomp_type: .......................................... cc
>>> ocaml_version: ....................................... 4.00.0
>>> standard_library_default: ............................ /usr/local/lib/ocaml
>>> standard_library: .................................... /usr/local/lib/ocaml
>>> standard_runtime: .................................... /usr/local/bin/ocamlrun
>>> bytecomp_c_compiler: ................................. gcc -fno-defer-pop -Wall -D_FILE_OFFSET_BITS=64 -D_REENTRANT
>>> native_c_compiler: ................................... gcc -D_FILE_OFFSET_BITS=64 -D_REENTRANT
>>> model: ............................................... default
>>> ext_obj: ............................................. .o
>>> ext_asm: ............................................. .s
>>> ext_lib: ............................................. .a
>>> ext_dll: ............................................. .so
>>> default_executable_name: ............................. a.out
>>> systhread_supported: ................................. true
>>> Install architecture-independent files dir: .......... /Users/dbuenzli/.odb
>>> Install architecture-dependent files in dir: ......... $prefix
>>> User executables: .................................... $exec_prefix/bin
>>> System admin executables: ............................ $exec_prefix/sbin
>>> Program executables: ................................. $exec_prefix/libexec
>>> Read-only single-machine data: ....................... $prefix/etc
>>> Modifiable architecture-independent data: ............ $prefix/com
>>> Modifiable single-machine data: ...................... $prefix/var
>>> Object code libraries: ............................... $exec_prefix/lib
>>> Read-only arch-independent data root: ................ $prefix/share
>>> Read-only architecture-independent data: ............. $datarootdir
>>> Info documentation: .................................. $datarootdir/info
>>> Locale-dependent data: ............................... $datarootdir/locale
>>> Man documentation: ................................... $datarootdir/man
>>> Documentation root: .................................. $datarootdir/doc/$pkg_name
>>> HTML documentation: .................................. $docdir
>>> DVI documentation: ................................... $docdir
>>> PDF documentation: ................................... $docdir
>>> PS documentation: .................................... $docdir
>>> findlib_version: ..................................... 1.3.2
>>> is_native: ........................................... true
>>> suffix_program: ......................................
>>> Remove a file.: ...................................... rm -f
>>> Remove a directory.: ................................. rm -rf
>>> Turn ocaml debug flag on: ............................ true
>>> Turn ocaml profile flag on: .......................... false
>>> Compiler support generation of .cmxs.: ............... true
>>> OCamlbuild additional flags: .........................
>>> Create documentations: ............................... true
>>> Compile tests executable and library and run them: ... false
>>> camlp4o: ............................................. /usr/local/bin/camlp4o
>>> pkg_camlp4_quotations: ............................... /usr/local/lib/ocaml/camlp4
>>> pkg_camlp4_extend: ................................... /usr/local/lib/ocaml/camlp4
>>> ocamldoc: ............................................ /usr/local/bin/ocamldoc
>>> Finished, 1 target (0 cached) in 00:00:00.
>>> getconf: no such configuration parameter `LFS64_CFLAGS'
>>> + ocamlfind ocamlc -c -g -w @Aemr-28 -strict-sequence -package camlp4.quotations -package camlp4.extend -syntax camlp4o -I lib -o lib/pa_type_conv.cmo lib/pa_type_conv.ml
>>> File "lib/pa_type_conv.ml", line 275, characters 19-1267:
>>> Warning 8: this pattern-matching is not exhaustive.
>>> Here is an example of a value that is not matched:
>>> (TyTypePol (_, _, _)|TyAnP _|TyAnM _)
>>> File "lib/pa_type_conv.ml", line 4, characters 0-11:
>>> Warning 33: unused open Lexing.
>>> File "lib/pa_type_conv.ml", line 12, characters 4-8:
>>> Warning 32: unused value both.
>>> File "lib/pa_type_conv.ml", line 1:
>>> Error: Error-enabled warnings (3 occurrences)
>>> Command exited with code 2.
>>> Compilation unsuccessful after building 4 targets (0 cached) in 00:00:01.
>>> E: Failure("Command '/usr/local/bin/ocamlbuild lib/pa_type_conv.cma -tag debug' terminated with error code 10")
>>> Exception: Failure "Could not build type_conv".
>>> 
>>> 
>>> 
>> 
>> --
>> Caml-list mailing list.  Subscription management and archives:
>> https://sympa-roc.inria.fr/wws/info/caml-list
>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>> Bug reports: http://caml.inria.fr/bin/caml-bugs
>> 
> 
> -- 
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs


-- 
Caml-list mailing list.  Subscription management and archives:
https://sympa-roc.inria.fr/wws/info/caml-list
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
Bug reports: http://caml.inria.fr/bin/caml-bugs



From francois.berenger.working at gmail.com  Wed Jul 11 14:40:04 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Wed, 11 Jul 2012 06:40:04 -0700 (PDT)
Subject: Fwd: [Caml-list] library/framework needed for distributed
 programming in OCaml
Message-ID: <4d398a3f-7a06-4690-8473-8e7ca09a0370@googlegroups.com>



On Wednesday, July 11, 2012 3:40:25 PM UTC+9, Francois Berenger wrote:
>
> Dear list, 
>
> Please forgive me to open this possibly re-occurring thread 
> but I need an up to date version of the answer. 
>
> I once wrote a parallel and distributed toy program 
> in Python which proved to be quite useful ( 
> http://savannah.nongnu.org/projects/par/ 
> ). 
> It was quite simple and easy to write because I used 
> a "library that enables you to build applications in which objects can 
> talk to each other over the network" (http://pypi.python.org/pypi/Pyro4). 
>
> So, I am looking for the gold standard to write 
> modules in OCaml that can talk to each other over the network 
> (not objects, I don't like them so much). 
>
> Here are some requirements, in a random order: 
>
> - the target execution environment is composed of 
>    about 10 Linux workstations. It may switch to 1 or 
>    2 interconnected clusters in the future (about 512 cores max). 
>    So, not as large a scale as a company doing big data. 
> - the system will be used to transfer files of various sizes 
>    (big files like a few Gb included, tiny ones also) 
> - pure OCaml code, so JoCaml and CamlP3l are out. 
>    I don't like so much if there is some C part in the library 
>    but this is not a show stopper. 
> - I really dislike syntax extensions (or things that force 
>    me to do a lot of sysadmin strange configuration) so user-land only 
>    would be great 
> - preserving type-safety and abstraction as mentioned 
>    in the Quicksilver/OCaml paper would be cool ( 
>    www.kb.ecei.tohoku.ac.jp/~sumii/pub/qs.pdf<http://www.kb.ecei.tohoku.ac.jp/%7Esumii/pub/qs.pdf> 
>    ) but not mandatory. 
>    Ideally, encryption or compression of communications should 
>    be a user-toggable feature. 
> - tolerance to partial failures would be nice but not 
>    mandatory (because my target environment is not so error prone 
>    and not so large) 
> - the project should be actively maintained and preferably used 
>    in production somewhere ("je n'aime pas essuyer les platres") 
> - I don't like to use huge frameworks/libraries (j'essaye d'eviter "les 
>    usines a gaz") 
>
> I would be satisfied with even just links to things that 
> satisfy most of my requirements. 
>
> For the moment, the few things that I could find that looks useful are: 
>   - Client-server part of 
>     http://caml.inria.fr/pub/docs/oreilly-book/html.bak/book-ora187.html 
>   - maybe the SunRPC part of 
>     http://projects.camlcity.org/projects/ocamlnet.html 
>
> Thanks a lot for your suggestions, 
> Francois. 
>
> -- 
> Caml-list mailing list.  Subscription management and archives: 
> https://sympa-roc.inria.fr/wws/info/caml-list 
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners 
> Bug reports: http://caml.inria.fr/bin/caml-bugs 
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120711/276807e8/attachment-0001.html>

From francois.berenger.working at gmail.com  Thu Jul 12 04:54:32 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Wed, 11 Jul 2012 20:54:32 -0700 (PDT)
Subject: issue and a fix proposed on the ocaml-core bitbucket website
Message-ID: <1a132f9f-0333-44c8-8ab4-fa7c95b89afa@googlegroups.com>

https://bitbucket.org/yminsky/ocaml-core/issues?status=new&status=open

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120711/978f1698/attachment-0001.html>

From francois.berenger.working at gmail.com  Thu Jul 12 09:48:26 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Thu, 12 Jul 2012 01:48:26 -0700 (PDT)
Subject: [Caml-list] library/framework needed for distributed
 programming in OCaml
Message-ID: <f55ae3a1-1bdc-4dee-a073-abc9a260d428@googlegroups.com>

-------- Original Message --------
Subject:        Re: [Caml-list] library/framework needed
for distributed programming in OCaml
Date:   Thu, 12 Jul 2012 17:46:06 +0900
>From:   Francois Berenger

Hello,

For the moment, the best answer I got privately in my mailbox
is to combine Janestreet's bin_prot and async libraries
or Martin Jambon's biniou with Lwt.

I kind of like what I read on async and bin_prot.

On 07/11/2012 07:21 PM, Lauri Alanko wrote:
 > Hi.
 >
 > I also had need of such a library when I started working on a
 > distributed programming project, but as I couldn't find anything that
 > fulfilled my requirements, I wrote my own.
 >
 > The library is Lwt-based, and provides pretty straightforward remotely
 > callable procedures:
 >
 > type ('a, 'r) handle
 > val ($) : ('a, 'r) handle -> 'a -> 'r Lwt.t
 > val publish : ('a -> 'r Lwt.t) -> ('a, 'r) handle
 >
 > The library is designed to work in a firewalled environment: firewalled
 > nodes can join the distributed network by connecting to any accessible
 > host of that network with an open listener. All messages between nodes
 > are routed through the network.
 >
 > type connection
 > val connect :
 > ?host:string -> ?port:int -> unit -> connection Lwt.t
 > val listen :
 > ?port:int -> unit -> unit Lwt.t
 >
 > Initial values are obtained with "roots". A root (usually a handle, or a
 > record or first-class module containing handles) is keyed to a string,
 > and once set by a node, it can be discovered by any node in the network:
 >
 > val get_root : string -> 'a Lwt.t
 > val set_root : string -> 'a -> unit Lwt.t
 >
 > This is the only unsafe part of the interface: the getter and setter
 > _must_ agree on the type of the root or all hell breaks loose.
 >
 > I haven't published the library yet, since I have wanted to feel free to
 > modify it as required by my application, but if you are interested, and
 > cannot find a more mature solution, I'd be happy to provide it for your
 > inspection.

If you publish your code somewhere (github is really nice), I would
be very happy to have a look at it.

Thanks a lot,
F.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120712/a1b70103/attachment-0001.html>

From 5764c029b688c1c0d24a2e97cd764f at gmail.com  Thu Jul 12 13:11:20 2012
From: 5764c029b688c1c0d24a2e97cd764f at gmail.com (Matej Kosik)
Date: Thu, 12 Jul 2012 05:11:20 -0700 (PDT)
Subject: Core_int32.of_int ... when does it return None value?
Message-ID: <4d690176-0a5b-4e62-b154-335022dbd1f3@googlegroups.com>

Hello,

I am making my first steps with the Core library so this will sound dumb, 
sorry...

In my code, I call Core.int32.of_int function.

I has a curious type. At what occasions does it return None value?

(the doc
http://www.janestreet.com/ocaml/doc/core/Core_int32.html
is mute concerning this topic)

Thanks in advance... :-)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120712/3959cce8/attachment-0001.html>

From yminsky at janestreet.com  Thu Jul 12 12:26:09 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 12 Jul 2012 07:26:09 -0400
Subject: [Caml-list] library/framework needed for distributed programming
 in OCaml
In-Reply-To: <f55ae3a1-1bdc-4dee-a073-abc9a260d428@googlegroups.com>
References: <f55ae3a1-1bdc-4dee-a073-abc9a260d428@googlegroups.com>
Message-ID: <CACLX4jTyD9wtxxyxTEMt4FGzH6-3aDYjDEmr-Uf74gSZf6zwUA@mail.gmail.com>


One library that you might find of use is Async's RPC library, which
allows you to specify simple RPC-like protocols, where the messages
are all handled by bin-prot.

There is no framework-level compression, however.  That needs to be
done at the application level.

y

On Thu, Jul 12, 2012 at 4:48 AM, Francois Berenger
<francois.berenger.working at gmail.com> wrote:
> -------- Original Message --------
> Subject:        Re: [Caml-list] library/framework needed
> for distributed programming in OCaml
> Date:   Thu, 12 Jul 2012 17:46:06 +0900
> From:   Francois Berenger
>
> Hello,
>
> For the moment, the best answer I got privately in my mailbox
> is to combine Janestreet's bin_prot and async libraries
> or Martin Jambon's biniou with Lwt.
>
> I kind of like what I read on async and bin_prot.
>
> On 07/11/2012 07:21 PM, Lauri Alanko wrote:
>  > Hi.
>  >
>  > I also had need of such a library when I started working on a
>  > distributed programming project, but as I couldn't find anything that
>  > fulfilled my requirements, I wrote my own.
>  >
>  > The library is Lwt-based, and provides pretty straightforward remotely
>  > callable procedures:
>  >
>  > type ('a, 'r) handle
>  > val ($) : ('a, 'r) handle -> 'a -> 'r Lwt.t
>  > val publish : ('a -> 'r Lwt.t) -> ('a, 'r) handle
>  >
>  > The library is designed to work in a firewalled environment: firewalled
>  > nodes can join the distributed network by connecting to any accessible
>  > host of that network with an open listener. All messages between nodes
>  > are routed through the network.
>  >
>  > type connection
>  > val connect :
>  > ?host:string -> ?port:int -> unit -> connection Lwt.t
>  > val listen :
>  > ?port:int -> unit -> unit Lwt.t
>  >
>  > Initial values are obtained with "roots". A root (usually a handle, or a
>  > record or first-class module containing handles) is keyed to a string,
>  > and once set by a node, it can be discovered by any node in the network:
>  >
>  > val get_root : string -> 'a Lwt.t
>  > val set_root : string -> 'a -> unit Lwt.t
>  >
>  > This is the only unsafe part of the interface: the getter and setter
>  > _must_ agree on the type of the root or all hell breaks loose.
>  >
>  > I haven't published the library yet, since I have wanted to feel free to
>  > modify it as required by my application, but if you are interested, and
>  > cannot find a more mature solution, I'd be happy to provide it for your
>  > inspection.
>
> If you publish your code somewhere (github is really nice), I would
> be very happy to have a look at it.
>
> Thanks a lot,
> F.


From dhouse at janestreet.com  Thu Jul 12 13:19:29 2012
From: dhouse at janestreet.com (David House)
Date: Thu, 12 Jul 2012 13:19:29 +0100
Subject: Core_int32.of_int ... when does it return None value?
In-Reply-To: <4d690176-0a5b-4e62-b154-335022dbd1f3@googlegroups.com>
References: <4d690176-0a5b-4e62-b154-335022dbd1f3@googlegroups.com>
Message-ID: <CAK=fH+h7DVZ9nBBfGDr3mMptW-_HmDDqGTXBY7NSnLX6ymcuwQ@mail.gmail.com>


When the input is out of range. If you are on a 64-bit machine, then
the range of [int] is -2^62 .. 2^62 - 1 (note 62 not 63 -- one bit is
lost because of the tagging trick that keeps ints as immediates) But
the range of [Int32] is only -2^31 .. 2^31 - 1.

By the way, you should not refer to the module as Core_int32. If you
open Core.Std, then you can (and should) refer to the module as just
Int32. The fact that the filename is core_int32.ml is an unfortunate
inconvenience, necessary because there is a module in the caml
standard library that is also called Int32.

On Thu, Jul 12, 2012 at 1:11 PM, Matej Kosik
<5764c029b688c1c0d24a2e97cd764f at gmail.com> wrote:
> Hello,
>
> I am making my first steps with the Core library so this will sound dumb,
> sorry...
>
> In my code, I call Core.int32.of_int function.
>
> I has a curious type. At what occasions does it return None value?
>
> (the doc
> http://www.janestreet.com/ocaml/doc/core/Core_int32.html
> is mute concerning this topic)
>
> Thanks in advance... :-)


From yminsky at janestreet.com  Thu Jul 12 18:39:48 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 12 Jul 2012 13:39:48 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
Message-ID: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>


A new downloads page is now available.  I'm going to delete the
downloads from the bitbucket page because bitbucket doesn't give a
good way of automating uploads or organizing them in directories.

There's also a new set of tarballs (108.00.02) with support for OCaml 4.0.

Enjoy!

y


From markus.mottl at gmail.com  Thu Jul 12 19:07:24 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 12 Jul 2012 14:07:24 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
Message-ID: <CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>


On Thu, Jul 12, 2012 at 1:39 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> A new downloads page is now available.  I'm going to delete the
> downloads from the bitbucket page because bitbucket doesn't give a
> good way of automating uploads or organizing them in directories.

Have you considered creating a static website on Bitbucket?  I'm going
to try it myself soon, and it seems easy enough:

  https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+bitbucket

It's all version-controlled, too.  You can apparently upload arbitrary
files, but I haven't tested it yet.

> There's also a new set of tarballs (108.00.02) with support for OCaml 4.0.

Is this related to your submissions patch queue?  Just wondering,
because there has been no activity on Bitbucket for a while.

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From yminsky at janestreet.com  Thu Jul 12 19:11:56 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 12 Jul 2012 14:11:56 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
	<CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
Message-ID: <CACLX4jSVrAwRRN7RZpkQAv78PXB0ik58AVpbgJPSgAGBYTdJ9g@mail.gmail.com>


On Thu, Jul 12, 2012 at 2:07 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Thu, Jul 12, 2012 at 1:39 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> A new downloads page is now available.  I'm going to delete the
>> downloads from the bitbucket page because bitbucket doesn't give a
>> good way of automating uploads or organizing them in directories.
>
> Have you considered creating a static website on Bitbucket?  I'm going
> to try it myself soon, and it seems easy enough:
>
>   https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+bitbucket
>
> It's all version-controlled, too.  You can apparently upload arbitrary
> files, but I haven't tested it yet.
>
>> There's also a new set of tarballs (108.00.02) with support for OCaml 4.0.
>
> Is this related to your submissions patch queue?  Just wondering,
> because there has been no activity on Bitbucket for a while.

This was more of a quick hack.  We're now doing an internal CR cycle
which has stuff pulled in from the patch queue, which we hope to put
out again soon.  Getting this process to work smoothly has been
something of a chore, but I'm hoping it will be in good shape soon.

y

> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From yminsky at janestreet.com  Thu Jul 12 19:13:59 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 12 Jul 2012 14:13:59 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
	<CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
Message-ID: <CACLX4jRWP_T3Qa4DwgPW7VZU6EPaTmCUKOcnbjjEXO+ZRauGdQ@mail.gmail.com>


And the static web-page seems like a nice idea.  For it to be a
reasonable URL, we'll need to create a "team" account with a name like
"ocamlcoresuite" or somesuch.  Otherwise, it looks like we'd end up
with yminsky.bitbucket.org, which is no good...

y

On Thu, Jul 12, 2012 at 2:07 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
> On Thu, Jul 12, 2012 at 1:39 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
>> A new downloads page is now available.  I'm going to delete the
>> downloads from the bitbucket page because bitbucket doesn't give a
>> good way of automating uploads or organizing them in directories.
>
> Have you considered creating a static website on Bitbucket?  I'm going
> to try it myself soon, and it seems easy enough:
>
>   https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+bitbucket
>
> It's all version-controlled, too.  You can apparently upload arbitrary
> files, but I haven't tested it yet.
>
>> There's also a new set of tarballs (108.00.02) with support for OCaml 4.0.
>
> Is this related to your submissions patch queue?  Just wondering,
> because there has been no activity on Bitbucket for a while.
>
> Regards,
> Markus
>
> --
> Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From markus.mottl at gmail.com  Thu Jul 12 19:21:18 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 12 Jul 2012 14:21:18 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CACLX4jSVrAwRRN7RZpkQAv78PXB0ik58AVpbgJPSgAGBYTdJ9g@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
	<CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
	<CACLX4jSVrAwRRN7RZpkQAv78PXB0ik58AVpbgJPSgAGBYTdJ9g@mail.gmail.com>
Message-ID: <CAP_800o5aced2bC8Mfm6=-Apy+7Sb-CFK=MtN2gorcPRUUJiXg@mail.gmail.com>


On Thu, Jul 12, 2012 at 2:11 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> On Thu, Jul 12, 2012 at 2:07 PM, Markus Mottl <markus.mottl at gmail.com> wrote:
>> Is this related to your submissions patch queue?  Just wondering,
>> because there has been no activity on Bitbucket for a while.
>
> This was more of a quick hack.  We're now doing an internal CR cycle
> which has stuff pulled in from the patch queue, which we hope to put
> out again soon.  Getting this process to work smoothly has been
> something of a chore, but I'm hoping it will be in good shape soon.

Since the patch queue approach is still new, it may be helpful to get
feedback on what works well for you, e.g. on how to properly structure
patches such that your work is minimized (= acceptance rate
maximized).

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From markus.mottl at gmail.com  Thu Jul 12 19:25:26 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Thu, 12 Jul 2012 14:25:26 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CACLX4jRWP_T3Qa4DwgPW7VZU6EPaTmCUKOcnbjjEXO+ZRauGdQ@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
	<CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
	<CACLX4jRWP_T3Qa4DwgPW7VZU6EPaTmCUKOcnbjjEXO+ZRauGdQ@mail.gmail.com>
Message-ID: <CAP_800qCwakq9ReB9hfAbinoqpU2kHek8Rznqh2S2rFBKGc3YQ@mail.gmail.com>


On Thu, Jul 12, 2012 at 2:13 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> And the static web-page seems like a nice idea.  For it to be a
> reasonable URL, we'll need to create a "team" account with a name like
> "ocamlcoresuite" or somesuch.  Otherwise, it looks like we'd end up
> with yminsky.bitbucket.org, which is no good...

Hm, yeah, the login name requirement is somewhat annoying.  It's
probably not too hard to just create a new account with a more generic
name.  The Oasis files also refer to https://bitbucket.org/yminsky/...
as package homepage, which could then be improved, too.

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From francois.berenger.working at gmail.com  Fri Jul 13 02:30:06 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Thu, 12 Jul 2012 18:30:06 -0700 (PDT)
Subject: any logger in core?
Message-ID: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com>

Hi,

Is there a logger in core or recommended to use with core?

I used one which is derived from batteries logger but I'm
not so happy with it (I need to preprocess files to expand
the log directives).

Thanks,
F.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120712/ef5e1ef3/attachment-0001.html>

From sylvain at le-gall.net  Thu Jul 12 18:59:08 2012
From: sylvain at le-gall.net (Sylvain Le Gall)
Date: Thu, 12 Jul 2012 19:59:08 +0200
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
Message-ID: <CAOCAUGO_430HmbRMVJ=iUCcUzpM-W7RjJ7_sMUSF0nGDED-73w@mail.gmail.com>


Hello,

2012/7/12 Yaron Minsky <yminsky at janestreet.com>:
> A new downloads page is now available.  I'm going to delete the
> downloads from the bitbucket page because bitbucket doesn't give a
> good way of automating uploads or organizing them in directories.
>
> There's also a new set of tarballs (108.00.02) with support for OCaml 4.0.

If you are interested it's possible to upload automatically to
forge.ocamlcore.org. I have the (python) script to do that. Not sure
what you want to do with directories and if the forge will fit you
need. You can of course host just the files there and keep your hg
repo on bitbucket (which is way nicer than what we can offer with our
simple mercurial webserver).

Ping me if you want the script.

Cheers
Sylvain


From yminsky at janestreet.com  Fri Jul 13 04:10:52 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Thu, 12 Jul 2012 23:10:52 -0400
Subject: any logger in core?
In-Reply-To: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com>
References: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com>
Message-ID: <CACLX4jQt56bfewfQVxS7X5qL-bO-nLn=WD=rzMU8hsheLhb0xA@mail.gmail.com>


There's a logging module in Async that we use internally, that will be
added to the public release in the next release, which should be
within a month.

y

On Thu, Jul 12, 2012 at 9:30 PM, Francois Berenger
<francois.berenger.working at gmail.com> wrote:
> Hi,
>
> Is there a logger in core or recommended to use with core?
>
> I used one which is derived from batteries logger but I'm
> not so happy with it (I need to preprocess files to expand
> the log directives).
>
> Thanks,
> F.
>


From yminsky at janestreet.com  Fri Jul 13 11:44:44 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Fri, 13 Jul 2012 06:44:44 -0400
Subject: any logger in core?
In-Reply-To: <117B162E-CB0D-4901-BB27-327AD6C654C7@recoil.org>
References: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com>
	<CACLX4jQt56bfewfQVxS7X5qL-bO-nLn=WD=rzMU8hsheLhb0xA@mail.gmail.com>
	<117B162E-CB0D-4901-BB27-327AD6C654C7@recoil.org>
Message-ID: <CACLX4jTYb3ZP4RP+zFcr63=jZHDaLjaOmjjtM6k60H6WCDKTeQ@mail.gmail.com>


Not as a camlp4 extension, and I'm not sure it's worthwhile in most
cases.  Usually, if we want the ability to debug in our program, we
want it as a runtime option in production, not as a compile-time
option.  So when we have code that generates errors that we may not
use, we use a type called Error.t, which is a lazy datastructure.
Thus, we can call:

Error.create "Blorb wasn't found among the list of blonks" (blorb,blonks)
   <:sexp_of<Blorb.t * Blonk.t list>>

which runs in just a handful of nanos, and creates the Error.  Only
when you actually serialize to a string do you pay the full conversion
costs.  In our world, many errors are generated that aren't serialized
(they're serialized on demand when someone queries the system to look
at what's gone wrong), and this covers most of the horrible logging
cost.

y

On Fri, Jul 13, 2012 at 5:11 AM, Anil Madhavapeddy <anil at recoil.org> wrote:
> Does it have a camlp4 facility to remove some logging statements at
> compile-time (e.g. expensive debug prints), out of interest?  This is
> a pretty neat feature of Pa_lwt_log.
>
> -anil
>
> On 13 Jul 2012, at 04:10, Yaron Minsky wrote:
>
>> There's a logging module in Async that we use internally, that will be
>> added to the public release in the next release, which should be
>> within a month.
>>
>> y
>>
>> On Thu, Jul 12, 2012 at 9:30 PM, Francois Berenger
>> <francois.berenger.working at gmail.com> wrote:
>>> Hi,
>>>
>>> Is there a logger in core or recommended to use with core?
>>>
>>> I used one which is derived from batteries logger but I'm
>>> not so happy with it (I need to preprocess files to expand
>>> the log directives).
>>>
>>> Thanks,
>>> F.
>>>
>>
>


From francois.berenger.working at gmail.com  Fri Jul 13 01:47:03 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Fri, 13 Jul 2012 09:47:03 +0900
Subject: [Caml-list] library/framework needed for distributed programming
 in OCaml
In-Reply-To: <CACLX4jTyD9wtxxyxTEMt4FGzH6-3aDYjDEmr-Uf74gSZf6zwUA@mail.gmail.com>
References: <f55ae3a1-1bdc-4dee-a073-abc9a260d428@googlegroups.com>
	<CACLX4jTyD9wtxxyxTEMt4FGzH6-3aDYjDEmr-Uf74gSZf6zwUA@mail.gmail.com>
Message-ID: <CAMQaOgNFmxc6YFS3RuiX_ZS5pwQBRjuho6BvAkvpaEgsL-MGNg@mail.gmail.com>


On Thu, Jul 12, 2012 at 8:26 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> One library that you might find of use is Async's RPC library, which
> allows you to specify simple RPC-like protocols, where the messages
> are all handled by bin-prot.
>
> There is no framework-level compression, however.  That needs to be
> done at the application level.

Thanks! I'll have a look at this too then.

> y
>
> On Thu, Jul 12, 2012 at 4:48 AM, Francois Berenger
> <francois.berenger.working at gmail.com> wrote:
>> -------- Original Message --------
>> Subject:        Re: [Caml-list] library/framework needed
>> for distributed programming in OCaml
>> Date:   Thu, 12 Jul 2012 17:46:06 +0900
>> From:   Francois Berenger
>>
>> Hello,
>>
>> For the moment, the best answer I got privately in my mailbox
>> is to combine Janestreet's bin_prot and async libraries
>> or Martin Jambon's biniou with Lwt.
>>
>> I kind of like what I read on async and bin_prot.
>>
>> On 07/11/2012 07:21 PM, Lauri Alanko wrote:
>>  > Hi.
>>  >
>>  > I also had need of such a library when I started working on a
>>  > distributed programming project, but as I couldn't find anything that
>>  > fulfilled my requirements, I wrote my own.
>>  >
>>  > The library is Lwt-based, and provides pretty straightforward remotely
>>  > callable procedures:
>>  >
>>  > type ('a, 'r) handle
>>  > val ($) : ('a, 'r) handle -> 'a -> 'r Lwt.t
>>  > val publish : ('a -> 'r Lwt.t) -> ('a, 'r) handle
>>  >
>>  > The library is designed to work in a firewalled environment: firewalled
>>  > nodes can join the distributed network by connecting to any accessible
>>  > host of that network with an open listener. All messages between nodes
>>  > are routed through the network.
>>  >
>>  > type connection
>>  > val connect :
>>  > ?host:string -> ?port:int -> unit -> connection Lwt.t
>>  > val listen :
>>  > ?port:int -> unit -> unit Lwt.t
>>  >
>>  > Initial values are obtained with "roots". A root (usually a handle, or a
>>  > record or first-class module containing handles) is keyed to a string,
>>  > and once set by a node, it can be discovered by any node in the network:
>>  >
>>  > val get_root : string -> 'a Lwt.t
>>  > val set_root : string -> 'a -> unit Lwt.t
>>  >
>>  > This is the only unsafe part of the interface: the getter and setter
>>  > _must_ agree on the type of the root or all hell breaks loose.
>>  >
>>  > I haven't published the library yet, since I have wanted to feel free to
>>  > modify it as required by my application, but if you are interested, and
>>  > cannot find a more mature solution, I'd be happy to provide it for your
>>  > inspection.
>>
>> If you publish your code somewhere (github is really nice), I would
>> be very happy to have a look at it.
>>
>> Thanks a lot,
>> F.


From anil at recoil.org  Fri Jul 13 10:11:44 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 13 Jul 2012 10:11:44 +0100
Subject: any logger in core?
In-Reply-To: <CACLX4jQt56bfewfQVxS7X5qL-bO-nLn=WD=rzMU8hsheLhb0xA@mail.gmail.com>
References: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com> <CACLX4jQt56bfewfQVxS7X5qL-bO-nLn=WD=rzMU8hsheLhb0xA@mail.gmail.com>
Message-ID: <117B162E-CB0D-4901-BB27-327AD6C654C7@recoil.org>


Does it have a camlp4 facility to remove some logging statements at 
compile-time (e.g. expensive debug prints), out of interest?  This is
a pretty neat feature of Pa_lwt_log.

-anil

On 13 Jul 2012, at 04:10, Yaron Minsky wrote:

> There's a logging module in Async that we use internally, that will be
> added to the public release in the next release, which should be
> within a month.
> 
> y
> 
> On Thu, Jul 12, 2012 at 9:30 PM, Francois Berenger
> <francois.berenger.working at gmail.com> wrote:
>> Hi,
>> 
>> Is there a logger in core or recommended to use with core?
>> 
>> I used one which is derived from batteries logger but I'm
>> not so happy with it (I need to preprocess files to expand
>> the log directives).
>> 
>> Thanks,
>> F.
>> 
> 



From anil at recoil.org  Sat Jul 14 17:15:18 2012
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 14 Jul 2012 17:15:18 +0100
Subject: any logger in core?
In-Reply-To: <CACLX4jTYb3ZP4RP+zFcr63=jZHDaLjaOmjjtM6k60H6WCDKTeQ@mail.gmail.com>
References: <06c42acb-1cc9-4f27-abf8-ba33fb2dc85c@googlegroups.com>
 <CACLX4jQt56bfewfQVxS7X5qL-bO-nLn=WD=rzMU8hsheLhb0xA@mail.gmail.com>
 <117B162E-CB0D-4901-BB27-327AD6C654C7@recoil.org>
 <CACLX4jTYb3ZP4RP+zFcr63=jZHDaLjaOmjjtM6k60H6WCDKTeQ@mail.gmail.com>
Message-ID: <20120714161518.GJ14582@dark.recoil.org>


This is really nice, as the caller could render the Error in a more
structured way (e.g. in a js_of_ocaml-driven page).  The Pa_lwt_log is a
simple extension that just converts a "log" entry into a "if level then
log" equivalent.

-anil

On Fri, Jul 13, 2012 at 06:44:44AM -0400, Yaron Minsky wrote:
> Not as a camlp4 extension, and I'm not sure it's worthwhile in most
> cases.  Usually, if we want the ability to debug in our program, we
> want it as a runtime option in production, not as a compile-time
> option.  So when we have code that generates errors that we may not
> use, we use a type called Error.t, which is a lazy datastructure.
> Thus, we can call:
> 
> Error.create "Blorb wasn't found among the list of blonks" (blorb,blonks)
>    <:sexp_of<Blorb.t * Blonk.t list>>
> 
> which runs in just a handful of nanos, and creates the Error.  Only
> when you actually serialize to a string do you pay the full conversion
> costs.  In our world, many errors are generated that aren't serialized
> (they're serialized on demand when someone queries the system to look
> at what's gone wrong), and this covers most of the horrible logging
> cost.
> 
> y
> 
> On Fri, Jul 13, 2012 at 5:11 AM, Anil Madhavapeddy <anil at recoil.org> wrote:
> > Does it have a camlp4 facility to remove some logging statements at
> > compile-time (e.g. expensive debug prints), out of interest?  This is
> > a pretty neat feature of Pa_lwt_log.
> >
> > -anil
> >
> > On 13 Jul 2012, at 04:10, Yaron Minsky wrote:
> >
> >> There's a logging module in Async that we use internally, that will be
> >> added to the public release in the next release, which should be
> >> within a month.
> >>
> >> y
> >>
> >> On Thu, Jul 12, 2012 at 9:30 PM, Francois Berenger
> >> <francois.berenger.working at gmail.com> wrote:
> >>> Hi,
> >>>
> >>> Is there a logger in core or recommended to use with core?
> >>>
> >>> I used one which is derived from batteries logger but I'm
> >>> not so happy with it (I need to preprocess files to expand
> >>> the log directives).
> >>>
> >>> Thanks,
> >>> F.
> >>>


From markus.mottl at gmail.com  Sun Jul 15 03:56:22 2012
From: markus.mottl at gmail.com (Markus Mottl)
Date: Sat, 14 Jul 2012 22:56:22 -0400
Subject: New downloads page: https://ocaml.janestreet.com/ocaml-core/
In-Reply-To: <CACLX4jRWP_T3Qa4DwgPW7VZU6EPaTmCUKOcnbjjEXO+ZRauGdQ@mail.gmail.com>
References: <CACLX4jSvR+++V-mTPhABrire=6Kemce2FMZepVfptb8fWgc+pw@mail.gmail.com>
	<CAP_800qu040QWK_n6Pg92QUtkORUKERsXZVvALupBKGnyfzFog@mail.gmail.com>
	<CACLX4jRWP_T3Qa4DwgPW7VZU6EPaTmCUKOcnbjjEXO+ZRauGdQ@mail.gmail.com>
Message-ID: <CAP_800q-Vf1905CqOG1K=HCp_Bpkhkpiptq6W+w-Q23c8oE5+w@mail.gmail.com>


On Thu, Jul 12, 2012 at 2:13 PM, Yaron Minsky <yminsky at janestreet.com> wrote:
> And the static web-page seems like a nice idea.  For it to be a
> reasonable URL, we'll need to create a "team" account with a name like
> "ocamlcoresuite" or somesuch.  Otherwise, it looks like we'd end up
> with yminsky.bitbucket.org, which is no good...

Just saw this, which might address your "reasonable URL" problem:

  https://confluence.atlassian.com/display/BITBUCKET/Using+your+Own+bitbucket+Domain+Name

I won't need the above DNS approach for my purposes, but I've tested
their static web server now and uploaded API-documentation for all
projects I maintain (including type_conv, bin_prot, and sexplib):
http://mmottl.bitbucket.org

Those Bitbucket guys are really making life too easy...

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl at gmail.com


From seanmcl at gmail.com  Mon Jul 16 14:45:21 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Mon, 16 Jul 2012 09:45:21 -0400
Subject: installation feature-request
Message-ID: <CAO4dZbemz7AaCKNsuE+MTiOhywyCK7JcBuGVZ29RoHg6Q42jZQ@mail.gmail.com>


Hi,

I think it would be nice if

ocaml-core/build-and-install

would fail immediately if you don't have required libraries installed.
 Now it gets quite a ways and then tells you to install res, ounit,
etc.
Then re-running build-and-install takes a significant time before it
gets back to where it failed.

Best,

Sean


From seanmcl at gmail.com  Mon Jul 16 14:47:27 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Mon, 16 Jul 2012 09:47:27 -0400
Subject: installation feature-request
In-Reply-To: <CAO4dZbemz7AaCKNsuE+MTiOhywyCK7JcBuGVZ29RoHg6Q42jZQ@mail.gmail.com>
References: <CAO4dZbemz7AaCKNsuE+MTiOhywyCK7JcBuGVZ29RoHg6Q42jZQ@mail.gmail.com>
Message-ID: <CAO4dZbe9_oCUwFPT2TaLCjKzmY9pukmygrMp7sJf+-5B=mc0Cw@mail.gmail.com>


Note that this request is for lazy people like me that don't read Readme.txt :)

On Mon, Jul 16, 2012 at 9:45 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Hi,
>
> I think it would be nice if
>
> ocaml-core/build-and-install
>
> would fail immediately if you don't have required libraries installed.
>  Now it gets quite a ways and then tells you to install res, ounit,
> etc.
> Then re-running build-and-install takes a significant time before it
> gets back to where it failed.
>
> Best,
>
> Sean


From seanmcl at gmail.com  Mon Jul 16 15:47:16 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Mon, 16 Jul 2012 10:47:16 -0400
Subject: Shell.mkdir on OSX
Message-ID: <CAO4dZbdKcg3vjs35GJUsg85Mhm9xf-Q+h7J4xBh476fieOWH9Q@mail.gmail.com>


Hi,

Shell.mkdir ~perm:0o777 "foo"

runs

/bin/mkdir --mode 777 foo

--mode is not an option on OSX.  -m works on both.  Should we

1) change the flag (which could lead to many such changes)
2) do conditional directives as in other os-dependent modules
3) Assume Shell only works on Linux and write our own OSX Shell module?

Sean


From seanmcl at gmail.com  Mon Jul 16 15:49:45 2012
From: seanmcl at gmail.com (Sean McLaughlin)
Date: Mon, 16 Jul 2012 10:49:45 -0400
Subject: Shell.mkdir on OSX
In-Reply-To: <CAO4dZbdKcg3vjs35GJUsg85Mhm9xf-Q+h7J4xBh476fieOWH9Q@mail.gmail.com>
References: <CAO4dZbdKcg3vjs35GJUsg85Mhm9xf-Q+h7J4xBh476fieOWH9Q@mail.gmail.com>
Message-ID: <CAO4dZbeW9YovWbon7Re3Ei4G+x=xtAii-uqHydHhCEfOsf=0mA@mail.gmail.com>


Another option is to use gmkdir on OSX, from the gnu-coreutils
package, but that's another conditional.

On Mon, Jul 16, 2012 at 10:47 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Hi,
>
> Shell.mkdir ~perm:0o777 "foo"
>
> runs
>
> /bin/mkdir --mode 777 foo
>
> --mode is not an option on OSX.  -m works on both.  Should we
>
> 1) change the flag (which could lead to many such changes)
> 2) do conditional directives as in other os-dependent modules
> 3) Assume Shell only works on Linux and write our own OSX Shell module?
>
> Sean


From yury.sulsky at gmail.com  Mon Jul 16 16:35:07 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Mon, 16 Jul 2012 11:35:07 -0400
Subject: installation feature-request
In-Reply-To: <CAO4dZbe9_oCUwFPT2TaLCjKzmY9pukmygrMp7sJf+-5B=mc0Cw@mail.gmail.com>
References: <CAO4dZbemz7AaCKNsuE+MTiOhywyCK7JcBuGVZ29RoHg6Q42jZQ@mail.gmail.com>
	<CAO4dZbe9_oCUwFPT2TaLCjKzmY9pukmygrMp7sJf+-5B=mc0Cw@mail.gmail.com>
Message-ID: <CAEDxudztW+o+aSNid5PWztErAYm6JLTD91cO+ef6=8YA_GsGiQ@mail.gmail.com>


Good idea, Sean! I'll add the checks to the script.

On Mon, Jul 16, 2012 at 9:47 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Note that this request is for lazy people like me that don't read Readme.txt :)
>
> On Mon, Jul 16, 2012 at 9:45 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
>> Hi,
>>
>> I think it would be nice if
>>
>> ocaml-core/build-and-install
>>
>> would fail immediately if you don't have required libraries installed.
>>  Now it gets quite a ways and then tells you to install res, ounit,
>> etc.
>> Then re-running build-and-install takes a significant time before it
>> gets back to where it failed.
>>
>> Best,
>>
>> Sean


From yminsky at janestreet.com  Mon Jul 16 22:54:57 2012
From: yminsky at janestreet.com (Yaron Minsky)
Date: Mon, 16 Jul 2012 22:54:57 +0100
Subject: Shell.mkdir on OSX
In-Reply-To: <CAO4dZbeW9YovWbon7Re3Ei4G+x=xtAii-uqHydHhCEfOsf=0mA@mail.gmail.com>
References: <CAO4dZbdKcg3vjs35GJUsg85Mhm9xf-Q+h7J4xBh476fieOWH9Q@mail.gmail.com>
	<CAO4dZbeW9YovWbon7Re3Ei4G+x=xtAii-uqHydHhCEfOsf=0mA@mail.gmail.com>
Message-ID: <CACLX4jS9wwSOEGmw9TqGRrJ_Y=CvKAUG1Qh3H2XgW+X5YWKgDA@mail.gmail.com>


-m seems like the better solution.  I'll get a quick patch to that
effect into our current tree.

y

On Mon, Jul 16, 2012 at 3:49 PM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Another option is to use gmkdir on OSX, from the gnu-coreutils
> package, but that's another conditional.
>
> On Mon, Jul 16, 2012 at 10:47 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
>> Hi,
>>
>> Shell.mkdir ~perm:0o777 "foo"
>>
>> runs
>>
>> /bin/mkdir --mode 777 foo
>>
>> --mode is not an option on OSX.  -m works on both.  Should we
>>
>> 1) change the flag (which could lead to many such changes)
>> 2) do conditional directives as in other os-dependent modules
>> 3) Assume Shell only works on Linux and write our own OSX Shell module?
>>
>> Sean


From francois.berenger.working at gmail.com  Tue Jul 17 03:41:52 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Tue, 17 Jul 2012 11:41:52 +0900
Subject: installation feature-request
In-Reply-To: <CAO4dZbe9_oCUwFPT2TaLCjKzmY9pukmygrMp7sJf+-5B=mc0Cw@mail.gmail.com>
References: <CAO4dZbemz7AaCKNsuE+MTiOhywyCK7JcBuGVZ29RoHg6Q42jZQ@mail.gmail.com>
	<CAO4dZbe9_oCUwFPT2TaLCjKzmY9pukmygrMp7sJf+-5B=mc0Cw@mail.gmail.com>
Message-ID: <CAMQaOgP2fNj0EObDmCQtH8bPaOVK1qp=3kiJauBbTBYbee5ofQ@mail.gmail.com>


On Mon, Jul 16, 2012 at 10:47 PM, Sean McLaughlin <seanmcl at gmail.com> wrote:
> Note that this request is for lazy people like me that don't read Readme.txt :)

But, if it can be programmed instead of being in a text file, that benefits
everybody so your remark is pertinent.

> On Mon, Jul 16, 2012 at 9:45 AM, Sean McLaughlin <seanmcl at gmail.com> wrote:
>> Hi,
>>
>> I think it would be nice if
>>
>> ocaml-core/build-and-install
>>
>> would fail immediately if you don't have required libraries installed.
>>  Now it gets quite a ways and then tells you to install res, ounit,
>> etc.
>> Then re-running build-and-install takes a significant time before it
>> gets back to where it failed.
>>
>> Best,
>>
>> Sean


From francois.berenger.working at gmail.com  Wed Jul 18 05:15:38 2012
From: francois.berenger.working at gmail.com (Francois Berenger)
Date: Tue, 17 Jul 2012 21:15:38 -0700 (PDT)
Subject: distributed map function on lists using async and bin_prot
Message-ID: <a762565e-39fe-493e-b7f4-5e437ecfe4b3@googlegroups.com>

Hello,

As I am a great fan of the parmap library 
(https://github.com/rdicosmo/parmap),
in order to get me started with async and bin_prot, I'd like to
try writing a function to distribute computations (List.map).

Does it sounds like a feasible thing?

I'm open to pointers to inspiring source code.

The final goal would be to be able to combine
distributed computations with parallel ones.
Lilke with the MPI and OpenMP couple in the C world.

Thanks a lot,
F.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120717/27043c2b/attachment-0001.html>

From 5764c029b688c1c0d24a2e97cd764f at gmail.com  Wed Jul 18 10:39:37 2012
From: 5764c029b688c1c0d24a2e97cd764f at gmail.com (Matej Kosik)
Date: Wed, 18 Jul 2012 10:39:37 +0100
Subject: String.to_list
Message-ID: <50068459.1070504@gmail.com>


Hi,

I am somewhat puzzled by the fact that when I use Core, in addition to:

	String.to_list_rev

, which is mentioned in the documentation, I can also call

	String.to_list

. Where did that function come from? I cannot find it in StringLabels
module (in the standard library). I could live with this but I would
rather like to know why is that. :-)

Thanks in advance for helping me.


From dhouse at janestreet.com  Wed Jul 18 10:43:37 2012
From: dhouse at janestreet.com (David House)
Date: Wed, 18 Jul 2012 10:43:37 +0100
Subject: String.to_list
In-Reply-To: <50068459.1070504@gmail.com>
References: <50068459.1070504@gmail.com>
Message-ID: <CAK=fH+hJ2THpsCTd_HoR84T2avyNMOyj6YOhaE_ebzUPi1xccg@mail.gmail.com>


The [to_list] function comes from the Container interface. So if
you're wondering why you can't see it in core_string.mli, it's because
at the top of that file we say "include Container.S0". If you're
wondering why it's not in the OCamlDocs documentation, the reason is
similar: you should be able to click on the Container link near the
top of the page to see that signature. (That being said, OCamlDocs
doesn't cope too well with webs of includes and functors, so I
wouldn't be totally surprised if this didn't work completely well.)

On Wed, Jul 18, 2012 at 10:39 AM, Matej Kosik
<5764c029b688c1c0d24a2e97cd764f at gmail.com> wrote:
> Hi,
>
> I am somewhat puzzled by the fact that when I use Core, in addition to:
>
>         String.to_list_rev
>
> , which is mentioned in the documentation, I can also call
>
>         String.to_list
>
> . Where did that function come from? I cannot find it in StringLabels
> module (in the standard library). I could live with this but I would
> rather like to know why is that. :-)
>
> Thanks in advance for helping me.


From orbitz at gmail.com  Wed Jul 25 00:56:25 2012
From: orbitz at gmail.com (orbitz)
Date: Wed, 25 Jul 2012 01:56:25 +0200
Subject: Running external processes in Async?
Message-ID: <CAAHaHt=8J4UsTL9u1Fi35BR8HXq-Dm1=Kn7m2v_Mb0vtYcaxDg@mail.gmail.com>

Hello! I am trying to run external programs without blocking. Am I just
missing the module that defines that for I am not seeing anything?

Thanks.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120725/b574d675/attachment-0001.html>

From dhouse at janestreet.com  Wed Jul 25 09:10:43 2012
From: dhouse at janestreet.com (David House)
Date: Wed, 25 Jul 2012 09:10:43 +0100
Subject: Running external processes in Async?
In-Reply-To: <CAAHaHt=8J4UsTL9u1Fi35BR8HXq-Dm1=Kn7m2v_Mb0vtYcaxDg@mail.gmail.com>
References: <CAAHaHt=8J4UsTL9u1Fi35BR8HXq-Dm1=Kn7m2v_Mb0vtYcaxDg@mail.gmail.com>
Message-ID: <CAK=fH+gCCMQTLwH7ifJczb6s=UTrCLwUTav495awhirzavAVQA@mail.gmail.com>


The general way of calling blocking things from inside async is to use
the In_thread module. In particular, here you should be able to do
something like:

  In_thread.run (fun () ->
    Core.Unix.create_process ~prog:"/usr/bin/ssh" ~args:["my-host";
"ls"; "/tmp"])

On Wed, Jul 25, 2012 at 12:56 AM, orbitz <orbitz at gmail.com> wrote:
> Hello! I am trying to run external programs without blocking. Am I just
> missing the module that defines that for I am not seeing anything?
>
> Thanks.
>


From 5764c029b688c1c0d24a2e97cd764f at gmail.com  Fri Jul 27 15:54:14 2012
From: 5764c029b688c1c0d24a2e97cd764f at gmail.com (Matej Kosik)
Date: Fri, 27 Jul 2012 15:54:14 +0100
Subject: String.sexpable
Message-ID: <5012AB96.3080906@gmail.com>


Hello,

I have used library on Debian, where it is easily installable.

I would like to adjust those programs so that I can compile and run them
on CentOS.

There, I have to use GODI.
I have managed to compile and install Core from source.
(specificly:
 https://ocaml.janestreet.com/ocaml-core/108.00.01/core-suite-108.00.01.tar.gz
)

Is there any documentation on the web matching this particular Core version?
If not, is there a way how I can rebuild it and get something like this:

	http://www.janestreet.com/ocaml/janestreet-ocamldocs/core/index.html

but something fresher.

Thank you in advance.


From yury.sulsky at gmail.com  Mon Jul 30 13:11:39 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Mon, 30 Jul 2012 08:11:39 -0400
Subject: String.sexpable
In-Reply-To: <CAMu2m2+rDrSpDGkkhWWUF=ZS45bzNc9Xw_pSz1Yy98NkUuXoTw@mail.gmail.com>
References: <5012AB96.3080906@gmail.com>
	<CAMu2m2+rDrSpDGkkhWWUF=ZS45bzNc9Xw_pSz1Yy98NkUuXoTw@mail.gmail.com>
Message-ID: <CAEDxudy6y0yHi93zZVxBdzcB10d1qeAO-6qpWR9Nyn=iHz2Nqw@mail.gmail.com>

Hi Ashish,

I think Matej just wants some ocamldoc-generated documentation available to
browse online. We're going to post it today. Sorry for not doing that
sooner!

Yury
On Jul 30, 2012 6:35 AM, "Ashish Agarwal" <agarwal1975 at gmail.com> wrote:

> Can you explain more specifically what trouble you are having. I'm not
> sure if you are having a problem compiling Core, a program that uses Core,
> Core's documentation, all of these, or something else. You also mention
> sexpable in the subject line but don't ask a question about it.
>
> On Friday, July 27, 2012, Matej Kosik <
> 5764c029b688c1c0d24a2e97cd764f at gmail.com> wrote:
>
>> Hello,
>>
>> I have used library on Debian, where it is easily installable.
>>
>> I would like to adjust those programs so that I can compile and run them
>> on CentOS.
>>
>> There, I have to use GODI.
>> I have managed to compile and install Core from source.
>> (specificly:
>>
>> https://ocaml.janestreet.com/ocaml-core/108.00.01/core-suite-108.00.01.tar.gz
>> )
>>
>> Is there any documentation on the web matching this particular Core
>> version?
>> If not, is there a way how I can rebuild it and get something like this:
>>
>>
>> http://www.janestreet.com/ocaml/janestreet-ocamldocs/core/index.html
>>
>> but something fresher.
>>
>> Thank you in advance.
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120730/adc5f255/attachment-0001.html>

From agarwal1975 at gmail.com  Mon Jul 30 11:35:11 2012
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Mon, 30 Jul 2012 11:35:11 +0100
Subject: String.sexpable
In-Reply-To: <5012AB96.3080906@gmail.com>
References: <5012AB96.3080906@gmail.com>
Message-ID: <CAMu2m2+rDrSpDGkkhWWUF=ZS45bzNc9Xw_pSz1Yy98NkUuXoTw@mail.gmail.com>

Can you explain more specifically what trouble you are having. I'm not sure
if you are having a problem compiling Core, a program that uses Core,
Core's documentation, all of these, or something else. You also mention
sexpable in the subject line but don't ask a question about it.

On Friday, July 27, 2012, Matej Kosik <
5764c029b688c1c0d24a2e97cd764f at gmail.com> wrote:

> Hello,
>
> I have used library on Debian, where it is easily installable.
>
> I would like to adjust those programs so that I can compile and run them
> on CentOS.
>
> There, I have to use GODI.
> I have managed to compile and install Core from source.
> (specificly:
>
> https://ocaml.janestreet.com/ocaml-core/108.00.01/core-suite-108.00.01.tar.gz
> )
>
> Is there any documentation on the web matching this particular Core
> version?
> If not, is there a way how I can rebuild it and get something like this:
>
>
> http://www.janestreet.com/ocaml/janestreet-ocamldocs/core/index.html
>
> but something fresher.
>
> Thank you in advance.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120730/c7d35f4c/attachment-0001.html>

From 5764c029b688c1c0d24a2e97cd764f at gmail.com  Mon Jul 30 16:14:23 2012
From: 5764c029b688c1c0d24a2e97cd764f at gmail.com (Matej Kosik)
Date: Mon, 30 Jul 2012 16:14:23 +0100
Subject: String.sexpable
In-Reply-To: <CAEDxudy6y0yHi93zZVxBdzcB10d1qeAO-6qpWR9Nyn=iHz2Nqw@mail.gmail.com>
References: <5012AB96.3080906@gmail.com> <CAMu2m2+rDrSpDGkkhWWUF=ZS45bzNc9Xw_pSz1Yy98NkUuXoTw@mail.gmail.com> <CAEDxudy6y0yHi93zZVxBdzcB10d1qeAO-6qpWR9Nyn=iHz2Nqw@mail.gmail.com>
Message-ID: <5016A4CF.3070906@gmail.com>


On 30/07/12 13:11, Yury Sulsky wrote:
> Hi Ashish,
> 
> I think Matej just wants some ocamldoc-generated documentation available
> to browse online. We're going to post it today. Sorry for not doing that
> sooner!

Actually, if I were not too afraid, I would peer inside deeper in the
source-code and consequently found out, that the documentation could be
easily generated.

So the original question was quite dumb; as usual :-)
But sometimes one has to ask in order to figure out the answer himself.


From yury.sulsky at gmail.com  Tue Jul 31 00:16:36 2012
From: yury.sulsky at gmail.com (Yury Sulsky)
Date: Mon, 30 Jul 2012 19:16:36 -0400
Subject: String.sexpable
In-Reply-To: <5016A4CF.3070906@gmail.com>
References: <5012AB96.3080906@gmail.com>
	<CAMu2m2+rDrSpDGkkhWWUF=ZS45bzNc9Xw_pSz1Yy98NkUuXoTw@mail.gmail.com>
	<CAEDxudy6y0yHi93zZVxBdzcB10d1qeAO-6qpWR9Nyn=iHz2Nqw@mail.gmail.com>
	<5016A4CF.3070906@gmail.com>
Message-ID: <CAEDxudzdH1KbVYxJcfE_Sh40b44cozcAre5PH0sU-gwBOgzRqg@mail.gmail.com>

Hi Matej,

It's true that you can generate documentation yourself. But Here it is in
browseable form online:
https://ocaml.janestreet.com/ocaml-core/108.00.02/doc/

It's far from perfect, but  we'll improve it in the next release.

On Mon, Jul 30, 2012 at 11:14 AM, Matej Kosik <
5764c029b688c1c0d24a2e97cd764f at gmail.com> wrote:

> On 30/07/12 13:11, Yury Sulsky wrote:
> > Hi Ashish,
> >
> > I think Matej just wants some ocamldoc-generated documentation available
> > to browse online. We're going to post it today. Sorry for not doing that
> > sooner!
>
> Actually, if I were not too afraid, I would peer inside deeper in the
> source-code and consequently found out, that the documentation could be
> easily generated.
>
> So the original question was quite dumb; as usual :-)
> But sometimes one has to ask in order to figure out the answer himself.
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/core/attachments/20120730/6f36e90c/attachment-0001.html>

