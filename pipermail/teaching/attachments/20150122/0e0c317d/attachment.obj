;; NOTE: you ust put the correct correct path to tuareg install here
(add-to-list 'load-path 
	     (expand-file-name "~/.elisp/tuareg-mode"))

;; -- common-lisp compatibility if not added earlier in your .emacs
(require 'cl)

;; -- Tweaks for OS X -------------------------------------
;; Tweak for problem on OS X where Emacs.app doesn't run the right
;; init scripts when invoking a sub-shell
(defun set-exec-path-from-shell-PATH ()
  "Set up Emacs' `exec-path' and PATH environment variable to
  match that used by the user's shell.

This is particularly useful under Mac OSX, where GUI apps are not
started from a shell."
  (interactive)
  (let ((path-from-shell
         (replace-regexp-in-string
          "[ \t\n]*$" ""
          (shell-command-to-string "$SHELL --login -i -c 'echo $PATH'"))
         ))
    (setenv "PATH" path-from-shell)
    (setq exec-path (split-string path-from-shell path-separator)))
  )
(cond
 ((eq window-system 'ns) ; macosx
  (set-exec-path-from-shell-PATH)))

;; -- opam and utop setup --------------------------------
;; Setup environment variables using opam
(setq opam-share
      (substring (shell-command-to-string "opam config var share") 0 -1))
(dolist
   (var (car (read-from-string
	      (shell-command-to-string "opam config env --sexp"))))
 (setenv (car var) (cadr var)))
(add-to-list 'load-path (concat opam-share "/emacs/site-lisp"))
;; Automatically load utop.el
(autoload 'utop "utop" "Toplevel for OCaml" t)
(autoload 'utop-setup-ocaml-buffer "utop" "Toplevel for OCaml" t)

;; -- Tuareg mode -----------------------------------------

(require 'tuareg)
(setq auto-mode-alist 
      (append '(("\\.ml[ily]?$" . tuareg-mode))
          auto-mode-alist))
(add-hook 'tuareg-mode-hook 'utop-setup-ocaml-buffer)

;; -- ocp-indent -----------------------------------------

(require 'ocp-indent)

;; -- merlin setup ---------------------------------------

(require 'merlin)

;; Enable Merlin for ML buffers
(add-hook 'tuareg-mode-hook 'merlin-mode)

;; So you can do it on a mac, where `C-<up>` and `C-<down>` are used
;; by spaces.
(define-key merlin-mode-map
  (kbd "C-c <up>") 'merlin-type-enclosing-go-up)
(define-key merlin-mode-map
  (kbd "C-c <down>") 'merlin-type-enclosing-go-down)
(set-face-background 'merlin-type-face "skyblue")

;; -- enable auto-complete -------------------------------
;; Not required, but useful along with merlin-mode
;;(require 'auto-complete)
;;(add-hook 'tuareg-mode-hook 'auto-complete-mode)

