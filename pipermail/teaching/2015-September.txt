From daniel.buenzli at erratique.ch  Tue Sep  1 12:40:53 2015
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Tue, 1 Sep 2015 12:40:53 +0100
Subject: [Teaching] Fw: [wg-windows] Minimal virtual machine for OCaml
In-Reply-To: <CABAtnw__zsyC10cSAR6QSVmj6ZgbuX3KWAfQzup8if8yAngL+g@mail.gmail.com>
References: <CABAtnw__zsyC10cSAR6QSVmj6ZgbuX3KWAfQzup8if8yAngL+g@mail.gmail.com>
Message-ID: <9A94AA51109B47E1AF5AC201CCED55AC@erratique.ch>

Forwarding this to the teaching mailing list. They may be more people in the position of responding to these questions.


Le mardi, 1 septembre 2015 ? 12:20, Thranur Andul a ?crit :

> While OPAM for Windows is not ready, I'm considering some teaching experiments using Linux virtual machines running inside Windows.
>  
> I suppose it has already been tried by some people here, so maybe someone could share their experiences with that approach.
>  
> In particular, one of my main issues is disk space: how much space would be necessary for a minimal Linux install with a graphical interface (XFCE, LXDE or even lighter) and the dependencies needed to install OCaml and the most common OPAM packages (e.g. Core,  
> js_of_ocaml, Coq, etc.)? Is there already a Linux distribution made for that?
>  
> Also, related details about virtual machine experiences (issues, limitations, recommendations, etc.) are welcome.
>  
> _______________________________________________
> wg-windows mailing list
> wg-windows at lists.ocaml.org (mailto:wg-windows at lists.ocaml.org)
> http://lists.ocaml.org/listinfo/wg-windows




From misterherr at freenet.de  Tue Sep  1 14:27:28 2015
From: misterherr at freenet.de (Mr. Herr)
Date: Tue, 1 Sep 2015 15:27:28 +0200
Subject: [Teaching] Fw: [wg-windows] Minimal virtual machine for OCaml
In-Reply-To: <9A94AA51109B47E1AF5AC201CCED55AC@erratique.ch>
References: <CABAtnw__zsyC10cSAR6QSVmj6ZgbuX3KWAfQzup8if8yAngL+g@mail.gmail.com>
 <9A94AA51109B47E1AF5AC201CCED55AC@erratique.ch>
Message-ID: <55E5A7C0.7000108@freenet.de>

On 01.09.2015 13:40, Daniel B?nzli wrote:
> Forwarding this to the teaching mailing list. They may be more people in the position of responding to these questions.
>
>
> Le mardi, 1 septembre 2015 ? 12:20, Thranur Andul a ?crit :
>
>> While OPAM for Windows is not ready, I'm considering some teaching experiments using Linux virtual machines running inside Windows.
>>   
>> I suppose it has already been tried by some people here, so maybe someone could share their experiences with that approach.
>>   
>> In particular, one of my main issues is disk space: how much space would be necessary for a minimal Linux install with a graphical interface (XFCE, LXDE or even lighter) and the dependencies needed to install OCaml and the most common OPAM packages (e.g. Core,
>> js_of_ocaml, Coq, etc.)? Is there already a Linux distribution made for that?
>>   
>> Also, related details about virtual machine experiences (issues, limitations, recommendations, etc.) are welcome.
>>   
Caveat: this is a general answer, my point of view, and not done with OCaml

It certainly is technically feasible, depending on your desktop hardware even easy to do.

You need a VM software. I had good experiences with Virtualbox. With MS solutions you 
must find the right product for your Win version
(Virtual PC or Hyperv ) - I don't think it will beat Virtualbox in your scenario.

Disk space: starting from 3G for the OS and ~4G for the opam directory, this all 
depends directly on what you install.
You need quite some compilers, make and tools, and devel packages. Do a pilot 
install, of course.

Linux distro: any current distribution will do. Performance will not be much of an 
issue unless you have very weak desktops. I am using virtualbox on my old notebook. 
But some ocaml package compile times are quite long even on beefy machines (coq comes 
to mind).

As for the desktop environment: lighter is better, but not an issue either, even on 
KDE you can turn off effects and background tasks to speed it up.
Take what you and your students know.

skipping "... usual software ... coq ..." - is it an ocaml introduction ? :-)

But:

There is a big risk of wasting time with subjects not in the centre of your course, 
especially Linux setup and use.

This depends directly on the "unix/linux literacy" of your students.


/Str.



From yotambarnoy at gmail.com  Tue Sep  1 16:26:18 2015
From: yotambarnoy at gmail.com (Yotam Barnoy)
Date: Tue, 1 Sep 2015 11:26:18 -0400
Subject: [Teaching] [wg-windows] Fwd: Fw: Minimal virtual machine for
	OCaml
In-Reply-To: <CABAtnw_Gj=acvP0iROEP56MUPNbXa3T11GgmR69228hu2EyCbg@mail.gmail.com>
References: <CABAtnw__zsyC10cSAR6QSVmj6ZgbuX3KWAfQzup8if8yAngL+g@mail.gmail.com>
 <9A94AA51109B47E1AF5AC201CCED55AC@erratique.ch> <55E5A7C0.7000108@freenet.de>
 <CABAtnw_hrU71Qcq0c5rdLocCWUkVFrS0Mqq0cGW_6fR5JVJpTw@mail.gmail.com>
 <CABAtnw_Gj=acvP0iROEP56MUPNbXa3T11GgmR69228hu2EyCbg@mail.gmail.com>
Message-ID: <CAN6ygOkH3uGPk+miqxcog2Gz_nKLbGLAj8zWDox2134gNi_q-g@mail.gmail.com>

I highly recommend that you look into vagrant https://www.vagrantup.com/
Last time I helped run a class that needed standardized components, vagrant
was the easiest choice. It's very uniform (everyone has the 'vagrant' user
by default), automatically sets up sharing of directories, and allows for
bring-up/tear-down/sshing in using very simple commands. You'll be able to
post simple instructions that everyone will be able to follow.

I recommend sticking with an Ubuntu distribution. Anything else will be
much harder to support.

Of course, a more ideal setting is to have everyone use the University's
standard unix accounts, as those will be even more standardized. But this
is a close second.

-Yotam

On Tue, Sep 1, 2015 at 11:02 AM, Thranur Andul <thranur at gmail.com> wrote:

> Thank you for the advice.
>
> To clarify what I'm looking for: I'm trying to make Linux usage as
> transparent as possible, exactly to avoid requiring much unix literacy,
> hence why I mentioned disk space usage. It's not so much an issue in
> itself, but if I wanted to distribute a static VM image with everything
> already installed, its size might become an issue.
>
> For instance, Eclipse, which used to be a quite large application, has a
> download size of 270 MB. It does not include the JVM, but after
> decompressing I'd estimate it (Eclipse + JVM) at about 1 GB.
>
> I don't know the exact size of Xcode, but some websites estimate it at 2-4
> GB.
>
> Visual Studio is probably the largest one, at about 6 GB.
>
> Certainly, installing a Linux via a VM includes much more than an IDE +
> compiler + runtime, but if it requires 7GB, it's still a hard pill to
> swallow.
>
> This brings me to another point: disk usage anxiety. Even with dynamic
> disk images, I'm afraid to give them a large size, so I end up worrying
> that it will run out of space. And the kinds of errors that happen in such
> situations are much less obvious to understand, especially for linux
> newbies. Should I just lose my fear and allow my disk images to dynamically
> grow to be as large as they want to be?
>
> For those reasons, I asked about a minimalistic Linux with the lightest
> possible UI, to save on disk space as much as possible. It's not so much
> about CPU, which for the intended purposes should be mostly fine.
>
> Finally, on the issue of transparency, another major difficulty I have
> when using a Linux VM is that the file systems are separate, so even if I
> tell the students to "just download that file and open it on your
> <Linux/OCaml-based application>", they'll either:
>
> a) Download it using Windows, then not be able to find the file using the
> Linux application (or have to move it to a shared folder, which they often
> forget);
> b) Be forced to use a browser inside Linux, which requires more disk
> space, setting up the browser, etc.
>
> I never found it very easy to configure Samba shares on Linux or to set up
> the filesystem in a way that maximum sharing could be achieved with minimal
> user intervention, especially without knowing in advance some parameters
> such as host/username, etc. Which would make it even more complicated to
> set up in advance in a static VM image for that purpose.
>
> Is there a better solution concerning transparency between Windows and
> Linux for OCaml usage purposes? E.g. using a Merlin-configured Emacs from
> Linux that could open a file downloaded via Windows and then compile an
> OCaml application that could easily read the files in a Windows directory
> to perform some action on them? It sounds almost like Cygwin, but that's
> another can of worms...
>
> Any partial solutions or tips you can give me about each of these issues
> is already greatly useful to me. I usually end up finding some solutions
> myself, but it takes a lot of time searching and trying, and if someone had
> already done exactly the same thing before, well, I'd be glad to learn from
> them!
>
> Best regards,
>
> On Tue, Sep 1, 2015 at 3:27 PM, Mr. Herr <misterherr at freenet.de> wrote:
>
>> Caveat: this is a general answer, my point of view, and not done with
>> OCaml
>>
>> It certainly is technically feasible, depending on your desktop hardware
>> even easy to do.
>>
>> You need a VM software. I had good experiences with Virtualbox. With MS
>> solutions you must find the right product for your Win version
>> (Virtual PC or Hyperv ) - I don't think it will beat Virtualbox in your
>> scenario.
>>
>
>> Disk space: starting from 3G for the OS and ~4G for the opam directory,
>> this all depends directly on what you install.
>> You need quite some compilers, make and tools, and devel packages. Do a
>> pilot install, of course.
>>
>
>> Linux distro: any current distribution will do. Performance will not be
>> much of an issue unless you have very weak desktops. I am using virtualbox
>> on my old notebook. But some ocaml package compile times are quite long
>> even on beefy machines (coq comes to mind).
>>
>> As for the desktop environment: lighter is better, but not an issue
>> either, even on KDE you can turn off effects and background tasks to speed
>> it up.
>> Take what you and your students know.
>>
>> skipping "... usual software ... coq ..." - is it an ocaml introduction ?
>> :-)
>>
>> But:
>>
>> There is a big risk of wasting time with subjects not in the centre of
>> your course, especially Linux setup and use.
>>
>> This depends directly on the "unix/linux literacy" of your students.
>>
>>
>> /Str.
>>
>>
>>
>
>
> _______________________________________________
> wg-windows mailing list
> wg-windows at lists.ocaml.org
> http://lists.ocaml.org/listinfo/wg-windows
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/teaching/attachments/20150901/c4556c9c/attachment.html>

From anil at recoil.org  Wed Sep  2 21:34:13 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Wed, 2 Sep 2015 13:34:13 -0700
Subject: [Teaching] [wg-windows] Minimal virtual machine for OCaml
In-Reply-To: <CABAtnw__zsyC10cSAR6QSVmj6ZgbuX3KWAfQzup8if8yAngL+g@mail.gmail.com>
References: <CABAtnw__zsyC10cSAR6QSVmj6ZgbuX3KWAfQzup8if8yAngL+g@mail.gmail.com>
Message-ID: <AFE940AA-DB91-4474-AF1B-DF54716104BE@recoil.org>

On 1 Sep 2015, at 04:20, Thranur Andul <thranur at gmail.com> wrote:
> 
> While OPAM for Windows is not ready, I'm considering some teaching experiments using Linux virtual machines running inside Windows.
> 
> I suppose it has already been tried by some people here, so maybe someone could share their experiences with that approach.
> 
> In particular, one of my main issues is disk space: how much space would be necessary for a minimal Linux install with a graphical interface (XFCE, LXDE or even lighter) and the dependencies needed to install OCaml and the most common OPAM packages (e.g. Core, 
> js_of_ocaml, Coq, etc.)? Is there already a Linux distribution made for that?
> 
> Also, related details about virtual machine experiences (issues, limitations, recommendations, etc.) are welcome.

One fairly easy way to get the VM images that is portable across operating systems is to use Vagrant.  One that has been recently updated (by the CS3110 folk at Cornell) is at:

https://github.com/cs3110/vagrant-opam <https://github.com/cs3110/vagrant-opam>

That sets up a common development environment and OPAM.

It's tricky to get things more lightweight than this when using VMs.  One option I'm investigating is the feasibility of using Docker containers (via Boot2Docker) in order to have a CLI-only interface to the environment.  The user experience with this is to install the recently released Docker Toolbox on either Windows or MacOS X, and then use a CLI to get a Linux container.  Some more work is needed to expose a graphical interface, so it's not quite ideal for student use yet.

cheers,
Anil
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/teaching/attachments/20150902/54487330/attachment.html>

From thranur at gmail.com  Tue Sep  1 15:18:48 2015
From: thranur at gmail.com (Thranur Andul)
Date: Tue, 1 Sep 2015 16:18:48 +0200
Subject: [Teaching] Fw: [wg-windows] Minimal virtual machine for OCaml
In-Reply-To: <55E5A7C0.7000108@freenet.de>
References: <CABAtnw__zsyC10cSAR6QSVmj6ZgbuX3KWAfQzup8if8yAngL+g@mail.gmail.com>
 <9A94AA51109B47E1AF5AC201CCED55AC@erratique.ch>
 <55E5A7C0.7000108@freenet.de>
Message-ID: <CABAtnw_hrU71Qcq0c5rdLocCWUkVFrS0Mqq0cGW_6fR5JVJpTw@mail.gmail.com>

Thank you for the advice.

To clarify what I'm looking for: I'm trying to make Linux usage as
transparent as possible, exactly to avoid requiring much unix literacy,
hence why I mentioned disk space usage. It's not so much an issue in
itself, but if I wanted to distribute a static VM image with everything
already installed, its size might become an issue.

For instance, Eclipse, which used to be a quite large application, has a
download size of 270 MB. It does not include the JVM, but after
decompressing I'd estimate it (Eclipse + JVM) at about 1 GB.

I don't know the exact size of Xcode, but some websites estimate it at 2-4
GB.

Visual Studio is probably the largest one, at about 6 GB.

Certainly, installing a Linux via a VM includes much more than an IDE +
compiler + runtime, but if it requires 7GB, it's still a hard pill to
swallow.

This brings me to another point: disk usage anxiety. Even with dynamic disk
images, I'm afraid to give them a large size, so I end up worrying that it
will run out of space. And the kinds of errors that happen in such
situations are much less obvious to understand, especially for linux
newbies. Should I just lose my fear and allow my disk images to dynamically
grow to be as large as they want to be?

For those reasons, I asked about a minimalistic Linux with the lightest
possible UI, to save on disk space as much as possible. It's not so much
about CPU, which for the intended purposes should be mostly fine.

Finally, on the issue of transparency, another major difficulty I have when
using a Linux VM is that the file systems are separate, so even if I tell
the students to "just download that file and open it on your
<Linux/OCaml-based application>", they'll either:

a) Download it using Windows, then not be able to find the file using the
Linux application (or have to move it to a shared folder, which they often
forget);
b) Be forced to use a browser inside Linux, which requires more disk space,
setting up the browser, etc.

I never found it very easy to configure Samba shares on Linux or to set up
the filesystem in a way that maximum sharing could be achieved with minimal
user intervention, especially without knowing in advance some parameters
such as host/username, etc. Which would make it even more complicated to
set up in advance in a static VM image for that purpose.

Is there a better solution concerning transparency between Windows and
Linux for OCaml usage purposes? E.g. using a Merlin-configured Emacs from
Linux that could open a file downloaded via Windows and then compile an
OCaml application that could easily read the files in a Windows directory
to perform some action on them? It sounds almost like Cygwin, but that's
another can of worms...

Any partial solutions or tips you can give me about each of these issues is
already greatly useful to me. I usually end up finding some solutions
myself, but it takes a lot of time searching and trying, and if someone had
already done exactly the same thing before, well, I'd be glad to learn from
them!

Best regards,

On Tue, Sep 1, 2015 at 3:27 PM, Mr. Herr <misterherr at freenet.de> wrote:

> Caveat: this is a general answer, my point of view, and not done with OCaml
>
> It certainly is technically feasible, depending on your desktop hardware
> even easy to do.
>
> You need a VM software. I had good experiences with Virtualbox. With MS
> solutions you must find the right product for your Win version
> (Virtual PC or Hyperv ) - I don't think it will beat Virtualbox in your
> scenario.
>

> Disk space: starting from 3G for the OS and ~4G for the opam directory,
> this all depends directly on what you install.
> You need quite some compilers, make and tools, and devel packages. Do a
> pilot install, of course.
>

> Linux distro: any current distribution will do. Performance will not be
> much of an issue unless you have very weak desktops. I am using virtualbox
> on my old notebook. But some ocaml package compile times are quite long
> even on beefy machines (coq comes to mind).
>
> As for the desktop environment: lighter is better, but not an issue
> either, even on KDE you can turn off effects and background tasks to speed
> it up.
> Take what you and your students know.
>
> skipping "... usual software ... coq ..." - is it an ocaml introduction ?
> :-)
>
> But:
>
> There is a big risk of wasting time with subjects not in the centre of
> your course, especially Linux setup and use.
>
> This depends directly on the "unix/linux literacy" of your students.
>
>
> /Str.
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/teaching/attachments/20150901/a901607f/attachment.html>

From benjaminlgreenman at gmail.com  Sun Sep 13 18:40:24 2015
From: benjaminlgreenman at gmail.com (Benjamin Greenman)
Date: Sun, 13 Sep 2015 13:40:24 -0400
Subject: [Teaching] Fw: [wg-windows] Minimal virtual machine for OCaml
In-Reply-To: <CABAtnw_hrU71Qcq0c5rdLocCWUkVFrS0Mqq0cGW_6fR5JVJpTw@mail.gmail.com>
References: <CABAtnw__zsyC10cSAR6QSVmj6ZgbuX3KWAfQzup8if8yAngL+g@mail.gmail.com>
 <9A94AA51109B47E1AF5AC201CCED55AC@erratique.ch> <55E5A7C0.7000108@freenet.de>
 <CABAtnw_hrU71Qcq0c5rdLocCWUkVFrS0Mqq0cGW_6fR5JVJpTw@mail.gmail.com>
Message-ID: <CAFUu9R5JV910n+xsWrZrvyC==sfYGEvQUZSC+Qw0jkzen_GD1A@mail.gmail.com>

The cs3110 vagrant script <https://github.com/cs3110/vagrant-opam> unpacks
to a 4.5GB machine after a small initial download from github. This
includes the chromium browser (much easier than setting up shared folders),
but not eclipse, xcode, or visual studio. Instead, we include basic emacs,
vim, and sublime configurations.

We used the lubuntu <http://lubuntu.net/> distribution to help keep things
small.

On Tue, Sep 1, 2015 at 10:18 AM, Thranur Andul <thranur at gmail.com> wrote:

> Thank you for the advice.
>
> To clarify what I'm looking for: I'm trying to make Linux usage as
> transparent as possible, exactly to avoid requiring much unix literacy,
> hence why I mentioned disk space usage. It's not so much an issue in
> itself, but if I wanted to distribute a static VM image with everything
> already installed, its size might become an issue.
>
> For instance, Eclipse, which used to be a quite large application, has a
> download size of 270 MB. It does not include the JVM, but after
> decompressing I'd estimate it (Eclipse + JVM) at about 1 GB.
>
> I don't know the exact size of Xcode, but some websites estimate it at 2-4
> GB.
>
> Visual Studio is probably the largest one, at about 6 GB.
>
> Certainly, installing a Linux via a VM includes much more than an IDE +
> compiler + runtime, but if it requires 7GB, it's still a hard pill to
> swallow.
>
> This brings me to another point: disk usage anxiety. Even with dynamic
> disk images, I'm afraid to give them a large size, so I end up worrying
> that it will run out of space. And the kinds of errors that happen in such
> situations are much less obvious to understand, especially for linux
> newbies. Should I just lose my fear and allow my disk images to dynamically
> grow to be as large as they want to be?
>
> For those reasons, I asked about a minimalistic Linux with the lightest
> possible UI, to save on disk space as much as possible. It's not so much
> about CPU, which for the intended purposes should be mostly fine.
>
> Finally, on the issue of transparency, another major difficulty I have
> when using a Linux VM is that the file systems are separate, so even if I
> tell the students to "just download that file and open it on your
> <Linux/OCaml-based application>", they'll either:
>
> a) Download it using Windows, then not be able to find the file using the
> Linux application (or have to move it to a shared folder, which they often
> forget);
> b) Be forced to use a browser inside Linux, which requires more disk
> space, setting up the browser, etc.
>
> I never found it very easy to configure Samba shares on Linux or to set up
> the filesystem in a way that maximum sharing could be achieved with minimal
> user intervention, especially without knowing in advance some parameters
> such as host/username, etc. Which would make it even more complicated to
> set up in advance in a static VM image for that purpose.
>
> Is there a better solution concerning transparency between Windows and
> Linux for OCaml usage purposes? E.g. using a Merlin-configured Emacs from
> Linux that could open a file downloaded via Windows and then compile an
> OCaml application that could easily read the files in a Windows directory
> to perform some action on them? It sounds almost like Cygwin, but that's
> another can of worms...
>
> Any partial solutions or tips you can give me about each of these issues
> is already greatly useful to me. I usually end up finding some solutions
> myself, but it takes a lot of time searching and trying, and if someone had
> already done exactly the same thing before, well, I'd be glad to learn from
> them!
>
> Best regards,
>
> On Tue, Sep 1, 2015 at 3:27 PM, Mr. Herr <misterherr at freenet.de> wrote:
>
>> Caveat: this is a general answer, my point of view, and not done with
>> OCaml
>>
>> It certainly is technically feasible, depending on your desktop hardware
>> even easy to do.
>>
>> You need a VM software. I had good experiences with Virtualbox. With MS
>> solutions you must find the right product for your Win version
>> (Virtual PC or Hyperv ) - I don't think it will beat Virtualbox in your
>> scenario.
>>
>
>> Disk space: starting from 3G for the OS and ~4G for the opam directory,
>> this all depends directly on what you install.
>> You need quite some compilers, make and tools, and devel packages. Do a
>> pilot install, of course.
>>
>
>> Linux distro: any current distribution will do. Performance will not be
>> much of an issue unless you have very weak desktops. I am using virtualbox
>> on my old notebook. But some ocaml package compile times are quite long
>> even on beefy machines (coq comes to mind).
>>
>> As for the desktop environment: lighter is better, but not an issue
>> either, even on KDE you can turn off effects and background tasks to speed
>> it up.
>> Take what you and your students know.
>>
>> skipping "... usual software ... coq ..." - is it an ocaml introduction ?
>> :-)
>>
>> But:
>>
>> There is a big risk of wasting time with subjects not in the centre of
>> your course, especially Linux setup and use.
>>
>> This depends directly on the "unix/linux literacy" of your students.
>>
>>
>> /Str.
>>
>>
>>
>
> _______________________________________________
> Teaching mailing list
> Teaching at lists.ocaml.org
> http://lists.ocaml.org/listinfo/teaching
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/teaching/attachments/20150913/43c92561/attachment.html>

