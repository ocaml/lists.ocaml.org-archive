From dwws2 at cam.ac.uk  Tue Feb 10 14:30:33 2015
From: dwws2 at cam.ac.uk (David Sheets)
Date: Tue, 10 Feb 2015 14:30:33 +0000
Subject: [ocaml-platform] codoc 0.2.0: an alpha release of a new OCaml
	documentation generator
Message-ID: <54DA1609.7050306@cam.ac.uk>

Hello,

Yesterday, OCaml Labs published an alpha version of a new OCaml 
documentation generator, codoc 0.2.0 <https://github.com/dsheets/codoc>. 
To try it out, simply follow the directions in the README on that page. 
For a sample of the current, default output of the tool, see 
<http://dsheets.github.io/codoc/>.

codoc's aim is to provide a widely useful set of tools for generating 
OCaml documentation. In particular, we've strived to:

1. Cover all of OCaml's features
2. Provide accurate name resolution and linking
3. Support cross-linking between different packages
4. Expose interfaces to the components we've used to build codoc
5. Provide a magic-free command-line interface to the tool itself
6. Reduce external dependencies and default integration with other tools

We haven't yet achieved all of these at all levels of our tool stack but 
we are getting close. codoc 0.2.0 is usable today (if a little rough in 
some areas like default CSS).

Please keep in mind that codoc, doc-ock-lib, and doc-ock-xml are still 
under heavy development and are not feature complete. Notably, there are 
some important outstanding issues:

1. Class and class type documentation has no generated HTML 
<https://github.com/dsheets/codoc/issues/9>
2. CSS is subpar (<https://github.com/dsheets/codoc/issues/22> and others)
3. codoc html does not understand --package 
<https://github.com/dsheets/codoc/issues/42>
4. opam doc is too invasive (temporary for demonstration purposes; 
tracked by <https://github.com/dsheets/codoc/issues/48>)
5. Documentation syntax errors are not reported in the correct phase or 
obviously enough <https://github.com/dsheets/codoc/issues/58> 
<https://github.com/lpw25/doc-ock-lib/issues/48>
6. Character sets are not handled correctly 
<https://github.com/lpw25/doc-ock-lib/issues/43>
7. -pack and cmt extraction are not supported 
<https://github.com/lpw25/doc-ock-lib/issues/35> and 
<https://github.com/lpw25/doc-ock-lib/issues/3>
8. Inclusion/substitution is not supported 
<https://github.com/lpw25/doc-ock-lib/issues/2>

The developers are very happy to take suggestions, comments, complaints, 
bug reports, and patches at <https://github.com/dsheets/codoc/issues>. 
We do hope that you'll let us know what you think and help us build a 
next generation documentation tool which will serve our community admirably.

Keep Caml and Curry On,

David Sheets

From hannes at mehnert.org  Mon Feb 16 11:19:26 2015
From: hannes at mehnert.org (Hannes Mehnert)
Date: Mon, 16 Feb 2015 11:19:26 +0000
Subject: [ocaml-platform] Secure OPAM?
In-Reply-To: <8E4BC1E0-8354-439D-A17B-93F3EB81D7D2@recoil.org>
References: <CAPFanBHVJvKwGOsy8zzrJc6QySiXqvQTwKoZurvOYkKJP5sBmg@mail.gmail.com>
 <8E4BC1E0-8354-439D-A17B-93F3EB81D7D2@recoil.org>
Message-ID: <54E1D23E.1010502@mehnert.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA384

On 01/18/2015 21:11, Anil Madhavapeddy wrote:
> This is certainly something that needs to go on the roadmap sooner 
> rather than later, and issue #423 is still the place to record your
> opinions.
> 
> Having a signify-like model to let an OPAM mirroring script sign 
> distfiles would be a good first step, since the complexities of 
> managing a per-contributor signing infrastructure would be quite 
> significantly more work.

Just as a short news-item - haskell debian build host got compromised
yesterday - https://news.ycombinator.com/item?id=9054795
I do think we need to keep the build hosts/repository hosts outside of
the trust chain, and push signing all the way up to the authors (or
rather maintainers).

> Note that the OPAM remote is HTTPS by default since OPAM 1.1.

That sounds great - where are the trust anchors taken from? Systemwide
(if so, from where/how/why)?

Once the dust clears up here, I plan to work on implementing tuf
(instead of signify/PGP, it seems like I'm biased towards TLS/X.509
these days to be able to use in-house tools).


Hannes
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCQAGBQJU4dI+AAoJELyJZYjffCjuGZMP/11wi9xt1g944EltKpMsusLG
JRELq49Pde6ziAmw8Oo/rGAxY2N7nGWZg/1gC6izCFw8K0UV+g+6h51noNxJgdUY
4AvsZC7uhlvIhVOz1YbTgnJrPk0YMnG7mV+vY3IVwMaQ2iLczfMmUsJ55bVrFmwb
BavB0rfBVDA7ZsoAtgnHuYBAQ6Sab/IKk1EaG12icA0UrVUHkJ98QZ7o47AJD2yh
bSQItmV55tnzU1wUQtWCyXxz7B4FDdSPeazZyH+LRpeOHKx0OCqG4sChkV1bV5zQ
9EGheF0GTY0LH77YPnuzVgiSIFgt/9ZQzBsKP/Bt81k0ueFdLAbm3KEQqcljIWyA
Bls4/hybb+9M4+n5ejptC8LNoUIiBrmsE8o0CEIMLYABTe9o4iaa7bAeloMtibBW
SD7Xc4JOODIgwk53G3qW5ZIF9fslz4l8BWNSt9OfNLHaWXuNiyL18QM6j0K4ot/Z
cOzSoy1IEU6tVNzslz2BMyoPTO2znzcRg4qdjiZcU93CWQyOldDBpRe1ANwXj51Q
/6PX4LIMOVUv0ZQx10IcOazyZ4S8IvihWZZuPghmscPb8ALnuLRrPzA3lCQQtRAR
997RtqpzCsDiWZo4/OeGEpFTWKzILqHCJqpSJtvJ9eV4PBv7bprT8OOQI1nEA/MU
ZuEwkTbocNlW4L2KXC0Q
=8a5A
-----END PGP SIGNATURE-----

From trevorsummerssmith at gmail.com  Thu Feb 26 16:50:20 2015
From: trevorsummerssmith at gmail.com (Trevor Smith)
Date: Thu, 26 Feb 2015 16:50:20 +0000
Subject: [ocaml-platform] OPAM -- why does it remove packages?
Message-ID: <CAG-KTt8pArJ9Hsu90e8O4wxoEZhjU9BtJJyDRPwAKFw_VHc9yw@mail.gmail.com>

Hello,

First, this is my first time posting here: thanks for all of the work on
your great tool! I really appreciate it.

I would like some help in figuring out why opam wants to remove a given
package. What is the preferred debugging loop people use to figure out this
sort of "package conflict" problem? I could not find anything on the
website about this and it seems like it would be a common problem so I am
emailing you all.

Example: I currently have piqi version 0.7.1 installed. I would like to
install cohttp 0.15.2 with async support. When I try to do this opam wants
to remove both piqi and piqilib.

In debugging this I just sort of floundered around a bit -- I started by
seeing if any older versions of cohttp with async work. Sure enough,
version 0.14.0 works but 0.15.0 seems to have introduced this desire to
remove piqi dependency. Upon further inspection, it looks like base64 2.0.0
(a dependency of cohttp with async v 0.15.0) is what is causing opam to
want to remove piqi. However, I could not yet find anywhere that will
explain to me _why this is the case_.

Thoughts? Thank you.

Trevor
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/platform/attachments/20150226/903b20bb/attachment.html>

From thomas at gazagnaire.org  Thu Feb 26 16:57:06 2015
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Thu, 26 Feb 2015 16:57:06 +0000
Subject: [ocaml-platform] OPAM -- why does it remove packages?
In-Reply-To: <CAG-KTt8pArJ9Hsu90e8O4wxoEZhjU9BtJJyDRPwAKFw_VHc9yw@mail.gmail.com>
References: <CAG-KTt8pArJ9Hsu90e8O4wxoEZhjU9BtJJyDRPwAKFw_VHc9yw@mail.gmail.com>
Message-ID: <14048406-BDE5-495A-9EA6-61E53D41878B@gazagnaire.org>

Hi,

> I would like some help in figuring out why opam wants to remove a given package. What is the preferred debugging loop people use to figure out this sort of "package conflict" problem? I could not find anything on the website about this and it seems like it would be a common problem so I am emailing you all.

The best way to debug this is to add version constraints to your queries. For instance:

$ opam install piqi.0.7.1 cohttp.0.15.2

The solver returns some information about the conflicts that opam tries to pretty print as well as possible (it's not always very clear, though, but usually it helps to understand what happens).

Thomas

> 
> Example: I currently have piqi version 0.7.1 installed. I would like to install cohttp 0.15.2 with async support. When I try to do this opam wants to remove both piqi and piqilib.
> 
> In debugging this I just sort of floundered around a bit -- I started by seeing if any older versions of cohttp with async work. Sure enough, version 0.14.0 works but 0.15.0 seems to have introduced this desire to remove piqi dependency. Upon further inspection, it looks like base64 2.0.0 (a dependency of cohttp with async v 0.15.0) is what is causing opam to want to remove piqi. However, I could not yet find anywhere that will explain to me _why this is the case_.
> 
> Thoughts? Thank you.
> 
> Trevor
> _______________________________________________
> Platform mailing list
> Platform at lists.ocaml.org
> http://lists.ocaml.org/listinfo/platform


From anil at recoil.org  Thu Feb 26 16:59:25 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 26 Feb 2015 16:59:25 +0000
Subject: [ocaml-platform] OPAM -- why does it remove packages?
In-Reply-To: <14048406-BDE5-495A-9EA6-61E53D41878B@gazagnaire.org>
References: <CAG-KTt8pArJ9Hsu90e8O4wxoEZhjU9BtJJyDRPwAKFw_VHc9yw@mail.gmail.com>
 <14048406-BDE5-495A-9EA6-61E53D41878B@gazagnaire.org>
Message-ID: <0BB4D868-0069-43D9-87CF-BFBFD4F196EE@recoil.org>

Another important thing to check is that you've got the aspcud external solver installed (via the `aspcud` binary being present).  Otherwise, the internal solver has some known issues around upgrade and an excessive tendency to remove packages unnecessarily. 

-anil

> On 26 Feb 2015, at 16:57, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:
> 
> Hi,
> 
>> I would like some help in figuring out why opam wants to remove a given package. What is the preferred debugging loop people use to figure out this sort of "package conflict" problem? I could not find anything on the website about this and it seems like it would be a common problem so I am emailing you all.
> 
> The best way to debug this is to add version constraints to your queries. For instance:
> 
> $ opam install piqi.0.7.1 cohttp.0.15.2
> 
> The solver returns some information about the conflicts that opam tries to pretty print as well as possible (it's not always very clear, though, but usually it helps to understand what happens).
> 
> Thomas
> 
>> 
>> Example: I currently have piqi version 0.7.1 installed. I would like to install cohttp 0.15.2 with async support. When I try to do this opam wants to remove both piqi and piqilib.
>> 
>> In debugging this I just sort of floundered around a bit -- I started by seeing if any older versions of cohttp with async work. Sure enough, version 0.14.0 works but 0.15.0 seems to have introduced this desire to remove piqi dependency. Upon further inspection, it looks like base64 2.0.0 (a dependency of cohttp with async v 0.15.0) is what is causing opam to want to remove piqi. However, I could not yet find anywhere that will explain to me _why this is the case_.
>> 
>> Thoughts? Thank you.
>> 
>> Trevor
>> _______________________________________________
>> Platform mailing list
>> Platform at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/platform
> 
> _______________________________________________
> Platform mailing list
> Platform at lists.ocaml.org
> http://lists.ocaml.org/listinfo/platform
> 


From trevorsummerssmith at gmail.com  Thu Feb 26 17:49:24 2015
From: trevorsummerssmith at gmail.com (Trevor Smith)
Date: Thu, 26 Feb 2015 17:49:24 +0000
Subject: [ocaml-platform] OPAM -- why does it remove packages?
References: <CAG-KTt8pArJ9Hsu90e8O4wxoEZhjU9BtJJyDRPwAKFw_VHc9yw@mail.gmail.com>
 <14048406-BDE5-495A-9EA6-61E53D41878B@gazagnaire.org>
 <0BB4D868-0069-43D9-87CF-BFBFD4F196EE@recoil.org>
Message-ID: <CAG-KTt_8bh1DXKUWofAfC8cqsxaBhdKCALhT1vTE2w5DkPebBw@mail.gmail.com>

Thanks all! Thomas -- your suggestion worked like a charm.

$$ opam install piqi.0.7.1 cohttp.0.15.2
[NOTE] Package piqi is already installed (current version is 0.7.1).
The following dependencies couldn't be met:
  - piqi -> piqilib -> base64 < 2.0.0
  - cohttp -> base64 >= 2.0.0
Your request can't be satisfied:
  - Conflicting version constraints for base64

No solution found, exiting

I'd suggest adding this to the FAQ. Also I wonder if the default output
could have a switch added that could show some more of that info, or
perhaps the dependency tree printed out with a given switch. Just some
thoughts.

Thanks!

Trevor

On Thu Feb 26 2015 at 11:59:28 AM Anil Madhavapeddy <anil at recoil.org> wrote:

> Another important thing to check is that you've got the aspcud external
> solver installed (via the `aspcud` binary being present).  Otherwise, the
> internal solver has some known issues around upgrade and an excessive
> tendency to remove packages unnecessarily.
>
> -anil
>
> > On 26 Feb 2015, at 16:57, Thomas Gazagnaire <thomas at gazagnaire.org>
> wrote:
> >
> > Hi,
> >
> >> I would like some help in figuring out why opam wants to remove a given
> package. What is the preferred debugging loop people use to figure out this
> sort of "package conflict" problem? I could not find anything on the
> website about this and it seems like it would be a common problem so I am
> emailing you all.
> >
> > The best way to debug this is to add version constraints to your
> queries. For instance:
> >
> > $ opam install piqi.0.7.1 cohttp.0.15.2
> >
> > The solver returns some information about the conflicts that opam tries
> to pretty print as well as possible (it's not always very clear, though,
> but usually it helps to understand what happens).
> >
> > Thomas
> >
> >>
> >> Example: I currently have piqi version 0.7.1 installed. I would like to
> install cohttp 0.15.2 with async support. When I try to do this opam wants
> to remove both piqi and piqilib.
> >>
> >> In debugging this I just sort of floundered around a bit -- I started
> by seeing if any older versions of cohttp with async work. Sure enough,
> version 0.14.0 works but 0.15.0 seems to have introduced this desire to
> remove piqi dependency. Upon further inspection, it looks like base64 2.0.0
> (a dependency of cohttp with async v 0.15.0) is what is causing opam to
> want to remove piqi. However, I could not yet find anywhere that will
> explain to me _why this is the case_.
> >>
> >> Thoughts? Thank you.
> >>
> >> Trevor
> >> _______________________________________________
> >> Platform mailing list
> >> Platform at lists.ocaml.org
> >> http://lists.ocaml.org/listinfo/platform
> >
> > _______________________________________________
> > Platform mailing list
> > Platform at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/platform
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/platform/attachments/20150226/13b40534/attachment.html>

From daniel.buenzli at erratique.ch  Thu Feb 26 18:35:48 2015
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Thu, 26 Feb 2015 19:35:48 +0100
Subject: [ocaml-platform] OPAM -- why does it remove packages?
In-Reply-To: <14048406-BDE5-495A-9EA6-61E53D41878B@gazagnaire.org>
References: <CAG-KTt8pArJ9Hsu90e8O4wxoEZhjU9BtJJyDRPwAKFw_VHc9yw@mail.gmail.com>
 <14048406-BDE5-495A-9EA6-61E53D41878B@gazagnaire.org>
Message-ID: <0E976E932C5D43A1B1231A8269EC2CEA@erratique.ch>

Le jeudi, 26 f?vrier 2015 ? 17:57, Thomas Gazagnaire a ?crit :
> The best way to debug this is to add version constraints to your queries. For instance:
>  
> $ opam install piqi.0.7.1 cohttp.0.15.2
>  
> The solver returns some information about the conflicts that opam tries to pretty print as well as possible (it's not always very clear, though, but usually it helps to understand what happens).
It's the second time I see this trick mentioned. This should be in the FAQ.  

Daniel

   



