From daniel.buenzli at erratique.ch  Sat Mar 12 21:35:38 2016
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Sat, 12 Mar 2016 22:35:38 +0100
Subject: [ocaml-platform] Package compilation and debug mode
Message-ID: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>

Hello,  

I'd like to know what the consensus is about distributing packages that always compile in debug mode. It seems that some persons do want to have debug always enabled [1,2], but the discussion is not clear cut [1]. 

By default all my packages are released with -g disabled. It seems easy enough to have an opam switch (even the official one) that automatically enables the flag.

So I think OCaml's opam repository should have a policy here. The answer should also take system package managers into account since those pull directly from the tarballs (if this document [3] is still in use for debian it seems they do require compilation with debug mode).

Personally I don't have an opinion about it, I'm rather seeking an answer here.

Best,

Daniel

[1] http://caml.inria.fr/mantis/view.php?id=6728
[2] http://rgrinberg.com/blog/2016/02/26/opam-package-checklist/
[3] http://pkg-ocaml-maint.alioth.debian.org/ocaml_packaging_policy.html/c305.html#AEN307



From ivg at ieee.org  Sun Mar 13 19:16:22 2016
From: ivg at ieee.org (Ivan Gotovchits)
Date: Sun, 13 Mar 2016 15:16:22 -0400
Subject: [ocaml-platform] [Caml-list] Package compilation and debug mode
In-Reply-To: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
References: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
Message-ID: <DB87F68C-B1DC-4D70-BED9-1DD3D55A01E2@ieee.org>

It looks like, that currently the `-g` option has no performance cost at all (correct me if I?m wrong). Presumably, there is some increase in the package size, but who cares. With these premises, I think it would be a good policy to distribute packages with `-g` flag enabled.  

> On Mar 12, 2016, at 4:35 PM, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:
> 
> Hello,  
> 
> I'd like to know what the consensus is about distributing packages that always compile in debug mode. It seems that some persons do want to have debug always enabled [1,2], but the discussion is not clear cut [1]. 
> 
> By default all my packages are released with -g disabled. It seems easy enough to have an opam switch (even the official one) that automatically enables the flag.
> 
> So I think OCaml's opam repository should have a policy here. The answer should also take system package managers into account since those pull directly from the tarballs (if this document [3] is still in use for debian it seems they do require compilation with debug mode).
> 
> Personally I don't have an opinion about it, I'm rather seeking an answer here.
> 
> Best,
> 
> Daniel
> 
> [1] http://caml.inria.fr/mantis/view.php?id=6728
> [2] http://rgrinberg.com/blog/2016/02/26/opam-package-checklist/
> [3] http://pkg-ocaml-maint.alioth.debian.org/ocaml_packaging_policy.html/c305.html#AEN307
> 
> 
> 
> -- 
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs


From daniel.buenzli at erratique.ch  Wed Mar 23 09:43:06 2016
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Wed, 23 Mar 2016 10:43:06 +0100
Subject: [ocaml-platform] Package compilation and debug mode
In-Reply-To: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
References: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
Message-ID: <6E830FD9DA0B463E8F48A44017A814B1@erratique.ch>

Le samedi, 12 mars 2016 ? 22:35, Daniel B?nzli a ?crit :
> So I think OCaml's opam repository should have a policy here. The answer should also take system package managers into account since those pull directly from the tarballs (if this document [3] is still in use for debian it seems they do require compilation with debug mode).

Would it be possible to get an official answer from OCaml's OPAM repository managers ?

They are in charge of devising the switches which do allow global addition of compiler options. If global removal is not supported then I think packages should be distributed without -g and default switches should simply add this switch.

Daniel

From thomas at gazagnaire.org  Wed Mar 23 10:02:47 2016
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Wed, 23 Mar 2016 10:02:47 +0000
Subject: [ocaml-platform] [Caml-list] Package compilation and debug mode
In-Reply-To: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
References: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
Message-ID: <FB914EF9-EE47-4A68-9C83-9746E2EB479B@gazagnaire.org>

> By default all my packages are released with -g disabled. It seems easy enough to have an opam switch (even the official one) that automatically enables the flag.

How do you envision such a global debug flag? As far as I know, there is no configuration-time option to enable that option in the compiler (which would be the cleaner option IMHO). I'd rather avoid using OCAMLPARAM for this. A new opam variable can be created and used in the opam file to pass the debug command (or not) explicitly to the build system, but this will require adapting all the build systems (and ideally a new release of opam, but we can work-around that by setting OPAMVAR_debug in the .comp file).

> So I think OCaml's opam repository should have a policy here. The answer should also take system package managers into account since those pull directly from the tarballs (if this document [3] is still in use for debian it seems they do require compilation with debug mode).
> 
> Personally I don't have an opinion about it, I'm rather seeking an answer here.

I don't have a strong opinion either. I like when packages come with -g by default, but I can understand that the (small) runtime cost can be a problem for deployment scenarios.

Thomas

From gabriel.scherer at gmail.com  Wed Mar 23 10:12:50 2016
From: gabriel.scherer at gmail.com (Gabriel Scherer)
Date: Wed, 23 Mar 2016 11:12:50 +0100
Subject: [ocaml-platform] [Caml-list] Package compilation and debug mode
In-Reply-To: <FB914EF9-EE47-4A68-9C83-9746E2EB479B@gazagnaire.org>
References: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
 <FB914EF9-EE47-4A68-9C83-9746E2EB479B@gazagnaire.org>
Message-ID: <CAPFanBFVZ45oKswNq-Zd+gzRN6n_KHv50Wjp0u=PTyJnFVdrXw@mail.gmail.com>

The new (4.03)
  ocaml_compiler_internal_params
mechanism might be of use here:
  OCAMLPARAM option passed using a configuration file
  https://github.com/ocaml/ocaml/pull/428

Note that as a software packager I would be fine fetching a %{debug}%
variable and adapt my configure/build chain to handle it. I already
have specific logic for ocaml-native and ocaml-native-tools. But I
wonder whether this approach scales to other preferences one may want
to set globally. (OCAMLPARAM is a kludge, but duplicating it inside
OPAM may not be much better.)

On Wed, Mar 23, 2016 at 11:02 AM, Thomas Gazagnaire
<thomas at gazagnaire.org> wrote:
>> By default all my packages are released with -g disabled. It seems easy enough to have an opam switch (even the official one) that automatically enables the flag.
>
> How do you envision such a global debug flag? As far as I know, there is no configuration-time option to enable that option in the compiler (which would be the cleaner option IMHO). I'd rather avoid using OCAMLPARAM for this. A new opam variable can be created and used in the opam file to pass the debug command (or not) explicitly to the build system, but this will require adapting all the build systems (and ideally a new release of opam, but we can work-around that by setting OPAMVAR_debug in the .comp file).
>
>> So I think OCaml's opam repository should have a policy here. The answer should also take system package managers into account since those pull directly from the tarballs (if this document [3] is still in use for debian it seems they do require compilation with debug mode).
>>
>> Personally I don't have an opinion about it, I'm rather seeking an answer here.
>
> I don't have a strong opinion either. I like when packages come with -g by default, but I can understand that the (small) runtime cost can be a problem for deployment scenarios.
>
> Thomas
> _______________________________________________
> Platform mailing list
> Platform at lists.ocaml.org
> http://lists.ocaml.org/listinfo/platform

From daniel.buenzli at erratique.ch  Wed Mar 23 10:23:12 2016
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Wed, 23 Mar 2016 11:23:12 +0100
Subject: [ocaml-platform] [Caml-list] Package compilation and debug mode
In-Reply-To: <FB914EF9-EE47-4A68-9C83-9746E2EB479B@gazagnaire.org>
References: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
 <FB914EF9-EE47-4A68-9C83-9746E2EB479B@gazagnaire.org>
Message-ID: <2D9E5D6842A4484183E706191F4745A0@erratique.ch>



Le mercredi, 23 mars 2016 ? 11:02, Thomas Gazagnaire a ?crit :

> > By default all my packages are released with -g disabled. It seems easy enough to have an opam switch (even the official one) that automatically enables the flag.
>  
> How do you envision such a global debug flag? As far as I know, there is no configuration-time option to enable that option in the compiler (which would be the cleaner option IMHO). I'd rather avoid using OCAMLPARAM for this.

I don't know, I think a decent scheme should be figured out by the compiler dev team. It seems there's more than one way of doing this at the moment, see e.g.  

https://github.com/ocaml/ocaml/pull/428
  
> A new opam variable can be created and used in the opam file to pass the debug command (or not) explicitly to the build system, but this will require adapting all the build systems (and ideally a new release of opam, but we can work-around that by setting OPAMVAR_debug in the .comp file).

I don't think this is a reasonable approach. Debug/profile seems rather a property of your switch than an individual package property. Though one could argue that this should still be added so that packages using other tools than the ocaml compilers can abide to the switch property.  

Daniel



From Hendrik.Tews at FireEye.com  Wed Mar 23 22:21:39 2016
From: Hendrik.Tews at FireEye.com (Hendrik Tews)
Date: Wed, 23 Mar 2016 23:21:39 +0100
Subject: [ocaml-platform] opam without internet access
Message-ID: <87wposu970.fsf@elite.fireeye.com>

Hi,

I am trying to use opam on a machine without internet access. I
got it working with some glitches, I would like to ask here for
advice.

On a machine with internet access I do

   git clone git://github.com/ocaml/opam-repository
   cd opam-repository
   opam-admin make

The last command downloads the sources of all packages into the
archives subdir. I then physically move the opam-repository
directory to the machine without internet access and there I do

   opam init local /path/to/opam-repository

I can now install packages without internet connection because
opam accesses the sources in the archives subdir.

However, when I do opam switch for installing a different
compiler, opam wants to download the OCaml sources from the inria
website.

Is there a way to instruct opam-admin to download and cache the
compiler sources too? I am using now the following workaround: I
modify the URL in the src field of the .comp file of the few
compiler versions that I am interested in and copy the source
file manually into the right location.

I now have 2 questions for opam-admin make. Firstly, is there a
way to restrict to restrict the download of the sources to the
latest two stable versions? I mean, it is great that I can
install every version of utop from 1.2.1 to 1.18.2, but I don't
really need that flexibility.

Secondly, the archives subdir is present already on
http://opam.ocaml.org/ . Is there a way to instruct opam-admin to
download package sources from there without rebuilding them
locally?

Thanks in advance,

Hendrik Tews

This email and any attachments thereto may contain private, confidential, and/or privileged material for the sole use of the intended recipient. Any review, copying, or distribution of this email (or any attachments thereto) by others is strictly prohibited. If you are not the intended recipient, please contact the sender immediately and permanently delete the original and any copies of this email and any attachments thereto.

From louis.gesbert at ocamlpro.com  Thu Mar 24 02:27:11 2016
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Thu, 24 Mar 2016 11:27:11 +0900
Subject: [ocaml-platform] opam without internet access
In-Reply-To: <87wposu970.fsf@elite.fireeye.com>
References: <87wposu970.fsf@elite.fireeye.com>
Message-ID: <1529574.NWCbOykKhb@maitake>


> However, when I do opam switch for installing a different
> compiler, opam wants to download the OCaml sources from the inria
> website.
> 
> Is there a way to instruct opam-admin to download and cache the
> compiler sources too? I am using now the following workaround: I
> modify the URL in the src field of the .comp file of the few
> compiler versions that I am interested in and copy the source
> file manually into the right location.

I don't think there is in the latest stable. The upcoming release removes this 
annoying duality between compiler and package definitions (defining everything 
as packages), so that will solve this problem. (on the other hand, it allows 
packages to define extra-sources, e.g. for compiler patches, and that will need 
separate caching)

> I now have 2 questions for opam-admin make. Firstly, is there a
> way to restrict to restrict the download of the sources to the
> latest two stable versions? I mean, it is great that I can
> install every version of utop from 1.2.1 to 1.18.2, but I don't
> really need that flexibility.

You may see the option `--resolve`. It's a bit clunky but may serve your need.

> Secondly, the archives subdir is present already on
> http://opam.ocaml.org/ . Is there a way to instruct opam-admin to
> download package sources from there without rebuilding them
> locally?

Not at the moment. `opam update --sync-archives` kind of does that (towards 
the opam cache in ~/.opam), but it was only intended for debug, and you can't 
filter the packages you want to download.

Hope this helps. Generating a self-contained local repo is indeed quite 
useful. There may be some other tools to help do that around.

Louis Gesbert - OCamlPro

From Hendrik.Tews at FireEye.com  Thu Mar 24 07:28:49 2016
From: Hendrik.Tews at FireEye.com (Hendrik Tews)
Date: Thu, 24 Mar 2016 08:28:49 +0100
Subject: [ocaml-platform] opam without internet access
In-Reply-To: <1529574.NWCbOykKhb@maitake> (Louis Gesbert's message of "Thu, 24
 Mar 2016 11:27:11 +0900")
References: <87wposu970.fsf@elite.fireeye.com> <1529574.NWCbOykKhb@maitake>
Message-ID: <87shzgtjv2.fsf@elite.fireeye.com>


Thanks for your quick answer!

Louis Gesbert <louis.gesbert at ocamlpro.com> writes:

>> I now have 2 questions for opam-admin make. Firstly, is there a
>> way to restrict to restrict the download of the sources to the
>> latest two stable versions? I mean, it is great that I can
>> install every version of utop from 1.2.1 to 1.18.2, but I don't
>> really need that flexibility.
>
> You may see the option `--resolve`. It's a bit clunky but may serve your need.

I cannot find this option. Where should I look for it?

Thanks,

Hendrik
This email and any attachments thereto may contain private, confidential, and/or privileged material for the sole use of the intended recipient. Any review, copying, or distribution of this email (or any attachments thereto) by others is strictly prohibited. If you are not the intended recipient, please contact the sender immediately and permanently delete the original and any copies of this email and any attachments thereto.

From louis.gesbert at ocamlpro.com  Thu Mar 24 07:34:48 2016
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Thu, 24 Mar 2016 16:34:48 +0900
Subject: [ocaml-platform] opam without internet access
In-Reply-To: <87shzgtjv2.fsf@elite.fireeye.com>
References: <87wposu970.fsf@elite.fireeye.com> <1529574.NWCbOykKhb@maitake>
 <87shzgtjv2.fsf@elite.fireeye.com>
Message-ID: <1633821.KLHh6qAhCh@maitake>

`opam-admin make --resolve` (try `opam-admin make --help` for details)

Le jeudi 24 mars 2016, 08:28:49 Hendrik Tews a ?crit :
> Thanks for your quick answer!
> 
> Louis Gesbert <louis.gesbert at ocamlpro.com> writes:
> >> I now have 2 questions for opam-admin make. Firstly, is there a
> >> way to restrict to restrict the download of the sources to the
> >> latest two stable versions? I mean, it is great that I can
> >> install every version of utop from 1.2.1 to 1.18.2, but I don't
> >> really need that flexibility.
> > 
> > You may see the option `--resolve`. It's a bit clunky but may serve your
> > need.
> I cannot find this option. Where should I look for it?
> 
> Thanks,
> 
> Hendrik
> This email and any attachments thereto may contain private, confidential,
> and/or privileged material for the sole use of the intended recipient. Any
> review, copying, or distribution of this email (or any attachments thereto)
> by others is strictly prohibited. If you are not the intended recipient,
> please contact the sender immediately and permanently delete the original
> and any copies of this email and any attachments thereto.
> _______________________________________________
> Platform mailing list
> Platform at lists.ocaml.org
> http://lists.ocaml.org/listinfo/platform

From mshinwell at janestreet.com  Mon Mar 14 06:57:57 2016
From: mshinwell at janestreet.com (Mark Shinwell)
Date: Mon, 14 Mar 2016 06:57:57 -0000
Subject: [ocaml-platform] [Caml-list] Package compilation and debug mode
In-Reply-To: <DB87F68C-B1DC-4D70-BED9-1DD3D55A01E2@ieee.org>
References: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
 <DB87F68C-B1DC-4D70-BED9-1DD3D55A01E2@ieee.org>
Message-ID: <CAM3Ki77ReywMx-jQGsjVyFFJL84-2ex-P1XxMxYoBhaHSbhBjg@mail.gmail.com>

There is a performance penalty with -g: it makes the raising of
exceptions slower (due to recording of backtraces).   I think that may
be the only difference at present, though I'm not completely sure.

Mark

On 13 March 2016 at 19:16, Ivan Gotovchits <ivg at ieee.org> wrote:
> It looks like, that currently the `-g` option has no performance cost at all (correct me if I?m wrong). Presumably, there is some increase in the package size, but who cares. With these premises, I think it would be a good policy to distribute packages with `-g` flag enabled.
>
>> On Mar 12, 2016, at 4:35 PM, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:
>>
>> Hello,
>>
>> I'd like to know what the consensus is about distributing packages that always compile in debug mode. It seems that some persons do want to have debug always enabled [1,2], but the discussion is not clear cut [1].
>>
>> By default all my packages are released with -g disabled. It seems easy enough to have an opam switch (even the official one) that automatically enables the flag.
>>
>> So I think OCaml's opam repository should have a policy here. The answer should also take system package managers into account since those pull directly from the tarballs (if this document [3] is still in use for debian it seems they do require compilation with debug mode).
>>
>> Personally I don't have an opinion about it, I'm rather seeking an answer here.
>>
>> Best,
>>
>> Daniel
>>
>> [1] http://caml.inria.fr/mantis/view.php?id=6728
>> [2] http://rgrinberg.com/blog/2016/02/26/opam-package-checklist/
>> [3] http://pkg-ocaml-maint.alioth.debian.org/ocaml_packaging_policy.html/c305.html#AEN307
>>
>>
>>
>> --
>> Caml-list mailing list.  Subscription management and archives:
>> https://sympa.inria.fr/sympa/arc/caml-list
>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs

From whitequark at whitequark.org  Mon Mar 14 07:53:20 2016
From: whitequark at whitequark.org (whitequark)
Date: Mon, 14 Mar 2016 07:53:20 -0000
Subject: [ocaml-platform] [Caml-list] Package compilation and debug mode
In-Reply-To: <CAM3Ki77ReywMx-jQGsjVyFFJL84-2ex-P1XxMxYoBhaHSbhBjg@mail.gmail.com>
References: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
 <DB87F68C-B1DC-4D70-BED9-1DD3D55A01E2@ieee.org>
 <CAM3Ki77ReywMx-jQGsjVyFFJL84-2ex-P1XxMxYoBhaHSbhBjg@mail.gmail.com>
Message-ID: <af7e2dc9015f855768acb55776e01dea@whitequark.org>

On 2016-03-14 10:19, Mark Shinwell wrote:
> There is a performance penalty with -g: it makes the raising of
> exceptions slower (due to recording of backtraces).   I think that may
> be the only difference at present, though I'm not completely sure.

This penalty is only present with OCAMLRUNPARAM=b, which is now on by
default. This is a good thing, because lack of backtraces is something
100% of newcomers trip over; and anyone who dislikes the penalty
can trivially turn it off.

However, -g also inhibits some optimizations along with adding debug 
info.
So it is still not free.

IMO there should be another option, something like -debug-info, that is
equivalent to -g but does not inhibit any optimizations. Then it would
be enabled by default.

> 
> Mark
> 
> On 13 March 2016 at 19:16, Ivan Gotovchits <ivg at ieee.org> wrote:
>> It looks like, that currently the `-g` option has no performance cost 
>> at all (correct me if I?m wrong). Presumably, there is some increase 
>> in the package size, but who cares. With these premises, I think it 
>> would be a good policy to distribute packages with `-g` flag enabled.
>> 
>>> On Mar 12, 2016, at 4:35 PM, Daniel B?nzli 
>>> <daniel.buenzli at erratique.ch> wrote:
>>> 
>>> Hello,
>>> 
>>> I'd like to know what the consensus is about distributing packages 
>>> that always compile in debug mode. It seems that some persons do want 
>>> to have debug always enabled [1,2], but the discussion is not clear 
>>> cut [1].
>>> 
>>> By default all my packages are released with -g disabled. It seems 
>>> easy enough to have an opam switch (even the official one) that 
>>> automatically enables the flag.
>>> 
>>> So I think OCaml's opam repository should have a policy here. The 
>>> answer should also take system package managers into account since 
>>> those pull directly from the tarballs (if this document [3] is still 
>>> in use for debian it seems they do require compilation with debug 
>>> mode).
>>> 
>>> Personally I don't have an opinion about it, I'm rather seeking an 
>>> answer here.
>>> 
>>> Best,
>>> 
>>> Daniel
>>> 
>>> [1] http://caml.inria.fr/mantis/view.php?id=6728
>>> [2] http://rgrinberg.com/blog/2016/02/26/opam-package-checklist/
>>> [3] 
>>> http://pkg-ocaml-maint.alioth.debian.org/ocaml_packaging_policy.html/c305.html#AEN307
>>> 
>>> 
>>> 
>>> --
>>> Caml-list mailing list.  Subscription management and archives:
>>> https://sympa.inria.fr/sympa/arc/caml-list
>>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>>> Bug reports: http://caml.inria.fr/bin/caml-bugs
>> 
>> 
>> --
>> Caml-list mailing list.  Subscription management and archives:
>> https://sympa.inria.fr/sympa/arc/caml-list
>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>> Bug reports: http://caml.inria.fr/bin/caml-bugs

-- 
whitequark

From mshinwell at janestreet.com  Mon Mar 14 08:02:59 2016
From: mshinwell at janestreet.com (Mark Shinwell)
Date: Mon, 14 Mar 2016 08:02:59 -0000
Subject: [ocaml-platform] [Caml-list] Package compilation and debug mode
In-Reply-To: <af7e2dc9015f855768acb55776e01dea@whitequark.org>
References: <30AF5A7CB977477A9BF094F3BC19C58C@erratique.ch>
 <DB87F68C-B1DC-4D70-BED9-1DD3D55A01E2@ieee.org>
 <CAM3Ki77ReywMx-jQGsjVyFFJL84-2ex-P1XxMxYoBhaHSbhBjg@mail.gmail.com>
 <af7e2dc9015f855768acb55776e01dea@whitequark.org>
Message-ID: <CAM3Ki77CC7LkY5yaO_uDnqvyrFV5hjQ1w8pGTwreQ3XKQjiJTA@mail.gmail.com>

I think there is a penalty (albeit a lesser one) with -g even if
OCAMLRUNPARAM does not contain "b".  Raising an exception from OCaml
code causes a function call, which it does not otherwise.

Mark

On 14 March 2016 at 08:14, whitequark <whitequark at whitequark.org> wrote:
> On 2016-03-14 10:19, Mark Shinwell wrote:
>>
>> There is a performance penalty with -g: it makes the raising of
>> exceptions slower (due to recording of backtraces).   I think that may
>> be the only difference at present, though I'm not completely sure.
>
>
> This penalty is only present with OCAMLRUNPARAM=b, which is now on by
> default. This is a good thing, because lack of backtraces is something
> 100% of newcomers trip over; and anyone who dislikes the penalty
> can trivially turn it off.
>
> However, -g also inhibits some optimizations along with adding debug info.
> So it is still not free.
>
> IMO there should be another option, something like -debug-info, that is
> equivalent to -g but does not inhibit any optimizations. Then it would
> be enabled by default.
>
>
>>
>> Mark
>>
>> On 13 March 2016 at 19:16, Ivan Gotovchits <ivg at ieee.org> wrote:
>>>
>>> It looks like, that currently the `-g` option has no performance cost at
>>> all (correct me if I?m wrong). Presumably, there is some increase in the
>>> package size, but who cares. With these premises, I think it would be a good
>>> policy to distribute packages with `-g` flag enabled.
>>>
>>>> On Mar 12, 2016, at 4:35 PM, Daniel B?nzli <daniel.buenzli at erratique.ch>
>>>> wrote:
>>>>
>>>> Hello,
>>>>
>>>> I'd like to know what the consensus is about distributing packages that
>>>> always compile in debug mode. It seems that some persons do want to have
>>>> debug always enabled [1,2], but the discussion is not clear cut [1].
>>>>
>>>> By default all my packages are released with -g disabled. It seems easy
>>>> enough to have an opam switch (even the official one) that automatically
>>>> enables the flag.
>>>>
>>>> So I think OCaml's opam repository should have a policy here. The answer
>>>> should also take system package managers into account since those pull
>>>> directly from the tarballs (if this document [3] is still in use for debian
>>>> it seems they do require compilation with debug mode).
>>>>
>>>> Personally I don't have an opinion about it, I'm rather seeking an
>>>> answer here.
>>>>
>>>> Best,
>>>>
>>>> Daniel
>>>>
>>>> [1] http://caml.inria.fr/mantis/view.php?id=6728
>>>> [2] http://rgrinberg.com/blog/2016/02/26/opam-package-checklist/
>>>> [3]
>>>> http://pkg-ocaml-maint.alioth.debian.org/ocaml_packaging_policy.html/c305.html#AEN307
>>>>
>>>>
>>>>
>>>> --
>>>> Caml-list mailing list.  Subscription management and archives:
>>>> https://sympa.inria.fr/sympa/arc/caml-list
>>>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>>>> Bug reports: http://caml.inria.fr/bin/caml-bugs
>>>
>>>
>>>
>>> --
>>> Caml-list mailing list.  Subscription management and archives:
>>> https://sympa.inria.fr/sympa/arc/caml-list
>>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>>> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>
> --
> whitequark

