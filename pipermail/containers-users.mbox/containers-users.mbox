From SRS0=2QgV=JW=m4x.org=simon.cruanes.2007@bounces.m4x.org  Wed Sep 16 09:54:25 2015
Return-Path: <SRS0=2QgV=JW=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-50.csi.cam.ac.uk (ppsw-50.csi.cam.ac.uk [131.111.8.150])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id CF2E93C0DF
 for <containers-users@lists.ocaml.org>; Wed, 16 Sep 2015 09:54:25 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1703123 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:45850)
 by ppsw-50.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1Zc8ef-0001hy-qs (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=2QgV=JW=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Wed, 16 Sep 2015 10:05:30 +0100
Received: from carty (hc584-1-88-180-84-34.fbx.proxad.net [88.180.84.34])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 39FDB140912EE
 for <containers-users@lists.ocaml.org>; Wed, 16 Sep 2015 11:05:27 +0200 (CEST)
Date: Wed, 16 Sep 2015 11:05:06 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20150916090506.GE22560@carty>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="4Epv4kl9IRBfg3rk"
Content-Disposition: inline
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Wed Sep 16
 11:05:27 2015 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000025, queueID=7EBBC140912EF
X-Org-Mail: simon.cruanes.2007@polytechnique.org
X-Mailman-Approved-At: Wed, 16 Sep 2015 09:55:34 +0100
Subject: [containers-users] changes for the next version
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 16 Sep 2015 08:54:25 -0000


--4Epv4kl9IRBfg3rk
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello,

Let's start this mailing list by looking towards the future :-)

I'm working on version 0.13 of containers, with many planned changes.
Many of those changes are retrocompatible additions (in particular,
new data structures =E2=80=94 bloom filter, weight balanced tree, hash trie,
hash set, bit field =E2=80=94, new modules for threading, enrichment and
optimization of the existing ones, improvement of benchmarks) but there
are also breaking changes:

planned (quite large change, so I'd like some feedback/opinions):

- moving `containers.lwt` into its own repository and opam package
- moving `containers.misc` into its own repository and opam package
  (improving the average quality of containers!)

already in git (but can be reverted if really needed):

- change exceptions in `CCVector`
- change signature of `CCDeque.of_seq` (remove optional argument)
- heavily refactor `CCLinq` in `containers.advanced`. If you use this
  module, you will most likely have to change your code (into simpler
  code, hopefully).
- `RAL` in `containers.misc` moved to `containers.data` as `CCRAL`, and
  is getting improved on the way

no breaking but will be some day:

- deprecation of `CCList.split` (conflicts with `List.split`)

If you disagree with some of those changes, please tell! If you really
want some basic feature (say, a list or option function) for the next
release, same.

Cheers,

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--4Epv4kl9IRBfg3rk
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJV+TC+AAoJEErAHQhJqmK2kE8QALxHaLvGVZ4jd0Ev5Qtw0nV4
Udg48YbSkvrG89tZBZogRc//x0TgKD6cIbMvq//Iglyn1i3zkaB+zjXpDQTvLUGP
hhWbd7RN1X7h0YwMBJc30LPzt2n0Nqt1ItiuuHfsufUMu8w/lsuSxpnfAZImh74b
Sb4E/1nisIEtUVrLIzB8AEPLaXYfPoJ1ubRqT/GFGCmFy1kDzn5lw/ssFxHS+LEz
/gTs7Yd/y6Q246U1dr9x6pS+4eGQNANUVg6rKTP+6ZE5irNITlnc11hneBXkhDqZ
ERiWGBfHVpLJ2YiN1BwZTJKgr2/5cK30f4z9WP1fo4JwhMGm+ydsG+cgjQJxAiC0
ZWEyTF3zTeaeSPp7FNp43k1UrKiCw/AGC00m3ZWhS8DCvnaw7JOcSE+UmWM3kput
IOhz9D+iOt6kPFNeSRnnfBGtMAUyjJLl5HOQI2Ye5srstPGb8N4YvUZavw84COcM
jIqPo8gGZ9MDBTyhBocZZiY8d2bRConQ4phqwYdInxRiKaxvMMZ5TGQEkAoS67lG
vuH3eTQT3kX8PgGQ+ahuYf7ciI3KqqLZGwKh9tz+Bi8C+5e8OvVgyiLxiySnyurf
JIihYnoMqW/lVUQLbMEMRg7odlb3Jhdcuvf8RYQ4gUJwViqKKEIMryaclwfHStYJ
qe29HZqRC/pOnkeLy08F
=7Xcw
-----END PGP SIGNATURE-----

--4Epv4kl9IRBfg3rk--


From mmatalka@gmail.com  Thu Sep 17 12:26:22 2015
Return-Path: <mmatalka@gmail.com>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-40.csi.cam.ac.uk (ppsw-40.csi.cam.ac.uk [131.111.8.140])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id CCE5D3C0DF
 for <containers-users@lists.ocaml.org>; Thu, 17 Sep 2015 12:26:22 +0100 (BST)
X-Cam-SpamDetails: score -0.7 from SpamAssassin-3.3.2-1703366 
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at http://www.dnswl.org/, low
 *      trust
 *      [209.85.212.177 listed in list.dnswl.dnsbl.ja.net]
 *  0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 *       (mmatalka[at]gmail.com)
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mail-wi0-f177.google.com ([209.85.212.177]:37110)
 by ppsw-40.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
 id 1ZcXVK-0008Ts-kv (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <mmatalka@gmail.com>); Thu, 17 Sep 2015 12:37:30 +0100
Received: by wicfx3 with SMTP id fx3so23366118wic.0
 for <containers-users@lists.ocaml.org>; Thu, 17 Sep 2015 04:37:30 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=from:to:cc:subject:references:date:in-reply-to:message-id
 :user-agent:mime-version:content-type;
 bh=zBW2e5iX6TKlF8o6fByw7Hi4dR4UbIjx79vQhnqdwXI=;
 b=Hz5pcNqIZ5ckPgdD3pbwTyf3kfNIZWdnpiwaGyKffqjwijFt+O4cY3zQ0gqgewXuTN
 xXUV0vEw8M3/JfdLJKDZnSZxZdF0uU7zcPuZSQp/3Lz9pvppSbXWWG6mf33zYgcav74w
 cgZ8qkRT5/I8OQLwhc+ypXSrgljm2v8WhKDyZXMKZMKFow79puNu8wKqsg5JBrE605Dy
 /wcD6T2cKJtuNl5LnPw3Hsq4QfqocLVP0a3qCSly0yfQK0yWLPQeOYrgTMkSLjNpYU8p
 ipjHvH/cXui8OUdwmKHr96/BPWu5Ec/9apboJMdaCcQeUc3XHf0U+T/ip4XEIOZRuMU8
 hXGw==
X-Received: by 10.194.60.115 with SMTP id g19mr60994188wjr.29.1442489850136;
 Thu, 17 Sep 2015 04:37:30 -0700 (PDT)
Received: from localhost (li195-236.members.linode.com. [178.79.139.236])
 by smtp.gmail.com with ESMTPSA id bi6sm2953460wjc.25.2015.09.17.04.37.29
 (version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
 Thu, 17 Sep 2015 04:37:29 -0700 (PDT)
From: Malcolm Matalka <mmatalka@gmail.com>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
References: <20150916090506.GE22560@carty>
Date: Thu, 17 Sep 2015 11:37:28 +0000
In-Reply-To: <20150916090506.GE22560@carty> (Simon Cruanes's message of "Wed, 
 16 Sep 2015 11:05:06 +0200")
Message-ID: <86h9mts2dj.fsf@gmail.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/24.5 (berkeley-unix)
MIME-Version: 1.0
Content-Type: text/plain
X-Mailman-Approved-At: Thu, 17 Sep 2015 18:54:21 +0100
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] changes for the next version
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 17 Sep 2015 11:26:22 -0000

I can't speak for the other parts of this, but I am for moving lwt out.

From SRS0=u8cN=JX=m4x.org=simon.cruanes.2007@bounces.m4x.org  Thu Sep 17 19:13:29 2015
Return-Path: <SRS0=u8cN=JX=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-50.csi.cam.ac.uk (ppsw-50.csi.cam.ac.uk [131.111.8.150])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 65FE13C0DF
 for <containers-users@lists.ocaml.org>; Thu, 17 Sep 2015 19:13:29 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1703366 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:43902)
 by ppsw-50.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1ZcdrJ-0003Sx-sA (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=u8cN=JX=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Thu, 17 Sep 2015 19:24:38 +0100
Received: from carty (mna75-4-82-225-76-110.fbx.proxad.net [82.225.76.110])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id D708C1408EFA6;
 Thu, 17 Sep 2015 20:24:35 +0200 (CEST)
Date: Thu, 17 Sep 2015 20:24:12 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: Malcolm Matalka <mmatalka@gmail.com>
Message-ID: <20150917182412.GH22560@carty>
References: <20150916090506.GE22560@carty>
 <86h9mts2dj.fsf@gmail.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="9jHkwA2TBA/ec6v+"
Content-Disposition: inline
In-Reply-To: <86h9mts2dj.fsf@gmail.com>
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Thu Sep 17
 20:24:36 2015 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000009, queueID=2F93E1408EFBD
X-Org-Mail: simon.cruanes.2007@polytechnique.org
X-Mailman-Approved-At: Thu, 17 Sep 2015 19:26:05 +0100
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] changes for the next version
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 17 Sep 2015 18:13:29 -0000


--9jHkwA2TBA/ec6v+
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Thu, 17 Sep 2015, Malcolm Matalka a =C3=A9crit :

> I can't speak for the other parts of this, but I am for moving lwt out.

Fine! I've already split the library: currently the master branch does
not contain `misc` or `lwt` anymore (they are at containers-lwt and
containers-misc on github). The branch also depends on a development
version of qtest for now (hopefully released soon) and has many more
tests, but without this version of qtest, `make test` will fail.


--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--9jHkwA2TBA/ec6v+
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJV+wVKAAoJEErAHQhJqmK2bXQP/0b/qJsssfg4bIFxPPB3sn9e
+couUFtQ7c15OGznMPdw08okvbTYR2hNbMtvN+aIX8aTXkI/Bnl4NNjfzcNnTL2X
Lj5ZzLpugOnh/NH8e6Ye+RcnzFpVp5vzvwZ27mJanjF/aKysYjF+vFXZciixGAFm
F3nEK8kzWzFI9hUPwRYCYmgWt6TWVzvft8VqQuekwNZ/jfDYo9AzKprKQlENTuPN
9L1alSKKIPSgI9bvZ2ucf9sLRmG1SS4qkb8wv4CKkuuwujIfWVGHZKkY7cmXZ76d
TDWUynEvp9VCnJtOWdTUynrfH3rYK58Y9urRTKWy/Gt+tuYT0kTbCvdUQPyr3x6G
EINp/qfOtD8a4A4HDXiI2Wu1n/8RlQNONNSnxv+7lJNctltNJQqDldAXPnI3oCSU
XurbB7vHRt1xg5JHGEYQ2VGBUrarBJCoReVxDkSaw8GnYEQnWyks984rdCwg2Z4J
CdnaRuPhuAt1izOpTzawsykvEyrmxVfaOiDWF7CJkN86F1Ufj43Q971fIM1Ee6Je
21aDDZj7vb7MeLcoYfDpoUsIU81Wua+FlY/mgjRCT8y20Four4btkL6TVMX/26IS
7IOm2nHaqkR58Htmfpj14fEFxUcOcB9S9ukLFTlezUHyU1DNdN5NvE2usvxpN2QG
STK3iU17vMxtdkPIqK+G
=ymeJ
-----END PGP SIGNATURE-----

--9jHkwA2TBA/ec6v+--


From SRS0=JbPA=J2=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sun Sep 20 21:35:27 2015
Return-Path: <SRS0=JbPA=J2=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-41.csi.cam.ac.uk (ppsw-41.csi.cam.ac.uk [131.111.8.141])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 5BAF63C16F
 for <containers-users@lists.ocaml.org>; Sun, 20 Sep 2015 21:35:27 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1703956 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:45043)
 by ppsw-41.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1ZdlVW-00008I-QK (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=JbPA=J2=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sun, 20 Sep 2015 21:46:46 +0100
Received: from carty (mna75-4-82-225-76-110.fbx.proxad.net [82.225.76.110])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id DB110140A9158
 for <containers-users@lists.ocaml.org>; Sun, 20 Sep 2015 22:46:44 +0200 (CEST)
Date: Sun, 20 Sep 2015 22:46:16 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20150920204615.GL22560@carty>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="l3ej7W/Jb2pB3qL2"
Content-Disposition: inline
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sun Sep 20
 22:46:45 2015 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000004, queueID=27D6D140A9159
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] [poll] use more labels?
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sun, 20 Sep 2015 20:35:27 -0000


--l3ej7W/Jb2pB3qL2
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello,

Some users want functions to have labels when it makes sense (=C3=A0 la
Core), and I kind of like the idea in many cases (especially to label
functions with ~f).

Apparently, a function declared with labels can be called without them
if arguments are in the right order (at the possible price of a
warning). That means that it should be possible to add labels in many
modules *without* breaking compatibility.

What do you think? Are there strong oppositions to this idea?

The next release of containers is approaching (in a few weeks max, I
think), but this can wait if there is no consensus.

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--l3ej7W/Jb2pB3qL2
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJV/xsVAAoJEErAHQhJqmK2riwQAI7wK2z+mFLYWvVYjySgOxTr
gdLyNVRP8NqYACwc0QY0Q8hqTGjyVjjPydUOisr/Uwfn0MHfjpe+hyVxCjTCq8/i
7s8tWlk+cS1iG6+tlUHLTGFKFFwVoSG7zL7gIFU1e1J6z5//PZQ38CgM6ejnHrWG
WF30pKaCSHnWXJeY2sw99KuTKctAZCLP8OQXmPzxpN0fQrihBHBRkJv65Q2+O1dO
x7XscfUQQunqgsNpFiUA35s2HpEsftwGGwonb/F01tIFDNR5Hyt7wjtoJbeJ2MAD
X5HGcUl4ISAbyPYrPeTTSXAMJxfBwEgmh30IU8ytrnMCaOuC2kCYiW7okR+fVZD3
HgDV7/ZtGTLGYoy7PKU8ZtjPiktqVtl6FdUTx+YSqqUNzy+YHi9SRUwhyTNdxSEO
7V/1J1BdDhDRxdBVQIfii0DDLKT6EIgRMe/aC0d35ojb021TxtVnOopzS2pEM7oD
q/ANSAnpcnQ/kb+X4p25EbdKML9HltZV2V2vChyoE9LyNMbvVVcWM6Pppfho+RmZ
YR9NLCg8oHayXGRiPLbXS3d1UnPP1+u+8gloed3zlAzr5wr68hSsK+bi+R8NctUP
VMQNP5CUnumSbd0fchLzieO4qJt9Ew/VTJN0L7V5tFTVClPDZaz4ND9nd2jRYUek
tWr7YvyB/avhV98Z+9iT
=Dtpn
-----END PGP SIGNATURE-----

--l3ej7W/Jb2pB3qL2--


From mmatalka@gmail.com  Sun Sep 20 21:53:50 2015
Return-Path: <mmatalka@gmail.com>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-51.csi.cam.ac.uk (ppsw-51.csi.cam.ac.uk [131.111.8.151])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 107DB3C16F
 for <containers-users@lists.ocaml.org>; Sun, 20 Sep 2015 21:53:50 +0100 (BST)
X-Cam-SpamDetails: score -0.7 from SpamAssassin-3.3.2-1703956 
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at http://www.dnswl.org/, low
 *      trust
 *      [209.85.212.171 listed in list.dnswl.dnsbl.ja.net]
 *  0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 *       (mmatalka[at]gmail.com)
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mail-wi0-f171.google.com ([209.85.212.171]:33239)
 by ppsw-51.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
 id 1ZdlnJ-0001hX-XB (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <mmatalka@gmail.com>); Sun, 20 Sep 2015 22:05:09 +0100
Received: by wiclk2 with SMTP id lk2so122302792wic.0
 for <containers-users@lists.ocaml.org>; Sun, 20 Sep 2015 14:05:08 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20120113;
 h=from:to:cc:subject:references:date:in-reply-to:message-id
 :user-agent:mime-version:content-type:content-transfer-encoding;
 bh=wN/F3YBnsMYPcQzE7In539+WEUeuEVKXoxZjt+xsAUk=;
 b=GF/3lSCcqH6t2BAlCeXBpNPM1fv7DtULvZrTFGJlSMqsL8WHP6B6rD+n/v33YB3eC9
 dL6zC88DTZhcWdDQuA8YVGFJMrygvKmg4aAQ82/u3WA5zqwNZTI7YuTbrU6NiZqFg/Ag
 7yDTe7pMC6vjZYqv7s6oNbCj6FUri0eUllkUw/LLoDH2I4P3ttno9JtPtwnBsWGhl0NP
 kLsCPNFvEylNuTsq65VdU49gW4pU7stl8z7EWjprl//DKRhCAFRIob5mU3OR8S5B60hC
 w1ASQjeu8G63oFOAcCJ3RqYGljSpoT9KnJ0nMMTB9Lecnz8Ch1vzKkn5g7/ieDEQmRQj
 sosg==
X-Received: by 10.180.23.193 with SMTP id o1mr9363494wif.71.1442783108846;
 Sun, 20 Sep 2015 14:05:08 -0700 (PDT)
Received: from localhost (li195-236.members.linode.com. [178.79.139.236])
 by smtp.gmail.com with ESMTPSA id pg5sm20655942wjb.21.2015.09.20.14.05.06
 (version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
 Sun, 20 Sep 2015 14:05:07 -0700 (PDT)
From: Malcolm Matalka <mmatalka@gmail.com>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
References: <20150920204615.GL22560@carty>
Date: Sun, 20 Sep 2015 21:05:05 +0000
In-Reply-To: <20150920204615.GL22560@carty> (Simon Cruanes's message of "Sun, 
 20 Sep 2015 22:46:16 +0200")
Message-ID: <86mvwgreda.fsf@gmail.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/24.5 (berkeley-unix)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] [poll] use more labels?
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sun, 20 Sep 2015 20:53:50 -0000

Simon Cruanes <simon.cruanes.2007@m4x.org> writes:

> Hello,
>
> Some users want functions to have labels when it makes sense (=C3=A0 la
> Core), and I kind of like the idea in many cases (especially to label
> functions with ~f).
>
> Apparently, a function declared with labels can be called without them
> if arguments are in the right order (at the possible price of a
> warning). That means that it should be possible to add labels in many
> modules *without* breaking compatibility.
>
> What do you think? Are there strong oppositions to this idea?
>
> The next release of containers is approaching (in a few weeks max, I
> think), but this can wait if there is no consensus.
>
> Cheers!

As one of those users, I support this.  However, a few specifics to
consider.  After some more testing it looks like it would break
backwards compatibility in some ways.  Specifically:

 # let f ~x ~y =3D x + y;;
 val f : x:int -> y:int -> int =3D <fun>
 utop # f 2;;
 Error: The function applied to this argument has type x:int -> y:int ->
 int
 This argument cannot be applied without label

This is obviously problematic if anyone is partially applying.

The other issue is that there should be some convention for what should
get a label and what shouldn't.  Specifically to handle this case:

utop # f ~x:2 3;;
Error: The function applied to this argument has type y:int -> int
This argument cannot be applied without label

This matters because I often structure code like:

list |> List.filter ~f:filter |> List.map ~f:map ....

The convention I have been following in my code is that the 't' that the
modules operates on is never labeled.

From SRS0=JbPA=J2=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sun Sep 20 22:11:28 2015
Return-Path: <SRS0=JbPA=J2=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-41.csi.cam.ac.uk (ppsw-41.csi.cam.ac.uk [131.111.8.141])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 886273C16F
 for <containers-users@lists.ocaml.org>; Sun, 20 Sep 2015 22:11:28 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1703956 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:36038)
 by ppsw-41.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1Zdm4N-0002ak-RX (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=JbPA=J2=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sun, 20 Sep 2015 22:22:48 +0100
Received: from carty (mna75-4-82-225-76-110.fbx.proxad.net [82.225.76.110])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 84DB2140A915D;
 Sun, 20 Sep 2015 23:22:46 +0200 (CEST)
Date: Sun, 20 Sep 2015 23:22:18 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: Malcolm Matalka <mmatalka@gmail.com>
Message-ID: <20150920212217.GM22560@carty>
References: <20150920204615.GL22560@carty>
 <86mvwgreda.fsf@gmail.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="tqN4RWvJTb9VNux/"
Content-Disposition: inline
In-Reply-To: <86mvwgreda.fsf@gmail.com>
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sun Sep 20
 23:22:46 2015 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000002, queueID=D986D140A915E
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] [poll] use more labels?
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sun, 20 Sep 2015 21:11:28 -0000


--tqN4RWvJTb9VNux/
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Sun, 20 Sep 2015, Malcolm Matalka a =C3=A9crit :
> > Some users want functions to have labels when it makes sense (=C3=A0 la
> > Core), and I kind of like the idea in many cases (especially to label
> > functions with ~f).
> >
> > Apparently, a function declared with labels can be called without them
> > if arguments are in the right order (at the possible price of a
> > warning). That means that it should be possible to add labels in many
> > modules *without* breaking compatibility.
> >
> > What do you think? Are there strong oppositions to this idea?
> >
> > The next release of containers is approaching (in a few weeks max, I
> > think), but this can wait if there is no consensus.
> >
> > Cheers!
>=20
> As one of those users, I support this.  However, a few specifics to
> consider.  After some more testing it looks like it would break
> backwards compatibility in some ways.  Specifically:
>=20
>  # let f ~x ~y =3D x + y;;
>  val f : x:int -> y:int -> int =3D <fun>
>  utop # f 2;;
>  Error: The function applied to this argument has type x:int -> y:int ->
>  int
>  This argument cannot be applied without label
>=20
> This is obviously problematic if anyone is partially applying.
>=20
> The other issue is that there should be some convention for what should
> get a label and what shouldn't.  Specifically to handle this case:
>=20
> utop # f ~x:2 3;;
> Error: The function applied to this argument has type y:int -> int
> This argument cannot be applied without label
>=20
> This matters because I often structure code like:
>=20
> list |> List.filter ~f:filter |> List.map ~f:map ....
>=20
> The convention I have been following in my code is that the 't' that the
> modules operates on is never labeled.

Aww, indeed, I overlooked partial application. So, the problem is not as
simple as I hoped.

I have some code that uses containers a lot, which makes me sensitive to
retro-compatibility problems. On the other hand, this issue is not
urgent, and can probably wait for a major release. Or, I can maintain a
"bleeding edge" version of containers, with some breaking changes, and a
"compat" version that merges those changes much later...

It's hard to write perfect APIs directly, but I dislike keeping bad
decisions forever. I think having containers and containers-lts would
make a lot of sense to both cater for existing code bases, and improve
the quality. There are already deprecated functions in the code, that
would stay in lts for a few versions, but not in bleeding-edge.



--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--tqN4RWvJTb9VNux/
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJV/yOHAAoJEErAHQhJqmK2W0IQALvmDgSZnNvASjGSah7kuuke
KQ5ciL+4o5A6NSpm+PiRyEBBOGbDJa6PtaZWRyhIQvmwAb6s9/tXJNfVRyM4QFC2
Vo2Hs3S7R9YfxYKmwpLt7bxp/CWWqUmrdiUexZeIYk72xpmuD8XWZhghJgu460Jr
oo3zSnea+U04cps+7FSvtNVjb65O7HESP28u5KB1bfQTHJHkIKVwQlbmALicoERk
diK6lZTaHJslJbpr4djescm3vNyLahVumtZLrRr2HZUGZiMMMAHH/Ln4PU8Q3J1/
sWZQM9+9fdnpoboK9jNGlVV5X3vsymewsiY3kp9U9XJYqmwDAHDsZC8I/fupiDvY
kK8mR7dNbu1RZ9UcC9tStG6GgfM0D4eJ8t2OeO/mf993HUcI4iSKg6LY7M3hAhA+
n8XbSCKDSkJXhkVf4KoBEygf+yeUGp11rqHt89Ay8T2pmZtsIbbFSO9LIqg9usTL
1kiOWCzNwIWQHb1cKFdsp1wZqdmXvifgLDmm/slD1s9vEh/UmJQk/S6/vpBZ/18o
UMEu9QLUlybqy2UFsbIHeXNkh81s+er2KGmzeSrnYkKtGDqogl/mO/zFwOs996Cb
KZm0NTmITi14r9eEvLiZ07cctuHECIv4U2GkDHL1VQDCGvrQ/+l8GjRTRq3s6dtP
ITZj6d26N/piHAsQk0rs
=k6XR
-----END PGP SIGNATURE-----

--tqN4RWvJTb9VNux/--


From SRS0=7Qo0=J5=m4x.org=simon.cruanes.2007@bounces.m4x.org  Wed Sep 23 17:21:08 2015
Return-Path: <SRS0=7Qo0=J5=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-51.csi.cam.ac.uk (ppsw-51.csi.cam.ac.uk [131.111.8.151])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 5A2E03C2F7
 for <containers-users@lists.ocaml.org>; Wed, 23 Sep 2015 17:21:08 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1704483 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:43835)
 by ppsw-51.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1ZemyC-0008Dq-Wr (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=7Qo0=J5=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Wed, 23 Sep 2015 17:32:37 +0100
Received: from carty (unknown [78.250.193.137])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id DE97A1408EFC7
 for <containers-users@lists.ocaml.org>; Wed, 23 Sep 2015 18:32:33 +0200 (CEST)
Date: Wed, 23 Sep 2015 18:32:30 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20150923163229.GH8766@carty>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="KR/qxknboQ7+Tpez"
Content-Disposition: inline
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Wed Sep 23
 18:32:34 2015 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=CEC6B1408EFC8
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] release 0.13
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 23 Sep 2015 16:21:08 -0000


--KR/qxknboQ7+Tpez
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hi everyone,

Containers 0.13 will be released shortly (as soon as the PR to opam-reposit=
ory
is merged). The complete changelog is at
https://github.com/c-cube/ocaml-containers/blob/master/CHANGELOG.adoc

This is a quite large release, with some breaking changes (that I
mentionned earlier) especially if you use `CCLinq`. It is also cleaner
because containers.misc and containers.lwt have finally been removed.

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--KR/qxknboQ7+Tpez
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJWAtQbAAoJEErAHQhJqmK2at4P/jHmi8mMa4Qwr3RtgEhVuUrf
nBMkAFfy4g1lvAehjciDlvKCKvobTLiGKqIYFc7u8bG1V7KgMRuy3wT6ZkzvjcyL
4wxI/8+kNGy/Q3jWmgY/K9jaRKwrwTshWJVTzNl9t8oEqWMRPonJYPrc5CEb1C/x
VmjWapR95BYiHwrWQAXcfM3cquC4rPcefJjWTS32jVa9bosFnbV2DyVbpT/o6Lb9
y3aXOvfUeSbw7FulKYr9OsHGsXHOi5ryoYEU79dTzVv4JxatJPE0jMHn3JvUXZbB
xklEFog4zI/GxRl+Jc2qNhFMYQ0DzKxKnrdSmp2+ctzU8SCpc2tQ3kanjeNsRKvU
edkKrH5FyGvLAElNNjUx3SFRVeumW9DYT2bWAI3e8lOUHpBvoWdpS7Q+N/rq2eWw
TfIIqwIkW+zxJTzejJD2hBJaIIf4ocHNVDvyjGiBrOlvpn1mREox56JGxmVLoWuk
0s83fwtWyvVLc8GrpndvsS41lIH9AvqGpc6pKdMyBp81sBLnnW9D7knVkDxcy+Uu
9Rqm/q5yb6PE4mEfF54xbh2X4BrSxnuAty0DTUmatqtN+piygE1mypZmXts9vbrq
AXMbutkvxFGrQcsJvOh4Owniaho6gYTi/QU/nPp/CLfc+O8OUszlUmeFu5s0HEN2
gnzJIR4Z12xufAqRY8Vx
=B6lS
-----END PGP SIGNATURE-----

--KR/qxknboQ7+Tpez--


From SRS0=omt7=LM=m4x.org=simon.cruanes.2007@bounces.m4x.org  Mon Nov  9 13:16:34 2015
Return-Path: <SRS0=omt7=LM=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-50.csi.cam.ac.uk (ppsw-50.csi.cam.ac.uk [131.111.8.150])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 3E3983C396
 for <containers-users@lists.ocaml.org>; Mon,  9 Nov 2015 13:16:34 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1713210 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:43355)
 by ppsw-50.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1ZvmWu-00023M-sd (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=omt7=LM=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Mon, 09 Nov 2015 13:30:41 +0000
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id C8CD8564866
 for <containers-users@lists.ocaml.org>; Mon,  9 Nov 2015 14:30:39 +0100 (CET)
Date: Mon, 9 Nov 2015 14:30:47 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20151109133047.GD8217@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="peRj85VDUce1fu/0"
Content-Disposition: inline
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Mon Nov 9
 14:30:40 2015 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000006, queueID=20B5356486A
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] release 0.14, and the future
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 09 Nov 2015 13:16:34 -0000


--peRj85VDUce1fu/0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello,

I just released 0.14, as announced on the OCaml list. There aren't many
breaking changes (mostly in CCParse, the simple parser combinator module
that I doubt anyone uses so far; it should be more usable now).

As already discussed on this list, I would like to add labels to
containers, and possibly introduce a few other changes to improve the
quality of the library. This will break most of the existing code that
uses containers; a possible solution would be to release it as 1.0 and
have "legacy" code require "containers < 1.0". The versions 0.xx would
then only get bugfixes.

The other changes would be to have more consistent naming of functions
and ordering of argument for data structures, and possibly introducing
private aliases to improve type safety in some places (e.g., all the
low-level IO stuff might have a private type for length, that ensures a
length is always positive).

I'd be glad to hear your opinion on all this, or suggestions about
naming/labels/type safety=E2=80=A6

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--peRj85VDUce1fu/0
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJWQKAEAAoJEErAHQhJqmK2WTcP/3ecF36k3gseAitR2ajRsrTi
8GWFrOw/NVOnuVUFb/l+9Aa5Jj9i6gRltCZJY92W19ESnJhmO+xVchiZUhB93pP1
YLJLNWGcoQWCrcgEcRQ2D2PESvG4VDtwJleKu2cCUFSXKbsO1rTjhi4uX5z6zdma
siZHlU4XlgDGYgyc1lqGwB7lU67Tk04csczjxOiY4SreeOGOBgbX+iM8u57iIZFj
+QR30Dm+WC9i7XrWA3Ek6ZgGvxLaDY6oYEjwh3IB1PlFVogDmqtNAYZfEXkTWVEw
u0RoGHNw2wj35rrYuAq+rQnfRsiDVLr4i4R+NnqB4laxUAIE7W7LuWSSS3NJTDUS
uMc9JbHZibii3Nhxxq8MVv1Hd9EMzbNCIqSmjms9nAr/AdkBpe3buPdBH6jnVhs0
aOH7wq3hHM0iqsdPuIEKqrMnaXGuTvDtell8FtdSleY0nzq92MljBhhpnJajyTC6
RMhIGaIGWepryYoSsfuflbGtNAKch1YROalMCf63SiwWa41duIf8SlpuMuChkQbm
kQBS3fX+7E/+C/wgLxqsA0VTEnx8LB0DwA/FT8eAfeRtl3ChFFWdcZt4N31a2B3S
CHhM7FNfokOV51SpozFoiFksmqNwsVfyFBQS6y72Lmvc6vPkQuw6aOuOwWj6HNes
DRk5fBIX3htoAWyuzlSG
=R7v0
-----END PGP SIGNATURE-----

--peRj85VDUce1fu/0--


From SRS0=T36h=OP=m4x.org=simon.cruanes.2007@bounces.m4x.org  Tue Feb 16 17:06:49 2016
Return-Path: <SRS0=T36h=OP=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 946723C355
 for <containers-users@lists.ocaml.org>; Tue, 16 Feb 2016 17:06:49 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1729957 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:47096)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1aVjOS-000np9-6w (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=T36h=OP=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Tue, 16 Feb 2016 17:26:32 +0000
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 21195564927
 for <containers-users@lists.ocaml.org>; Tue, 16 Feb 2016 18:26:31 +0100 (CET)
Date: Tue, 16 Feb 2016 18:26:29 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20160216172629.GG2528@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="hAW+M2+FUO+onfmf"
Content-Disposition: inline
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Feb 16
 18:26:31 2016 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=4854E564943
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] breakage of CCMixmap
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Tue, 16 Feb 2016 17:06:49 -0000


--hAW+M2+FUO+onfmf
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hi,

I'm thinking of breaking the API of CCMixmap so that it is closer to Map.S,
with the map as last argument. The point is to make the module usable in
conjunction with |> .

Does anyone that uses the module object?

Cheers,

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--hAW+M2+FUO+onfmf
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJWw1vAAAoJEErAHQhJqmK2+qwQALWLno/wy54F2mWju3izxxr7
LyOU+fs6djru0VNN7gAzR2uMb8dQjoSEpYZ4W8EqW9X7VWiYbH2tPakUGO123y0x
8K1P4rmHAMORhPfiY2suUAH5iowH3q+FfnHBEmLIsz1RK8ArgphUMw7MWxZ58gwW
EZZN5++mfGsi0snJOgFfD/jdGBrK2eyVjjEX/gsGPP5IHB4f2OgYgaql/60Wt8yI
v+oIVM/IwVfJsBEUqBshM3W9upA16nU5Ux+PUW96vyrHPJaORE964JrukzPMRkuN
vbDaB6vvBFUNcLh0+X3CcvQFQCuUMlBgwP6A6HWatIDvuD6rtVMtyBcqj300bk3Q
7uz1Y+tR4vfSv4s5cnajAlb4UQIWXt/TCryWJz70ukOJ4znxbkQFLej9CypOpNVp
vtOc01UhyF/LspUwsHsG9LEpzwfLenHOOxBkF7vqVxJZ5Uf/Qy8PTvQjB5PRbdig
xWu6Er7n1GvaiIyU4afy14NXRESOLKPeuhPVvCjEyE2nNgx678ycDeIbUtKZGUrX
JOO9q1K2mKs68KRjOYIuiGq/PKX8/eZGM1uhzVsuO3AavrFy73BK6NAkq0it9Veg
sFnd64BMwvKB0ZmFcaB3LCpAI1kDjR9yyplS8cgwkZjOS78u9s29LC6zqfCQp5FY
2y9K4dOm2HoQUwNZ8TmA
=sQF2
-----END PGP SIGNATURE-----

--hAW+M2+FUO+onfmf--


From SRS0=scFp=OR=m4x.org=simon.cruanes.2007@bounces.m4x.org  Thu Feb 18 11:07:38 2016
Return-Path: <SRS0=scFp=OR=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id C9B373C1FF
 for <containers-users@lists.ocaml.org>; Thu, 18 Feb 2016 11:07:38 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1729957 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:60454)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1aWMk3-000DaH-74 (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=scFp=OR=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Thu, 18 Feb 2016 11:27:27 +0000
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 9AD8A564752
 for <containers-users@lists.ocaml.org>; Thu, 18 Feb 2016 12:27:25 +0100 (CET)
Date: Thu, 18 Feb 2016 12:27:22 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20160218112722.GA1544@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="FL5UXtIhxfXey3p5"
Content-Disposition: inline
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Thu Feb 18
 12:27:25 2016 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000182, queueID=D03BF564753
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] more on deprecation
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 18 Feb 2016 11:07:38 -0000


--FL5UXtIhxfXey3p5
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hi again,

I'm thinking about removing `CCHashtbl.Default` by adding more utils to the
regular functor `CCHashtbl.Make`
(for instance, I added `get_or: 'a tbl -> key -> or_:'a -> 'a`)
and possibly also merging `Counter` into `CCHashtbl.Make` by adding some
utils that work only on `int tbl`.

Globally, I suspect that some parts of Containers are little used (or
not used at all) and it might benefit from cleanup. I'd also like to
make names more consistent (arguably a problem already present in the
stdlib itself).

Any feedback or protest welcome :)

If you have issues with some current design, think some part of
containers is useless, some feature is sorely missing, please send a
mail here or add an issue on github!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--FL5UXtIhxfXey3p5
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJWxaqXAAoJEErAHQhJqmK23aAP/ib89QLldBJObsNOo0ckW9tB
PW9qy7f9wPS/tAvXZ/Jm2ztBOiWM9d7BDIaDv9zJwPyITFm7PSlbHTj1vg7D8M08
6guSr3Wf5rCfixcp72BJcMCR3fYh0xUMEZ+H2d6e5bWGi3xo1/MIHn/mNIb051dK
QSQkh/NadD5rLK8rysqBApHK1smqHz8FAyFeesqaQIbsCgR5TTpXOF2uCzQAyWFW
4GXZmvsveUrEerksbmQbcQfggH1gUFTlLoo2L4SjKgV4m9eO9J/FvwKeJltJXFqT
xLUvS+5xcI2M4OpVKbw1HkoEnic8jGkggXQkt1QgmwUm7apfs8xp1BhBgX4Kt5ce
XLNQMUUM+FxmGqG3c5Vk0iYzGpKY/KdfygiRljn4P7psxMrRnRHcrY34OZr69HxZ
xk1aak2PQIcdobZUZj82woMXbQzfWyiiSfC/DLvHrDmSnK4spuzJ0u1oiiSRIWAC
6Qud5E/n+fl9iD8wbPT1PyTsyRXHb6T6KBMUthJzB9JQv0yS4FKU8MiBRz4l5gTR
NiBPcYiD416SOkr46K5L5GDeD4tOw8Rnsa17xjPz/CXYLuysTV/XuRQextbI87UD
N4QUF6QRya7nLYb01wJXS0hnN/fNTd7U5jPsmZwvaCrM/FWoJbXCPLbVcYLLShqG
BtBRkbROLhYA57a2+ExW
=1C/P
-----END PGP SIGNATURE-----

--FL5UXtIhxfXey3p5--


From gcloc-containers-users@m.gmane.org  Fri Feb 19 10:35:14 2016
Return-Path: <gcloc-containers-users@m.gmane.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-43.csi.cam.ac.uk (ppsw-43.csi.cam.ac.uk [131.111.8.143])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 083A33C076
 for <containers-users@lists.ocaml.org>; Fri, 19 Feb 2016 10:35:14 +0000 (GMT)
X-Cam-SpamDetails: score -0.7 from SpamAssassin-3.3.2-1729957 
 * -0.0 RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at http://www.dnswl.org/, low
 *      trust
 *      [80.91.229.3 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from plane.gmane.org ([80.91.229.3]:58075)
 by ppsw-43.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1:AES256-SHA:256)
 id 1aWiiH-0005Hk-pS (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <gcloc-containers-users@m.gmane.org>);
 Fri, 19 Feb 2016 10:55:06 +0000
Received: from list by plane.gmane.org with local (Exim 4.69)
 (envelope-from <gcloc-containers-users@m.gmane.org>)
 id 1aWiiF-0007zJ-99
 for containers-users@lists.ocaml.org; Fri, 19 Feb 2016 11:55:03 +0100
Received: from bqdyn253_067.bioquant.uni-heidelberg.de ([129.206.253.147])
 by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
 id 1AlnuQ-0007hv-00
 for <containers-users@lists.ocaml.org>; Fri, 19 Feb 2016 11:55:03 +0100
Received: from nils.becker by bqdyn253_067.bioquant.uni-heidelberg.de with
 local (Gmexim 0.1 (Debian)) id 1AlnuQ-0007hv-00
 for <containers-users@lists.ocaml.org>; Fri, 19 Feb 2016 11:55:03 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: containers-users@lists.ocaml.org
From: Nils Becker <nils.becker@bioquant.uni-heidelberg.de>
Date: Fri, 19 Feb 2016 11:55:08 +0100
Lines: 16
Message-ID: <na6s7m$lbm$1@ger.gmane.org>
References: <20160218112722.GA1544@nunchakus.loria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: 7bit
X-Complaints-To: usenet@ger.gmane.org
X-Gmane-NNTP-Posting-Host: bqdyn253_067.bioquant.uni-heidelberg.de
X-Enigmail-Draft-Status: N1111
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:38.0)
 Gecko/20100101 Thunderbird/38.5.1
In-Reply-To: <20160218112722.GA1544@nunchakus.loria.fr>
Subject: Re: [containers-users] more on deprecation
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 19 Feb 2016 10:35:14 -0000

On 18/02/16 12:27, Simon Cruanes wrote:
> Hi again,
> 
> I'm thinking about removing `CCHashtbl.Default` by adding more utils to the
> regular functor `CCHashtbl.Make`
> (for instance, I added `get_or: 'a tbl -> key -> or_:'a -> 'a`)
> and possibly also merging `Counter` into `CCHashtbl.Make` by adding some
> utils that work only on `int tbl`.
> 

this would not be a problem for me. what is the benefit? is it that
there are no two incompatible hash table types anymore, one with and one
without default element?

n.



From SRS0=h90g=OS=m4x.org=simon.cruanes.2007@bounces.m4x.org  Fri Feb 19 12:25:45 2016
Return-Path: <SRS0=h90g=OS=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 6AAC23C1FF
 for <containers-users@lists.ocaml.org>; Fri, 19 Feb 2016 12:25:45 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1729957 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:38690)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1aWkRF-000ny4-7Z (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=h90g=OS=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Fri, 19 Feb 2016 12:45:37 +0000
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 18C7756469F;
 Fri, 19 Feb 2016 13:45:36 +0100 (CET)
Date: Fri, 19 Feb 2016 13:45:34 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: Nils Becker <nils.becker@bioquant.uni-heidelberg.de>
Message-ID: <20160219124534.GD1544@nunchakus.loria.fr>
References: <20160218112722.GA1544@nunchakus.loria.fr>
 <na6s7m$lbm$1@ger.gmane.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="yudcn1FV7Hsu/q59"
Content-Disposition: inline
In-Reply-To: <na6s7m$lbm$1@ger.gmane.org>
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Fri Feb 19
 13:45:36 2016 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000018, queueID=490EB5646A8
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] more on deprecation
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 19 Feb 2016 12:25:45 -0000


--yudcn1FV7Hsu/q59
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Fri, 19 Feb 2016, Nils Becker a =C3=A9crit :
> On 18/02/16 12:27, Simon Cruanes wrote:
> > Hi again,
> >=20
> > I'm thinking about removing `CCHashtbl.Default` by adding more utils to=
 the
> > regular functor `CCHashtbl.Make`
> > (for instance, I added `get_or: 'a tbl -> key -> or_:'a -> 'a`)
> > and possibly also merging `Counter` into `CCHashtbl.Make` by adding some
> > utils that work only on `int tbl`.
> >=20
>=20
> this would not be a problem for me. what is the benefit? is it that
> there are no two incompatible hash table types anymore, one with and one
> without default element?

Yes indeed, instead of choosing whether your want a "hashtable" or a
"default hashtable" you just get the (quasi-)union of their
functionalities. Also, currently the Default and Counter modules are
really low on features (didn't take time to replicate
iter,fold,map,etc.).

Cheers,

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--yudcn1FV7Hsu/q59
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJWxw5sAAoJEErAHQhJqmK2cggQAJQaMRLLjuOObWu6iPuzXia0
2T/kvfR/iAz+zNdm6YX6Ws/J9A7Emh37ADd2f6mZRI7TZb9EbwrDPpuBYWEpWMT5
rbrGAe+mkROlABqxjs6w/LEeMhOyTPQiSb71JVTa6GiQbkzIKDhK+m9Uc6g1ZNd2
4wyozLcuHffcpsEv2Zy1rv+XR8U1kNINVFlIOc6EL86JCWvQs7lRoewj+ln1Fe1S
2v0jYOPqQdPu4GrwULvd08FBvpbAWi1AGKRPAWIWOWsYlXuBkbTNuLs9rMLqn8Qz
Mtd9AbKyCdzbY5ZEqI/FATGZ1HPIK+4Rl+eQTM4/URBmiywV4P2JoTnowqz28IXp
HZi3NT0ROVGVR6Xh2SQpVL/co1//1/wDTUmnTExXAFeonHZ78fo2QTm7l0rCRSaI
k+yqeYdLw2x4w2epblMC/XBcABZoi+TcZaD9Df+E7dEz0NMRMiAV2m4SAyWkgOUN
NfaCemmpBk7w88I9QEueNSE0XeGy3eTIgnGnG1SFHDtZMFrTtRDL7Fd+534qFhTY
nlGDiWWXf5/nwdajM36gyGlIq6gPm7ZX33QZXvKyBpmVzUZ8X3vLJJOGl9/HivKa
sTaPy9hMGy2XICLUwOp1DNOxlOmeOeaorgHSkpJU5ErgywcCSoKQotqqLAZrVwea
zpDupeqsueebs2LUTnrv
=dlkx
-----END PGP SIGNATURE-----

--yudcn1FV7Hsu/q59--


From SRS0=v4Mg=OW=m4x.org=simon.cruanes.2007@bounces.m4x.org  Tue Feb 23 15:57:52 2016
Return-Path: <SRS0=v4Mg=OW=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 7CD5B3C197
 for <containers-users@lists.ocaml.org>; Tue, 23 Feb 2016 15:57:52 +0000 (GMT)
X-Cam-SpamDetails: score -0.6 from SpamAssassin-3.3.2-1731600 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 *  1.7 URIBL_BLACK Contains an URL listed in the URIBL blacklist
 *      [URIs: weusepgp.info]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:58479)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1aYFew-000Nj4-7m (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=v4Mg=OW=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Tue, 23 Feb 2016 16:17:59 +0000
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 6AC425646F4
 for <containers-users@lists.ocaml.org>; Tue, 23 Feb 2016 17:17:57 +0100 (CET)
Date: Tue, 23 Feb 2016 17:17:56 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20160223161756.GM1544@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="2O+9B+xSKalj/wdD"
Content-Disposition: inline
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Feb 23
 17:17:57 2016 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000003, queueID=9382F5646F6
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] more deprecations(!), overview of next release
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Tue, 23 Feb 2016 15:57:52 -0000


--2O+9B+xSKalj/wdD
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hi camelidaes,

It's starting to be a recurrent theme here (but since I don't hear any
complains I'll assume it's fine), but I'm planning to deprecate and move
to separate repositories other parts (more precisely, sub-libraries)
of containers. In a nutshell, opam makes it easier to split big
libraries into smaller chunks that users can pick independently;
my goal here is to make containers more lightweight (faster to compile,
to download, etc.) focused on:

- containers: (the core library, direct complement to the stdlib)
- containers.data: (data structures)
- containers.string, containers.advanced: more specialized data
  structures and algorithms (even though it is possible that
  containers.advanced will be deprecated too, I moved its main module
  `CCLinq` into its own repository already).
- containers.unix: some utils around Unix

On the other hands, the following sublibraries belong in their own
repository; they will be deprecated in the incoming 0.16 and removed
in some time (probably a few months) :

- containers.bigarray (already moved to the `bigstring` library, useful
  on its own for low level IOs)
- containers.threads (I don't know yet, I'm thinking of an exthreads or
  something as a collection of thread pools, preemptive futures,
  concurrent queues, semaphores, etc. for programmers who use threads)

Nothing will get broken at the next release yet, but if you use some of
those sublibraries in your project(s) please tell me, so we can discuss
non-deprecation or a migration path (which should be easy in most
cases).

The next release will also include a wrapper around the `result` type
(with a dependency on the dummy library `result` on < 4.03), with an
interface identical to `CCError`, ANSI codes in CCFormat, and many more
new functions and features.

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--2O+9B+xSKalj/wdD
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJWzIYxAAoJEErAHQhJqmK2r78P/A+dI7amJGOyKV6rkePp4Eah
AwrOTp20FWDsV8Mj+uB43dP6yDFpSEjmicZ/JMQHz7I93yn+Q3G9MKZ8Ox3JOuEQ
JgbH57Zfi3kvJkzhmCU5jtyNj92CzN1F/8NxiMYGQH3vfuAhRh2L4odZvFTKH9QB
NBoGkHQ16dtPIkAed3jPrRpV5tSnQhLDGMo7AnzV7OEIBUxQ8kZr/LUCrUTAGbwJ
j4OibliuNbOVj+CTYTKSSXorG5dO/IG586OTVzVT2osZ3FhtTw753gIGopAhWcG7
+4FVLXMPOirNQWQ+t3chGTRzkF47oyjht5DqpnV0b9jQB7KoCLJTNJdRlXpmNoA4
gDGS4T9HUHeL5mlIw+FfN2AYVRSaw2P5lJ3Lcg545ENs8b+qnKLGuPEJoXz2Mz3G
uR04XNVObGy7aA127KRNO8DvvGXyyI++sAWhKPaGMZgWqi+xVa7aAcnm+bR31CWT
AI7nLAhXXr3bv4kRPa9NhHUxEYI1F2+My6BxdjPm5f/iy7N907H4ZqRbaJisMLb6
KFEwMMUjWwaU1IjSEyZ7a+MHjj3DF5QU4/qHuv9aaUp7R9/lMNH2xGW/O40bgOhr
CxdmqKQqlfo/yH4IbiDbSIXEXLT+X+Z0fxEDZ+9ivUztxf91BCLHmC6tAwVd+2e/
2JGMQCKdnSu3iT6IHt7l
=Be4q
-----END PGP SIGNATURE-----

--2O+9B+xSKalj/wdD--


From gcloc-containers-users@m.gmane.org  Thu Feb 25 14:33:27 2016
Return-Path: <gcloc-containers-users@m.gmane.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-43.csi.cam.ac.uk (ppsw-43.csi.cam.ac.uk [131.111.8.143])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id A8F4B3C1DE
 for <containers-users@lists.ocaml.org>; Thu, 25 Feb 2016 14:33:27 +0000 (GMT)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.3.2-1732039
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from plane.gmane.org ([80.91.229.3]:35416)
 by ppsw-43.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1:AES256-SHA:256)
 id 1aYxIS-0001Gm-nx (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <gcloc-containers-users@m.gmane.org>);
 Thu, 25 Feb 2016 14:53:40 +0000
Received: from list by plane.gmane.org with local (Exim 4.69)
 (envelope-from <gcloc-containers-users@m.gmane.org>)
 id 1aYxIL-0007HY-Ba
 for containers-users@lists.ocaml.org; Thu, 25 Feb 2016 15:53:33 +0100
Received: from bqdyn253_067.bioquant.uni-heidelberg.de ([129.206.253.147])
 by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
 id 1AlnuQ-0007hv-00
 for <containers-users@lists.ocaml.org>; Thu, 25 Feb 2016 15:53:33 +0100
Received: from nils.becker by bqdyn253_067.bioquant.uni-heidelberg.de with
 local (Gmexim 0.1 (Debian)) id 1AlnuQ-0007hv-00
 for <containers-users@lists.ocaml.org>; Thu, 25 Feb 2016 15:53:33 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: containers-users@lists.ocaml.org
From: Nils Becker <nils.becker@bioquant.uni-heidelberg.de>
Date: Thu, 25 Feb 2016 15:55:05 +0100
Lines: 5
Message-ID: <nan4h5$9ag$1@ger.gmane.org>
References: <20160223161756.GM1544@nunchakus.loria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: 7bit
X-Complaints-To: usenet@ger.gmane.org
X-Gmane-NNTP-Posting-Host: bqdyn253_067.bioquant.uni-heidelberg.de
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:38.0)
 Gecko/20100101 Thunderbird/38.5.1
In-Reply-To: <20160223161756.GM1544@nunchakus.loria.fr>
Subject: Re: [containers-users] more deprecations(!),
	overview of next release
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 25 Feb 2016 14:33:27 -0000

congrats on the new release. i think the tutorial is an excellent idea.
it's inviting, and it's a super efficient way for someone to decide if a
library is what he/she needs. every project should have one.

n.


From SRS0=SMu+=OY=m4x.org=simon.cruanes.2007@bounces.m4x.org  Thu Feb 25 15:16:47 2016
Return-Path: <SRS0=SMu+=OY=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id D77B43C1DE
 for <containers-users@lists.ocaml.org>; Thu, 25 Feb 2016 15:16:47 +0000 (GMT)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.3.2-1732039
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:50029)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1aYxyO-00100Z-fw (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=SMu+=OY=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Thu, 25 Feb 2016 15:37:01 +0000
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id DFC0556487D;
 Thu, 25 Feb 2016 16:36:58 +0100 (CET)
Date: Thu, 25 Feb 2016 16:36:57 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: Nils Becker <nils.becker@bioquant.uni-heidelberg.de>
Message-ID: <20160225153657.GG11634@nunchakus.loria.fr>
References: <20160223161756.GM1544@nunchakus.loria.fr>
 <nan4h5$9ag$1@ger.gmane.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="iAL9S67WQOXgEPD9"
Content-Disposition: inline
In-Reply-To: <nan4h5$9ag$1@ger.gmane.org>
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Thu Feb 25
 16:36:59 2016 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=2216E564886
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] more deprecations(!),
	overview of next release
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 25 Feb 2016 15:16:47 -0000


--iAL9S67WQOXgEPD9
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Thu, 25 Feb 2016, Nils Becker a =C3=A9crit :
> congrats on the new release. i think the tutorial is an excellent idea.
> it's inviting, and it's a super efficient way for someone to decide if a
> library is what he/she needs. every project should have one.

Thanks! 0.16 is a big release, and the project needs to move forward, so
I hope it will help potential users to decide. I also feel like there
the rate at which newcomers ask about stdlib(s) on #ocaml has increased :)

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--iAL9S67WQOXgEPD9
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJWzx+ZAAoJEErAHQhJqmK2XUAQANGR89zvgf2JvhLWTv7nis8W
MFwUFd3H5wrR8dmZwpBcTVKcmfQ1YLIvhx6VUySmkNVwpvR/qJWo7uTNOA+H/z15
x25TSxhCyku60WDH4pyzq0UuLtJ+Njtr8kB4OrrAJfFllmQ2Chwl3Wb9SYyMolo6
fGLH3FqIowErRA53Fuqz3n4n9S1ScwRuqA9i10jDj05HsGCHWc272Yk1xSugkSle
tDatjy49DQbsCO3UM/yoDsVlK9RN5jeqd5V6FDTManAsO7rfU3YGtP7StlxtbvxW
Igb+Zm40xD+YRhYd/GOShvSoaVQfZfNlJHQv+1heD6EoW7/1Tcw0qSyMCodguQ1D
7OCE4Lk/9aQcsSyBoiIcbmiwM0oMsDaw9ulGNRT7/7pLI91rklN3vLf+m+1eYVcE
/+AWterJbXOTdVhz4I9mskghN9LAzQ5vdDA9aVRvOgV8od3oIYAeNVbn5U6dCBYg
qZDRLgIo+wwJ1b+8W0hx0FoZSjZ0p7ieOku5QexY1lIMbyNvKsrGoIw8OqWCTN/U
olW8Xsos3R4lF+M+rdnbeWsvtl1hQEkN/7vC5OkkGGob8lOKXo7lLv5YAU87xrfA
fB92SVwZC1YPNl3QXiEDy3NeYPzBw5merCT7xT+QyZ5QBZ1gXkXJPEOunQhKWsDm
AbsQvXF7D/UcEJJpHV/T
=hmg/
-----END PGP SIGNATURE-----

--iAL9S67WQOXgEPD9--


From SRS0=8QbD=PF=m4x.org=simon.cruanes.2007@bounces.m4x.org  Wed Mar  9 13:35:24 2016
Return-Path: <SRS0=8QbD=PF=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id CFC1C3C197
 for <containers-users@lists.ocaml.org>; Wed,  9 Mar 2016 13:35:24 +0000 (GMT)
X-Cam-SpamDetails: score -0.6 from SpamAssassin-3.3.2-1732432 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 *  1.7 URIBL_BLACK Contains an URL listed in the URIBL blacklist
 *      [URIs: weusepgp.info]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:34843)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1adeb7-000YXl-7g (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=8QbD=PF=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Wed, 09 Mar 2016 13:56:21 +0000
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 2F3375647DD
 for <containers-users@lists.ocaml.org>; Wed,  9 Mar 2016 14:56:20 +0100 (CET)
Date: Wed, 9 Mar 2016 14:56:18 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20160309135618.GL30630@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="Nj4mAaUCx+wbOcQD"
Content-Disposition: inline
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Wed Mar 9
 14:56:20 2016 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.007195, queueID=6C79B5647DE
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] CCKMP should be... yeah, deprecated
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 09 Mar 2016 13:35:24 -0000


--Nj4mAaUCx+wbOcQD
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Once more!

Currently I don't use `containers.string` much, although I do use
CCString basic features. I think having the functorial interface of
CCKMP [1] is nice, but it would be better in its own small opam library.
On the other hand, I plan to have a simple version of the algorithm
moved into CCString so it can make string search more efficient
(including all the split functions that rely on string search).

Cheers!

[1] Knuth Morris Pratt substring search (https://en.wikipedia.org/wiki/Knut=
h=E2=80=93Morris=E2=80=93Pratt_algorithm)


--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--Nj4mAaUCx+wbOcQD
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJW4Ct/AAoJEErAHQhJqmK2w1EP/2SE8ksjsJ+LyXnuSFJSYsLZ
BwT24W9eyNBoLyQUqNCu+S/UHTwT2ZVjatI14KvRJDoYQu9tFTw9amH+FmS3idIe
YooQX41eLFVm57qD3/hTh8zFuUETE6+Zi8kzz9xjRkMgvtDl/B+XmumRPptquUEB
3iMHxmThSkxCN0PeMdBsye96OOSz7Ab5ZogqJLu3vvhlhOQ/YvHE/cMl8FW7xGfO
XLAP2hZTTIik88nuXGpM3qyjkCzlDV9QIw2ZpayXHPlQoVZIuEA8vIOToi3baGg/
WDGQtkgftDv+x2OvXHMAcQcbhKMONwirSjYgnbRuSZe6WHv3S5pZPUX/ba8mYGsL
I/5tIx91gSIESEquUz3U7ge7njCXD/I++piqu7v6yRibk6HmHvJ8zXs67IfKUclw
HzZXORzmstEOAyVjurL/xZgpSveHuuX3eNN80Yt+jthyofE3tP0tRSxkAw94PY8c
H7rcAdpYpRW8qyQCU5VN+HXjlKhD7wA1Xy/bm7HMKpR/EYNmaDQXAmldYuc9Osh0
47QshpFjJllYIiMMX5oKo24ecytDVUFFg116A7KCzO2sK4iJw9XR6wUbTlwxYNA0
Qdb5a8FKhi6x+PuFx3Mulrgu2jX+bsYUFWkh8AT1iccjEMG4S/AmCMlCw3aLx0Og
rVYGx2M28V6ZZNP+oSdZ
=YH9e
-----END PGP SIGNATURE-----

--Nj4mAaUCx+wbOcQD--


From SRS0=L2Pt=SI=m4x.org=simon.cruanes.2007@bounces.m4x.org  Thu Jun 16 13:43:55 2016
Return-Path: <SRS0=L2Pt=SI=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 0F84E3C2FC
 for <containers-users@lists.ocaml.org>; Thu, 16 Jun 2016 13:43:55 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1743621 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:54591)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1bDX3z-000bur-gj (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=L2Pt=SI=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Thu, 16 Jun 2016 14:10:27 +0100
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 652C8564670
 for <containers-users@lists.ocaml.org>; Thu, 16 Jun 2016 15:10:24 +0200 (CEST)
Date: Thu, 16 Jun 2016 15:10:23 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20160616131023.GS3637@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="DhmH2k3MviYEy8Fq"
Content-Disposition: inline
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Thu Jun 16
 15:10:24 2016 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000661, queueID=908C6564671
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] hashing
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 16 Jun 2016 12:43:55 -0000


--DhmH2k3MviYEy8Fq
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello,

I released 0.18 a few days ago, a small release. There are a few
deprecated functions around containers right now, but I'm considering a
possibly more breaking change.

The module CCHash (in core) is one of the modules I dislike the most, as
I had to write a custom hash function, and the type of hasher:

type 'a hash_fun =3D state -> 'a -> state

is pretty annoying to work with in practice. Hashtbl.Make, for instance,
requires `val hash : 'a -> int`. I am considering replacing this module
with a new one, that would be based on `'a hash_fun =3D 'a -> int` (only
positive ints), and combine hashes using variants of `Hashtbl.seeded_hash`.
Something like

```
type 'a hash_fun =3D 'a -> int

val hash : 'a hash_fun  (* hashtbl.hash *)
val int : int hash_fun
val string : string hash_fun
(* ... *)

val combine : int -> int -> int (* hashtbl.seeded_hash *)

val hash_list : 'a hash_fun -> 'a list hash_fun
(* relies on combine *)

val pair : 'a hash_fun -> 'b hash_fun -> ('a * 'b) hash_fun
(* relies on combine *)
```

Opinions on this? Would this break anyone's code except mine?

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--DhmH2k3MviYEy8Fq
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJXYqU9AAoJEErAHQhJqmK2bWMP/Aph5hV7P76q5nysSPyi543Q
LIB6wZOg7zyYaW17JFHVvIduNMEzZ3QT0DvVdNDqqj5fkHlWjq68Ftnz6pOkPH6z
xoBFRHSI2qiUVkMhPSNsxq5EzN1D1UtxCvE1/1B2D8F8lPnG/6xYN+xbNmSQmDcs
VUddhVZQU1CrQu0mRbMoHouy2eQ2cTdsmP9af6U+zZocwcMyELRdUn3AQZyYkHEN
y4tWq98skv6QKpLcoGWyFmqP1Wc7G/8YHc1JODBZ0iwryv1Gz7Jq8S+8Z1ua8YVP
OzY34XkaVsZ1jrCHGzo7YstjGD8lB87Sy7A6gE1cjhMzjAE18fQz/utAiam0OfYU
+sPfr9Yz5n1Iem2S5xT4D9bKcFdHUMoR7e8a4iNUYrktpwU8M020/3D6hrhIoJit
OovRSsIg6vLr8gTLsDNpkAVqu6G27gQSBb4JUU6FFRrmIJ4c0wdV1QQXBYmT7af0
UuUXqSttDTZ1M7zjibIfsvb6QR9OockmmDqa8Lkt3+4hFEavRt8w/QnwG/Zzg+/G
7ng4f+4x5NK7G5IL78SmmB69J3L8THCY48pZw/pR3plaJJUCfN0IzMUWKOo/dbXq
cbEF3vHRJIWqCbMfQmuswWgl10D79k2s4GWNl7+nr2E5gVMrtDV2Xk0CHRizwxu2
keCwS4p2W7ats4CPTDF5
=sFcr
-----END PGP SIGNATURE-----

--DhmH2k3MviYEy8Fq--


From SRS0=Vv5W=SM=m4x.org=simon.cruanes.2007@bounces.m4x.org  Mon Jun 20 14:45:53 2016
Return-Path: <SRS0=Vv5W=SM=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 37BA53C1B7
 for <containers-users@lists.ocaml.org>; Mon, 20 Jun 2016 14:45:53 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1743621 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:35095)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1bEzwN-000DVl-gq (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=Vv5W=SM=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Mon, 20 Jun 2016 15:12:39 +0100
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 263E1564682
 for <containers-users@lists.ocaml.org>; Mon, 20 Jun 2016 16:12:38 +0200 (CEST)
Date: Mon, 20 Jun 2016 16:12:36 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20160620141236.GE3637@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="IVvRMCbkm9vvmhnT"
Content-Disposition: inline
User-Agent: Mutt/1.5.23.1 (2014-03-12)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Mon Jun 20
 16:12:38 2016 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000086, queueID=4DFE6564685
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] bug in FlatHashtbl
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 20 Jun 2016 13:45:53 -0000


--IVvRMCbkm9vvmhnT
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello,

Just a notice that I found a bug in CCFlatHashtbl (in containers.data);
I fixed it (and added some direly needed tests), but if you happen to
use it you might want to take a look (or discuss with me about it!).

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--IVvRMCbkm9vvmhnT
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2

iQIcBAEBCAAGBQJXZ/nSAAoJEErAHQhJqmK2OrYQAMW9ahWEQS38QGRHxUIcrsYR
DsYQXUFa01RhyMGeJLEHuZkV+bThMqUNWfW3kMgALohXHmb6yv63W9akEs0/bw/Y
Oc5MR6d78B7Omd+pWB4jquHFlXQqtjfJC19aV3rbInr2vl2IQXGuk4MSaBOzoLuA
5e0+emjyGziKQuX+fH2jxKTi0ih/gqmo4J8rEYmCX8sePpaGpOO1dsrxuHyU89TV
iJS3/vq4qbveANXtxiLCNWd0vbMEqg1vwSgOqEDCLqQt9v2iIzAJQcpjtLVf2x6x
Z7CnMnBD8HlGim7G0Bnrm/oPjLFf/C7P1QdAgs6QtUlNvdKEPkC/Uun6guRJWoNy
5zdpO43H3e8tS53iX9LBfdc5KshkSANO/xCTZa8cXURP2g2Ddl/jR7cIYdIJly1N
MWHNKma5YTExG3X6KCzp0wxIZ6m/Q6kJVRgz9qct1w3gRvN8fZQDWBT+OuTP3aA/
sNzHFEPeq7TcrPxocOCyVCHMnze0k9UQTz/QOToYKSTGL8gc9C0/wkj5HYEcF/jJ
v69PaAmFjjRUdIKrVxucPNiEFu5OgycnOSFHeprWPyI6LajAFm9DZSjQpwVLrant
qkc1qV9QhRdk+iW5fNKgmT4Ox5Yi36j625/Mx3dUtZVygQPnn95O5eK9/ibsME76
ILsDJD30DNmzhFG5nha9
=McUs
-----END PGP SIGNATURE-----

--IVvRMCbkm9vvmhnT--


From SRS0=xtkh=WH=m4x.org=simon.cruanes.2007@bounces.m4x.org  Fri Oct 21 14:32:36 2016
Return-Path: <SRS0=xtkh=WH=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-30.csi.cam.ac.uk (ppsw-30.csi.cam.ac.uk [131.111.8.130])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 25FA53C572
 for <containers-users@lists.ocaml.org>; Fri, 21 Oct 2016 14:32:36 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1765774 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:38439)
 by ppsw-30.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1bxaSi-000lkG-cy (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=xtkh=WH=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Fri, 21 Oct 2016 15:06:20 +0100
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 45D3B564857
 for <containers-users@lists.ocaml.org>; Fri, 21 Oct 2016 16:06:18 +0200 (CEST)
Date: Fri, 21 Oct 2016 16:06:17 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20161021140617.GK472@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="i+iWqY68NNxfGGlH"
Content-Disposition: inline
User-Agent: Mutt/1.7.0 (2016-08-17)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Fri Oct 21
 16:06:18 2016 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000007, queueID=E035B5648A7
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] changing the defaults in CCFormat
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 21 Oct 2016 13:32:36 -0000


--i+iWqY68NNxfGGlH
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello everyone,

I'm thinking of changing some of the printers in CCFormat (and other
modules), e.g. the `list` printer, so that it doesn't add a leading and
trailing `[` and `]`. Boxing and surrounding text can be added through
separate combinators (or format strings) anyway. @Drup suggested that I
follow more closely the `fmt` library by Daniel B=C3=BCnzli, which is a good
idea, but it will come with some small breakages in how stuff is printed
if you didn't specify the optional arguments (they will remain, but
empty).

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--i+iWqY68NNxfGGlH
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIcBAEBCAAGBQJYCiDYAAoJEErAHQhJqmK2A80QAIywT0awdb5rJQvgSIfXUhn5
QTl5mnNkfaKpfd3enfCfseUOt9KjxYQNoe6w7xpR+6TePBDYeDCvh2TIRylpfroI
ma8OlGaCTJOT7kUNTiYmzGzMK3bouw8ccb7wmXMYHsSDEWZ7FTXydiCN7hAXLJxH
r6D3aR1cGvdxLlPjzLzvJWkfeCNyptTOPxsegiGkaTchH6G9xa10/AyyrWKivbYz
UAk8U34L5KOti52LVexPO3s4xmJC5oqa/3bkjsKJjf+ageAVtZPGRC0iheOvhcHl
h1pY08BrzNjOVzTUKfIg8l3L3GK8DEUJ3kgokE3RQI1Am818h8pq9k0R1C50XWb3
XYgWx+aM9k/0G/Z+3xQPWGVfpPH52CHfRMsk+DaWbfy9iORh+9pUXvAzwAuXB5R5
tq5SgPJaRAl+Bk1uY8zdBpyg3MolWbkpqiIINp9CslvdWR7mffbhZLgwr1cus/tj
tpI/CCqGUlCdJm5vo+GTrc6LjjdI8dZgOiKIJKPtx09QtazDH3HYv2IumWWoURxd
qCxdpibLp+BdVmOqVuANEruQBv5Wnn50MwcTD9GNz+5rTi4zQ+wdEV+0yZhrzOyn
pZvEg1u4TIQXLRCUuhD73C/Lzzo4Hz2ddsLNEJwTF+TFgyG14B96036hSEjFxxZY
9RuPfZkCW5d1bz0MJlDy
=UN9W
-----END PGP SIGNATURE-----

--i+iWqY68NNxfGGlH--


From SRS0=RcdC=WU=m4x.org=simon.cruanes.2007@bounces.m4x.org  Thu Nov  3 08:25:44 2016
Return-Path: <SRS0=RcdC=WU=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-30.csi.cam.ac.uk (ppsw-30.csi.cam.ac.uk [131.111.8.130])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 2FB693C572
 for <containers-users@lists.ocaml.org>; Thu,  3 Nov 2016 08:25:44 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1767616 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:40128)
 by ppsw-30.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1c2DsY-0009Rz-fY (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=RcdC=WU=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Thu, 03 Nov 2016 09:00:12 +0000
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id EB7DD56476F
 for <containers-users@lists.ocaml.org>; Thu,  3 Nov 2016 10:00:08 +0100 (CET)
Date: Thu, 3 Nov 2016 10:00:02 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20161103090001.GA10231@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="T4sUOijqQbZv57TR"
Content-Disposition: inline
User-Agent: Mutt/1.7.1 (2016-10-04)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Thu Nov 3
 10:00:09 2016 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=1CCEA564770
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] plans for 1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 03 Nov 2016 08:25:44 -0000


--T4sUOijqQbZv57TR
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello everyone,

I have opened an issue to list what I want to change for the 1.0
(breaking) release: https://github.com/c-cube/ocaml-containers/issues/84
The list is quite long already!

Feel free to contribute ideas, requests, remarks (or work, if you're
willing to).

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--T4sUOijqQbZv57TR
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIcBAEBCAAGBQJYGvyRAAoJEErAHQhJqmK2oA4P/0hLte/PXtKMmQeJsjwUsfWU
F6/bM+FPzHymAxW/muTPii5gLINcxGKK3XM4IQxtjqu6fZrijWqz8vI1NEl0UuAE
u+xmBapUm/LXCDyQ6/c2e9Weg3d5MhLhkYRQAzvmTUvVOjbg78gVus523ftU/5bq
NMJ3pwgoYu61Ox+cweILVv1CLA2KTmSxbf7oojWIUm/zHvPjlOyFyqVBGDb749FN
2fy/mqUBoqHAxqBHVXlt7Usf866/IiWnF5NYyM9fH8r1tdgI/PisxFRj3nAtp+Yg
YM/MxeMikV9vOZ8HqbKw33ByPywItumMueP6eXFCtsuGQ5bLfUcf6I6o/c1W1Xry
pwnf5csEjsdQkf2+HUCaaTeOJdKLPYensFBmwD+Jtir86MjrAmEGH9JCMRKP8XkM
2GKOIWQl7LiTT+EDAaqfYe05DGAGuXeAa+/Q4tN+Wx4OsOBjOLBiUtGTPVIYS8aG
Pxof2T9h1DqL4EalfQYQpg/a2qZjSG57fSWY8LHcR1V9XrZUXmnH8iaolKDsGWa6
7RjydgZWrtnjDSDJgKDFD1ieHeAoI/Z4RMefU2pTOD01Pw48jkgNEiXALBdSki0F
4V/FIpG1jzj6+id7lvZUyk2uPqUM7I5V11hSa+EKUpIdI40WurqMFiV7pGZ6dkGI
M0X6GmLoeroxwVjwn23l
=Nw1+
-----END PGP SIGNATURE-----

--T4sUOijqQbZv57TR--


From SRS0=RcdC=WU=m4x.org=simon.cruanes.2007@bounces.m4x.org  Thu Nov  3 22:22:57 2016
Return-Path: <SRS0=RcdC=WU=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-41.csi.cam.ac.uk (ppsw-41.csi.cam.ac.uk [131.111.8.141])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 670833C041
 for <containers-users@lists.ocaml.org>; Thu,  3 Nov 2016 22:22:57 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1767616 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://www.ucs.cam.ac.uk/email/scanner/
Received: from mx1.polytechnique.org ([129.104.30.34]:58546)
 by ppsw-41.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1c2Qwo-0007tU-Sg (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=RcdC=WU=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Thu, 03 Nov 2016 22:57:27 +0000
Received: from fuck_yeah (4va54-h02-176-130-250-55.dsl.sta.abo.bbox.fr
 [176.130.250.55])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 26DC8564792
 for <containers-users@lists.ocaml.org>; Thu,  3 Nov 2016 23:57:25 +0100 (CET)
Date: Thu, 3 Nov 2016 23:57:23 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20161103225723.GD821@fuck_yeah>
References: <20161103090001.GA10231@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="q9KOos5vDmpwPx9o"
Content-Disposition: inline
In-Reply-To: <20161103090001.GA10231@nunchakus.loria.fr>
User-Agent: Mutt/1.7.1 (2016-10-04)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Thu Nov 3
 23:57:25 2016 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000016, queueID=71D29564794
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: Re: [containers-users] plans for 1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 03 Nov 2016 22:22:57 -0000


--q9KOos5vDmpwPx9o
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

I've been making progress on most points in this branch:
https://github.com/c-cube/ocaml-containers/tree/prepare-1.0

The issue lists most of the changes effected. I removed a lot of
modules, to re-focus containers around libraries
`containers`, `containers.data` and `containers.sexp`. Some other
modules have been rewritten to be simpler and cleaner (in particular
`CCParse`, `CCHash` and `CCSexp`). The branch is 100% based on Result
(no more poly variants for errors) and Format.

Cheers!

Le Thu, 03 Nov 2016, Simon Cruanes a =C3=A9crit :
> I have opened an issue to list what I want to change for the 1.0
> (breaking) release: https://github.com/c-cube/ocaml-containers/issues/84
> The list is quite long already!


--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--q9KOos5vDmpwPx9o
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIcBAEBCAAGBQJYG8DTAAoJEErAHQhJqmK2YOMP+gJzNejCsM76FQDseoZ2N7oS
IVWUysY42DjCPSHxAXt46PJ2XIfsw+K8djc2bgJGxLJ29GNYd148mKBaasR8p6no
FSW9c0UoTMNCHJafq4LoLdN/E1xotzvdfmVqWhs23B7g+ImHKdG/7xFltrkD6KA1
TD3tK0JNSZ3RIJRqs4AvcEZiOxSXdov5GYtaqReNWbKUJU6IjmfSqQyaRv55M0c3
C+JX2xDy3dplHoF2zUhWuNhvWn5i+UM3sjsfjtN8y0NFGpDIxkWpLbmamOM1elUr
i6XulNvT70cvSSy0C/dO7spBqiNRGrFKCX1F4Otum4RKRMlvQ3D+/edgPeaQ2itQ
EQL552ki17eVqc6GiED1HTzCRsL53GBnFyGIy6FMQ6M+NuMwKCQ1wzzIW2gxvYtY
/aXH7GHxuzR4pidb9oqAUPV8vbRhQjzjFSu0s5DBxiuu2DC7iB7etmCLhmZwb/Ek
m/ulfP2IshZfkI1gendK+uQUa+JSi8AlsXXh/GRSW8Qt9OxQu8s0LU2f+LsWLR0E
rF4H1EoTcs+wsiwDg4/9pUuefY0+DGJc64SUJDWx+vYIg3eFr1TlNIpztaLoHrx8
qcO2u3lLdktTRHzjcm222r5l+IoLH9mg2XL1lpM77R5A87vDTKImdE5Hlut7wvqV
YkKQIHKXVGlPmZundGh+
=hKqz
-----END PGP SIGNATURE-----

--q9KOos5vDmpwPx9o--


From SRS0=0Zcm=YM=m4x.org=simon.cruanes.2007@bounces.m4x.org  Thu Dec 29 10:35:28 2016
Return-Path: <SRS0=0Zcm=YM=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 0045C3C16D
 for <containers-users@lists.ocaml.org>; Thu, 29 Dec 2016 10:35:28 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1776093 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:46246)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1cMYdw-000dFr-hJ (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=0Zcm=YM=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Thu, 29 Dec 2016 11:13:08 +0000
Received: from carty.home (APuteaux-655-1-153-197.w92-132.abo.wanadoo.fr
 [92.132.144.197])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 01FE056079B
 for <containers-users@lists.ocaml.org>; Thu, 29 Dec 2016 12:13:06 +0100 (CET)
Date: Thu, 29 Dec 2016 12:12:45 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20161229111245.GE32109@carty.home>
References: <20161103090001.GA10231@nunchakus.loria.fr>
 <20161103225723.GD821@fuck_yeah>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="wchHw8dVAp53YPj8"
Content-Disposition: inline
In-Reply-To: <20161103225723.GD821@fuck_yeah>
User-Agent: Mutt/1.7.2 (2016-11-26)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Thu Dec 29
 12:13:07 2016 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=4091056079E
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: Re: [containers-users] plans for 1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 29 Dec 2016 10:35:28 -0000


--wchHw8dVAp53YPj8
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello there,

Release 1.0 is getting closer, as most points in issue #84 have been
addressed (at least for me). I should make a release candidate in the next
few weeks.

Note that 1.0 is much more breaking than usual:

- Some sub-libraries have disappeared (thread, advanced, bigarray, string)
- no more CCError, only CCResult
- no more CCPrint, only CCFormat
- label `or_` became `default`
- big changes in `CCGraph`
- big changes in `CCSexp` (now in only one module, powered by ocamllex, KIS=
S)
- big changes to `CCOrd` (remove trailing `_`)
- big changes to `CCBitField` (less functor, more functions)
- removal of all deprecated functions
- simpler `CCHash`
- death of some modules in containers.data

non-breaking should include:
- labels versions of Array/List
- improvements to many existing modules (see the issue for more details)

branch: https://github.com/c-cube/ocaml-containers/tree/prepare-1.0
issue (with list): https://github.com/c-cube/ocaml-containers/issues/84

Cheers!

--=20
Simon

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--wchHw8dVAp53YPj8
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlhk76wACgkQSsAdCEmq
YrZYgA/7BTPTj/MIsBCO7lkEqia0KOeKUVYZq9BaKpcaJLsmKUecaA8D2OvmUdgg
9pNMqe2q8AFmAD0OaAf4zYDbg+1N0jQCEFaOz0dglD3jQ/3KerglsHJAP7/by3UU
Jr+eBLM286OvGxHthmT8dFTXIp7OL5K6VzoqSB3vRiMe5gJyBcSRFeCuep2PRord
xLRzeWLOzJvDKPL49sy1VQ87VLYokYGbErOEaDwMQzBHWTibd8F9bf9vFMqLsYc2
qhCJe+eCQedD1l5s7TJ6vdIRz8vObno33TO6vsM0phKklLvBCR4GpJvrVj9neTzZ
R9Bl3LZ6nAJQtLcKI4ctOZsPghB2spKAzJQdkQ/drkIw/9IkNs/LcYyqppjVY2O+
Jp5/7mRIM2noj0qP4Ln6bbEtU9cQf1Fl/P2iOYeXpqBvekOuFSF+ABAlzIPP2vfv
fUnOp9j9lLixkZgo4ednfiZeuG+EDHc3bYDrf+yg5iXK3pZjnV3Yk2ztriHOsV/v
rFF6n9UEVjGbmDCFGCNRsc5ZkEmr7jX/QvFPQypMkq78QszSnMzZv30AIrR7NSio
HVbRawmO7eoByv+Hqd/vjTII8u4gMh+b4fnStGTkg0DCqkTXBDV8CAl/hntMO3F2
iZz5o+Mg2ZTXrunH5OAO/XslcrM/Ma3LFZH7hVF9oxAaIu8PE+M=
=bV/P
-----END PGP SIGNATURE-----

--wchHw8dVAp53YPj8--


From rudi.grinberg@gmail.com  Sat Dec 31 21:15:19 2016
Return-Path: <rudi.grinberg@gmail.com>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 5B8383C16D
 for <containers-users@lists.ocaml.org>; Sat, 31 Dec 2016 21:15:19 +0000 (GMT)
X-Cam-SpamDetails: score 0.5 from SpamAssassin-3.3.2-1776525 
 * -0.0 RCVD_IN_DNSWL_NONE RBL: Sender listed at http://www.dnswl.org/, no
 *      trust
 *      [209.85.214.67 listed in list.dnswl.dnsbl.ja.net]
 *  0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 *       (rudi.grinberg[at]gmail.com)
 *  0.5 RCVD_IN_SORBS_SPAM RBL: SORBS: sender is a spam source
 *      [209.85.214.67 listed in dnsbl.sorbs.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mail-it0-f67.google.com ([209.85.214.67]:34000)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
 id 1cNRaN-000gkI-iN (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <rudi.grinberg@gmail.com>); Sat, 31 Dec 2016 21:53:08 +0000
Received: by mail-it0-f67.google.com with SMTP id 75so44778856ite.1
 for <containers-users@lists.ocaml.org>; Sat, 31 Dec 2016 13:53:07 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=date:from:to:cc:subject:message-id:references:mime-version
 :content-disposition:in-reply-to:user-agent;
 bh=NPmV7DbMxo6CsMXa/UX2YC3iVZFl1YfeA8OtgML8ExY=;
 b=UrKcm33OhzthgO6AVpd3HNz9+JWFnJv7+6l/8dP9w6RT1fBC+h3T9KWyDJyyE37+YM
 L6Z05l5iSFghM1rx7tpf1qcKgzmol3lbjt6yGIUe0SMiWNUQzldlALTeKTay2WHo4/w3
 6WAumSbiCiXde5UcHyg0GLYBhLVjPfKgng1katKlbo8o90/M2g98Hd7N48IVs0MCwZw9
 8Lb0WVBkV8+G3kOx4ugKaqV+3RHOs/HZ12bP2u6KVHVIPO8nPCwlsDM1QQx1J5yUs5mq
 JqNMx5a4cQ2EXIdgQJG6B41OvC2i48DRv45JfhOfcFzyfuK9DNjH5+EgPIJjxSB+Z2QQ
 AJTg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:from:to:cc:subject:message-id:references
 :mime-version:content-disposition:in-reply-to:user-agent;
 bh=NPmV7DbMxo6CsMXa/UX2YC3iVZFl1YfeA8OtgML8ExY=;
 b=qtbbZeJ1591ZozR4WXyMzmqCF03id6V0pXD/SfWwS1pRQTjKjoR8qhKC9HowkQFuwd
 2U2eRXkpa/bCeeOMMLO/9HknZo2PmsJDjFAEAyM5UtbWGb7TTIZtkDtT2II7+nPMkD9g
 zdMzxrsIpbBWR/K73rCsO41tNWXp4XNbunzEkn9P5kg6MjWwT7Kfb3JG0O8drOmz4lqz
 zK4hMIU8sdUupPsoLlpiWtKkUjaBN17ZpMI2qaodC/2AlDhMYPMDRkFXzpSvrKx6IiOk
 p96yasZLRodkxaohneO6Ed4BmuqNRE3IN02+GgKqokIGjqvvaFRFB72mkDxiPuAHbTue
 Rx5w==
X-Gm-Message-State: AIkVDXKjB547s3KCEdEHk8LCU/UqNOdCSdP0HpSUGoh1ciZsvtMsKWt/lO96Y5wXRFL7Fg==
X-Received: by 10.36.107.79 with SMTP id v76mr39971115itc.32.1483221186302;
 Sat, 31 Dec 2016 13:53:06 -0800 (PST)
Received: from localhost (172-97-187-172.cpe.distributel.net. [172.97.187.172])
 by smtp.gmail.com with ESMTPSA id c71sm29357042ioe.19.2016.12.31.13.53.05
 (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
 Sat, 31 Dec 2016 13:53:05 -0800 (PST)
Date: Sat, 31 Dec 2016 16:53:00 -0500
From: Rudi Grinberg <rudi.grinberg@gmail.com>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
Message-ID: <20161231215300.wvttzkmkl65uabsl@rgcaml.localdomain>
References: <20161103090001.GA10231@nunchakus.loria.fr>
 <20161103225723.GD821@fuck_yeah>
 <20161229111245.GE32109@carty.home>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Disposition: inline
In-Reply-To: <20161229111245.GE32109@carty.home>
User-Agent: NeoMutt/20161126 (1.7.1)
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] plans for 1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 31 Dec 2016 21:15:19 -0000

>Hello there,
>
>Release 1.0 is getting closer, as most points in issue #84 have been
>addressed (at least for me). I should make a release candidate in the next
>few weeks.
>

I wonder if this is too late to bring this up, but it would be really nice if
containers would replace its use of depopts with proper container sub packages.
Concretely, this would mean changing every depopt x to a container-x package
that depends on containers. It *does not* mean making any new git repositories.

Since this is quite late in the cycle to ask for this, and the task is
unfortunately non trivial given the build tools we have today. It's possible to
sorta of implement this using a little hack I've learned in conduit:

https://github.com/mirage/ocaml-conduit/blob/master/mirage-conduit.opam

While this isn't ideal, it will future proof containers against any breakage
that might be caused by a proper split into opam sub packages.

The discussion of depopts vs. proper sub packages has been brought up many times
before, so I'd rather not regurgitate the talking points unless there are
objections. Let me just say that I think the current this prevalence of using
depopts instead of proper sub libraries/packages is user hostile. And several
popular packages are already starting to move away from this (lwt for example).

Cheers,

Rudi.

From SRS0=E9n+=YP=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sun Jan  1 17:43:34 2017
Return-Path: <SRS0=E9n+=YP=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 6DF743C16D
 for <containers-users@lists.ocaml.org>; Sun,  1 Jan 2017 17:43:34 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1776525 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:36316)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1cNkl2-000wOz-7l (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <SRS0=E9n+=YP=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sun, 01 Jan 2017 18:21:25 +0000
Received: from carty.home (APuteaux-655-1-153-197.w92-132.abo.wanadoo.fr
 [92.132.144.197])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 0A6AA5647D0
 for <containers-users@lists.ocaml.org>; Sun,  1 Jan 2017 19:21:23 +0100 (CET)
Date: Sun, 1 Jan 2017 19:21:06 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20170101180901.GC26664@carty.home>
References: <20161103090001.GA10231@nunchakus.loria.fr>
 <20161103225723.GD821@fuck_yeah>
 <20161229111245.GE32109@carty.home>
 <20161231215300.wvttzkmkl65uabsl@rgcaml.localdomain>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="d01dLTUuW90fS44H"
Content-Disposition: inline
In-Reply-To: <20161231215300.wvttzkmkl65uabsl@rgcaml.localdomain>
User-Agent: Mutt/1.7.2 (2016-11-26)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sun Jan 1
 19:21:23 2017 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000075, queueID=516475647D1
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: Re: [containers-users] plans for 1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sun, 01 Jan 2017 17:43:34 -0000


--d01dLTUuW90fS44H
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Sat, 31 Dec 2016, Rudi Grinberg a =C3=A9crit :
> I wonder if this is too late to bring this up, but it would be really nic=
e if
> containers would replace its use of depopts with proper container sub pac=
kages.
> Concretely, this would mean changing every depopt x to a container-x pack=
age
> that depends on containers. It *does not* mean making any new git reposit=
ories.

It's not too late. It's an interesting idea, now the devil is in
the details.

>=20
> Since this is quite late in the cycle to ask for this, and the task is
> unfortunately non trivial given the build tools we have today. It's possi=
ble to
> sorta of implement this using a little hack I've learned in conduit:
>=20
> https://github.com/mirage/ocaml-conduit/blob/master/mirage-conduit.opam
>=20
> While this isn't ideal, it will future proof containers against any break=
age
> that might be caused by a proper split into opam sub packages.

If I follow correctly, you create a dummy package foo-bar whose dependencies
correspond to foo + those of the sub-package foo.bar, so that people
can depend on foo-bar freely. It's cheap indeed. The only drawback I can
see is that versions of all those packages have to be kept synchronized
manually.

> The discussion of depopts vs. proper sub packages has been brought up man=
y times
> before, so I'd rather not regurgitate the talking points unless there are
> objections. Let me just say that I think the current this prevalence of u=
sing
> depopts instead of proper sub libraries/packages is user hostile. And sev=
eral
> popular packages are already starting to move away from this (lwt for exa=
mple).

I'm not sure I have read that much arguments about this design choice,
can you just point to them (e.g. for lwt)?

In any case, thanks for the opinion, it might very well happen :-)

and happy new year!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--d01dLTUuW90fS44H
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlhpRb0ACgkQSsAdCEmq
YrYq0Q//RmqomdMumCO6At52trcDiOJ6AuAIcuOfg8Oup94g/cngjiAeavy/bWEz
EAQf8jYg3kOD9sVsezO7nkaTrAPet+N3xrOOev+hcFzUd0NMg/85KjRg4dexP3co
yDF1te3OdokqSYOeipVg1w/xgVzwDoLNQc9KOjnNANtOF1mdr7BhxjZ+nN6j8fj1
xGcqnlpaIaqWvwnZHsrkjg46m/vppxWX3gjP2V6VLSAygsx2b3eOPOtEdlf2UW0K
1IsUsZ1zKD3p1rR/x7etRZCNu6kxNp+AeSbrPt5agunSXwEIVVLEBFh/iRnERO/x
t3ah4Qfay1TBq999s6e/NX7nkd73k+Uf4oK3kr8R1cSaPC8+aceZRNJy2RQlQpsm
eBOfe2h0qQ8GFnTvYYMX48qlCJA8wdNvVHbC6BQe0RmN3MPWTdN5w4eAWqnS3Zro
/EbDZ4AuB5Y4NDCpjgIR0orrUUDMR18utDajuZbd+Z4sP9Y3X4lVhKwU1Sm6boQU
jq9IycmCq18qCIcWlUdrSMjjkDLIXGYsFXImGBAVCH2sttpPdsg706AmrrIH/Ns8
8w5kr1CFRdIrV9w8xP4cLV7o5xIFGVC7bkThxi4QVFYJYejOK18YTsOGKt+fYFOM
XeRg0cdLHrF7PlGiclU0jFG79QheeX2fxxxpq86aOlYW4+9UHfU=
=vn+B
-----END PGP SIGNATURE-----

--d01dLTUuW90fS44H--


From rudi.grinberg@gmail.com  Mon Jan  2 00:42:23 2017
Return-Path: <rudi.grinberg@gmail.com>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-43.csi.cam.ac.uk (ppsw-43.csi.cam.ac.uk [131.111.8.143])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 3CFB93C16D
 for <containers-users@lists.ocaml.org>; Mon,  2 Jan 2017 00:42:23 +0000 (GMT)
X-Cam-SpamDetails: score 0.5 from SpamAssassin-3.3.2-1776525 
 * -0.0 RCVD_IN_DNSWL_NONE RBL: Sender listed at http://www.dnswl.org/, no
 *      trust
 *      [209.85.223.194 listed in list.dnswl.dnsbl.ja.net]
 *  0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 *       (rudi.grinberg[at]gmail.com)
 *  0.5 RCVD_IN_SORBS_SPAM RBL: SORBS: sender is a spam source
 *      [209.85.223.194 listed in dnsbl.sorbs.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mail-io0-f194.google.com ([209.85.223.194]:34519)
 by ppsw-43.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
 id 1cNrIM-0004ej-oe (Exim 4.86_36-e07b163) for
 containers-users@lists.ocaml.org
 (return-path <rudi.grinberg@gmail.com>); Mon, 02 Jan 2017 01:20:15 +0000
Received: by mail-io0-f194.google.com with SMTP id n85so26771564ioi.1
 for <containers-users@lists.ocaml.org>; Sun, 01 Jan 2017 17:20:14 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=date:from:to:cc:subject:message-id:references:mime-version
 :content-disposition:in-reply-to:user-agent;
 bh=6jyYxb7ZUlfnnDZgp4pK+K8k3/zK5DVk+ljHpfo6qzg=;
 b=Kmajlm8k2xdZ5R6HUHawDx/4Lpf+Gv2ssH7fSEgPZ6fUD9LHYGW1tzBQ0UxCgEiFuY
 Gi/ZO9OLpn0eNWx0bVSPA6BV/lwykG2wZ/Xfszj66iL6clYWs6cZ43qk+kh4WkVmEuHm
 ZMFpz32tt8OEayY1i12VPtBBB1kBDJ9w6Vlb962JB11VO91N5GUkEUxLWNIaL39uYyLt
 NxK/EjoLgGOCYQqU+FW+D1fTh6Nwm52ZyucZTqgKhxEKpGHa3sAVmpztXO4PErfOIuTV
 AoOWciB0R8Ua1sDm1uuUJRSbb4IQxmKDDX8fMcq7C2coqVKFBxIa2+C5iJIChk7Erj9R
 bXQQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:date:from:to:cc:subject:message-id:references
 :mime-version:content-disposition:in-reply-to:user-agent;
 bh=6jyYxb7ZUlfnnDZgp4pK+K8k3/zK5DVk+ljHpfo6qzg=;
 b=IBE+cWEBZSlzR9QxWc+ZDmS4kaxLxGu1+VjeBC76KIm7jJN0DH6tiybBmUpiXaFUFw
 gwD8lrn7Jjj2nYnuwThqmFNdwndt8kypoQaKOyVG0brA8xVYPa4C6LX9ISYRAAqsk+/G
 HCCyhXRQkdOBs/hXbNtrymofIieWHS3KYigjdas9NtYeZC0ec0nvKtsEcRTcWfr+4wRS
 gIeTqsmHyE0t6L6YkvLI5pvakk/3bRgO756Xd+iGL/d55LEJKGhjOpX03j94KxapNK2E
 3lbBTcnHqe7NIMgtSmosrLP4sqO8dujXvlRjuXW/wSSaXhZUO1iBw/eEfMeIigEi1bCL
 5cyg==
X-Gm-Message-State: AIkVDXIbkwB6IXBOH5KPljAsjot1aMgBKm6VZ2Q3yJgdkkK25iIBG7P1pg1AGh6hK4ykIQ==
X-Received: by 10.107.31.17 with SMTP id f17mr4614334iof.126.1483320013399;
 Sun, 01 Jan 2017 17:20:13 -0800 (PST)
Received: from localhost (172-97-187-172.cpe.distributel.net. [172.97.187.172])
 by smtp.gmail.com with ESMTPSA id w188sm29965036itc.9.2017.01.01.17.20.12
 (version=TLS1_2 cipher=ECDHE-RSA-CHACHA20-POLY1305 bits=256/256);
 Sun, 01 Jan 2017 17:20:12 -0800 (PST)
Date: Sun, 1 Jan 2017 20:20:12 -0500
From: Rudi Grinberg <rudi.grinberg@gmail.com>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
Message-ID: <20170102012012.vrk6ri3h2gcr5ai2@rgcaml.localdomain>
References: <20161103090001.GA10231@nunchakus.loria.fr>
 <20161103225723.GD821@fuck_yeah>
 <20161229111245.GE32109@carty.home>
 <20161231215300.wvttzkmkl65uabsl@rgcaml.localdomain>
 <20170101180901.GC26664@carty.home>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Disposition: inline
In-Reply-To: <20170101180901.GC26664@carty.home>
User-Agent: NeoMutt/20161126 (1.7.1)
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] plans for 1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 02 Jan 2017 00:42:23 -0000

>If I follow correctly, you create a dummy package foo-bar whose dependencies
>correspond to foo + those of the sub-package foo.bar, so that people
>can depend on foo-bar freely. It's cheap indeed. The only drawback I can
>see is that versions of all those packages have to be kept synchronized
>manually.

Exactly. Although perhaps opam publish can help with this in the future.

>I'm not sure I have read that much arguments about this design choice,
>can you just point to them (e.g. for lwt)?

Here you go:

https://github.com/ocsigen/lwt/issues/41#issue-27598057

>and happy new year!

And you as well!

From SRS0=Mjzx=ZG=m4x.org=simon.cruanes.2007@bounces.m4x.org  Tue Jan 24 23:02:59 2017
Return-Path: <SRS0=Mjzx=ZG=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-43.csi.cam.ac.uk (ppsw-43.csi.cam.ac.uk [131.111.8.143])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 0410F3C367
 for <containers-users@lists.ocaml.org>; Tue, 24 Jan 2017 23:02:59 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.3.2-1776525 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:52709)
 by ppsw-43.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1cWAj3-0007Ny-nL (Exim 4.88) for containers-users@lists.ocaml.org
 (return-path <SRS0=Mjzx=ZG=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Tue, 24 Jan 2017 23:42:10 +0000
Received: from fuck_yeah (4va54-h02-176-130-250-55.dsl.sta.abo.bbox.fr
 [176.130.250.55])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 23A4D560789
 for <containers-users@lists.ocaml.org>; Wed, 25 Jan 2017 00:42:07 +0100 (CET)
Date: Wed, 25 Jan 2017 00:42:05 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20170124234204.GF2325@fuck_yeah>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="tvOENZuN7d6HfOWU"
Content-Disposition: inline
User-Agent: Mutt/1.7.2 (2016-11-26)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Wed Jan 25
 00:42:07 2017 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=8AA3D56078D
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] containers 1.0-rc1
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Tue, 24 Jan 2017 23:02:59 -0000


--tvOENZuN7d6HfOWU
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello everyone,

At last, 1.0 is close! Everything on the todo-list
(https://github.com/c-cube/ocaml-containers/issues/84) was checked or
cancelled.

In the end, my hope is that containers-1.0 is going to be simpler,
cleaner, and more focused around the core extensions to the stdlib.
Many modules are simpler and shorter; some parts have been removed;
deprecated functions and submodules are finally gone.

A few notes:
- labelled version of CCList and CCArray are in CCListLabels and CCArrayLab=
els,
  but the normal versions of these modules remain unlabelled
- formatters and CCFormat are much improved
- containers.thread will finally remain (but might be
  packaged independently, e.g. in containers-thread, I have to investigate
  the limitations of opam-publish for multi-package repositories).

The release candidate can be found at
https://github.com/c-cube/ocaml-containers/releases/tag/1.0-rc1
Use opam pin to test it:
$ opam pin add containers https://github.com/c-cube/ocaml-containers/archiv=
e.1.0-rc1.tar.gz
(you might need oasis, this is not a stable release).

Hope to hear some feedback on this. The actual 1.0 release should land
in a few weeks, depending on how broken this new release is ;-)

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--tvOENZuN7d6HfOWU
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAliH5kwACgkQSsAdCEmq
YraBtA//bZLJ2T44vDH5PVvB5AWssKS/8m2cNE01qp7/reDrexHFyh9XZRsH85UG
RMZZZks0N35IorqFMvcOZAC/K1Yw/a+Friq5ssyAo4JWydr3xGiOuNON0XvDgd67
TrIhtgBoDasSLBR5SOO+U9d17lHjErFo1MfUdBFVfX9M1ZtKNprOqLm5okn9tGAA
axIky/QVpobsQCawa5BPnapijw4JFy9u9gsrRo384d0vqogikwA/cfmFdQ8Ma+pa
922xUBfe/7tvvVrCCi0WeYNmZobobm+bole9F4I8lnmiyOZ8frymMk0Tr+o9j3y2
ocVQNl876007a0e2KvY1u+SGEQ9liv0nwD6Dqrj/7swlPBwjX1uIm0joHHPOhatj
CRYl8rVlFkzg2xNkPzSAJhoY/WIB7hBPC6xrHlG8CLtOKkdGQc0Za9EF0tZ/20ge
nt7JGSa1WeujxBTu53BqNE36zjOc0Xux8GeKVvaVOuI6ajUX1mrpb37wB0LyROTP
fWaODc1V98a6BG54xN5NoJNE11wLws9gTIXSmt5ghygj4LzrYdCYeUHErsWxbMPJ
jfXeuqOO1p7utgEO9DlbaJbsWq/cGtkDQAoG6Ff4848Okb8yk2rYv32zXizISQh2
de661wFwz5PG28124PKnGSLymqypp1ACxj3H8z5+ECe9ifMkalg=
=rjVt
-----END PGP SIGNATURE-----

--tvOENZuN7d6HfOWU--


From SRS0=sied=ZY=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sat Feb 11 22:23:07 2017
Return-Path: <SRS0=sied=ZY=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 183353C396
 for <containers-users@lists.ocaml.org>; Sat, 11 Feb 2017 22:23:07 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.4.1-1781505 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:43638)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1ccghK-000yJD-iW (Exim 4.88) for containers-users@lists.ocaml.org
 (return-path <SRS0=sied=ZY=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sat, 11 Feb 2017 23:03:20 +0000
Received: from carty (4va54-h02-176-130-250-55.dsl.sta.abo.bbox.fr
 [176.130.250.55])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 577C956483F;
 Sun, 12 Feb 2017 00:02:34 +0100 (CET)
Date: Sun, 12 Feb 2017 00:02:32 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: OCaml users <caml-list@inria.fr>, containers-users@lists.ocaml.org
Message-ID: <20170211230232.GD3245@carty>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="h56sxpGKRmy85csR"
Content-Disposition: inline
User-Agent: Mutt/1.7.2 (2016-11-26)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sun Feb 12
 00:02:34 2017 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=D8B65564844
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] [ANN] release of containers-1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 11 Feb 2017 22:23:07 -0000


--h56sxpGKRmy85csR
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Dear all,

It is my great pleasure to announce the release of Containers 1.0, after
almost four years of development. Containers is a modular, clean and
powerful extension of the OCaml standard library, under the permissive
BSD license.

It is designed to be efficient, light on link-time dependencies, and to
complement the existing modules rather than replacing them.
The core library has no dependency on unix and should be usable
everywhere. Every module is independent and is prefixed with 'CC' in
the global namespace.  Alternatively, `open Containers` will bring
enhanced versions of the standard modules into scope, along with a few
modules that should exist, such as Option, IO or Int.
Containers now requires OCaml >=3D 4.01.

Containers also features sub-libraries for helping with threads,
S-expressions, and some unix utilities to invoke sub-processes.

I jump on the opportunity to thank the various users and contributors
that helped improving the code, kept asking for better solutions, and
reported bugs.

Cheers!

github page: https://github.com/c-cube/ocaml-containers
documentation: http://c-cube.github.io/ocaml-containers/1.0/
overview of 1.0: https://github.com/c-cube/ocaml-containers/issues/84

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--h56sxpGKRmy85csR
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlifmAcACgkQSsAdCEmq
YrZ9uhAAzsIWmX486DQAx3ms9w5rbJu+2vFh4mjk4B/Of25p+2HdoXjt08PHgYCR
53krn/whBV1RVSXcYRTIxRq02kOr+yfR7vfLiOpqZcR6PZRV/E7VpSfAinh7Fyh4
2+4oPmKXpw61+GSmfSFO+AfzwbUkDTz4DGohLDqaMHNXB4hZKbkeQCSom7+dcGds
qruIQyGOBJYrkcB8NOkfU7x67WYceVeDrZrCzWGgN99eaGmaC620wv6V82O1MMrM
02JAb3wVov1E6bJHZ/VlVoLZ+QaHbvIxWwTpKEt+tIj6RtbSLrcJZyNgX3JBBgsV
LBYEUaBTbiOc2tIuXRXjgPgSwZzvAuiKyGAsMnMvZEfZsTt4p0cBhQ2QyBCCtM6h
ThcEYwCdoTuhd9D5cOsOaNKxoaQ5uTvl3atxEYhUH4x1z2vubwS4bRpnlaOGW27d
kqQhUI2fiw1Q8Sj42s/sp1Ba5sQuivXAYFz64VyW67ppHtPiYSRy4UA83AZltsL+
Jevp66pztlpscH338lXtaVZbcmHGRP0NKUw+TLrYB6DAXBlgmw+BkEnxItM7Bxnx
Tquyn4oF5m8TG+QhPH3nLHILVmhURCID38j08zBS4hKjM6+YwpeSt/g49FKwdtrw
MDt7rZSRAIG6moa7pzjLJ1Sm7233CabKPAWQ/8JLHapI1UK81Uw=
=T7mS
-----END PGP SIGNATURE-----

--h56sxpGKRmy85csR--


From gbikal@gmail.com  Sun Feb 12 11:18:54 2017
Return-Path: <gbikal@gmail.com>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 9B17D3C293
 for <containers-users@lists.ocaml.org>; Sun, 12 Feb 2017 11:18:54 +0000 (GMT)
X-Cam-SpamDetails: score -2.0 from SpamAssassin-3.4.1-1781505 
 * -0.0 RCVD_IN_DNSWL_NONE RBL: Sender listed at http://www.dnswl.org/, no
 *      trust
 *      [209.85.223.193 listed in list.dnswl.dnsbl.ja.net]
 * -1.9 RCVD_IN_MSPIKE_H2 RBL: Average reputation (+2)
 *      [209.85.223.193 listed in wl.mailspike.net]
 *  0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 *       (gbikal[at]gmail.com)
 *  0.0 HTML_MESSAGE BODY: HTML included in message
 * -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 * -0.1 DKIM_VALID_AU Message has a valid DKIM or DK signature from
 *      author's domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mail-io0-f193.google.com ([209.85.223.193]:36322)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
 id 1ccso8-000q34-8w (Exim 4.89) for containers-users@lists.ocaml.org
 (return-path <gbikal@gmail.com>); Sun, 12 Feb 2017 11:59:09 +0000
Received: by mail-io0-f193.google.com with SMTP id q20so9875539ioi.3
 for <containers-users@lists.ocaml.org>; Sun, 12 Feb 2017 03:59:08 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=mime-version:references:in-reply-to:from:date:message-id:subject:to;
 bh=/+rEsycQ1iSoDFgTJt2eP11AZa5WvfInyR/MVaWJ7ik=;
 b=nra3hKDUow5bZ93i3SMbKuIb0Vft8tw4jZLO/fBFx/FPHkSrcniN8fp6HAMzN90nPT
 lff66bRJvzuqha6SXkqhiufGQuQ5+P45K6MxhJrZxjEAvdmIuln1SN1zGtTzsLUMVTf3
 0UjqHMystUzqG2QiHmRdUUpNGui1okxNXaH+nGbySzRML7GHdxsq/LK/sEgkAabzTdIW
 KTcE7F2rbYF730DRxgYtj4ukJoHpNg3M8WedPnrZonL/8Xnm2j78FKE5JO5IyHHcHx3W
 O9qoC9lYHqIoWN02YHNh+rkLk3+uVP8GlHrcIcrwEkC8aDKN05g0su5Wp17gMt/voiYS
 k9Sg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:references:in-reply-to:from:date
 :message-id:subject:to;
 bh=/+rEsycQ1iSoDFgTJt2eP11AZa5WvfInyR/MVaWJ7ik=;
 b=ox6o1ZK1D+NGKf2PlR0exUJcekHKKpW3WWWhvUuugs0JH22hXJooZpg8CA32BGMjfN
 EBfWAdHdREPKHhlga3dE7ov/ydcUSKWyvFfkQvjQEAH3IqoFmW/rC1kKzi8SrmqwZTOo
 1TszxF+MzWO7dvkwp+IlCAMeNHr+/liqUq5jeNGJ49Wr/GzAjT4sPpHFVRo7LvNAM3VL
 V3VLtRYpBAQvbpzbqrMlB3CUhK+rJ0ltZGV+Oc9oNFVbYBLzsyg8DG/ZltrO7Ba/KpPW
 vmgIfcrOKw9qxn2i8XOynIyLF3zZt4poYtQZ7yoH2WHKN4S3DFUsCOc320VK7PDbW28L
 +4bg==
X-Gm-Message-State: AMke39nB5FbY2Xi0AsWX2EZekNrhrhTxK2+e5OtywLmboA5siqxFN6D6bGhKRmybKei+V926yQa9tedD43M8mQ==
X-Received: by 10.107.6.210 with SMTP id f79mr19192684ioi.140.1486900747700;
 Sun, 12 Feb 2017 03:59:07 -0800 (PST)
MIME-Version: 1.0
References: <20170211230232.GD3245@carty>
In-Reply-To: <20170211230232.GD3245@carty>
From: Bikal Gurung <gbikal@gmail.com>
Date: Sun, 12 Feb 2017 11:58:57 +0000
Message-ID: <CA+v7nzi6t3MC53t81QkOxHJv-AhcFKDN2+ZTgs0Op7=GoTS-Yg@mail.gmail.com>
To: OCaml users <caml-list@inria.fr>,
 Simon Cruanes <simon.cruanes.2007@m4x.org>, 
 containers-users@lists.ocaml.org
Content-Type: multipart/alternative; boundary=001a113f99e4e213970548540e0d
X-Mailman-Approved-At: Sun, 12 Feb 2017 12:34:39 +0000
Subject: Re: [containers-users] [Caml-list] [ANN] release of containers-1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sun, 12 Feb 2017 11:18:54 -0000

--001a113f99e4e213970548540e0d
Content-Type: text/plain; charset=UTF-8

Congratulations on 1.0 release. This is one of my 'goto' ocaml libraries.

Bikal

On Sat, 11 Feb 2017 at 23:04, Simon Cruanes <simon.cruanes.2007@m4x.org>
wrote:

> Dear all,
>
> It is my great pleasure to announce the release of Containers 1.0, after
> almost four years of development. Containers is a modular, clean and
> powerful extension of the OCaml standard library, under the permissive
> BSD license.
>
> It is designed to be efficient, light on link-time dependencies, and to
> complement the existing modules rather than replacing them.
> The core library has no dependency on unix and should be usable
> everywhere. Every module is independent and is prefixed with 'CC' in
> the global namespace.  Alternatively, `open Containers` will bring
> enhanced versions of the standard modules into scope, along with a few
> modules that should exist, such as Option, IO or Int.
> Containers now requires OCaml >= 4.01.
>
> Containers also features sub-libraries for helping with threads,
> S-expressions, and some unix utilities to invoke sub-processes.
>
> I jump on the opportunity to thank the various users and contributors
> that helped improving the code, kept asking for better solutions, and
> reported bugs.
>
> Cheers!
>
> github page: https://github.com/c-cube/ocaml-containers
> documentation: http://c-cube.github.io/ocaml-containers/1.0/
> overview of 1.0: https://github.com/c-cube/ocaml-containers/issues/84
>
> --
> Simon Cruanes
>
> http://weusepgp.info/
> key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA
> 62B6
>

--001a113f99e4e213970548540e0d
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div>Congratulations on 1.0 release. This is one of my &#39;goto&#39; ocaml=
 libraries.</div><div><br></div><div>Bikal</div><div><br><div class=3D"gmai=
l_quote"><div>On Sat, 11 Feb 2017 at 23:04, Simon Cruanes &lt;<a href=3D"ma=
ilto:simon.cruanes.2007@m4x.org">simon.cruanes.2007@m4x.org</a>&gt; wrote:<=
br></div><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;borde=
r-left:1px #ccc solid;padding-left:1ex">Dear all,<br class=3D"gmail_msg">
<br class=3D"gmail_msg">
It is my great pleasure to announce the release of Containers 1.0, after<br=
 class=3D"gmail_msg">
almost four years of development. Containers is a modular, clean and<br cla=
ss=3D"gmail_msg">
powerful extension of the OCaml standard library, under the permissive<br c=
lass=3D"gmail_msg">
BSD license.<br class=3D"gmail_msg">
<br class=3D"gmail_msg">
It is designed to be efficient, light on link-time dependencies, and to<br =
class=3D"gmail_msg">
complement the existing modules rather than replacing them.<br class=3D"gma=
il_msg">
The core library has no dependency on unix and should be usable<br class=3D=
"gmail_msg">
everywhere. Every module is independent and is prefixed with &#39;CC&#39; i=
n<br class=3D"gmail_msg">
the global namespace.=C2=A0 Alternatively, `open Containers` will bring<br =
class=3D"gmail_msg">
enhanced versions of the standard modules into scope, along with a few<br c=
lass=3D"gmail_msg">
modules that should exist, such as Option, IO or Int.<br class=3D"gmail_msg=
">
Containers now requires OCaml &gt;=3D 4.01.<br class=3D"gmail_msg">
<br class=3D"gmail_msg">
Containers also features sub-libraries for helping with threads,<br class=
=3D"gmail_msg">
S-expressions, and some unix utilities to invoke sub-processes.<br class=3D=
"gmail_msg">
<br class=3D"gmail_msg">
I jump on the opportunity to thank the various users and contributors<br cl=
ass=3D"gmail_msg">
that helped improving the code, kept asking for better solutions, and<br cl=
ass=3D"gmail_msg">
reported bugs.<br class=3D"gmail_msg">
<br class=3D"gmail_msg">
Cheers!<br class=3D"gmail_msg">
<br class=3D"gmail_msg">
github page: <a href=3D"https://github.com/c-cube/ocaml-containers" rel=3D"=
noreferrer" class=3D"gmail_msg" target=3D"_blank">https://github.com/c-cube=
/ocaml-containers</a><br class=3D"gmail_msg">
documentation: <a href=3D"http://c-cube.github.io/ocaml-containers/1.0/" re=
l=3D"noreferrer" class=3D"gmail_msg" target=3D"_blank">http://c-cube.github=
.io/ocaml-containers/1.0/</a><br class=3D"gmail_msg">
overview of 1.0: <a href=3D"https://github.com/c-cube/ocaml-containers/issu=
es/84" rel=3D"noreferrer" class=3D"gmail_msg" target=3D"_blank">https://git=
hub.com/c-cube/ocaml-containers/issues/84</a><br class=3D"gmail_msg">
<br class=3D"gmail_msg">
--<br class=3D"gmail_msg">
Simon Cruanes<br class=3D"gmail_msg">
<br class=3D"gmail_msg">
<a href=3D"http://weusepgp.info/" rel=3D"noreferrer" class=3D"gmail_msg" ta=
rget=3D"_blank">http://weusepgp.info/</a><br class=3D"gmail_msg">
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3=C2=A0 7D8D 4AC0 1D08 49A=
A 62B6<br class=3D"gmail_msg">
</blockquote></div></div>

--001a113f99e4e213970548540e0d--

From gcloc-containers-users@m.gmane.org  Mon Feb 13 09:53:29 2017
Return-Path: <gcloc-containers-users@m.gmane.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id 134893C35D
 for <containers-users@lists.ocaml.org>; Mon, 13 Feb 2017 09:53:29 +0000 (GMT)
X-Cam-SpamScore: s
X-Cam-SpamDetails: score 1.3 from SpamAssassin-3.4.1-1782649 
 *  0.0 HEADER_FROM_DIFFERENT_DOMAINS From and EnvelopeFrom 2nd level mail
 *      domains are different
 *  1.3 RDNS_NONE Delivered to internal network by a host with no rDNS
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from [195.159.176.226] (port=47151 helo=blaine.gmane.org)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
 id 1cdDwz-0000nE-iO (Exim 4.88) for containers-users@lists.ocaml.org
 (return-path <gcloc-containers-users@m.gmane.org>);
 Mon, 13 Feb 2017 10:33:47 +0000
Received: from list by blaine.gmane.org with local (Exim 4.84_2)
 (envelope-from <gcloc-containers-users@m.gmane.org>)
 id 1cdDwO-0005QC-I1
 for containers-users@lists.ocaml.org; Mon, 13 Feb 2017 11:33:04 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: containers-users@lists.ocaml.org
From: Nils Becker <nils.becker@bioquant.uni-heidelberg.de>
Date: Mon, 13 Feb 2017 11:33:04 +0100
Lines: 8
Message-ID: <o7s20p$3ng$1@blaine.gmane.org>
References: <20170211230232.GD3245@carty>
 <CA+v7nzi6t3MC53t81QkOxHJv-AhcFKDN2+ZTgs0Op7=GoTS-Yg@mail.gmail.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
X-Complaints-To: usenet@blaine.gmane.org
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:45.0)
 Gecko/20100101 Thunderbird/45.7.1
In-Reply-To: <CA+v7nzi6t3MC53t81QkOxHJv-AhcFKDN2+ZTgs0Op7=GoTS-Yg@mail.gmail.com>
Subject: Re: [containers-users] [ANN] release of containers-1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 13 Feb 2017 09:53:29 -0000


> Congratulations on 1.0 release. This is one of my 'goto' ocaml libraries.
> 

ditto. i upgraded to 1.0 and found no major breakage. (i guess i was not
using much of the breadth of the library ;) great work!

n.


From SRS0=6L8O=Z2=m4x.org=simon.cruanes.2007@bounces.m4x.org  Mon Feb 13 09:59:47 2017
Return-Path: <SRS0=6L8O=Z2=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id C08323C35D
 for <containers-users@lists.ocaml.org>; Mon, 13 Feb 2017 09:59:47 +0000 (GMT)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.4.1-1782649 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:36334)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1cdE3B-0008w9-gx (Exim 4.88) for containers-users@lists.ocaml.org
 (return-path <SRS0=6L8O=Z2=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Mon, 13 Feb 2017 10:40:05 +0000
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 325275648A9;
 Mon, 13 Feb 2017 11:38:59 +0100 (CET)
Date: Mon, 13 Feb 2017 11:38:57 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: Nils Becker <nils.becker@bioquant.uni-heidelberg.de>
Message-ID: <20170213103857.GJ3910@nunchakus.loria.fr>
References: <20170211230232.GD3245@carty>
 <CA+v7nzi6t3MC53t81QkOxHJv-AhcFKDN2+ZTgs0Op7=GoTS-Yg@mail.gmail.com>
 <o7s20p$3ng$1@blaine.gmane.org>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="YGQsgxOP0v8GKjPA"
Content-Disposition: inline
In-Reply-To: <o7s20p$3ng$1@blaine.gmane.org>
User-Agent: Mutt/1.7.2 (2016-11-26)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Mon Feb 13
 11:38:59 2017 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=6761B56488C
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] [ANN] release of containers-1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 13 Feb 2017 09:59:47 -0000


--YGQsgxOP0v8GKjPA
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Mon, 13 Feb 2017, Nils Becker a =C3=A9crit :
> ditto. i upgraded to 1.0 and found no major breakage. (i guess i was not
> using much of the breadth of the library ;) great work!

Heh, I'm fixing some of the breakages in my own projects right now.
Mostly, related to the now-defunct ugly "or_" named argument, some
renamed List functions, and the new printers. But it's still nice that
containers has gone such a long way :-)

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--YGQsgxOP0v8GKjPA
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlihjMEACgkQSsAdCEmq
YraqBhAA0DTmkpTizX9gCKZT96u2q8vHDoY5h6nRB67Ov3XYhA6HQAjfc73nfhtc
UzMX7PnNZkMedELxyn1wZ1BZ9QtOJxT+twW6Lm/pxEZATZV46BMC5g82T9/oXdGF
p6EGYGymPbM+YI7/NY6aaSN/DMlsI3qaswPp7wAd0QWrQ0XdzuahBsNPPApxXF9Y
P6THUCMC6uKg5zvdyOlogr4Hrk9UnriYjx9SAYvTsnvtPQRR3b85MvavwW1PHqMD
F2YjiYsx2LumdZQ04Z7rCHb/SDpxkaXemnLvvV3V2mnw8SldIEROPYdyKkfiEapm
/6I+LjFlwU7xMOKkZVgov75BZQu7nQD225OnN8YEwxJzyH58fDZYOHNBV3aTmVYN
zoirZFvPgSQHc8LuNeZWRmSOzA1RxPU39PNwYzCR0wIhEI0r4Pfrji8iUf/lqLi9
1Cj2rkU+3CRPgvx151wgRTED7dvZVYaOKYSe4E2Aq6rjYcYmxirIpVCjMF9ABYpt
P9VCXiwOgBtcpwiyxlaH6ATCoKgf1b45PLdW8IKpVHCSoC5H2r+hdIY4spMOxO+k
/PGxlxSQvvRXQvkjAIaRN1hD2IwnLlxwLpKeIgEU/LGJJ+Ua6GCpokwp4CfdVrQa
WKNIvImQRxsrXjWMc6QN3upieXTdboIhl248sIZ1SW4svPWsx1c=
=PI9l
-----END PGP SIGNATURE-----

--YGQsgxOP0v8GKjPA--


From gcloc-containers-users@m.gmane.org  Mon Feb 13 10:02:02 2017
Return-Path: <gcloc-containers-users@m.gmane.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTP id C06F83C35D
 for <containers-users@lists.ocaml.org>; Mon, 13 Feb 2017 10:02:02 +0000 (GMT)
X-Cam-SpamScore: s
X-Cam-SpamDetails: score 1.3 from SpamAssassin-3.4.1-1782649 
 *  0.0 HEADER_FROM_DIFFERENT_DOMAINS From and EnvelopeFrom 2nd level mail
 *      domains are different
 *  1.3 RDNS_NONE Delivered to internal network by a host with no rDNS
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from [195.159.176.226] (port=60179 helo=blaine.gmane.org)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
 id 1cdE5A-000CqQ-fx (Exim 4.88) for containers-users@lists.ocaml.org
 (return-path <gcloc-containers-users@m.gmane.org>);
 Mon, 13 Feb 2017 10:42:20 +0000
Received: from list by blaine.gmane.org with local (Exim 4.84_2)
 (envelope-from <gcloc-containers-users@m.gmane.org>)
 id 1cdE4Y-0001l0-IH
 for containers-users@lists.ocaml.org; Mon, 13 Feb 2017 11:41:30 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: containers-users@lists.ocaml.org
From: Nils Becker <nils.becker@bioquant.uni-heidelberg.de>
Date: Mon, 13 Feb 2017 11:41:30 +0100
Lines: 4
Message-ID: <o7s2gk$pqv$1@blaine.gmane.org>
References: <20170211230232.GD3245@carty>
 <CA+v7nzi6t3MC53t81QkOxHJv-AhcFKDN2+ZTgs0Op7=GoTS-Yg@mail.gmail.com>
 <o7s20p$3ng$1@blaine.gmane.org> <20170213103857.GJ3910@nunchakus.loria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: 7bit
X-Complaints-To: usenet@blaine.gmane.org
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:45.0)
 Gecko/20100101 Thunderbird/45.7.1
In-Reply-To: <20170213103857.GJ3910@nunchakus.loria.fr>
Subject: Re: [containers-users] [ANN] release of containers-1.0
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 13 Feb 2017 10:02:02 -0000

yes, for me it was also mainly List.split and the ....print functions
which i replaced by ...pp

n.


From SRS0=KxJv=3S=m4x.org=simon.cruanes.2007@bounces.m4x.org  Mon Apr 10 15:33:34 2017
Return-Path: <SRS0=KxJv=3S=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-41.csi.cam.ac.uk (ppsw-41.csi.cam.ac.uk [131.111.8.141])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 3594E3C0CC
 for <containers-users@lists.ocaml.org>; Mon, 10 Apr 2017 15:33:34 +0100 (BST)
X-Cam-SpamDetails: score -2.3 from SpamAssassin-3.4.1-1786853 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:44334)
 by ppsw-41.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1cxb3u-0002jr-QI (Exim 4.89) for containers-users@lists.ocaml.org
 (return-path <SRS0=KxJv=3S=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Mon, 10 Apr 2017 16:17:03 +0100
Received: from nunchakus.loria.fr (nunchakus.loria.fr [152.81.10.98])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 839055646B8
 for <containers-users@lists.ocaml.org>; Mon, 10 Apr 2017 17:17:00 +0200 (CEST)
Date: Mon, 10 Apr 2017 17:16:59 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20170410151659.GD4638@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="u5E4XgoOPWr4PD9E"
Content-Disposition: inline
User-Agent: Mutt/1.8.0 (2017-02-23)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Mon Apr 10
 17:17:00 2017 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000366, queueID=B4DC35646C1
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] API design choice for including the stdlib
	modules
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 10 Apr 2017 14:33:34 -0000


--u5E4XgoOPWr4PD9E
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello all,

@orbitz and @drup propose that containers' modules that extend the stdlib s=
hould
include the standard module, so that it's not necessary to remember
where a function lives.

For instance, `CCList` should include `List`, so that it's always
possible to replace `List` with `CCList`. No need to remember where
`combine`, `flatten` or `flat_map` live.

I am considering this change because it is not going to impact
modularity or code size much (we already depend on the stdlib anyway).

Also see:
https://github.com/c-cube/ocaml-containers/issues/109

Opinions and arguments welcome!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--u5E4XgoOPWr4PD9E
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAljroeoACgkQSsAdCEmq
YrY5iQ/7B9rcxwLAH/4f37PGHqiwP0WL7u5qjTzHW8vsfQKDt7WpOK4OG/EhByhT
66i2Zkwoc5qPmLywmk0LWMmdEP5DDCtuWbqyezdgXZmPgF25rJMaP1y8YP6bHjOS
PbjGj6xe4r7ryGfnsVHyRHS03odw8rb5y7G+5zzVVIedRVC9nyH+wnF5wcCtKKeh
BO4Dxqn+6MsfanATryVhuUuJ9N1b1vgZbDXfrpFmUV1cRLB5APXkRnrXHRM68rfj
7HuYCTCpkr5iMQ5PojsGZ7qgr+eEzDioHtkFKnb5GUvMJitVWrTC3hB0BOA1Ac2h
4cJ5Fv48kvw2LMUAg8oTcYg2gkm8X4/rX1EuZwz7dfEIqjEeoshtHxyTXF5w/A80
Aal0n8hqW3dw5OMzMMYofnylg+anae1iMg/lk0k7C+XgKDeHs7xOf6xg01Xe1kVQ
LPWCsI+YzivMk79nBGF5BeIFnoSaZOyG3fn3h1UrJXh148EJUGCVAug1fROKRT+g
E4oAmKLgj9MiIG/h+N6DhMY87N7fOO0YVn6qCw9iTGCZR2jbdfEYwbcgdi/S2KZW
xPz9RYwdYcsWYT2LYtM0uFYMTnj001Oy2m/cY0tjPPeOHcnTe9U9jFQ3MptHRu85
Lg4ss6FrkliM4KEVWjvao5eUlJQP2Dp9xTpUCOn7oYiOFuOARWQ=
=dvQ2
-----END PGP SIGNATURE-----

--u5E4XgoOPWr4PD9E--


From David.Chemouil@onera.fr  Mon Apr 10 15:57:10 2017
Return-Path: <David.Chemouil@onera.fr>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-30.csi.cam.ac.uk (ppsw-30.csi.cam.ac.uk [131.111.8.130])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 61EE13C0CC
 for <containers-users@lists.ocaml.org>; Mon, 10 Apr 2017 15:57:10 +0100 (BST)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.1-1786853 
 * -0.0 RCVD_IN_DNSWL_NONE RBL: Sender listed at http://www.dnswl.org/, no
 *      trust
 *      [134.212.190.4 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from briaree.onecert.fr ([134.212.190.4]:56224)
 by ppsw-30.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1cxbQl-000gFo-dJ (Exim 4.89) for containers-users@lists.ocaml.org
 (return-path <David.Chemouil@onera.fr>); Mon, 10 Apr 2017 16:40:39 +0100
Received: from neree.onecert.fr (thetis.onecert.fr [134.212.178.12])
 by briaree.onecert.fr (8.14.4/8.14.4/ONERA-SRI) with ESMTP id v3AFeb0I044421
 for <containers-users@lists.ocaml.org>; Mon, 10 Apr 2017 17:40:38 +0200
Received: from neree.onecert.fr (thetis.antiviral [127.0.0.1])
 by neree.onecert.fr (8.14.3/8.14.3/ONERA-SRI) with ESMTP id v3AFeb9p004571
 for <containers-users@lists.ocaml.org>; Mon, 10 Apr 2017 17:40:37 +0200
Received: from cottos.onecert.fr (cottos.onecert.fr [134.212.90.4])
 by neree.onecert.fr (8.14.3/8.14.3/ONERA-SRI) with ESMTP id v3AFebmA004568
 for <containers-users@lists.ocaml.org>; Mon, 10 Apr 2017 17:40:37 +0200
Received: from [134.212.25.168] (ct-ldtim307h.onecert.fr [134.212.25.168])
 by cottos.onecert.fr (Postfix) with ESMTP id C3ACE6EEF1
 for <containers-users@lists.ocaml.org>; Mon, 10 Apr 2017 17:40:37 +0200 (CEST)
To: containers-users@lists.ocaml.org
References: <20170410151659.GD4638@nunchakus.loria.fr>
From: David CHEMOUIL <David.Chemouil@onera.fr>
Organization: Onera/DTIM, Toulouse
Message-ID: <7b91d333-a3f8-beba-265b-43a7b9b6150a@onera.fr>
Date: Mon, 10 Apr 2017 17:40:52 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:50.0) Gecko/20100101
 Thunderbird/50.0
MIME-Version: 1.0
In-Reply-To: <20170410151659.GD4638@nunchakus.loria.fr>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: fr
Content-Transfer-Encoding: 8bit
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.4.3
 (briaree.onecert.fr [134.212.190.4]); Mon, 10 Apr 2017 17:40:38 +0200 (CEST)
X-Virus-Scanned: clamav-milter 0.99.2 at briaree
X-Virus-Status: Clean
X-Spam-Status: No, score=-0.5 required=6.0 tests=ALL_TRUSTED, BAYES_00,
 DNS_FROM_AHBL_RHSBL, FH_DATE_PAST_20XX autolearn=no version=3.2.5-onera_sri_4
X-Spam-Checker-Version: SpamAssassin 3.2.5-onera_sri_4 (2008-06-10) on
 briaree.onecert.fr
Subject: Re: [containers-users] API design choice for including the stdlib
 modules
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 10 Apr 2017 14:57:10 -0000



Le 10/04/2017 à 17:16, Simon Cruanes a écrit :

 > > For instance, `CCList` should include `List`, so that it's always
 > > possible to replace `List` with `CCList`. No need to remember where
 > > `combine`, `flatten` or `flat_map` live.

 > > Opinions and arguments welcome!

I concur with @orbitz and @drup. My arguments are exactly those written
above.

david

-- 
David Chemouil
ONERA/DTIS & Université de Toulouse
tel:+33-5-6225-2936
<http://www.onera.fr/staff/david-chemouil>


From SRS0=/gpk=32=m4x.org=simon.cruanes.2007@bounces.m4x.org  Tue Apr 18 20:19:22 2017
Return-Path: <SRS0=/gpk=32=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-31.csi.cam.ac.uk (ppsw-31.csi.cam.ac.uk [131.111.8.131])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 325673C02E
 for <containers-users@lists.ocaml.org>; Tue, 18 Apr 2017 20:19:22 +0100 (BST)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1786853 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:51062)
 by ppsw-31.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1d0ZLK-0010tm-Lj (Exim 4.89) for containers-users@lists.ocaml.org
 (return-path <SRS0=/gpk=32=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Tue, 18 Apr 2017 21:03:19 +0100
Received: from carty (4va54-h02-176-130-250-55.dsl.sta.abo.bbox.fr
 [176.130.250.55])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 4773F5648D7
 for <containers-users@lists.ocaml.org>; Tue, 18 Apr 2017 22:03:17 +0200 (CEST)
Date: Tue, 18 Apr 2017 22:03:15 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20170418200315.GP14022@carty>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="7kD9y3RnPUgTZee0"
Content-Disposition: inline
User-Agent: Mutt/1.8.0 (2017-02-23)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Apr 18
 22:03:17 2017 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=827225648CD
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] breakage in CCBV
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Tue, 18 Apr 2017 19:19:22 -0000


--7kD9y3RnPUgTZee0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello everyone,

The following issue should be of interest to anyone
using the bitvector module CCBV (i.e. at least me):
https://github.com/c-cube/ocaml-containers/issues/113

Given that the length-aware API would be nicer to have, but that right
now it assumes too much on the implementation, I think I have no choice
but to break some parts of the module's interface if this issue is to be
solved. That would affect mostly the parts about getting length/resizing
(which would be in terms of bitvector length, not length of the internal
buffer).

Does anyone object to this, or use the module in a way that might be
broken?

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--7kD9y3RnPUgTZee0
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlj2cQIACgkQSsAdCEmq
Yra5tA/9FLOfP4w+GVNstyrmTuW06STjxec8IUl3q+WAih5woKqYGCWRCiO/U66Y
QwD0t26yJU6lX52rxKCzcuWE+0T0olTYw+DhdyFB7UDs1/HjHWfPPL3/bSRXpC5i
2EmnEux6RDpy8tB8tv4Kx5GKDUJCSjDanRZR6GoGdl8KROl0NaNoDtLLoB37lrIx
gkgDH8BviWfa7u4Uq/nwDaU8GSUtocevF+99zO5JYE6EW5ld/c8I/dz4uRdJWLHU
u8p5kpkEA4byWltNs7k8LcU1K0sdRysjCRIE8v4XyBo1ELSVHX8KBcwIhC+gZjmv
tY/EMBL8aeFonpNnz1+eL1h9ZKSufhWCnBw+XFD2GC3aAMexPq+mzOrBwhm12B8q
Xt1IQ5JLlOz3yuJH6yeaJVxtHvxAd0kYdm/BoHXWvXp5QetiV9QfDEAUbgtJY/Jm
j1sGY324ClZFQLUKnsOdYG22VPbPCzx+2gTPMuVFA7iqn9DlrZRXJthiv2hSGcJ0
HXXOp+Cbdb9yuQDhDPR7+4Erc+zIsOQZpc+ks2CIV+7FrL6D1Wv9Je38pg+Dytrq
oADiPCbsa4nvZ0DgvL9gJN9zqoEppkqn7KVtpMreR6Z8qiw0er1G6KirupHTrPcY
QXe8oX87vkT7m6jxvzDK/514jxO4vUUVaB9BVl0cFPtIFMNQ3Y4=
=MdjT
-----END PGP SIGNATURE-----

--7kD9y3RnPUgTZee0--


From SRS0=Je29=4K=m4x.org=simon.cruanes.2007@bounces.m4x.org  Thu May  4 07:15:33 2017
Return-Path: <SRS0=Je29=4K=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-41.csi.cam.ac.uk (ppsw-41.csi.cam.ac.uk [131.111.8.141])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 2547F3C1B6
 for <containers-users@lists.ocaml.org>; Thu,  4 May 2017 07:15:33 +0100 (BST)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1786853 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:39494)
 by ppsw-41.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1d6AkM-0006m2-S7 (Exim 4.89) for containers-users@lists.ocaml.org
 (return-path <SRS0=Je29=4K=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Thu, 04 May 2017 08:00:22 +0100
Received: from carty (4va54-h02-176-130-250-55.dsl.sta.abo.bbox.fr
 [176.130.250.55])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 8540E56485F
 for <containers-users@lists.ocaml.org>; Thu,  4 May 2017 09:00:15 +0200 (CEST)
Date: Thu, 4 May 2017 09:00:11 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20170504070010.GT14022@carty>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="TrSyUYpaPvvX07X2"
Content-Disposition: inline
User-Agent: Mutt/1.8.0 (2017-02-23)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Thu May 4
 09:00:16 2017 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=71A5A564866
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] containers 1.2
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 04 May 2017 06:15:33 -0000


--TrSyUYpaPvvX07X2
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello everyone,

Containers 1.2 is now available in all the decent opam repositories around
you! It's a big release
(see https://github.com/c-cube/ocaml-containers/blob/master/CHANGELOG.adoc).
In particular, some modules (`CCList`, `CCArray`, etc.) now embed the
stdlib modules, so they are a strict extension of them.

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--TrSyUYpaPvvX07X2
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlkK0XoACgkQSsAdCEmq
YrasIRAAnnczWY0oHR9E2DhhIKZoTb6w5FoprRz/TID70NIpCXcg17ErkEhf4aVy
+apBwPTsQeLqZsaoupdlLbqnhKK+poRKPMxbiU6NA+JWlTm0kIzn5elgx05BRWff
sZbetwY/GuHW9GWfwWI5S/y6WCxcMWLgYA1cxutgwnnXO1R+KuW28dRVu3tgzApW
vv4AkbsCr3+kKTss2BC6uvoYkW1I0XlbIMM57gs3Ix2r7MQksJqiWm/UpSZDOL57
MqhJPJc/+LMSEFPC8JRAbyvz4vqTCc8xc0Ey6cjHCFV32VG710YF8e+7Y1VcvFeu
/pq68FG4pG9nlpQGVva+jl20ztXNwUIVyAP0KDaGVAxTvPnQHgQt1bA2oSREpw3K
6SmxJXHZWh92kLPgitMmnDvhKATcTH8oN9Clxk1UflFpdwY1mN5dNhWKi2oq4DWa
/OsR9xoVHfagGk+YkD+5cx0ms095WIEN20CuMHPkdMxKxSo8tw2V94fdGVDwyQGC
0vUNcIVi67A0uusVqiNoEa6sv4YWci3IycAvbgpocXp4PKBgxErrpVts4BOTvVIQ
XaKbK7eOoYQ4VPZKs4KE5WKHZjkQ1M+TcC0T2n/D4ruq67gsasMXbLjSvIs62MAM
6Ik3IhQIer2R12K5Lr+7hAKrzIKWN57bSHiezekhuPU7/q9CVrk=
=A34t
-----END PGP SIGNATURE-----

--TrSyUYpaPvvX07X2--


From SRS0=+bDN=BN=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sat Oct 14 08:30:08 2017
Return-Path: <SRS0=+bDN=BN=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id D57713C1AF
 for <containers-users@lists.ocaml.org>; Sat, 14 Oct 2017 08:30:08 +0100 (BST)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1799552 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:54330)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1e3Gxa-000sOF-6w (Exim 4.89) for containers-users@lists.ocaml.org
 (return-path <SRS0=+bDN=BN=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sat, 14 Oct 2017 08:34:14 +0100
Received: from carty (mna75-h05-89-87-113-251.dsl.sta.abo.bbox.fr
 [89.87.113.251])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 945745647AD
 for <containers-users@lists.ocaml.org>; Sat, 14 Oct 2017 09:34:12 +0200 (CEST)
Date: Sat, 14 Oct 2017 09:34:10 +0200
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20171014073410.GV3473@carty>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="rE45P3aZNSuYx5ND"
Content-Disposition: inline
User-Agent: Mutt/1.9.1 (2017-09-22)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sat Oct 14
 09:34:12 2017 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.018320, queueID=DA8F65647B9
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] small breaking change
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 14 Oct 2017 07:30:08 -0000


--rE45P3aZNSuYx5ND
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello everyone,

based on https://github.com/c-cube/ocaml-containers/issues/153 I think I
will remove the remaining Buffer.t printers for the next release (make
all `val pp` Format-based, deprecate `val print`).

If anyone still uses Buffer.t based printers I'd like to hear from them!

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--rE45P3aZNSuYx5ND
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlnhvfIACgkQSsAdCEmq
YrYcPw/+PtbOCZFSIMYirqAG4+2+zfkdTKf6v1YNlqRksn91XgHoDtzyvEOW8Gwt
LHxxprnJO75VzcvjHXSVoCs9P5MJVtgvZQ2jMiefsEY1utjJS0oT54F2sQvxdH2B
OiHHW7bPnyVf1zFjyi8g8B2seGGNw3p7ASLyhfIdYMixHdeR9BOXHwSI8y9b1CU0
09UC9xfiCc8TrlFF1okm5pUlMja2p2pKKTnjE2AIz5lqeUfXkmUiJSjTJ+ESUJBo
wS423AedJAXpAtD/zDwaEU83l04afoABkgigXfl/bVr4zeTKZLxGc7YUvO0wFqYH
OJoM8t7RV2VqKl7tyA7Z7LiI3ftpjpVfum0E5iDISE1GeSp0EgO0+McEx+9vW/0/
1sWXBr+iK1tjQMIQqHJ/5Zp8DIfNNPxKf8On3CIamc9pcDY7/Tm8BOSB/W2wuvbm
oKtgdALJKXoIxSTEko+wfSGzP5MUn1BpgJezvEhryg3z3inZ/sysly4dWNrJSwVA
bKvBV4brSQ8j3zGbUvH86KPCpxh23zuiNN+x+UrXSI2CN0L5Eqwhe4PZRETs4Kjw
YJtbFGOJD5ARyqH498E8Ptfu2swsKrJFmotxBQWPvhAYV9X11nXzA4x4pCOiSd5x
Z3g6OUoiZAv5/LtiFq6bxycMcxyK+x0nfWSSuvYgnt287iCsVK4=
=hL+W
-----END PGP SIGNATURE-----

--rE45P3aZNSuYx5ND--


From SRS0=M64T=DO=m4x.org=simon.cruanes.2007@bounces.m4x.org  Mon Dec 18 14:15:47 2017
Return-Path: <SRS0=M64T=DO=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-43.csi.cam.ac.uk (ppsw-43.csi.cam.ac.uk [131.111.8.143])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id AD0DE3C1C4
 for <containers-users@lists.ocaml.org>; Mon, 18 Dec 2017 14:15:47 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1818532 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:59476)
 by ppsw-43.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1eQwKR-0001HQ-oM (Exim 4.89) for containers-users@lists.ocaml.org
 (return-path <SRS0=M64T=DO=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Mon, 18 Dec 2017 14:23:40 +0000
Received: from carty (LFbn-1-3411-113.w90-127.abo.wanadoo.fr [90.127.172.113])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256
 bits)) (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 704C8564717
 for <containers-users@lists.ocaml.org>; Mon, 18 Dec 2017 15:23:36 +0100 (CET)
Date: Mon, 18 Dec 2017 15:23:33 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20171218141351.GA2731@carty>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="A6N2fC+uXW/VQSAv"
Content-Disposition: inline
User-Agent: Mutt/1.9.2 (2017-12-15)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Mon Dec 18
 15:23:36 2017 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000945, queueID=D533456471C
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] next breaking release
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 18 Dec 2017 14:15:47 -0000


--A6N2fC+uXW/VQSAv
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello folks,

Milestone 2.0 has appeared on the containers repo! The reason is that
after another bug^W^W lots of thoughts, https://github.com/c-cube/ocaml-con=
tainers/pull/157
seems like reasonable enough a change to justify a major release.
There is no timeline yet for 2.0, but we should think about which
breaking change will make it, and how to minimize their impact.

Cheers!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--A6N2fC+uXW/VQSAv
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlo3z2UACgkQSsAdCEmq
YrZYiQ//QU+bEA/AYPgjWscDDJVPHRaroFY4ZuKqTqc7uG1AfsxsaGGmnE+NUzMz
+snLoFsPVepk3Rnsl/4X9Ws8MoO8oI2NPOgpgToauZcsHMqaEM00EB6VEPfzHAQY
v8mCjJetEX5/pyViv4z4BwvenK8yXQ1s5V+Ap9LCh2+n+Mhjbo63oLhc6WM16eYu
aCOIxPNuuc+MuOAXVX1dL3xmJT5I1hZpUvVO3RY35JAF5JTc5Qe/htRt/krydFAL
JJBOvOR6hx+vK6T0dWYJSlTpT/jJeJ8UJ3iwaNxRad3qEIVdC7WmuJLAOw10Q2IM
0Ja2p6KX6QyP/FvclL1JcD0INkW7viL3CD6+j0j4lpN9NadBPZ+zv8BBtZJ6EdeS
0H+A0UH6DQtFjO9yClFh3OtvsNtSsXIuwDaruZvJc0UEFCzvpOtzk0KtCbeNRpkt
pNDo9QpllOn+KZ7QOAKEpYkxjdpwhBqnrHK7VG9sCxE6TMCUdz9E7hb0WFan6axL
BDyNEUTdxAv8OEJHjj+IC6ZcB8kVDZ69m53qKj700KGOdFQ9id6HXx2jg9FDr5eh
9D7VKok1DjeTY4Nb65D1apS42x8rwXM/8QevWc7UJ4Yh40vao8ULbedDgCbBb/zz
xIgDJhb3WmmI0c34P+zyAJTqBLsT2dWU6h6Q3C1+hXtOmoogCnY=
=ZdOw
-----END PGP SIGNATURE-----

--A6N2fC+uXW/VQSAv--


From SRS0=dP8K=DU=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sun Dec 24 10:46:09 2017
Return-Path: <SRS0=dP8K=DU=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-43.csi.cam.ac.uk (ppsw-43.csi.cam.ac.uk [131.111.8.143])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id EEF8D3C0C6
 for <containers-users@lists.ocaml.org>; Sun, 24 Dec 2017 10:46:08 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1819206 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:37216)
 by ppsw-43.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1eT3vB-0004XZ-n0 (Exim 4.89) for containers-users@lists.ocaml.org
 (return-path <SRS0=dP8K=DU=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sun, 24 Dec 2017 10:54:22 +0000
Received: from carty (LFbn-1-3411-113.w90-127.abo.wanadoo.fr [90.127.172.113])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256
 bits)) (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id EF8ED56127D
 for <containers-users@lists.ocaml.org>; Sun, 24 Dec 2017 11:54:18 +0100 (CET)
Date: Sun, 24 Dec 2017 11:54:17 +0100
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20171224105416.GB2131@carty>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="69pVuxX8awAiJ7fD"
Content-Disposition: inline
User-Agent: Mutt/1.9.2 (2017-12-15)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sun Dec 24
 11:54:19 2017 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=44545561281
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Subject: [containers-users] bump minimum ocaml version to 4.02
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sun, 24 Dec 2017 10:46:09 -0000


--69pVuxX8awAiJ7fD
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hello people,

I'm thinking of bumping containers' minimum OCaml version to 4.02.3, so
we can use jbuilder^W dune to build, and to enable `-open` that
@jpdeplaix uses in https://github.com/c-cube/ocaml-containers/pull/169.
I'd also do the same for sequence.

Is there anyone who still uses 4.01 ?

Happy holidays to you all!

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--69pVuxX8awAiJ7fD
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlo/h1gACgkQSsAdCEmq
Yrb2Cw//SDjb0kiflLu5MwRcv668PKIPuWJtVsszXNLT9/5LkJXVSIjzJ2B+GJ3I
DdeFuuX5PBerPfmZGXhXKc+bRa7h2hPHOptbYKMdbhAsZWvrCHvCpGJrYEszgcf4
E+zHLM/5SNyVME65zBKSAxouD4LWVywAK8OHmxJgSgbxeRaopQeUAk3Y2LHT+Jgp
+J2m+nAyXP/3s7/CVvvcz2EkkRyeJqkoz1HDsO7tXfLvPi7u6veelVkT39LGZqud
MZiH3QI/JT1AepJ/uOmkvncAKLrwtOBL9Q38ZqOUesTpyoTm1qQaLMytdVtV4CqW
SpYPDYwd10gmx3g6RIiac2B/6tx11QQBZHgxCicQNw3yHBadiGkpfS69FyXXmapw
N3kcI8hnb0TMoM7oeuncKxvUvY2sXIaW6JJBRXWoL3ewSjq7zWsNsLjcfv99NLyN
pSv+9rjPkXgtdIkP+sp0zXupyTyLSpsHQk2ZYBlS8S9CdmJNnHj3pFON2DliYK+H
PfZQGHmE5vyCQAnx4H7cBBZdufMgkQORjVJ1/rn6mEk8nFpgmUyyeor2pRsplI1R
9WmtDkx9cGWiYbCKRURDhOfTWl5NqMmeg3+oFfnpceqgy8ETwcEx6YBAPtuStwWU
n1tIoPWeICmlv26Cl7W6wlJ/7an4YrWxC20x21yDf1HesWMY6Jc=
=2DaP
-----END PGP SIGNATURE-----

--69pVuxX8awAiJ7fD--


From jprodi04@gmail.com  Fri Feb  2 16:42:53 2018
Return-Path: <jprodi04@gmail.com>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 43DC53C0DA
 for <containers-users@lists.ocaml.org>; Fri,  2 Feb 2018 16:42:53 +0000 (GMT)
X-Cam-SpamDetails: score 0.0 from SpamAssassin-3.4.1-1822930 
 * -0.0 RCVD_IN_DNSWL_NONE RBL: Sender listed at http://www.dnswl.org/, no
 *      trust
 *      [209.85.215.44 listed in list.dnswl.dnsbl.ja.net]
 * -0.0 RCVD_IN_MSPIKE_H3 RBL: Good reputation (+3)
 *      [209.85.215.44 listed in wl.mailspike.net]
 *  0.2 FREEMAIL_ENVFROM_END_DIGIT Envelope-from freemail username ends in
 *      digit (jprodi04[at]gmail.com)
 *  0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 *       (jprodi04[at]gmail.com)
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 *  0.0 HTML_MESSAGE BODY: HTML included in message
 * -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 * -0.1 DKIM_VALID_AU Message has a valid DKIM or DK signature from
 *      author's domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid * -0.0 RCVD_IN_MSPIKE_WL Mailspike good senders
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mail-lf0-f44.google.com ([209.85.215.44]:33829)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
 id 1eheab-0000EZ-72 (Exim 4.90) for containers-users@lists.ocaml.org
 (return-path <jprodi04@gmail.com>); Fri, 02 Feb 2018 16:53:26 +0000
Received: by mail-lf0-f44.google.com with SMTP id k19so32473824lfj.1
 for <containers-users@lists.ocaml.org>; Fri, 02 Feb 2018 08:53:25 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=mime-version:from:date:message-id:subject:to;
 bh=rybilbRC9jHbzIDmx19MaCyeklsB738u8YJIirQ3gwk=;
 b=Vubu8L3A/WEITj+Bxc5Pf35mQyQchMpp4GbD4oJkJWN5MhNXkLxWoJSQbXBXxCtzC7
 TZfcaQ4blznl3inAlYJ57s4DAXCLx5Pvwu9+F6fj8sPvHPjKtMZ8rpRbCyQjIAt5yXfj
 YLwKBjXRuawhgBhHMrYuo1ZGfGJ0ZdN9C2pkLhn37xYt9qkkiPwiRa7DupRp70YbOzfU
 CyZmz34cMdB7pKIbijuKBN2aoTFY59r7+Ufa1G38Z7qATDgo2cPs4kQDZj6h/QKXkIZc
 hgspXTlrfH3DpZ7KEU7PRhXSiZ2gyfygB0KLosXleb6oS/9ruAftIS9dm0Itx5Z/zH8C
 PZbw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:mime-version:from:date:message-id:subject:to;
 bh=rybilbRC9jHbzIDmx19MaCyeklsB738u8YJIirQ3gwk=;
 b=SE1MVxpp+ZVOE+4Ndc0DIrw/MG/yELCmvnVVBeXoTZ4nAo2uBWnEXiPKo21SWyBkqw
 s++FwoPHC36lfMxxPqQPlror8BoFHZ+ehrDgGXBoCzu+NppbDjcFnfrGON1Rlpa7/AQy
 5VcUiL4tFcdZD1GfL/k7xQBGNgmEpbpp7CKJh1ce8yhhoc5bYsME5XUuLuPiaIW41Jpm
 RWILx+Be4uxxK42okr3jXIvIqPl837Zvn79CBfN6jnGp5Ad6jFAgG0SXgMEkqZi8KoXx
 aAuu2jw/DuhJ99FJS2izIMmp5HM7ON3UcwY0NOIkkWq+nVuSEHeivLdC4j+fj8opuBEJ
 DD6w==
X-Gm-Message-State: AKwxytefWMFR/TRGRdVz3x/TbnOZY7VuWw7uEEVeZW7fgVeiBt+59Snn
 4CRkb433MX86QmVAc0WmZxaHh2XnUP8HjQfk0KMM5w==
X-Google-Smtp-Source: AH8x224dWgHmkjhViMFM3oIeEkVRgNhR6Vs35cD0c7K9ikmPQ73LiBvrf+JMt8aCk5/1TVayEj7Wr1DczmiBD0tK3GY=
X-Received: by 10.46.122.18 with SMTP id v18mr6077809ljc.32.1517590404105;
 Fri, 02 Feb 2018 08:53:24 -0800 (PST)
MIME-Version: 1.0
Received: by 10.25.199.79 with HTTP; Fri, 2 Feb 2018 08:52:43 -0800 (PST)
From: JP R <jprodi04@gmail.com>
Date: Fri, 2 Feb 2018 17:52:43 +0100
Message-ID: <CAFAmcKqdxrQsG15BsmF9rcKwRU5=0LXhhpvX2XbSLe1-VSUXeA@mail.gmail.com>
To: containers-users@lists.ocaml.org
Content-Type: multipart/alternative; boundary="f4f5e8067e4cf38c8a05643d8c59"
X-Mailman-Approved-At: Sat, 03 Feb 2018 02:23:52 +0000
Subject: [containers-users] Commentaires Containers - questions diverses
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 02 Feb 2018 16:42:53 -0000

--f4f5e8067e4cf38c8a05643d8c59
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

D'abord merci pour l'acceptation rapide de mes 2/3 derniers PRs
(@Fourchaux). C'est sympa.

J'ai pris des notes durant l'=C3=A9criture de ces PRs et je me permets de t=
'en
envoyer quelques-unes pour avoir ton avis, =C3=A9ventuellement (c'est tout =
en
vrac, sorry).

(Les commentaires viennent surtout de Batteries et JST_Base).

Le r=C3=A9pertoire src/core est principalement concern=C3=A9.

* Noms de modules: =C3=A9crits en camlCase sauf CCArray_slice.

* CCArray.to_seq:
Correspond =C3=A0 (Base.Array_ to_sequence :) 'the input array is copied
internally so that future modifications of it do not change the sequence. '

ou =C3=A0 (Base.Array_to_sequence_mutable :) 'the input array is shared wit=
h the
sequence and modifications of it will result in modification of the
sequence.' ?

* CCHashtbl.S.keys_list & CCHashtbl.Poly.keys_list :
Rajout de: 'If the key is in the Hashtable multiple times, all occurrences
will be returned' ?

* CCHeap.S :
Les fonctions of_seq, of_klist, of_gen & to_seq, to_klist, to_gen
sont-elles de Complexity: O(n log n) ?

* CCList.of_seq / of_gen / of_klist :
Rajout de: 'In the result, elements appear in the same order as they did in
the source sequence/gen/klist.' ?

* CCList.mli :
(** {2 Lists of pairs} *) : derni=C3=A8re ligne =C3=A0 supprimer ?

* CCList.foldi & CCListlabels.foldi :
Fonctions Tail-recursive ?

* CCOpt.exists & CCOpt.for_all:
Rajout de : 'This is a short-circuiting operation' ?

* CCVector.of_array:
Rajout de: 'Operates in O(n) time.' ?


De mani=C3=A8re plus g=C3=A9n=C3=A9rale :

* Est-il n=C3=A9cessaire de garder les (tr=C3=A8s laides lignes !) Since: d=
ans la doc
finale ?
Il serait bien d'avoir une premi=C3=A8re page avec les seules infos de base
(noms fonctions + types + descriptions) et une autre page avec des infos
diverses (versions, exemples d'utilisation, sources ...) comme dans les
docs de F#, Rust, etc... etc...
Mais bon, c'est un autre probl=C3=A8me.

A propos, tu g=C3=A9n=C3=A8res comment tes docs Containers ?
Actuellement si je lance $ make doc
j'ai des messages d'erreur du genre :

odoc: internal error, uncaught exception:
      File "src/docOckIdentEnv.ml", line 260, characters 22-28: Assertion
failed ...
Pb odoc, jbuilder, autre ????

* Des fonctions identiques ont des noms diff=C3=A9rents dans Containers,
Batteries ou Base.
Plus g=C3=AAnant des noms identiques correspondent =C3=A0 des fonctions dif=
f=C3=A9rentes.
Base.Array.findi <> CCArray.findi <> BatArray.findi
Un peu dommage !

* Des fonctions s'appellent mapi, findi, foldi sauf CCArray.find_map_i
(pourquoi pas CCArray.find_mapi ?)

* Des fichiers *.mli (CCFormat.mli - CCList.mli - CCListLabels.mli et
surtout CCString.mli) poss=C3=A8dent des tests qtest.
Pas pr=C3=A9f=C3=A9rable de mettre tous les tests dans les fichiers *.ml ?

* Inversement on trouve des Comments identiques dans des fichiers foo.ml et
foo.mli. (Ex: CCSet.ml et CCSet.mli).
Pas mieux de r=C3=A9server les commentaires aux seuls fichiers *.mli ?
Rem: dans ces cas-l=C3=A0 je n'ai modifi=C3=A9 que les seuls *.mli. D=C3=A9=
sol=C3=A9.

* Je n'ai pas trop de commentaires pour les fonctions:

- 'add_foo'
- 'array'
- 'bool'
- 'float/3'
- 'int' & 'int32' & 'int64'
- 'nativeint'
- 'CCHash.combine/2/3/4'
- beaucoup de fonctions 'compare' et 'equal'
- 'fold_l' & 'fold_m'
- 'gen' & 'gen_cpy'
- 'klist' & 'klist_cpy'
-'list' & 'list_cpy'
- 'hash'
- 'map_m'
- 'pair'
- 'pop'
- 'push'
- 'quad'
- 'random' & 'random_foo'
- 'sequence_m'
- 'string'
- 'triple'
- 'write_lines_l'

Grrrrrr .....

* Il serait bien de d=C3=A9velopper/=C3=A9crire des pr=C3=A9sentations pour=
 chaque module.
Dans ce domaine, Batteries est plut=C3=B4t bien fait, je trouve. (mais l=C3=
=A0 mes
connaissances sont trop faibles pour pouvoir =C3=A9crire du texte technique
pertinent).

* Rem: le module CCMonomorphic semble important. Quelqu'un (jpdeplaix ?)
=C3=A9crive une pr=C3=A9sentation dans CCMonomorphic.mli.

Sinon, j'ignore tes intentions mais j'esp=C3=A8re que tu vas continuer =C3=
=A0
d=C3=A9velopper Containers.
Je suis curieux de voir l'influence que va avoir Base (avec l'arriv=C3=A9e
annonc=C3=A9e d'une documentation, la r=C3=A9-=C3=A9criture des exemples de=
 RWO et la
propagande de JST ...) .
Je serais =C3=A9galement curieux d'avoir l'avis des Gourous OCaml (qui refu=
sent
presque toutes modifs de la Std librairie) =C3=A0 propos de Base.
En faisant 'open Base' et en tapant les tout premiers exemples de la doc
OCaml officielle on re=C3=A7oit des tonnes de "Warning - deprecated" mais a=
ussi
des erreurs sur du code tr=C3=A8s tr=C3=A8s basique (# (1 < 2) =3D false) .=
 C'est quand
m=C3=AAme chaud !

Mais bon, si c'est l'avenir.

Bien, on va stopper l=C3=A0.

A+

PS : lors des =C3=A9lections de novembre prochain tu vas =C3=AAtre aux prem=
i=C3=A8res
loges pour assister au basculement politique du Texas (m=C3=AAme si Austin =
est
d=C3=A9j=C3=A0 d=C3=A9mocrate ). Le Texas. Un Blue State. MAGA !!!

--f4f5e8067e4cf38c8a05643d8c59
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">D&#39;abord merci pour l&#39;acceptation rapide de mes 2/3=
 derniers PRs (@Fourchaux). C&#39;est sympa.<br><br>J&#39;ai pris des notes=
 durant l&#39;=C3=A9criture de ces PRs et je me permets de t&#39;en envoyer=
 quelques-unes pour avoir ton avis, =C3=A9ventuellement (c&#39;est tout en =
vrac, sorry).<br><br>(Les commentaires viennent surtout de Batteries et JST=
_Base).<br><br>Le r=C3=A9pertoire src/core est principalement concern=C3=A9=
.<br><br>* Noms de modules: =C3=A9crits en camlCase sauf CCArray_slice.<br>=
<br>* CCArray.to_seq:<br>Correspond =C3=A0 (Base.Array_ to_sequence :) &#39=
;the input array is copied internally so that future modifications of it do=
 not change the sequence. &#39;<br><br>ou =C3=A0 (Base.Array_to_sequence_mu=
table :) &#39;the input array is shared with the sequence and modifications=
 of it will result in modification of the sequence.&#39; ?<br><br>* CCHasht=
bl.S.keys_list &amp; CCHashtbl.Poly.keys_list :<br>Rajout de: &#39;If the k=
ey is in the Hashtable multiple times, all occurrences will be returned&#39=
; ?<br><br>* CCHeap.S :<br>Les fonctions of_seq, of_klist, of_gen &amp; to_=
seq, to_klist, to_gen sont-elles de Complexity: O(n log n) ?<br><br>* CCLis=
t.of_seq / of_gen / of_klist :<br>Rajout de: &#39;In the result, elements a=
ppear in the same order as they did in the source sequence/gen/klist.&#39; =
?<br><br>* CCList.mli :<br>(** {2 Lists of pairs} *) : derni=C3=A8re ligne =
=C3=A0 supprimer ?<br><br>* CCList.foldi &amp; CCListlabels.foldi :<br>Fonc=
tions Tail-recursive ?<br><br>* CCOpt.exists &amp; CCOpt.for_all:<br>Rajout=
 de : &#39;This is a short-circuiting operation&#39; ? <br><br>* CCVector.o=
f_array:<br>Rajout de: &#39;Operates in O(n) time.&#39; ?<br><br><br>De man=
i=C3=A8re plus g=C3=A9n=C3=A9rale :<br><br>* Est-il n=C3=A9cessaire de gard=
er les (tr=C3=A8s laides lignes !) Since: dans la doc finale ?<br>Il serait=
 bien d&#39;avoir une premi=C3=A8re page avec les seules infos de base (nom=
s fonctions + types + descriptions) et une autre page avec des infos divers=
es (versions, exemples d&#39;utilisation, sources ...) comme dans les docs =
de F#, Rust, etc... etc...<br>Mais bon, c&#39;est un autre probl=C3=A8me.<b=
r><br>A propos, tu g=C3=A9n=C3=A8res comment tes docs Containers ?<br>Actue=
llement si je lance $ make doc<br>j&#39;ai des messages d&#39;erreur du gen=
re :<br><br>odoc: internal error, uncaught exception:<br>=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 File &quot;src/docOckIdentEnv.ml&quot;, line 260, characters 2=
2-28: Assertion failed ...<br>Pb odoc, jbuilder, autre ????<br><br>* Des fo=
nctions identiques ont des noms diff=C3=A9rents dans Containers, Batteries =
ou Base.<br>Plus g=C3=AAnant des noms identiques correspondent =C3=A0 des f=
onctions diff=C3=A9rentes.<br>Base.Array.findi &lt;&gt; CCArray.findi &lt;&=
gt; BatArray.findi<br>Un peu dommage !<br><br>* Des fonctions s&#39;appelle=
nt mapi, findi, foldi sauf CCArray.find_map_i (pourquoi pas CCArray.find_ma=
pi ?)<br><br>* Des fichiers *.mli (CCFormat.mli - CCList.mli - CCListLabels=
.mli et surtout CCString.mli) poss=C3=A8dent des tests qtest.<br>Pas pr=C3=
=A9f=C3=A9rable de mettre tous les tests dans les fichiers *.ml ?<br><br>* =
Inversement on trouve des Comments identiques dans des fichiers <a href=3D"=
http://foo.ml">foo.ml</a> et foo.mli. (Ex: CCSet.ml et CCSet.mli). <br>Pas =
mieux de r=C3=A9server les commentaires aux seuls fichiers *.mli ?<br>Rem: =
dans ces cas-l=C3=A0 je n&#39;ai modifi=C3=A9 que les seuls *.mli. D=C3=A9s=
ol=C3=A9.<br><br>* Je n&#39;ai pas trop de commentaires pour les fonctions:=
<br><br>- &#39;add_foo&#39;<br>- &#39;array&#39;<br>- &#39;bool&#39;<br>- &=
#39;float/3&#39;<br>- &#39;int&#39; &amp; &#39;int32&#39; &amp; &#39;int64&=
#39;<br>- &#39;nativeint&#39;<br>- &#39;CCHash.combine/2/3/4&#39;<br>- beau=
coup de fonctions &#39;compare&#39; et &#39;equal&#39;<br>- &#39;fold_l&#39=
; &amp; &#39;fold_m&#39;<br>- &#39;gen&#39; &amp; &#39;gen_cpy&#39;<br>- &#=
39;klist&#39; &amp; &#39;klist_cpy&#39;<br>-&#39;list&#39; &amp; &#39;list_=
cpy&#39;<br>- &#39;hash&#39;<br>- &#39;map_m&#39;<br>- &#39;pair&#39;<br>- =
&#39;pop&#39;<br>- &#39;push&#39;<br>- &#39;quad&#39;<br>- &#39;random&#39;=
 &amp; &#39;random_foo&#39;<br>- &#39;sequence_m&#39;<br>- &#39;string&#39;=
<br>- &#39;triple&#39;<br>- &#39;write_lines_l&#39;<br><br>Grrrrrr .....<br=
><br>* Il serait bien de d=C3=A9velopper/=C3=A9crire des pr=C3=A9sentations=
 pour chaque module. Dans ce domaine, Batteries est plut=C3=B4t bien fait, =
je trouve. (mais l=C3=A0 mes connaissances sont trop faibles pour pouvoir =
=C3=A9crire du texte technique pertinent).<br><br>* Rem: le module CCMonomo=
rphic semble important. Quelqu&#39;un (jpdeplaix ?) =C3=A9crive une pr=C3=
=A9sentation dans CCMonomorphic.mli.<br><br>Sinon, j&#39;ignore tes intenti=
ons mais j&#39;esp=C3=A8re que tu vas continuer =C3=A0 d=C3=A9velopper Cont=
ainers. <br>Je suis curieux de voir l&#39;influence que va avoir Base (avec=
 l&#39;arriv=C3=A9e annonc=C3=A9e d&#39;une documentation, la r=C3=A9-=C3=
=A9criture des exemples de RWO et la propagande de JST ...) .<br>Je serais =
=C3=A9galement curieux d&#39;avoir l&#39;avis des Gourous OCaml (qui refuse=
nt presque toutes modifs de la Std librairie) =C3=A0 propos de Base.<br>En =
faisant &#39;open Base&#39; et en tapant les tout premiers exemples de la d=
oc OCaml officielle on re=C3=A7oit des tonnes de &quot;Warning - deprecated=
&quot; mais aussi des erreurs sur du code tr=C3=A8s tr=C3=A8s basique (# (1=
 &lt; 2) =3D false) . C&#39;est quand m=C3=AAme chaud !<br><br>Mais bon, si=
 c&#39;est l&#39;avenir.<br><br>Bien, on va stopper l=C3=A0.<br><br>A+<br><=
br>PS : lors des =C3=A9lections de novembre prochain tu vas =C3=AAtre aux p=
remi=C3=A8res loges pour assister au basculement politique du Texas (m=C3=
=AAme si Austin est d=C3=A9j=C3=A0 d=C3=A9mocrate ). Le Texas. Un Blue Stat=
e. MAGA !!! <br></div>

--f4f5e8067e4cf38c8a05643d8c59--

From SRS0=2WAk=E5=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sat Feb  3 02:36:44 2018
Return-Path: <SRS0=2WAk=E5=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-31.csi.cam.ac.uk (ppsw-31.csi.cam.ac.uk [131.111.8.131])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id C1FFC3CE25
 for <containers-users@lists.ocaml.org>; Sat,  3 Feb 2018 02:36:44 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1822930 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:40278)
 by ppsw-31.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1ehnrK-000hnQ-KZ (Exim 4.90) for containers-users@lists.ocaml.org
 (return-path <SRS0=2WAk=E5=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sat, 03 Feb 2018 02:47:19 +0000
Received: from carty (cpe-70-112-2-148.austin.res.rr.com [70.112.2.148])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id AFAC9564AE6;
 Sat,  3 Feb 2018 03:47:14 +0100 (CET)
Date: Fri, 2 Feb 2018 20:47:11 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: JP R <jprodi04@gmail.com>
Message-ID: <20180203024710.GK16191@carty>
References: <CAFAmcKqdxrQsG15BsmF9rcKwRU5=0LXhhpvX2XbSLe1-VSUXeA@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="zPXeIxDajdrcF2en"
Content-Disposition: inline
In-Reply-To: <CAFAmcKqdxrQsG15BsmF9rcKwRU5=0LXhhpvX2XbSLe1-VSUXeA@mail.gmail.com>
User-Agent: Mutt/1.9.2 (2017-12-15)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sat Feb 3
 03:47:15 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=9045D564AE7
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Commentaires Containers - questions diverses
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 03 Feb 2018 02:36:44 -0000


--zPXeIxDajdrcF2en
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Might have been better to redirect to my private email, sorry folks
(altough, if you speak french, there's a lot of interesting questions
and remarks in JP's email). He's contributed a lot of typographic
improvements and added documentation (patience > 9000).

You can disregard my answers otherwise, it's going to be weird out of
context.

Le Fri, 02 Feb 2018, JP R wrote:
> J'ai pris des notes durant l'=C3=A9criture de ces PRs et je me permets de=
 t'en
> envoyer quelques-unes pour avoir ton avis, =C3=A9ventuellement (c'est tou=
t en
> vrac, sorry).
>=20
> (Les commentaires viennent surtout de Batteries et JST_Base).
>=20
> Le r=C3=A9pertoire src/core est principalement concern=C3=A9.
>=20
> * Noms de modules: =C3=A9crits en camlCase sauf CCArray_slice.

Consistency in style is not one of my strengths :/

> * CCArray.to_seq:
> Correspond =C3=A0 (Base.Array_ to_sequence :) 'the input array is copied
> internally so that future modifications of it do not change the sequence.=
 '
>=20
> ou =C3=A0 (Base.Array_to_sequence_mutable :) 'the input array is shared w=
ith the
> sequence and modifications of it will result in modification of the
> sequence.' ?

Shared (the second one). Copying would ruin the point of using a
sequence in the first place.

> * CCHashtbl.S.keys_list & CCHashtbl.Poly.keys_list :
> Rajout de: 'If the key is in the Hashtable multiple times, all occurrences
> will be returned' ?

=E2=9C=94

> * CCHeap.S :
> Les fonctions of_seq, of_klist, of_gen & to_seq, to_klist, to_gen
> sont-elles de Complexity: O(n log n) ?

`of_*` probably are (just a sequence of inserts); `to_*` I'm not sure
how the amortized costs combine if we traverse the whole structure.
Might be less.

> * CCList.of_seq / of_gen / of_klist :
> Rajout de: 'In the result, elements appear in the same order as they did =
in
> the source sequence/gen/klist.' ?

why not.

> * CCList.mli :
> (** {2 Lists of pairs} *) : derni=C3=A8re ligne =C3=A0 supprimer ?
=E2=9C=94=20
> * CCList.foldi & CCListlabels.foldi :
> Fonctions Tail-recursive ?

=E2=9C=94

>=20
> * CCOpt.exists & CCOpt.for_all:
> Rajout de : 'This is a short-circuiting operation' ?

for options that doesn't really make sense, does it?

>=20
> * CCVector.of_array:
> Rajout de: 'Operates in O(n) time.' ?

=E2=9C=94

> De mani=C3=A8re plus g=C3=A9n=C3=A9rale :
>=20
> * Est-il n=C3=A9cessaire de garder les (tr=C3=A8s laides lignes !) Since:=
 dans la doc
> finale ?
> Il serait bien d'avoir une premi=C3=A8re page avec les seules infos de ba=
se
> (noms fonctions + types + descriptions) et une autre page avec des infos
> diverses (versions, exemples d'utilisation, sources ...) comme dans les
> docs de F#, Rust, etc... etc...
> Mais bon, c'est un autre probl=C3=A8me.

Yes, that's useful info and it's also available in ocp-browser.

> A propos, tu g=C3=A9n=C3=A8res comment tes docs Containers ?
> Actuellement si je lance $ make doc
> j'ai des messages d'erreur du genre :
>=20
> odoc: internal error, uncaught exception:
>       File "src/docOckIdentEnv.ml", line 260, characters 22-28: Assertion
> failed ...
> Pb odoc, jbuilder, autre ????

odoc I suppose. I use 4.05.0+flambda for day to day dev fyi.

> * Des fonctions identiques ont des noms diff=C3=A9rents dans Containers,
> Batteries ou Base.
> Plus g=C3=AAnant des noms identiques correspondent =C3=A0 des fonctions d=
iff=C3=A9rentes.
> Base.Array.findi <> CCArray.findi <> BatArray.findi
> Un peu dommage !

-> fragmentation!

> * Des fonctions s'appellent mapi, findi, foldi sauf CCArray.find_map_i
> (pourquoi pas CCArray.find_mapi ?)
>=20
> * Des fichiers *.mli (CCFormat.mli - CCList.mli - CCListLabels.mli et
> surtout CCString.mli) poss=C3=A8dent des tests qtest.
> Pas pr=C3=A9f=C3=A9rable de mettre tous les tests dans les fichiers *.ml ?

These files used to be cppo files (which would not be accepted by
qtest). We can move the tests back into the .ml files now.

> * Inversement on trouve des Comments identiques dans des fichiers foo.ml =
et
> foo.mli. (Ex: CCSet.ml et CCSet.mli).
> Pas mieux de r=C3=A9server les commentaires aux seuls fichiers *.mli ?
> Rem: dans ces cas-l=C3=A0 je n'ai modifi=C3=A9 que les seuls *.mli. D=C3=
=A9sol=C3=A9.
>=20
> * Je n'ai pas trop de commentaires pour les fonctions:
>=20
> - 'add_foo'
> - 'array'
> - 'bool'
> - 'float/3'
> - 'int' & 'int32' & 'int64'
> - 'nativeint'
> - 'CCHash.combine/2/3/4'
> - beaucoup de fonctions 'compare' et 'equal'
> - 'fold_l' & 'fold_m'
> - 'gen' & 'gen_cpy'
> - 'klist' & 'klist_cpy'
> -'list' & 'list_cpy'
> - 'hash'
> - 'map_m'
> - 'pair'
> - 'pop'
> - 'push'
> - 'quad'
> - 'random' & 'random_foo'
> - 'sequence_m'
> - 'string'
> - 'triple'
> - 'write_lines_l'
>=20
> Grrrrrr .....
>=20
> * Il serait bien de d=C3=A9velopper/=C3=A9crire des pr=C3=A9sentations po=
ur chaque module.
> Dans ce domaine, Batteries est plut=C3=B4t bien fait, je trouve. (mais l=
=C3=A0 mes
> connaissances sont trop faibles pour pouvoir =C3=A9crire du texte techniq=
ue
> pertinent).

I agree. Even a few lines at the beginning explaining what the intended
use is, would be useful.

> * Rem: le module CCMonomorphic semble important. Quelqu'un (jpdeplaix ?)
> =C3=A9crive une pr=C3=A9sentation dans CCMonomorphic.mli.
>=20
> Sinon, j'ignore tes intentions mais j'esp=C3=A8re que tu vas continuer =
=C3=A0
> d=C3=A9velopper Containers.

I do intend to continue :-)

> Je suis curieux de voir l'influence que va avoir Base (avec l'arriv=C3=A9e
> annonc=C3=A9e d'une documentation, la r=C3=A9-=C3=A9criture des exemples =
de RWO et la
> propagande de JST ...) .

Base seems to have a good design but I don't want to rewrite tens of
thousands of lines of code (probably not far from 100k) just because
they decided to be incompatible with the stdlib.

> Je serais =C3=A9galement curieux d'avoir l'avis des Gourous OCaml (qui re=
fusent
> presque toutes modifs de la Std librairie) =C3=A0 propos de Base.
> En faisant 'open Base' et en tapant les tout premiers exemples de la doc
> OCaml officielle on re=C3=A7oit des tonnes de "Warning - deprecated" mais=
 aussi
> des erreurs sur du code tr=C3=A8s tr=C3=A8s basique (# (1 < 2) =3D false)=
 . C'est quand
> m=C3=AAme chaud !
>=20
> Mais bon, si c'est l'avenir.

^^
who knows=E2=80=A6

> PS : lors des =C3=A9lections de novembre prochain tu vas =C3=AAtre aux pr=
emi=C3=A8res
> loges pour assister au basculement politique du Texas (m=C3=AAme si Austi=
n est
> d=C3=A9j=C3=A0 d=C3=A9mocrate ). Le Texas. Un Blue State. MAGA !!!

Heh, wait and see!=20


--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--zPXeIxDajdrcF2en
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlp1Iq4ACgkQSsAdCEmq
YrZlyQ//QRhnThX+tPL1lATfrYor3QlycHkh0yvA3gs+HJ8EF3hTXW6kDcc65WZS
SnbjWgqintos7GG6jg8xe6A3PG6HWADyuFAcJ6v/eiwLDRNrdle0xln/3f+VFFwv
yjgL+KLGoZ5tH5HyXW0bkVQI3d6dwlpWzjvAtHH3ozWYW7HMkU+pEorx/SUAxVU7
l/NClFl75ErqshU/YrbJg0dX1cg8ajJwRoZc4/ctKoOGnmLwH0RnAETcYUtb42zN
SrxBCXEhHKaLlh3f3F+oe0VNLsARYORDKnp+Ikea18p5HGGiNKpzBYy0Ly6vt7bj
9GrhxbbmmI9qOhlT5iwxjOvqfx1KEzCYJYJ175/98HsDVPhVPuAjqHYpWN98HK+D
j2ZIMNPAuCpWkkmplPBa+OkEepXn0hd9LxlIbJyWlm9Dtsr4Xxad4LhSBSA8EkmG
V529q2GuPsojXFI4fbBamXs8w9g6gLv4CIlqxS/08fq1+VSyuB821J/FzUQlKg6Q
3UpubLRXeYX8M2pZ5uLbYRC6tA60Yp1DuDHBrHBWEW8wvLQg3WGOQf+oEJegq0tN
RPw9CaqMl+rkOwGJz2oPY6Sd2XAyKUhYMRQJjP4akWC4aYXeJj8fcMKWLHto+xwQ
B+gTe0WziiP0ijzm2HcAxWZjF7ak9crI+4p8KHHEYl1tdHms91Y=
=Tdc9
-----END PGP SIGNATURE-----

--zPXeIxDajdrcF2en--


From pjfrey@sympatico.ca  Sat Feb 10 19:27:45 2018
Return-Path: <pjfrey@sympatico.ca>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id E9A3F3C0CB
 for <containers-users@lists.ocaml.org>; Sat, 10 Feb 2018 19:27:45 +0000 (GMT)
X-Cam-SpamDetails: score -0.8 from SpamAssassin-3.4.1-1823734 
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at http://www.dnswl.org/, low
 *      trust
 *      [184.150.200.80 listed in list.dnswl.dnsbl.ja.net]
 * -0.0 RCVD_IN_MSPIKE_H3 RBL: Good reputation (+3)
 *      [184.150.200.80 listed in wl.mailspike.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 * -0.0 RCVD_IN_MSPIKE_WL Mailspike good senders
 *  0.0 UNPARSEABLE_RELAY Informational: message has unparseable relay
 *      lines
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from belmont80srvr.owm.bell.net ([184.150.200.80]:55809
 helo=mtlfep02.bell.net)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1:DHE-RSA-AES256-SHA:256)
 id 1ekayu-0005eo-9X (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <pjfrey@sympatico.ca>); Sat, 10 Feb 2018 19:38:47 +0000
Received: from bell.net mtlfep02 184.150.200.30 by mtlfep02.bell.net with ESMTP
 id <20180210193813.VWAG22355.mtlfep02.bell.net@mtlspm02.bell.net>
 for <containers-users@lists.ocaml.org>;
 Sat, 10 Feb 2018 14:38:13 -0500
Received: from [192.168.2.22] (really [74.12.55.71]) by mtlspm02.bell.net
 with ESMTP
 id <20180210193813.FJKG6415.mtlspm02.bell.net@[192.168.2.22]>
 for <containers-users@lists.ocaml.org>;
 Sat, 10 Feb 2018 14:38:13 -0500
To: containers-users@lists.ocaml.org
From: peter frey <pjfrey@sympatico.ca>
Message-ID: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
Date: Sat, 10 Feb 2018 14:38:13 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.6.0
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: en-US
X-Cloudmark-Analysis: v=2.2 cv=OZx3NlbY c=1 sm=0 tr=0
 a=fXKWxymDiLb0AS7UaBURww==:17 a=IkcTkHD0fZMA:10 a=Op4juWPpsa0A:10
 a=nqVsdIROAAAA:8 a=wAx4nvBAlJqueyfU1UsA:9 a=pB4IGO-5twPPLYwS:21
 a=blwWwwaZEuJm6B8A:21 a=QEXdDO2ut3YA:10 a=-SCsI-0toOYcM-bnu72n:22
Subject: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 10 Feb 2018 19:27:46 -0000

(*
Reading recent posts on discuss.ocal.org gives me the impression that 
some tiny
number of utf related routines should be more easily available.
Container's Sequence.t and Gen.t, in particular could benefit from a 
couple of
simple routines.  The code below fits well into that frame work.
I am treating it as public domain code but feel free to make it your own 
and to
include it where appropriate. (Perhaps some of the tests could go into the
example directory...)
The routines here DO NOT verify unless its unavoidable.  In particular they
accept ALL code points that can be encoded by the original Utf8 definition.
It is only a matter of language; we could call it utf31 ...
Restricting the range is trivial; as would be including some 
verification code.



*)

open Containers

(* Create a generator from a utf8-string. Each call produces a code point.
  * The optional parameter srcIdx specifies then start point in the string.
  * srcIdx must point to a valid suffix of a utf8 string.
  * *)
let gen_of_utf8 ?(srcIdx=ref 0) str =
     let lim = String.length str in
     let assemble_next () =     (* we come here only for multi-byte 
characters *)
       let cv jmax accu =      (* utf8 character length; construction of 
uchar *)
         let rec cv' j accu' =          (* inner loop j = 1..jmax ; each 
uchar *)
           let ch = Char.code str.[ !srcIdx + j] in
           let next = ( (accu' lsl 6) lor ( ch land 0x7f )) in
           if j = jmax then begin     (* except for 1st, each char gives 
6 bits*)
             srcIdx := !srcIdx + j +1; Some next            (* +1 for 
1st char *)
           end else cv' (succ j) next
       in cv' 1  (* 1st char is already proccessed! *) accu
     in if !srcIdx >= lim then None else
     let n = str.[ !srcIdx ] in match n with
     (* 0xxxxxxx *) | '\000' .. '\127' -> incr srcIdx; Some (int_of_char n)
     (* 110yyyyy *) | '\128' .. '\223' -> cv 1 ((Char.code n) land 0b11111 )
     (* 1110zzzz *) | '\224' .. '\239' -> cv 2 ((Char.code n) land 0b1111 )
     (* 11110uuu *) | '\240' .. '\247' -> cv 3 ((Char.code n) land 0b111 )
     (* 111110vv *) | '\248' .. '\251' -> cv 4 ((Char.code n) land 0b11 )
     (* 1111110w *) | '\252' .. '\253' -> cv 5 ((Char.code n) land 0b1 )
     (* 1111111X *) | '\254' .. '\255' -> raise (Failure "Bad stream")
   in  assemble_next;;


(* The 'natural' stream representation of a utf-string is a generator.
  * But Sequences are not far away ... *)
let makeUtf8Seq ?(srcIdx=ref 0) str = Sequence.of_gen (gen_of_utf8 
~srcIdx str)



(* Convert a code point to a string; Hopefully some day this will be in the
  * standard library. There are various equally trivial versions of this 
around.
  * The returned string is created (allocated) fresh for each k.
  * *)

let code_to_string k =
   let mask = 0b111111 in
   if k < 0 || k >= 0x4000000 then begin
     let s = Bytes.create 6 in
     Bytes.unsafe_set s 0 (Char.chr (0xfc + (k lsr 30)));
     Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 24) land 
mask)));
     Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 18) land 
mask)));
     Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 12) land 
mask)));
     Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor ((k lsr 6) land 
mask)));
     Bytes.unsafe_set s 5 (Char.unsafe_chr (0x80 lor (k land mask)));
     s end
   else if k <= 0x7f then
     Bytes.make 1 (Char.unsafe_chr k)
   else if k <= 0x7ff then begin
     let s = Bytes.create 2 in
     Bytes.unsafe_set s 0 (Char.unsafe_chr (0xc0 lor (k lsr 6)));
     Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor (k land mask)));
     s end
   else if k <= 0xffff then begin
     let s = Bytes.create 3 in
     Bytes.unsafe_set s 0 (Char.unsafe_chr (0xe0 lor (k lsr 12)));
     Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 6) land 
mask)));
     Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor (k land mask)));
     s end
   else if k <= 0x1fffff then begin
     let s = Bytes.create 4 in
     Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf0 + (k lsr 18)));
     Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 12) land 
mask)));
     Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 6) land 
mask)));
     Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor (k land mask)));
     s end
   else begin
     let s = Bytes.create 5 in
     Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf8 + (k lsr 24)));
     Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 18) land 
mask)));
     Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 12) land 
mask)));
     Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 6) land 
mask)));
     Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor (k land mask)));
     s end

let string_to_code str =
     let cv jmax accu =      (* utf8 character length; construction of 
uchar *)
     if jmax >  String.length str then raise (Failure "string_to_code")
     else let rec cv' j accu' =       (* inner loop j = 1..jmax ; each 
uchar *)
       let ch = Char.code (String.unsafe_get str j) in
       let next = ( (accu' lsl 6) lor ( ch land 0x7f )) in
       if j = jmax then next else cv' (succ j) next
       in cv' 1  (* 1st char is already proccessed! *) accu
     in let n = str.[0] in match n with
     (* 0xxxxxxx *) | '\000' .. '\127' -> int_of_char n
     (* 110yyyyy *) | '\128' .. '\223' -> cv 1 ((Char.code n) land 0b11111 )
     (* 1110zzzz *) | '\224' .. '\239' -> cv 2 ((Char.code n) land 0b1111 )
     (* 11110uuu *) | '\240' .. '\247' -> cv 3 ((Char.code n) land 0b111 )
     (* 111110vv *) | '\248' .. '\251' -> cv 4 ((Char.code n) land 0b11 )
     (* 1111110w *) | '\252' .. '\253' -> cv 5 ((Char.code n) land 0b1 )
     (* 1111111X *) | '\254' .. '\255' -> raise (Failure "Bad stream")


(* code_into_string over-writes string s which must be 7-byte string.
  * n-byte String ends with '\000' which is set as needed (in case you 
feed it
  * to a c-program). The last byte of a string contains the # of unused 
bytes in
  * then string. It is set here, for example, by "Bytes.unsafe_set s 6 
'\000'"
  * If the string is longer than 1 word (plus header) all hell breaks loose.
  * Use only if the string is copied afterwards. (Buffer.add_string ... etc)
  * DUBIOUS (and about twice as fast because allocation is not needed)
  * js_of_ocaml might be unhappy with this...
*)
let code_into_string s k =
   let mask = 0b111111 in
   if k < 0 || k >= 0x4000000 then begin
     Bytes.unsafe_set s 0 (Char.chr (0xfc + (k lsr 30)));
     Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 24) land 
mask)));
     Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 18) land 
mask)));
     Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 12) land 
mask)));
     Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor ((k lsr 6) land 
mask)));
     Bytes.unsafe_set s 5 (Char.unsafe_chr (0x80 lor ( k land mask)));
     Bytes.unsafe_set s 6 '\000';                   (* string internals 
s/b OK *)
     Bytes.unsafe_set s 7 (Char.unsafe_chr  1 );   (* string internals 
DUBIOUS *)
     () end
   else if k <= 0x7f then begin
     Bytes.unsafe_set s 0 (Char.chr k);
     Bytes.unsafe_set s 1 '\000';
     Bytes.unsafe_set s 7 (Char.unsafe_chr  6 );
     () end
   else if k <= 0x7ff then begin
     Bytes.unsafe_set s 0 (Char.unsafe_chr (0xc0 lor (k lsr 6)));
     Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor (k land mask)));
     Bytes.unsafe_set s 2 '\000';
     Bytes.unsafe_set s 7 (Char.unsafe_chr  5 );
     () end
   else if k <= 0xffff then begin
     Bytes.unsafe_set s 0 (Char.unsafe_chr (0xe0 lor (k lsr 12)));
     Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 6) land 
mask)));
     Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor (k land mask)));
     Bytes.unsafe_set s 3 '\000';
     Bytes.unsafe_set s 7 (Char.unsafe_chr  4 );
     () end
   else if k <= 0x1fffff then begin
     Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf0 + (k lsr 18)));
     Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 12) land 
mask)));
     Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 6) land 
mask)));
     Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor (k land mask)));
     Bytes.unsafe_set s 4 '\000';
     Bytes.unsafe_set s 7 (Char.unsafe_chr  3 );
     () end
   else begin
     Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf8 + (k lsr 24)));
     Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 18) land 
mask)));
     Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 12) land 
mask)));
     Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 6) land 
mask)));
     Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor (k land mask)));
     Bytes.unsafe_set s 5 '\000';
     Bytes.unsafe_set s 7 (Char.unsafe_chr  2 );
     () end

(* Automaton to map a (utf8) char Sequence.t into an int Sequence.t
    Accept up to 6 characters, converting them to an integer to feed to k.
    This code demonstrates that being at the receiving end of a sequence can
    cause hardship ... It needs often a state-machine
    ... and perhaps a better name  *)
   let mapUtf8Char2Code (k: int -> unit) =
     let rec next = ref first
     and accu = ref 0
     and first ch = match ch with
       (* 0xxxxxxx *) | '\000' .. '\127' -> k (int_of_char ch); accu := 0
       (* 110yyyyy *) | '\128' .. '\223' -> cv s1 ch 0b11111
       (* 1110zzzz *) | '\224' .. '\239' -> cv s2 ch 0b1111
       (* 11110uuu *) | '\240' .. '\247' -> cv s3 ch 0b111
       (* 111110vv *) | '\248' .. '\251' -> cv s4 ch 0b11
       (* 1111110w *) | '\252' .. '\253' -> cv s5 ch 0b1
       (* 1111111X *) | '\254' .. '\255' -> raise (Failure "Bad stream")
     and inline ch = accu := (!accu lsl 6) lor ((Char.code ch) land 0x7f )
     and s1 ch = inline ch; next := first; k !accu
     and s2 ch = inline ch; next := s1 and s3 ch = inline ch; next := s2
     and s4 ch = inline ch; next := s3 and s5 ch = inline ch; next := s4
     and cv startState initialValue mask =
         next := startState;
         accu := (Char.code initialValue) land mask
   in (fun c -> !next c) ;;

let code_len k =
   if k < 0 || k >= 0x4000000 then 6 else if k <= 0x7f then 1
   else if k <= 0x7ff then 2 else if k <= 0xffff then 3
   else if k <= 0x1fffff then 4 else 5


(*
(* 
===========================================================================
  *           various tests of above
*)


(* measure.ml
  * included to avoid dependency on some other (more capable) measuring tool
  *                                *)
let measure fn arg (units:int)  comment =
   (* arg is last argument of fn (or unit not belonging to fn);
      argument units is only used for ratio (units /. elapsed) *)
   let start = Unix.gettimeofday() in
   let res = fn arg in
   let endt = Unix.gettimeofday() in let elapsed = endt -. start in
   let open Printf in
   printf"\n%s\n\tTime:%f Units:%i Units/sec:%s uSecs/Unit:%s\n%!"
         (sprintf"Measured <<%s>>" comment)
         elapsed units
         ( if units <= 1 then "N/A" else
           sprintf"%8.0f" ((float_of_int units) /. elapsed ) )
         ( if units <= 1 then "N/A" else
           sprintf"%2.8f" (elapsed /. (float_of_int units) *. 1000000.0 ) );
   res


open Printf
module S = Sequence
module V = Vector

let code_to_string_test last =                              (* 
code_to_string *)
   for i = 0 to last do ignore (code_to_string i)  done ;;

let code_into_string_test last =                          (* 
code_into_string *)
   let str = Bytes.create 6 in
   for i = 0 to last do ignore (code_into_string str i)  done ;;

let round_about2 last =                            (* code_to_string and 
back *)
   for i = 0 to last do
     let str = code_to_string i in (* convert code point to char string *)
     let j = string_to_code str in  (* convert the char string back to 
code *)
     assert( i = j)
   done

let round_about3 last =                          (* code_into_string and 
back *)
   let len = ref 1 in
   let str = Bytes.create 6 in
   for i = 0 to last do
     code_into_string str i; (* convert code point to char string *)
     let j = string_to_code str in  (* convert the char string back to 
code *)
     assert( i = j);
     if code_len i <> !len then (printf"New len at %x:%s\n" i str;
                                len := code_len i )
   done


let make_big_string last = (* create a utf8 string of consecutive code 
points *)
   let buf = Buffer.create (16 * 1024 * 1024 ) in (* ocaml tolerates 
large *)
   let str = Bytes.create 6 in
   for i = 0 to last do
     code_into_string str i;
     Buffer.add_string buf str;
   done;
   Buffer.contents buf
   ;;

let make_big_string last = (* create a utf8 string of consecutive code 
points *)
   let buf = Buffer.create (16 * 1024 * 1024 ) in (* ocaml tolerates 
large *)
   let str = Bytes.create 7 in
   for i = 0 to last do
     code_into_string str i;
     Buffer.add_string buf str;
   done;
   let b = Buffer.contents buf in
   printf"\n\ncreated %i strings. \nfinal length: %i bytes. \
          \nAvg len %f\n%!"
          last
          (String.length b)
          ((float_of_int (String.length b)) /. (float_of_int last));
   b

let decode_big big =              (* create a utf8 string; convert to 
int S.t *)
   let check = ref 0 in             (* map char S.t to int S.t and test 
result *)
   (String.to_seq big)
   (mapUtf8Char2Code (fun j -> assert (j = !check) ; incr check))


let last1 = 0x3ffffff;; (*    67_108_863 *)
let last2 = 0x7fffffff;; (* 1073_741_823 *)
let last = last2 (* last2 uses ALL code points and takes a while *)

(* Sample: Convert a utf8 char string to a Vector *)
let utf8_to_vector str = str |> gen_of_utf8 |> V.of_gen

let _ = printf "\"SKサイトリf\" |> utf8_to_vector \n\t |> Vector.to_seq |> 
S.map code_to_string |> fun seq -> seq (printf\"%s\t\")\n!";;

"SKサイトリf" |> utf8_to_vector |> Vector.to_seq |> S.map code_to_string |>
  fun seq -> seq (printf"%s\t");;

(* Test below does not work for last 2 because it allocates a to big 
string *)
let big = measure make_big_string last1 last1 "make_big_string";;
measure decode_big big last1 "decode_big";;

(* Here last2 encodes/decodes ALL possible code points *)
measure round_about2 last last "round_about2";;
measure round_about3 last last "round_about3";;
measure code_into_string_test last last "code_into_string";;
measure code_to_string_test last last "code_to_string";;

let _ = (* One can never have to many samples ... *)
  printf"\n\n    "; S.( 0 -- 15) (fun i -> printf" %2x" i);
  S.( 0 -- 15)
   (fun i -> printf"\n%4x  " (i * 16 + 0x2500);
     S.( (0x2500 + i * 16) -- (0x250F + i * 16))
     |> S.map code_to_string
     |> S.to_list |> String.concat "  " |> print_string
   );;
*)



From SRS0=f/2n=FE=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sat Feb 10 19:43:02 2018
Return-Path: <SRS0=f/2n=FE=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-31.csi.cam.ac.uk (ppsw-31.csi.cam.ac.uk [131.111.8.131])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 7825D3C0CB
 for <containers-users@lists.ocaml.org>; Sat, 10 Feb 2018 19:43:02 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1823734 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:35098)
 by ppsw-31.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1ekbDm-000Igp-L1 (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=f/2n=FE=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sat, 10 Feb 2018 19:54:04 +0000
Received: from carty (cpe-70-112-2-148.austin.res.rr.com [70.112.2.148])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 08EA2564813;
 Sat, 10 Feb 2018 20:53:55 +0100 (CET)
Date: Sat, 10 Feb 2018 13:53:52 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: peter frey <pjfrey@sympatico.ca>
Message-ID: <20180210195351.GE1388@carty>
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="wayzTnRSUXKNfBqd"
Content-Disposition: inline
In-Reply-To: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
User-Agent: Mutt/1.9.3 (2018-01-21)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sat Feb 10
 20:53:56 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=DBFC8564814
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 10 Feb 2018 19:43:02 -0000


--wayzTnRSUXKNfBqd
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hi Peter,

Thanks for the suggestions. I'm no expert in unicode, but I do agree
that such basic functionalities should be more easily available.
Maybe a `Ustring` module in containers would make sense (as a private
alias to `string`); most functionalities below would fit there, I think.

Would you consider opening PRs against gen, sequence, and containers
repositories so we can discuss that without spamming the list? I can
help if needed, or do it myself.
I'm interested in tests too, but will probably write some (possibly
using Uutf as a reference); some of the tests you wrote below I can
retrofit in the qtest mechanism.

Cheers!


Le Sat, 10 Feb 2018, peter frey wrote:
> (*
> Reading recent posts on discuss.ocal.org gives me the impression that some
> tiny
> number of utf related routines should be more easily available.
> Container's Sequence.t and Gen.t, in particular could benefit from a coup=
le
> of
> simple routines.=C2=A0 The code below fits well into that frame work.
> I am treating it as public domain code but feel free to make it your own =
and
> to
> include it where appropriate. (Perhaps some of the tests could go into the
> example directory...)
> The routines here DO NOT verify unless its unavoidable.=C2=A0 In particul=
ar they
> accept ALL code points that can be encoded by the original Utf8 definitio=
n.
> It is only a matter of language; we could call it utf31 ...
> Restricting the range is trivial; as would be including some verification
> code.
>=20
>=20
>=20
> *)
>=20
> open Containers
>=20
> (* Create a generator from a utf8-string. Each call produces a code point.
> =C2=A0* The optional parameter srcIdx specifies then start point in the s=
tring.
> =C2=A0* srcIdx must point to a valid suffix of a utf8 string.
> =C2=A0* *)
> let gen_of_utf8 ?(srcIdx=3Dref 0) str =3D
> =C2=A0=C2=A0=C2=A0 let lim =3D String.length str in
> =C2=A0=C2=A0=C2=A0 let assemble_next () =3D=C2=A0=C2=A0=C2=A0=C2=A0 (* we=
 come here only for multi-byte
> characters *)
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 let cv jmax accu =3D=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0 (* utf8 character length; construction of
> uchar *)
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 let rec cv' j accu' =3D=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* inner loop j =3D 1..jma=
x ; each
> uchar *)
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 let ch =3D Char.co=
de str.[ !srcIdx + j] in
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 let next =3D ( (ac=
cu' lsl 6) lor ( ch land 0x7f )) in
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 if j =3D jmax then=
 begin=C2=A0=C2=A0=C2=A0=C2=A0 (* except for 1st, each char gives 6
> bits*)
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 srcIdx=
 :=3D !srcIdx + j +1; Some next=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0 (* +1 for 1st
> char *)
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 end else cv' (succ=
 j) next
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 in cv' 1=C2=A0 (* 1st char is already proc=
cessed! *) accu
> =C2=A0=C2=A0=C2=A0 in if !srcIdx >=3D lim then None else
> =C2=A0=C2=A0=C2=A0 let n =3D str.[ !srcIdx ] in match n with
> =C2=A0=C2=A0=C2=A0 (* 0xxxxxxx *) | '\000' .. '\127' -> incr srcIdx; Some=
 (int_of_char n)
> =C2=A0=C2=A0=C2=A0 (* 110yyyyy *) | '\128' .. '\223' -> cv 1 ((Char.code =
n) land 0b11111 )
> =C2=A0=C2=A0=C2=A0 (* 1110zzzz *) | '\224' .. '\239' -> cv 2 ((Char.code =
n) land 0b1111 )
> =C2=A0=C2=A0=C2=A0 (* 11110uuu *) | '\240' .. '\247' -> cv 3 ((Char.code =
n) land 0b111 )
> =C2=A0=C2=A0=C2=A0 (* 111110vv *) | '\248' .. '\251' -> cv 4 ((Char.code =
n) land 0b11 )
> =C2=A0=C2=A0=C2=A0 (* 1111110w *) | '\252' .. '\253' -> cv 5 ((Char.code =
n) land 0b1 )
> =C2=A0=C2=A0=C2=A0 (* 1111111X *) | '\254' .. '\255' -> raise (Failure "B=
ad stream")
> =C2=A0 in=C2=A0 assemble_next;;
>=20
>=20
> (* The 'natural' stream representation of a utf-string is a generator.
> =C2=A0* But Sequences are not far away ... *)
> let makeUtf8Seq ?(srcIdx=3Dref 0) str =3D Sequence.of_gen (gen_of_utf8 ~s=
rcIdx
> str)
>=20
>=20
>=20
> (* Convert a code point to a string; Hopefully some day this will be in t=
he
> =C2=A0* standard library. There are various equally trivial versions of t=
his
> around.
> =C2=A0* The returned string is created (allocated) fresh for each k.
> =C2=A0* *)
>=20
> let code_to_string k =3D
> =C2=A0 let mask =3D 0b111111 in
> =C2=A0 if k < 0 || k >=3D 0x4000000 then begin
> =C2=A0=C2=A0=C2=A0 let s =3D Bytes.create 6 in
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.chr (0xfc + (k lsr 30)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k ls=
r 24) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k ls=
r 18) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k ls=
r 12) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor ((k ls=
r 6) land mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 5 (Char.unsafe_chr (0x80 lor (k lan=
d mask)));
> =C2=A0=C2=A0=C2=A0 s end
> =C2=A0 else if k <=3D 0x7f then
> =C2=A0=C2=A0=C2=A0 Bytes.make 1 (Char.unsafe_chr k)
> =C2=A0 else if k <=3D 0x7ff then begin
> =C2=A0=C2=A0=C2=A0 let s =3D Bytes.create 2 in
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.unsafe_chr (0xc0 lor (k lsr=
 6)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor (k lan=
d mask)));
> =C2=A0=C2=A0=C2=A0 s end
> =C2=A0 else if k <=3D 0xffff then begin
> =C2=A0=C2=A0=C2=A0 let s =3D Bytes.create 3 in
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.unsafe_chr (0xe0 lor (k lsr=
 12)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k ls=
r 6) land mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor (k lan=
d mask)));
> =C2=A0=C2=A0=C2=A0 s end
> =C2=A0 else if k <=3D 0x1fffff then begin
> =C2=A0=C2=A0=C2=A0 let s =3D Bytes.create 4 in
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf0 + (k lsr 1=
8)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k ls=
r 12) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k ls=
r 6) land mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor (k lan=
d mask)));
> =C2=A0=C2=A0=C2=A0 s end
> =C2=A0 else begin
> =C2=A0=C2=A0=C2=A0 let s =3D Bytes.create 5 in
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf8 + (k lsr 2=
4)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k ls=
r 18) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k ls=
r 12) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k ls=
r 6) land mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor (k lan=
d mask)));
> =C2=A0=C2=A0=C2=A0 s end
>=20
> let string_to_code str =3D
> =C2=A0=C2=A0=C2=A0 let cv jmax accu =3D=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* =
utf8 character length; construction of uchar
> *)
> =C2=A0=C2=A0=C2=A0 if jmax >=C2=A0 String.length str then raise (Failure =
"string_to_code")
> =C2=A0=C2=A0=C2=A0 else let rec cv' j accu' =3D=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 (* inner loop j =3D 1..jmax ; each uchar
> *)
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 let ch =3D Char.code (String.unsafe_get st=
r j) in
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 let next =3D ( (accu' lsl 6) lor ( ch land=
 0x7f )) in
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 if j =3D jmax then next else cv' (succ j) =
next
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 in cv' 1=C2=A0 (* 1st char is already proc=
cessed! *) accu
> =C2=A0=C2=A0=C2=A0 in let n =3D str.[0] in match n with
> =C2=A0=C2=A0=C2=A0 (* 0xxxxxxx *) | '\000' .. '\127' -> int_of_char n
> =C2=A0=C2=A0=C2=A0 (* 110yyyyy *) | '\128' .. '\223' -> cv 1 ((Char.code =
n) land 0b11111 )
> =C2=A0=C2=A0=C2=A0 (* 1110zzzz *) | '\224' .. '\239' -> cv 2 ((Char.code =
n) land 0b1111 )
> =C2=A0=C2=A0=C2=A0 (* 11110uuu *) | '\240' .. '\247' -> cv 3 ((Char.code =
n) land 0b111 )
> =C2=A0=C2=A0=C2=A0 (* 111110vv *) | '\248' .. '\251' -> cv 4 ((Char.code =
n) land 0b11 )
> =C2=A0=C2=A0=C2=A0 (* 1111110w *) | '\252' .. '\253' -> cv 5 ((Char.code =
n) land 0b1 )
> =C2=A0=C2=A0=C2=A0 (* 1111111X *) | '\254' .. '\255' -> raise (Failure "B=
ad stream")
>=20
>=20
> (* code_into_string over-writes string s which must be 7-byte string.
> =C2=A0* n-byte String ends with '\000' which is set as needed (in case yo=
u feed
> it
> =C2=A0* to a c-program). The last byte of a string contains the # of unus=
ed bytes
> in
> =C2=A0* then string. It is set here, for example, by "Bytes.unsafe_set s 6
> '\000'"
> =C2=A0* If the string is longer than 1 word (plus header) all hell breaks=
 loose.
> =C2=A0* Use only if the string is copied afterwards. (Buffer.add_string .=
=2E. etc)
> =C2=A0* DUBIOUS (and about twice as fast because allocation is not needed)
> =C2=A0* js_of_ocaml might be unhappy with this...
> *)
> let code_into_string s k =3D
> =C2=A0 let mask =3D 0b111111 in
> =C2=A0 if k < 0 || k >=3D 0x4000000 then begin
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.chr (0xfc + (k lsr 30)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k ls=
r 24) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k ls=
r 18) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k ls=
r 12) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor ((k ls=
r 6) land mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 5 (Char.unsafe_chr (0x80 lor ( k la=
nd mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 6 '\000';=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0 (* string internals s/b
> OK *)
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 7 (Char.unsafe_chr=C2=A0 1 );=C2=A0=
=C2=A0 (* string internals
> DUBIOUS *)
> =C2=A0=C2=A0=C2=A0 () end
> =C2=A0 else if k <=3D 0x7f then begin
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.chr k);
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 '\000';
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 7 (Char.unsafe_chr=C2=A0 6 );
> =C2=A0=C2=A0=C2=A0 () end
> =C2=A0 else if k <=3D 0x7ff then begin
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.unsafe_chr (0xc0 lor (k lsr=
 6)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor (k lan=
d mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 2 '\000';
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 7 (Char.unsafe_chr=C2=A0 5 );
> =C2=A0=C2=A0=C2=A0 () end
> =C2=A0 else if k <=3D 0xffff then begin
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.unsafe_chr (0xe0 lor (k lsr=
 12)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k ls=
r 6) land mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor (k lan=
d mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 3 '\000';
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 7 (Char.unsafe_chr=C2=A0 4 );
> =C2=A0=C2=A0=C2=A0 () end
> =C2=A0 else if k <=3D 0x1fffff then begin
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf0 + (k lsr 1=
8)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k ls=
r 12) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k ls=
r 6) land mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor (k lan=
d mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 4 '\000';
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 7 (Char.unsafe_chr=C2=A0 3 );
> =C2=A0=C2=A0=C2=A0 () end
> =C2=A0 else begin
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf8 + (k lsr 2=
4)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k ls=
r 18) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k ls=
r 12) land
> mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k ls=
r 6) land mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor (k lan=
d mask)));
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 5 '\000';
> =C2=A0=C2=A0=C2=A0 Bytes.unsafe_set s 7 (Char.unsafe_chr=C2=A0 2 );
> =C2=A0=C2=A0=C2=A0 () end
>=20
> (* Automaton to map a (utf8) char Sequence.t into an int Sequence.t
> =C2=A0=C2=A0 Accept up to 6 characters, converting them to an integer to =
feed to k.
> =C2=A0=C2=A0 This code demonstrates that being at the receiving end of a =
sequence can
> =C2=A0=C2=A0 cause hardship ... It needs often a state-machine
> =C2=A0=C2=A0 ... and perhaps a better name=C2=A0 *)
> =C2=A0 let mapUtf8Char2Code (k: int -> unit) =3D
> =C2=A0=C2=A0=C2=A0 let rec next =3D ref first
> =C2=A0=C2=A0=C2=A0 and accu =3D ref 0
> =C2=A0=C2=A0=C2=A0 and first ch =3D match ch with
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* 0xxxxxxx *) | '\000' .. '\127' -> k (in=
t_of_char ch); accu :=3D 0
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* 110yyyyy *) | '\128' .. '\223' -> cv s1=
 ch 0b11111
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* 1110zzzz *) | '\224' .. '\239' -> cv s2=
 ch 0b1111
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* 11110uuu *) | '\240' .. '\247' -> cv s3=
 ch 0b111
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* 111110vv *) | '\248' .. '\251' -> cv s4=
 ch 0b11
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* 1111110w *) | '\252' .. '\253' -> cv s5=
 ch 0b1
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* 1111111X *) | '\254' .. '\255' -> raise=
 (Failure "Bad stream")
> =C2=A0=C2=A0=C2=A0 and inline ch =3D accu :=3D (!accu lsl 6) lor ((Char.c=
ode ch) land 0x7f )
> =C2=A0=C2=A0=C2=A0 and s1 ch =3D inline ch; next :=3D first; k !accu
> =C2=A0=C2=A0=C2=A0 and s2 ch =3D inline ch; next :=3D s1 and s3 ch =3D in=
line ch; next :=3D s2
> =C2=A0=C2=A0=C2=A0 and s4 ch =3D inline ch; next :=3D s3 and s5 ch =3D in=
line ch; next :=3D s4
> =C2=A0=C2=A0=C2=A0 and cv startState initialValue mask =3D
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 next :=3D startState;
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 accu :=3D (Char.code initialVa=
lue) land mask
> =C2=A0 in (fun c -> !next c) ;;
>=20
> let code_len k =3D
> =C2=A0 if k < 0 || k >=3D 0x4000000 then 6 else if k <=3D 0x7f then 1
> =C2=A0 else if k <=3D 0x7ff then 2 else if k <=3D 0xffff then 3
> =C2=A0 else if k <=3D 0x1fffff then 4 else 5
>=20
>=20
> (*
> (*
> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D
> =C2=A0*=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 vario=
us tests of above
> *)
>=20
>=20
> (* measure.ml
> =C2=A0* included to avoid dependency on some other (more capable) measuri=
ng tool
> =C2=A0*=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 *)
> let measure fn arg (units:int)=C2=A0 comment =3D
> =C2=A0 (* arg is last argument of fn (or unit not belonging to fn);
> =C2=A0=C2=A0=C2=A0=C2=A0 argument units is only used for ratio (units /. =
elapsed) *)
> =C2=A0 let start =3D Unix.gettimeofday() in
> =C2=A0 let res =3D fn arg in
> =C2=A0 let endt =3D Unix.gettimeofday() in let elapsed =3D endt -. start =
in
> =C2=A0 let open Printf in
> =C2=A0 printf"\n%s\n\tTime:%f Units:%i Units/sec:%s uSecs/Unit:%s\n%!"
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (sprintf"Measured <<%s>>" comm=
ent)
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 elapsed units
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 ( if units <=3D 1 then "N/A" e=
lse
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 sprintf"%8.0f" ((f=
loat_of_int units) /. elapsed ) )
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 ( if units <=3D 1 then "N/A" e=
lse
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 sprintf"%2.8f" (el=
apsed /. (float_of_int units) *. 1000000.0 ) );
> =C2=A0 res
>=20
>=20
> open Printf
> module S =3D Sequence
> module V =3D Vector
>=20
> let code_to_string_test last =3D=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (*
> code_to_string *)
> =C2=A0 for i =3D 0 to last do ignore (code_to_string i)=C2=A0 done ;;
>=20
> let code_into_string_test last =3D=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (*
> code_into_string *)
> =C2=A0 let str =3D Bytes.create 6 in
> =C2=A0 for i =3D 0 to last do ignore (code_into_string str i)=C2=A0 done =
;;
>=20
> let round_about2 last =3D=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* code_to_string and
> back *)
> =C2=A0 for i =3D 0 to last do
> =C2=A0=C2=A0=C2=A0 let str =3D code_to_string i in (* convert code point =
to char string *)
> =C2=A0=C2=A0=C2=A0 let j =3D string_to_code str in=C2=A0 (* convert the c=
har string back to code
> *)
> =C2=A0=C2=A0=C2=A0 assert( i =3D j)
> =C2=A0 done
>=20
> let round_about3 last =3D=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* code_into_string and
> back *)
> =C2=A0 let len =3D ref 1 in
> =C2=A0 let str =3D Bytes.create 6 in
> =C2=A0 for i =3D 0 to last do
> =C2=A0=C2=A0=C2=A0 code_into_string str i; (* convert code point to char =
string *)
> =C2=A0=C2=A0=C2=A0 let j =3D string_to_code str in=C2=A0 (* convert the c=
har string back to code
> *)
> =C2=A0=C2=A0=C2=A0 assert( i =3D j);
> =C2=A0=C2=A0=C2=A0 if code_len i <> !len then (printf"New len at %x:%s\n"=
 i str;
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 len :=3D code_len i )
> =C2=A0 done
>=20
>=20
> let make_big_string last =3D (* create a utf8 string of consecutive code
> points *)
> =C2=A0 let buf =3D Buffer.create (16 * 1024 * 1024 ) in (* ocaml tolerate=
s large *)
> =C2=A0 let str =3D Bytes.create 6 in
> =C2=A0 for i =3D 0 to last do
> =C2=A0=C2=A0=C2=A0 code_into_string str i;
> =C2=A0=C2=A0=C2=A0 Buffer.add_string buf str;
> =C2=A0 done;
> =C2=A0 Buffer.contents buf
> =C2=A0 ;;
>=20
> let make_big_string last =3D (* create a utf8 string of consecutive code
> points *)
> =C2=A0 let buf =3D Buffer.create (16 * 1024 * 1024 ) in (* ocaml tolerate=
s large *)
> =C2=A0 let str =3D Bytes.create 7 in
> =C2=A0 for i =3D 0 to last do
> =C2=A0=C2=A0=C2=A0 code_into_string str i;
> =C2=A0=C2=A0=C2=A0 Buffer.add_string buf str;
> =C2=A0 done;
> =C2=A0 let b =3D Buffer.contents buf in
> =C2=A0 printf"\n\ncreated %i strings. \nfinal length: %i bytes. \
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 \nAvg len %f\n%!"
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 last
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (String.length b)
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 ((float_of_int (String.l=
ength b)) /. (float_of_int last));
> =C2=A0 b
>=20
> let decode_big big =3D=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* create a utf8 string; convert to int
> S.t *)
> =C2=A0 let check =3D ref 0 in=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 (* map char S.t to int S.t and test
> result *)
> =C2=A0 (String.to_seq big)
> =C2=A0 (mapUtf8Char2Code (fun j -> assert (j =3D !check) ; incr check))
>=20
>=20
> let last1 =3D 0x3ffffff;; (*=C2=A0=C2=A0=C2=A0 67_108_863 *)
> let last2 =3D 0x7fffffff;; (* 1073_741_823 *)
> let last =3D last2 (* last2 uses ALL code points and takes a while *)
>=20
> (* Sample: Convert a utf8 char string to a Vector *)
> let utf8_to_vector str =3D str |> gen_of_utf8 |> V.of_gen
>=20
> let _ =3D printf "\"SK=E3=82=B5=E3=82=A4=E3=83=88=E3=83=AAf\" |> utf8_to_=
vector \n\t |> Vector.to_seq |>
> S.map code_to_string |> fun seq -> seq (printf\"%s\t\")\n!";;
>=20
> "SK=E3=82=B5=E3=82=A4=E3=83=88=E3=83=AAf" |> utf8_to_vector |> Vector.to_=
seq |> S.map code_to_string |>
> =C2=A0fun seq -> seq (printf"%s\t");;
>=20
> (* Test below does not work for last 2 because it allocates a to big stri=
ng
> *)
> let big =3D measure make_big_string last1 last1 "make_big_string";;
> measure decode_big big last1 "decode_big";;
>=20
> (* Here last2 encodes/decodes ALL possible code points *)
> measure round_about2 last last "round_about2";;
> measure round_about3 last last "round_about3";;
> measure code_into_string_test last last "code_into_string";;
> measure code_to_string_test last last "code_to_string";;
>=20
> let _ =3D (* One can never have to many samples ... *)
> =C2=A0printf"\n\n=C2=A0=C2=A0=C2=A0 "; S.( 0 -- 15) (fun i -> printf" %2x=
" i);
> =C2=A0S.( 0 -- 15)
> =C2=A0 (fun i -> printf"\n%4x=C2=A0 " (i * 16 + 0x2500);
> =C2=A0=C2=A0=C2=A0 S.( (0x2500 + i * 16) -- (0x250F + i * 16))
> =C2=A0=C2=A0=C2=A0 |> S.map code_to_string
> =C2=A0=C2=A0=C2=A0 |> S.to_list |> String.concat "=C2=A0 " |> print_string
> =C2=A0 );;
> *)
>=20


--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--wayzTnRSUXKNfBqd
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlp/Tc8ACgkQSsAdCEmq
YrY7lQ//S034VV4Wf1BMI/AvZBBqyYEc2+yd1ufWmxmibvHVTWu00sPH6Oy4QaqS
8A1v7mgzufNDANbDnBT64RoHmOCg4fZRWrjsA96d76AFl3zXATJDOxImfZa5HevH
LLzrW3E+bBugi6yNsf/uNmAPYOZ95YmcbkrCBcrOjMxy7NxTW5Jx54uN72codSyh
Z3fuluxXkfkNK3NPR5AYYST5ry0GAId6BjzQlVZkRJk4Qs3LZcaV4kGNofRFlNZt
Tamy6GwDS6FC481Q71zdJsFslupmsauz6Vdbcq2QJ7Clfyceobz40hBReHWIOmkR
W7RY7w5PjI5CkBMpYWOo/ABQK4LT0rwT6OwTzvOv81iVVFuByldsHx0rxM+t4WIC
bmuDhlt82ng3ZB9KvWpLl75+OMHMqWdGVL4hggLgwVzYTAHNwmyw04UJVdpwi3Ok
EAVHUAhQabin+E46658XzMXHTE8o8yFGYWPJ98slJVNWdbLOgdBEWhgBtc8gnzNA
Aq+uKJRgG7lrF+EHzQf8kcGt3vJLWm0RjTqU1F0XBVU/aeB3MK66QwAftkfpp9Fh
fVH+A1r/6UIGYw5h3xr6ac4e2mw6/utuTiJYDVl9BS/ktFEw6ZA0DEiTDMp3/Bej
uBSROo/waKCPpIhuuDUAy1I87/I4xsmBV1OlDKIIyBV6j3agr+Q=
=U4hF
-----END PGP SIGNATURE-----

--wayzTnRSUXKNfBqd--


From sp@orbitalfox.eu  Fri Feb 23 00:25:48 2018
Return-Path: <sp@orbitalfox.eu>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-30.csi.cam.ac.uk (ppsw-30.csi.cam.ac.uk [131.111.8.130])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 3C92E3C1B0
 for <containers-users@lists.ocaml.org>; Fri, 23 Feb 2018 00:25:48 +0000 (GMT)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.1-1825034 
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0004]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from orbitalfox.com ([95.172.232.202]:34738 helo=orbitalfox.eu)
 by ppsw-30.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtp id 1ep1Mi-000T7G-dA (Exim 4.90_1) for
 containers-users@lists.ocaml.org
 (return-path <sp@orbitalfox.eu>); Fri, 23 Feb 2018 00:37:32 +0000
Received: from darkstar (unknown [192.168.88.3])
 by orbitalfox.eu (Postfix) with ESMTPSA id 66075AA002E
 for <containers-users@lists.ocaml.org>; Fri, 23 Feb 2018 00:37:31 +0000 (UTC)
Date: Fri, 23 Feb 2018 00:37:29 +0000
From: SP <sp@orbitalfox.eu>
To: containers-users@lists.ocaml.org
Message-ID: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
User-Agent: NeoMutt/20171215
Subject: [containers-users] Request for comments on BiMap
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 23 Feb 2018 00:25:48 -0000

I've started working on a BiMap, a map where (key, value) is also
(value, key) in a one-to-one relationship.

https://github.com/c-cube/ocaml-containers/compare/master...orbifx:bimap

As I'm writing this I have written `empty`, `add`, `find_left` and
`find_right`.

The idea is that when adding a left-key, right-value to the BiMap, it
doesn't just check for the preexistence of the left key, but also checks
if the right value already has a left key and removes it if so. Vice
versa for right key, left value.

Please provide any comments and thoughts.

One question I have is why are map values first in the order of
parameters? For example:

https://github.com/c-cube/ocaml-containers/blob/master/src/data/CCMultiMap.ml#L294
 
-- 
	SP

From sp@orbitalfox.eu  Fri Feb 23 00:37:18 2018
Return-Path: <sp@orbitalfox.eu>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-30.csi.cam.ac.uk (ppsw-30.csi.cam.ac.uk [131.111.8.130])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id ECE2A3C1B0
 for <containers-users@lists.ocaml.org>; Fri, 23 Feb 2018 00:37:18 +0000 (GMT)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.1-1825034 
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from orbitalfox.com ([95.172.232.202]:34754 helo=orbitalfox.eu)
 by ppsw-30.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtp id 1ep1Xq-000Zzs-eM (Exim 4.90_1) for
 containers-users@lists.ocaml.org
 (return-path <sp@orbitalfox.eu>); Fri, 23 Feb 2018 00:49:03 +0000
Received: from darkstar (unknown [192.168.88.3])
 by orbitalfox.eu (Postfix) with ESMTPSA id 26560AA002E
 for <containers-users@lists.ocaml.org>; Fri, 23 Feb 2018 00:49:02 +0000 (UTC)
Date: Fri, 23 Feb 2018 00:48:59 +0000
From: SP <sp@orbitalfox.eu>
To: containers-users@lists.ocaml.org
Message-ID: <20180223004859.50f10c99@darkstar>
X-Mailer: Claws Mail 3.16.0 (GTK+ 2.24.32; x86_64-pc-linux-gnu)
In-Reply-To: <20180210195351.GE1388@carty>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 23 Feb 2018 00:37:19 -0000

> Thanks for the suggestions. I'm no expert in unicode, but I do agree
> that such basic functionalities should be more easily available.
> Maybe a `Ustring` module in containers would make sense (as a private
> alias to `string`); most functionalities below would fit there

Is this for facilitation or implementation of UTF?

There is an implementation here <https://opam.ocaml.org/packages/uutf/>

-- 
	SP

From SRS0=2/R6=FR=m4x.org=simon.cruanes.2007@bounces.m4x.org  Fri Feb 23 01:55:28 2018
Return-Path: <SRS0=2/R6=FR=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-31.csi.cam.ac.uk (ppsw-31.csi.cam.ac.uk [131.111.8.131])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 4B30E3C31A
 for <containers-users@lists.ocaml.org>; Fri, 23 Feb 2018 01:55:28 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1825034 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:37155)
 by ppsw-31.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1ep2lU-000llS-KD (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=2/R6=FR=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Fri, 23 Feb 2018 02:07:13 +0000
Received: from carty (cpe-70-112-2-148.austin.res.rr.com [70.112.2.148])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id DEE72564760;
 Fri, 23 Feb 2018 03:07:06 +0100 (CET)
Date: Thu, 22 Feb 2018 20:07:02 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: SP <sp@orbitalfox.eu>
Message-ID: <20180223020701.GA2041@carty>
References: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="BXVAT5kNtrzKuDFl"
Content-Disposition: inline
In-Reply-To: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
User-Agent: Mutt/1.9.3 (2018-01-21)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Fri Feb 23
 03:07:07 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=B834C564762
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Request for comments on BiMap
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 23 Feb 2018 01:55:28 -0000


--BXVAT5kNtrzKuDFl
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Nice!

This looks pretty ok (albeit far from complete, a proper module will
have to have conversion from/to lists, from/to sequences, and probably
some other convenient functions such as membership testing or
cardinality or is_empty).

Some comments for future inclusion in containers:

- The module type Bimap should be called S (main signature).
- Also, what add does on collision over any key should be clearly
specified in the docs
- that find functions can raise Not_found must be properly documented (@rai=
se)
- in the implementation of add, don't use !=3D, use L.compare (resp.
  R.compare). !=3D will be almost always wrong.

Le Fri, 23 Feb 2018, SP wrote:

> I've started working on a BiMap, a map where (key, value) is also
> (value, key) in a one-to-one relationship.
>=20
> https://github.com/c-cube/ocaml-containers/compare/master...orbifx:bimap
>=20
> As I'm writing this I have written `empty`, `add`, `find_left` and
> `find_right`.
>=20
> The idea is that when adding a left-key, right-value to the BiMap, it
> doesn't just check for the preexistence of the left key, but also checks
> if the right value already has a left key and removes it if so. Vice
> versa for right key, left value.


> One question I have is why are map values first in the order of
> parameters? For example:
>=20
> https://github.com/c-cube/ocaml-containers/blob/master/src/data/CCMultiMa=
p.ml#L294

Oversight.


--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--BXVAT5kNtrzKuDFl
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlqPd0UACgkQSsAdCEmq
YrYk1BAAhpnpu3l+DFGjrbcGJDqjSVlUQfVF0sHokrWaZHpjt25j3Xavo2H/rnrS
R9ijOtMMpiCqmB6gMYnaKxulBktzPQjspYIATXhUA6Do3Fo8No80gBG9ovrzEG5C
nXswmvCJgwOZJ/DzcTq9BrxwQQtV0JA96I1rTxJPrNbTiTCHHBY8tHpH0w5S9ukr
8aN0+J16L+C6Szsw5ll/x72lN5OkqiQlcbBb+c+IhMnWzwVCH0cdANmSL2MVueTM
L8X2mwERS87NdMSzP73oWqgKmGOfZ/0NOwh3hLp5IFTd+7K0ArTuA3kfWn1YCyKR
Pe0PLvzdZggYCbBI06Ryvvt2aSDMkQJF6Pi2X9xv4lCIwL4FKQ5I/ndISVwG1ui9
h2kZJ7ERJUQdRZlhhrNbGS7kfk5x96NgzSJ5IcLhyD4vqoJiqO4S4SPg0bMsjF5S
RK/uCB7CjP7T7IaAgV9AkVxx8oe1uV+T1fUtlLP4+SDpBmqCMluYflcVWJccE7rZ
hYmdxpD3m9/NP3tAaKAHpDlZIW3yVIvSXzWC4NaL3MCDQ96NtKR3KqR8fwpbpeeE
sS8nMYRtKpKhH1CXy5QtWT1eJ/PqBj1W0yJp1wa6CKN7lHfmqEJgq0hfss67N5DM
3Px89CecQ/r++hJYpYWAmmPfCsRSRpRg8/bF42s7nSihpQB9F6E=
=1soX
-----END PGP SIGNATURE-----

--BXVAT5kNtrzKuDFl--


From SRS0=2/R6=FR=m4x.org=simon.cruanes.2007@bounces.m4x.org  Fri Feb 23 01:56:02 2018
Return-Path: <SRS0=2/R6=FR=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 366A33CE4F
 for <containers-users@lists.ocaml.org>; Fri, 23 Feb 2018 01:56:02 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1825034 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:58181)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1ep2m2-000UWb-7I (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=2/R6=FR=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Fri, 23 Feb 2018 02:07:46 +0000
Received: from carty (cpe-70-112-2-148.austin.res.rr.com [70.112.2.148])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 79EF1564760;
 Fri, 23 Feb 2018 03:07:41 +0100 (CET)
Date: Thu, 22 Feb 2018 20:07:39 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: SP <sp@orbitalfox.eu>
Message-ID: <20180223020738.GB2041@carty>
References: <20180210195351.GE1388@carty>
 <20180223004859.50f10c99@darkstar>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="WYTEVAkct0FjGQmd"
Content-Disposition: inline
In-Reply-To: <20180223004859.50f10c99@darkstar>
User-Agent: Mutt/1.9.3 (2018-01-21)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Fri Feb 23
 03:07:42 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=4571F564766
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 23 Feb 2018 01:56:02 -0000


--WYTEVAkct0FjGQmd
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Fri, 23 Feb 2018, SP wrote:
> > Thanks for the suggestions. I'm no expert in unicode, but I do agree
> > that such basic functionalities should be more easily available.
> > Maybe a `Ustring` module in containers would make sense (as a private
> > alias to `string`); most functionalities below would fit there
>=20
> Is this for facilitation or implementation of UTF?
>=20
> There is an implementation here <https://opam.ocaml.org/packages/uutf/>

Yes, but we can avoid using it for the most basic facilities.
It'd be nice to compare with in tests, though.

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--WYTEVAkct0FjGQmd
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlqPd2oACgkQSsAdCEmq
YrZ/DQ/+POtQxUGSxI9kFLgc/gtZxkF89RXiwTpbG6Aal/G5DHBnX51jGqdZaxfK
9p2f1Rf/9MkoCJC/v4CY6a5Hy6RzvqkyDIEKP2SpZNQoe/e5M6N+1dmBULMzsR6V
ltQPLuK5fhpkvNtfQpwxzBr6dPpUCOFoCAsCc68Jstgo+2EVQETATdq1YHu8Iwvp
1Oz4au+3m3WkkP4fT2NM/isbFmCyi9u2wRPthh4QPksrTLi2QPKIIv6UrQvvf02A
UBu/npGiBybQkRTWfXUVqKkt+dzJlI02XtExYuzeHA8dQWyn4WZ8sPmU+5y5tCQR
aDsyTmlE6wQF7we8ZhylTv7XAOwiwt7M3mIo1iTPlz3g1SYVgzYh5cj8mav1tWWI
eG6RsU9pEfvvob6Dlbbm15ifY4PHXiBZAfrbD9Q+AM9olSIbDqmF/+xDDGlDAMP1
6AKCaVGbd6p7iIE3m4wmej7V2AEVccGA0ILswb4HJfl1H9G2Gj7Q8gjMtv24TbFW
/qt5Hbz0AhxF0JCReZ9hvRK8v0o01RhvNh7RtD3nBA9E2CWrXl0U+VK6PgWyOvwb
rIDLWRwg91NPSNg10TKSckcdLgDQ2z9NZcndU/KE1yRD98rqQqq26zYCsCwpAvBR
DoO0+esM13f3FEWJBUQ3bGF8eldBJoW0R36AV3sOn6e4d5q6dLY=
=65v1
-----END PGP SIGNATURE-----

--WYTEVAkct0FjGQmd--


From sp@orbitalfox.eu  Fri Feb 23 08:08:13 2018
Return-Path: <sp@orbitalfox.eu>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-30.csi.cam.ac.uk (ppsw-30.csi.cam.ac.uk [131.111.8.130])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 487083C238
 for <containers-users@lists.ocaml.org>; Fri, 23 Feb 2018 08:08:13 +0000 (GMT)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.1-1825034 
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from orbitalfox.com ([95.172.232.202]:34994 helo=orbitalfox.eu)
 by ppsw-30.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtp id 1ep8aD-000PyX-ft (Exim 4.90_1) for
 containers-users@lists.ocaml.org
 (return-path <sp@orbitalfox.eu>); Fri, 23 Feb 2018 08:19:58 +0000
Received: from darkstar (unknown [192.168.88.3])
 by orbitalfox.eu (Postfix) with ESMTPSA id 6128BAA0064;
 Fri, 23 Feb 2018 08:19:57 +0000 (UTC)
Date: Fri, 23 Feb 2018 08:19:54 +0000
From: SP <sp@orbitalfox.eu>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
Message-ID: <20180223081954.ixpelivkeqhvmxfu@darkstar>
References: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
 <20180223020701.GA2041@carty>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
In-Reply-To: <20180223020701.GA2041@carty>
User-Agent: NeoMutt/20171215
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Request for comments on BiMap
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 23 Feb 2018 08:08:13 -0000

I think is_empty is there. Will be adding the rest you mentioned and
whatever else I can think of being useful.

Will also fix the signature and do the docs near the end, once the
functionality is starting to solidify.

On Thu, Feb 22, 2018 at 08:07:02PM -0600, Simon Cruanes wrote:
>- in the implementation of add, don't use !=, use L.compare (resp.
>  R.compare). != will be almost always wrong.

Oops. I mean to use <>, but you are right (L|R).compare is better
anyway. This is what happens on a late night after only a few days of C.
:P

>> One question I have is why are map values first in the order of
>> parameters? For example:
>> https://github.com/c-cube/ocaml-containers/blob/master/src/data/CCMultiMap.ml#L294
>
>Oversight.

Shall I revert the order for this module, or has the "new convention"
have to be upheld?

-- 
	SP

From SRS0=2/R6=FR=m4x.org=simon.cruanes.2007@bounces.m4x.org  Fri Feb 23 13:21:17 2018
Return-Path: <SRS0=2/R6=FR=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-30.csi.cam.ac.uk (ppsw-30.csi.cam.ac.uk [131.111.8.130])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 8B0BC3C270
 for <containers-users@lists.ocaml.org>; Fri, 23 Feb 2018 13:21:17 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1825115 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:41130)
 by ppsw-30.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1epDTD-000IGn-dc (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=2/R6=FR=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Fri, 23 Feb 2018 13:33:04 +0000
Received: from [10.152.9.81] (mobile-107-107-186-136.mycingular.net
 [107.107.186.136])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 9F605561270;
 Fri, 23 Feb 2018 14:32:55 +0100 (CET)
Date: Fri, 23 Feb 2018 07:32:48 -0600
User-Agent: K-9 Mail for Android
In-Reply-To: <20180223081954.ixpelivkeqhvmxfu@darkstar>
References: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
 <20180223020701.GA2041@carty> <20180223081954.ixpelivkeqhvmxfu@darkstar>
MIME-Version: 1.0
Content-Type: text/plain;
 charset=utf-8
Content-Transfer-Encoding: quoted-printable
To: SP <sp@orbitalfox.eu>
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
Message-ID: <A2FB9223-200F-466E-8D09-85BBB3BEA859@m4x.org>
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Fri Feb 23
 14:32:56 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.017290, queueID=8419156126C
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Request for comments on BiMap
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 23 Feb 2018 13:21:17 -0000




>Shall I revert the order for this module, or has the "new convention"
>have to be upheld?

Put the map last, as is convenient for piping=2E=20

--=20
Simon 


From drupyog@zoho.com  Sat Feb 24 11:48:56 2018
Return-Path: <drupyog@zoho.com>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-30.csi.cam.ac.uk (ppsw-30.csi.cam.ac.uk [131.111.8.130])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id BD9793C4AD
 for <containers-users@lists.ocaml.org>; Sat, 24 Feb 2018 11:48:56 +0000 (GMT)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.1-1825198 
 *  0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 *       (drupyog[at]zoho.com)
 * -0.0 T_RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 * -0.0 RCVD_IN_DNSWL_NONE RBL: Sender listed at http://www.dnswl.org/, no
 *      trust
 *      [135.84.80.237 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 * -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from sender-pp-092.zoho.com ([135.84.80.237]:25465)
 by ppsw-30.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-SHA384:256)
 id 1epYVR-0001Md-ea (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <drupyog@zoho.com>); Sat, 24 Feb 2018 12:00:46 +0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; s=zapps768; d=zoho.com; 
 h=subject:to:references:from:message-id:date:user-agent:mime-version:in-reply-to:content-type;
 b=QnLPIcFxBZk0J0crx9zkET70X78y63VVbfCi047GcC0hfa7M4qgdZqvIFKn26QvC2KgulwJqTIiA
 FLyZ99j/NBJedS8+a7ktzJaojCvUWd2PmtsLjLk3js2Iyk1RbnFb  
Received: from [192.168.179.34] (p5DD8EFEC.dip0.t-ipconnect.de
 [93.216.239.236]) by mx.zohomail.com
 with SMTPS id 1519473636446784.6185637452323;
 Sat, 24 Feb 2018 04:00:36 -0800 (PST)
To: SP <sp@orbitalfox.eu>, containers-users@lists.ocaml.org
References: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
From: Drup <drupyog@zoho.com>
Message-ID: <a8d6653c-537d-47b0-9dcc-c0fcec4d1a7f@zoho.com>
Date: Sat, 24 Feb 2018 13:01:45 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.6.0
MIME-Version: 1.0
In-Reply-To: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: en-US
X-ZohoMailClient: External
X-Mailman-Approved-At: Sat, 24 Feb 2018 17:38:37 +0000
Subject: Re: [containers-users] Request for comments on BiMap
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 24 Feb 2018 11:48:56 -0000

Why not call this "Bijection" or "BijMap" ? BiMap simply implies two 
maps. This a bit more specific.


Le 23/02/2018 à 01:37, SP a écrit :
> I've started working on a BiMap, a map where (key, value) is also
> (value, key) in a one-to-one relationship.
>
> https://github.com/c-cube/ocaml-containers/compare/master...orbifx:bimap
>
> As I'm writing this I have written `empty`, `add`, `find_left` and
> `find_right`.
>
> The idea is that when adding a left-key, right-value to the BiMap, it
> doesn't just check for the preexistence of the left key, but also checks
> if the right value already has a left key and removes it if so. Vice
> versa for right key, left value.
>
> Please provide any comments and thoughts.
>
> One question I have is why are map values first in the order of
> parameters? For example:
>
> https://github.com/c-cube/ocaml-containers/blob/master/src/data/CCMultiMap.ml#L294 
>
>



From drupyog@zoho.com  Sat Feb 24 11:56:54 2018
Return-Path: <drupyog@zoho.com>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-40.csi.cam.ac.uk (ppsw-40.csi.cam.ac.uk [131.111.8.140])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id BA93B3C4AD
 for <containers-users@lists.ocaml.org>; Sat, 24 Feb 2018 11:56:54 +0000 (GMT)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.1-1825198 
 * -0.0 RCVD_IN_DNSWL_NONE RBL: Sender listed at http://www.dnswl.org/, no
 *      trust
 *      [135.84.80.237 listed in list.dnswl.dnsbl.ja.net]
 * -0.0 T_RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 *  0.0 FREEMAIL_FROM Sender email is commonly abused enduser mail provider
 *       (drupyog[at]zoho.com)
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 *  0.0 HTML_MESSAGE BODY: HTML included in message
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 * -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from sender-pp-092.zoho.com ([135.84.80.237]:25482)
 by ppsw-40.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-SHA384:256)
 id 1epYd8-000fVW-kN (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <drupyog@zoho.com>); Sat, 24 Feb 2018 12:08:44 +0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; s=zapps768; d=zoho.com; 
 h=subject:to:cc:references:from:message-id:date:user-agent:mime-version:in-reply-to:content-type;
 b=azMMqk/Nnx4QtL3uuOwEYa92PrqfcT8lMyUhrkzhoLJ6BqGtRrKfcs+51aqtHF4smh/icgxHMkw/
 NSrkv8/ABg/mfcDyUunl2qfnibJ1BAM+byd5TeFg2O62++qVy+hg  
Received: from [192.168.179.34] (p5DD8EFEC.dip0.t-ipconnect.de
 [93.216.239.236]) by mx.zohomail.com
 with SMTPS id 1519474115495159.63915392259025;
 Sat, 24 Feb 2018 04:08:35 -0800 (PST)
To: Simon Cruanes <simon.cruanes.2007@m4x.org>,
 peter frey <pjfrey@sympatico.ca>
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
 <20180210195351.GE1388@carty>
From: Drup <drupyog@zoho.com>
Message-ID: <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
Date: Sat, 24 Feb 2018 13:09:43 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.6.0
MIME-Version: 1.0
In-Reply-To: <20180210195351.GE1388@carty>
Content-Type: multipart/alternative;
 boundary="------------7E25187510F75ADED296950B"
Content-Language: en-US
X-ZohoMailClient: External
X-Mailman-Approved-At: Sat, 24 Feb 2018 17:38:37 +0000
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 24 Feb 2018 11:56:54 -0000

This is a multi-part message in MIME format.
--------------7E25187510F75ADED296950B
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit

Shouldn't we just standardize on bunzli's libraries (including the new 
https://github.com/dbuenzli/utext) instead of trying to re-write code 
that usually ends up being quite subtle in each standard library ?


Le 10/02/2018 à 20:53, Simon Cruanes a écrit :
> Hi Peter,
>
> Thanks for the suggestions. I'm no expert in unicode, but I do agree
> that such basic functionalities should be more easily available.
> Maybe a `Ustring` module in containers would make sense (as a private
> alias to `string`); most functionalities below would fit there, I think.
>
> Would you consider opening PRs against gen, sequence, and containers
> repositories so we can discuss that without spamming the list? I can
> help if needed, or do it myself.
> I'm interested in tests too, but will probably write some (possibly
> using Uutf as a reference); some of the tests you wrote below I can
> retrofit in the qtest mechanism.
>
> Cheers!
>
>
> Le Sat, 10 Feb 2018, peter frey wrote:
>> (*
>> Reading recent posts on discuss.ocal.org gives me the impression that some
>> tiny
>> number of utf related routines should be more easily available.
>> Container's Sequence.t and Gen.t, in particular could benefit from a couple
>> of
>> simple routines.  The code below fits well into that frame work.
>> I am treating it as public domain code but feel free to make it your own and
>> to
>> include it where appropriate. (Perhaps some of the tests could go into the
>> example directory...)
>> The routines here DO NOT verify unless its unavoidable.  In particular they
>> accept ALL code points that can be encoded by the original Utf8 definition.
>> It is only a matter of language; we could call it utf31 ...
>> Restricting the range is trivial; as would be including some verification
>> code.
>>
>>
>>
>> *)
>>
>> open Containers
>>
>> (* Create a generator from a utf8-string. Each call produces a code point.
>>   * The optional parameter srcIdx specifies then start point in the string.
>>   * srcIdx must point to a valid suffix of a utf8 string.
>>   * *)
>> let gen_of_utf8 ?(srcIdx=ref 0) str =
>>      let lim = String.length str in
>>      let assemble_next () =     (* we come here only for multi-byte
>> characters *)
>>        let cv jmax accu =      (* utf8 character length; construction of
>> uchar *)
>>          let rec cv' j accu' =          (* inner loop j = 1..jmax ; each
>> uchar *)
>>            let ch = Char.code str.[ !srcIdx + j] in
>>            let next = ( (accu' lsl 6) lor ( ch land 0x7f )) in
>>            if j = jmax then begin     (* except for 1st, each char gives 6
>> bits*)
>>              srcIdx := !srcIdx + j +1; Some next            (* +1 for 1st
>> char *)
>>            end else cv' (succ j) next
>>        in cv' 1  (* 1st char is already proccessed! *) accu
>>      in if !srcIdx >= lim then None else
>>      let n = str.[ !srcIdx ] in match n with
>>      (* 0xxxxxxx *) | '\000' .. '\127' -> incr srcIdx; Some (int_of_char n)
>>      (* 110yyyyy *) | '\128' .. '\223' -> cv 1 ((Char.code n) land 0b11111 )
>>      (* 1110zzzz *) | '\224' .. '\239' -> cv 2 ((Char.code n) land 0b1111 )
>>      (* 11110uuu *) | '\240' .. '\247' -> cv 3 ((Char.code n) land 0b111 )
>>      (* 111110vv *) | '\248' .. '\251' -> cv 4 ((Char.code n) land 0b11 )
>>      (* 1111110w *) | '\252' .. '\253' -> cv 5 ((Char.code n) land 0b1 )
>>      (* 1111111X *) | '\254' .. '\255' -> raise (Failure "Bad stream")
>>    in  assemble_next;;
>>
>>
>> (* The 'natural' stream representation of a utf-string is a generator.
>>   * But Sequences are not far away ... *)
>> let makeUtf8Seq ?(srcIdx=ref 0) str = Sequence.of_gen (gen_of_utf8 ~srcIdx
>> str)
>>
>>
>>
>> (* Convert a code point to a string; Hopefully some day this will be in the
>>   * standard library. There are various equally trivial versions of this
>> around.
>>   * The returned string is created (allocated) fresh for each k.
>>   * *)
>>
>> let code_to_string k =
>>    let mask = 0b111111 in
>>    if k < 0 || k >= 0x4000000 then begin
>>      let s = Bytes.create 6 in
>>      Bytes.unsafe_set s 0 (Char.chr (0xfc + (k lsr 30)));
>>      Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 24) land
>> mask)));
>>      Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 18) land
>> mask)));
>>      Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
>> mask)));
>>      Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
>>      Bytes.unsafe_set s 5 (Char.unsafe_chr (0x80 lor (k land mask)));
>>      s end
>>    else if k <= 0x7f then
>>      Bytes.make 1 (Char.unsafe_chr k)
>>    else if k <= 0x7ff then begin
>>      let s = Bytes.create 2 in
>>      Bytes.unsafe_set s 0 (Char.unsafe_chr (0xc0 lor (k lsr 6)));
>>      Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor (k land mask)));
>>      s end
>>    else if k <= 0xffff then begin
>>      let s = Bytes.create 3 in
>>      Bytes.unsafe_set s 0 (Char.unsafe_chr (0xe0 lor (k lsr 12)));
>>      Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
>>      Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor (k land mask)));
>>      s end
>>    else if k <= 0x1fffff then begin
>>      let s = Bytes.create 4 in
>>      Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf0 + (k lsr 18)));
>>      Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
>> mask)));
>>      Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
>>      Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor (k land mask)));
>>      s end
>>    else begin
>>      let s = Bytes.create 5 in
>>      Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf8 + (k lsr 24)));
>>      Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 18) land
>> mask)));
>>      Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
>> mask)));
>>      Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
>>      Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor (k land mask)));
>>      s end
>>
>> let string_to_code str =
>>      let cv jmax accu =      (* utf8 character length; construction of uchar
>> *)
>>      if jmax >  String.length str then raise (Failure "string_to_code")
>>      else let rec cv' j accu' =       (* inner loop j = 1..jmax ; each uchar
>> *)
>>        let ch = Char.code (String.unsafe_get str j) in
>>        let next = ( (accu' lsl 6) lor ( ch land 0x7f )) in
>>        if j = jmax then next else cv' (succ j) next
>>        in cv' 1  (* 1st char is already proccessed! *) accu
>>      in let n = str.[0] in match n with
>>      (* 0xxxxxxx *) | '\000' .. '\127' -> int_of_char n
>>      (* 110yyyyy *) | '\128' .. '\223' -> cv 1 ((Char.code n) land 0b11111 )
>>      (* 1110zzzz *) | '\224' .. '\239' -> cv 2 ((Char.code n) land 0b1111 )
>>      (* 11110uuu *) | '\240' .. '\247' -> cv 3 ((Char.code n) land 0b111 )
>>      (* 111110vv *) | '\248' .. '\251' -> cv 4 ((Char.code n) land 0b11 )
>>      (* 1111110w *) | '\252' .. '\253' -> cv 5 ((Char.code n) land 0b1 )
>>      (* 1111111X *) | '\254' .. '\255' -> raise (Failure "Bad stream")
>>
>>
>> (* code_into_string over-writes string s which must be 7-byte string.
>>   * n-byte String ends with '\000' which is set as needed (in case you feed
>> it
>>   * to a c-program). The last byte of a string contains the # of unused bytes
>> in
>>   * then string. It is set here, for example, by "Bytes.unsafe_set s 6
>> '\000'"
>>   * If the string is longer than 1 word (plus header) all hell breaks loose.
>>   * Use only if the string is copied afterwards. (Buffer.add_string ... etc)
>>   * DUBIOUS (and about twice as fast because allocation is not needed)
>>   * js_of_ocaml might be unhappy with this...
>> *)
>> let code_into_string s k =
>>    let mask = 0b111111 in
>>    if k < 0 || k >= 0x4000000 then begin
>>      Bytes.unsafe_set s 0 (Char.chr (0xfc + (k lsr 30)));
>>      Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 24) land
>> mask)));
>>      Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 18) land
>> mask)));
>>      Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
>> mask)));
>>      Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
>>      Bytes.unsafe_set s 5 (Char.unsafe_chr (0x80 lor ( k land mask)));
>>      Bytes.unsafe_set s 6 '\000';                   (* string internals s/b
>> OK *)
>>      Bytes.unsafe_set s 7 (Char.unsafe_chr  1 );   (* string internals
>> DUBIOUS *)
>>      () end
>>    else if k <= 0x7f then begin
>>      Bytes.unsafe_set s 0 (Char.chr k);
>>      Bytes.unsafe_set s 1 '\000';
>>      Bytes.unsafe_set s 7 (Char.unsafe_chr  6 );
>>      () end
>>    else if k <= 0x7ff then begin
>>      Bytes.unsafe_set s 0 (Char.unsafe_chr (0xc0 lor (k lsr 6)));
>>      Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor (k land mask)));
>>      Bytes.unsafe_set s 2 '\000';
>>      Bytes.unsafe_set s 7 (Char.unsafe_chr  5 );
>>      () end
>>    else if k <= 0xffff then begin
>>      Bytes.unsafe_set s 0 (Char.unsafe_chr (0xe0 lor (k lsr 12)));
>>      Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
>>      Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor (k land mask)));
>>      Bytes.unsafe_set s 3 '\000';
>>      Bytes.unsafe_set s 7 (Char.unsafe_chr  4 );
>>      () end
>>    else if k <= 0x1fffff then begin
>>      Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf0 + (k lsr 18)));
>>      Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
>> mask)));
>>      Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
>>      Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor (k land mask)));
>>      Bytes.unsafe_set s 4 '\000';
>>      Bytes.unsafe_set s 7 (Char.unsafe_chr  3 );
>>      () end
>>    else begin
>>      Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf8 + (k lsr 24)));
>>      Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 18) land
>> mask)));
>>      Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
>> mask)));
>>      Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
>>      Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor (k land mask)));
>>      Bytes.unsafe_set s 5 '\000';
>>      Bytes.unsafe_set s 7 (Char.unsafe_chr  2 );
>>      () end
>>
>> (* Automaton to map a (utf8) char Sequence.t into an int Sequence.t
>>     Accept up to 6 characters, converting them to an integer to feed to k.
>>     This code demonstrates that being at the receiving end of a sequence can
>>     cause hardship ... It needs often a state-machine
>>     ... and perhaps a better name  *)
>>    let mapUtf8Char2Code (k: int -> unit) =
>>      let rec next = ref first
>>      and accu = ref 0
>>      and first ch = match ch with
>>        (* 0xxxxxxx *) | '\000' .. '\127' -> k (int_of_char ch); accu := 0
>>        (* 110yyyyy *) | '\128' .. '\223' -> cv s1 ch 0b11111
>>        (* 1110zzzz *) | '\224' .. '\239' -> cv s2 ch 0b1111
>>        (* 11110uuu *) | '\240' .. '\247' -> cv s3 ch 0b111
>>        (* 111110vv *) | '\248' .. '\251' -> cv s4 ch 0b11
>>        (* 1111110w *) | '\252' .. '\253' -> cv s5 ch 0b1
>>        (* 1111111X *) | '\254' .. '\255' -> raise (Failure "Bad stream")
>>      and inline ch = accu := (!accu lsl 6) lor ((Char.code ch) land 0x7f )
>>      and s1 ch = inline ch; next := first; k !accu
>>      and s2 ch = inline ch; next := s1 and s3 ch = inline ch; next := s2
>>      and s4 ch = inline ch; next := s3 and s5 ch = inline ch; next := s4
>>      and cv startState initialValue mask =
>>          next := startState;
>>          accu := (Char.code initialValue) land mask
>>    in (fun c -> !next c) ;;
>>
>> let code_len k =
>>    if k < 0 || k >= 0x4000000 then 6 else if k <= 0x7f then 1
>>    else if k <= 0x7ff then 2 else if k <= 0xffff then 3
>>    else if k <= 0x1fffff then 4 else 5
>>
>>
>> (*
>> (*
>> ===========================================================================
>>   *           various tests of above
>> *)
>>
>>
>> (* measure.ml
>>   * included to avoid dependency on some other (more capable) measuring tool
>>   *                                *)
>> let measure fn arg (units:int)  comment =
>>    (* arg is last argument of fn (or unit not belonging to fn);
>>       argument units is only used for ratio (units /. elapsed) *)
>>    let start = Unix.gettimeofday() in
>>    let res = fn arg in
>>    let endt = Unix.gettimeofday() in let elapsed = endt -. start in
>>    let open Printf in
>>    printf"\n%s\n\tTime:%f Units:%i Units/sec:%s uSecs/Unit:%s\n%!"
>>          (sprintf"Measured <<%s>>" comment)
>>          elapsed units
>>          ( if units <= 1 then "N/A" else
>>            sprintf"%8.0f" ((float_of_int units) /. elapsed ) )
>>          ( if units <= 1 then "N/A" else
>>            sprintf"%2.8f" (elapsed /. (float_of_int units) *. 1000000.0 ) );
>>    res
>>
>>
>> open Printf
>> module S = Sequence
>> module V = Vector
>>
>> let code_to_string_test last =                              (*
>> code_to_string *)
>>    for i = 0 to last do ignore (code_to_string i)  done ;;
>>
>> let code_into_string_test last =                          (*
>> code_into_string *)
>>    let str = Bytes.create 6 in
>>    for i = 0 to last do ignore (code_into_string str i)  done ;;
>>
>> let round_about2 last =                            (* code_to_string and
>> back *)
>>    for i = 0 to last do
>>      let str = code_to_string i in (* convert code point to char string *)
>>      let j = string_to_code str in  (* convert the char string back to code
>> *)
>>      assert( i = j)
>>    done
>>
>> let round_about3 last =                          (* code_into_string and
>> back *)
>>    let len = ref 1 in
>>    let str = Bytes.create 6 in
>>    for i = 0 to last do
>>      code_into_string str i; (* convert code point to char string *)
>>      let j = string_to_code str in  (* convert the char string back to code
>> *)
>>      assert( i = j);
>>      if code_len i <> !len then (printf"New len at %x:%s\n" i str;
>>                                 len := code_len i )
>>    done
>>
>>
>> let make_big_string last = (* create a utf8 string of consecutive code
>> points *)
>>    let buf = Buffer.create (16 * 1024 * 1024 ) in (* ocaml tolerates large *)
>>    let str = Bytes.create 6 in
>>    for i = 0 to last do
>>      code_into_string str i;
>>      Buffer.add_string buf str;
>>    done;
>>    Buffer.contents buf
>>    ;;
>>
>> let make_big_string last = (* create a utf8 string of consecutive code
>> points *)
>>    let buf = Buffer.create (16 * 1024 * 1024 ) in (* ocaml tolerates large *)
>>    let str = Bytes.create 7 in
>>    for i = 0 to last do
>>      code_into_string str i;
>>      Buffer.add_string buf str;
>>    done;
>>    let b = Buffer.contents buf in
>>    printf"\n\ncreated %i strings. \nfinal length: %i bytes. \
>>           \nAvg len %f\n%!"
>>           last
>>           (String.length b)
>>           ((float_of_int (String.length b)) /. (float_of_int last));
>>    b
>>
>> let decode_big big =              (* create a utf8 string; convert to int
>> S.t *)
>>    let check = ref 0 in             (* map char S.t to int S.t and test
>> result *)
>>    (String.to_seq big)
>>    (mapUtf8Char2Code (fun j -> assert (j = !check) ; incr check))
>>
>>
>> let last1 = 0x3ffffff;; (*    67_108_863 *)
>> let last2 = 0x7fffffff;; (* 1073_741_823 *)
>> let last = last2 (* last2 uses ALL code points and takes a while *)
>>
>> (* Sample: Convert a utf8 char string to a Vector *)
>> let utf8_to_vector str = str |> gen_of_utf8 |> V.of_gen
>>
>> let _ = printf "\"SKサイトリf\" |> utf8_to_vector \n\t |> Vector.to_seq |>
>> S.map code_to_string |> fun seq -> seq (printf\"%s\t\")\n!";;
>>
>> "SKサイトリf" |> utf8_to_vector |> Vector.to_seq |> S.map code_to_string |>
>>   fun seq -> seq (printf"%s\t");;
>>
>> (* Test below does not work for last 2 because it allocates a to big string
>> *)
>> let big = measure make_big_string last1 last1 "make_big_string";;
>> measure decode_big big last1 "decode_big";;
>>
>> (* Here last2 encodes/decodes ALL possible code points *)
>> measure round_about2 last last "round_about2";;
>> measure round_about3 last last "round_about3";;
>> measure code_into_string_test last last "code_into_string";;
>> measure code_to_string_test last last "code_to_string";;
>>
>> let _ = (* One can never have to many samples ... *)
>>   printf"\n\n    "; S.( 0 -- 15) (fun i -> printf" %2x" i);
>>   S.( 0 -- 15)
>>    (fun i -> printf"\n%4x  " (i * 16 + 0x2500);
>>      S.( (0x2500 + i * 16) -- (0x250F + i * 16))
>>      |> S.map code_to_string
>>      |> S.to_list |> String.concat "  " |> print_string
>>    );;
>> *)
>>
>
>
>
> _______________________________________________
> Containers-users mailing list
> Containers-users@lists.ocaml.org
> http://lists.ocaml.org/listinfo/containers-users


--------------7E25187510F75ADED296950B
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: 8bit

<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  </head>
  <body text="#000000" bgcolor="#FFFFFF">
    <p>Shouldn't we just standardize on bunzli's libraries (including
      the new <a class="moz-txt-link-freetext" href="https://github.com/dbuenzli/utext">https://github.com/dbuenzli/utext</a>) instead of trying to
      re-write code that usually ends up being quite subtle in each
      standard library ?<br>
    </p>
    <br>
    <div class="moz-cite-prefix">Le 10/02/2018 à 20:53, Simon Cruanes a
      écrit :<br>
    </div>
    <blockquote type="cite" cite="mid:20180210195351.GE1388@carty">
      <pre wrap="">Hi Peter,

Thanks for the suggestions. I'm no expert in unicode, but I do agree
that such basic functionalities should be more easily available.
Maybe a `Ustring` module in containers would make sense (as a private
alias to `string`); most functionalities below would fit there, I think.

Would you consider opening PRs against gen, sequence, and containers
repositories so we can discuss that without spamming the list? I can
help if needed, or do it myself.
I'm interested in tests too, but will probably write some (possibly
using Uutf as a reference); some of the tests you wrote below I can
retrofit in the qtest mechanism.

Cheers!


Le Sat, 10 Feb 2018, peter frey wrote:
</pre>
      <blockquote type="cite">
        <pre wrap="">(*
Reading recent posts on discuss.ocal.org gives me the impression that some
tiny
number of utf related routines should be more easily available.
Container's Sequence.t and Gen.t, in particular could benefit from a couple
of
simple routines.  The code below fits well into that frame work.
I am treating it as public domain code but feel free to make it your own and
to
include it where appropriate. (Perhaps some of the tests could go into the
example directory...)
The routines here DO NOT verify unless its unavoidable.  In particular they
accept ALL code points that can be encoded by the original Utf8 definition.
It is only a matter of language; we could call it utf31 ...
Restricting the range is trivial; as would be including some verification
code.



*)

open Containers

(* Create a generator from a utf8-string. Each call produces a code point.
 * The optional parameter srcIdx specifies then start point in the string.
 * srcIdx must point to a valid suffix of a utf8 string.
 * *)
let gen_of_utf8 ?(srcIdx=ref 0) str =
    let lim = String.length str in
    let assemble_next () =     (* we come here only for multi-byte
characters *)
      let cv jmax accu =      (* utf8 character length; construction of
uchar *)
        let rec cv' j accu' =          (* inner loop j = 1..jmax ; each
uchar *)
          let ch = Char.code str.[ !srcIdx + j] in
          let next = ( (accu' lsl 6) lor ( ch land 0x7f )) in
          if j = jmax then begin     (* except for 1st, each char gives 6
bits*)
            srcIdx := !srcIdx + j +1; Some next            (* +1 for 1st
char *)
          end else cv' (succ j) next
      in cv' 1  (* 1st char is already proccessed! *) accu
    in if !srcIdx &gt;= lim then None else
    let n = str.[ !srcIdx ] in match n with
    (* 0xxxxxxx *) | '\000' .. '\127' -&gt; incr srcIdx; Some (int_of_char n)
    (* 110yyyyy *) | '\128' .. '\223' -&gt; cv 1 ((Char.code n) land 0b11111 )
    (* 1110zzzz *) | '\224' .. '\239' -&gt; cv 2 ((Char.code n) land 0b1111 )
    (* 11110uuu *) | '\240' .. '\247' -&gt; cv 3 ((Char.code n) land 0b111 )
    (* 111110vv *) | '\248' .. '\251' -&gt; cv 4 ((Char.code n) land 0b11 )
    (* 1111110w *) | '\252' .. '\253' -&gt; cv 5 ((Char.code n) land 0b1 )
    (* 1111111X *) | '\254' .. '\255' -&gt; raise (Failure "Bad stream")
  in  assemble_next;;


(* The 'natural' stream representation of a utf-string is a generator.
 * But Sequences are not far away ... *)
let makeUtf8Seq ?(srcIdx=ref 0) str = Sequence.of_gen (gen_of_utf8 ~srcIdx
str)



(* Convert a code point to a string; Hopefully some day this will be in the
 * standard library. There are various equally trivial versions of this
around.
 * The returned string is created (allocated) fresh for each k.
 * *)

let code_to_string k =
  let mask = 0b111111 in
  if k &lt; 0 || k &gt;= 0x4000000 then begin
    let s = Bytes.create 6 in
    Bytes.unsafe_set s 0 (Char.chr (0xfc + (k lsr 30)));
    Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 24) land
mask)));
    Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 18) land
mask)));
    Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
mask)));
    Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
    Bytes.unsafe_set s 5 (Char.unsafe_chr (0x80 lor (k land mask)));
    s end
  else if k &lt;= 0x7f then
    Bytes.make 1 (Char.unsafe_chr k)
  else if k &lt;= 0x7ff then begin
    let s = Bytes.create 2 in
    Bytes.unsafe_set s 0 (Char.unsafe_chr (0xc0 lor (k lsr 6)));
    Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor (k land mask)));
    s end
  else if k &lt;= 0xffff then begin
    let s = Bytes.create 3 in
    Bytes.unsafe_set s 0 (Char.unsafe_chr (0xe0 lor (k lsr 12)));
    Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
    Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor (k land mask)));
    s end
  else if k &lt;= 0x1fffff then begin
    let s = Bytes.create 4 in
    Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf0 + (k lsr 18)));
    Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
mask)));
    Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
    Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor (k land mask)));
    s end
  else begin
    let s = Bytes.create 5 in
    Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf8 + (k lsr 24)));
    Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 18) land
mask)));
    Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
mask)));
    Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
    Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor (k land mask)));
    s end

let string_to_code str =
    let cv jmax accu =      (* utf8 character length; construction of uchar
*)
    if jmax &gt;  String.length str then raise (Failure "string_to_code")
    else let rec cv' j accu' =       (* inner loop j = 1..jmax ; each uchar
*)
      let ch = Char.code (String.unsafe_get str j) in
      let next = ( (accu' lsl 6) lor ( ch land 0x7f )) in
      if j = jmax then next else cv' (succ j) next
      in cv' 1  (* 1st char is already proccessed! *) accu
    in let n = str.[0] in match n with
    (* 0xxxxxxx *) | '\000' .. '\127' -&gt; int_of_char n
    (* 110yyyyy *) | '\128' .. '\223' -&gt; cv 1 ((Char.code n) land 0b11111 )
    (* 1110zzzz *) | '\224' .. '\239' -&gt; cv 2 ((Char.code n) land 0b1111 )
    (* 11110uuu *) | '\240' .. '\247' -&gt; cv 3 ((Char.code n) land 0b111 )
    (* 111110vv *) | '\248' .. '\251' -&gt; cv 4 ((Char.code n) land 0b11 )
    (* 1111110w *) | '\252' .. '\253' -&gt; cv 5 ((Char.code n) land 0b1 )
    (* 1111111X *) | '\254' .. '\255' -&gt; raise (Failure "Bad stream")


(* code_into_string over-writes string s which must be 7-byte string.
 * n-byte String ends with '\000' which is set as needed (in case you feed
it
 * to a c-program). The last byte of a string contains the # of unused bytes
in
 * then string. It is set here, for example, by "Bytes.unsafe_set s 6
'\000'"
 * If the string is longer than 1 word (plus header) all hell breaks loose.
 * Use only if the string is copied afterwards. (Buffer.add_string ... etc)
 * DUBIOUS (and about twice as fast because allocation is not needed)
 * js_of_ocaml might be unhappy with this...
*)
let code_into_string s k =
  let mask = 0b111111 in
  if k &lt; 0 || k &gt;= 0x4000000 then begin
    Bytes.unsafe_set s 0 (Char.chr (0xfc + (k lsr 30)));
    Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 24) land
mask)));
    Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 18) land
mask)));
    Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
mask)));
    Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
    Bytes.unsafe_set s 5 (Char.unsafe_chr (0x80 lor ( k land mask)));
    Bytes.unsafe_set s 6 '\000';                   (* string internals s/b
OK *)
    Bytes.unsafe_set s 7 (Char.unsafe_chr  1 );   (* string internals
DUBIOUS *)
    () end
  else if k &lt;= 0x7f then begin
    Bytes.unsafe_set s 0 (Char.chr k);
    Bytes.unsafe_set s 1 '\000';
    Bytes.unsafe_set s 7 (Char.unsafe_chr  6 );
    () end
  else if k &lt;= 0x7ff then begin
    Bytes.unsafe_set s 0 (Char.unsafe_chr (0xc0 lor (k lsr 6)));
    Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor (k land mask)));
    Bytes.unsafe_set s 2 '\000';
    Bytes.unsafe_set s 7 (Char.unsafe_chr  5 );
    () end
  else if k &lt;= 0xffff then begin
    Bytes.unsafe_set s 0 (Char.unsafe_chr (0xe0 lor (k lsr 12)));
    Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
    Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor (k land mask)));
    Bytes.unsafe_set s 3 '\000';
    Bytes.unsafe_set s 7 (Char.unsafe_chr  4 );
    () end
  else if k &lt;= 0x1fffff then begin
    Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf0 + (k lsr 18)));
    Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
mask)));
    Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
    Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor (k land mask)));
    Bytes.unsafe_set s 4 '\000';
    Bytes.unsafe_set s 7 (Char.unsafe_chr  3 );
    () end
  else begin
    Bytes.unsafe_set s 0 (Char.unsafe_chr (0xf8 + (k lsr 24)));
    Bytes.unsafe_set s 1 (Char.unsafe_chr (0x80 lor ((k lsr 18) land
mask)));
    Bytes.unsafe_set s 2 (Char.unsafe_chr (0x80 lor ((k lsr 12) land
mask)));
    Bytes.unsafe_set s 3 (Char.unsafe_chr (0x80 lor ((k lsr 6) land mask)));
    Bytes.unsafe_set s 4 (Char.unsafe_chr (0x80 lor (k land mask)));
    Bytes.unsafe_set s 5 '\000';
    Bytes.unsafe_set s 7 (Char.unsafe_chr  2 );
    () end

(* Automaton to map a (utf8) char Sequence.t into an int Sequence.t
   Accept up to 6 characters, converting them to an integer to feed to k.
   This code demonstrates that being at the receiving end of a sequence can
   cause hardship ... It needs often a state-machine
   ... and perhaps a better name  *)
  let mapUtf8Char2Code (k: int -&gt; unit) =
    let rec next = ref first
    and accu = ref 0
    and first ch = match ch with
      (* 0xxxxxxx *) | '\000' .. '\127' -&gt; k (int_of_char ch); accu := 0
      (* 110yyyyy *) | '\128' .. '\223' -&gt; cv s1 ch 0b11111
      (* 1110zzzz *) | '\224' .. '\239' -&gt; cv s2 ch 0b1111
      (* 11110uuu *) | '\240' .. '\247' -&gt; cv s3 ch 0b111
      (* 111110vv *) | '\248' .. '\251' -&gt; cv s4 ch 0b11
      (* 1111110w *) | '\252' .. '\253' -&gt; cv s5 ch 0b1
      (* 1111111X *) | '\254' .. '\255' -&gt; raise (Failure "Bad stream")
    and inline ch = accu := (!accu lsl 6) lor ((Char.code ch) land 0x7f )
    and s1 ch = inline ch; next := first; k !accu
    and s2 ch = inline ch; next := s1 and s3 ch = inline ch; next := s2
    and s4 ch = inline ch; next := s3 and s5 ch = inline ch; next := s4
    and cv startState initialValue mask =
        next := startState;
        accu := (Char.code initialValue) land mask
  in (fun c -&gt; !next c) ;;

let code_len k =
  if k &lt; 0 || k &gt;= 0x4000000 then 6 else if k &lt;= 0x7f then 1
  else if k &lt;= 0x7ff then 2 else if k &lt;= 0xffff then 3
  else if k &lt;= 0x1fffff then 4 else 5


(*
(*
===========================================================================
 *           various tests of above
*)


(* measure.ml
 * included to avoid dependency on some other (more capable) measuring tool
 *                                *)
let measure fn arg (units:int)  comment =
  (* arg is last argument of fn (or unit not belonging to fn);
     argument units is only used for ratio (units /. elapsed) *)
  let start = Unix.gettimeofday() in
  let res = fn arg in
  let endt = Unix.gettimeofday() in let elapsed = endt -. start in
  let open Printf in
  printf"\n%s\n\tTime:%f Units:%i Units/sec:%s uSecs/Unit:%s\n%!"
        (sprintf"Measured &lt;&lt;%s&gt;&gt;" comment)
        elapsed units
        ( if units &lt;= 1 then "N/A" else
          sprintf"%8.0f" ((float_of_int units) /. elapsed ) )
        ( if units &lt;= 1 then "N/A" else
          sprintf"%2.8f" (elapsed /. (float_of_int units) *. 1000000.0 ) );
  res


open Printf
module S = Sequence
module V = Vector

let code_to_string_test last =                              (*
code_to_string *)
  for i = 0 to last do ignore (code_to_string i)  done ;;

let code_into_string_test last =                          (*
code_into_string *)
  let str = Bytes.create 6 in
  for i = 0 to last do ignore (code_into_string str i)  done ;;

let round_about2 last =                            (* code_to_string and
back *)
  for i = 0 to last do
    let str = code_to_string i in (* convert code point to char string *)
    let j = string_to_code str in  (* convert the char string back to code
*)
    assert( i = j)
  done

let round_about3 last =                          (* code_into_string and
back *)
  let len = ref 1 in
  let str = Bytes.create 6 in
  for i = 0 to last do
    code_into_string str i; (* convert code point to char string *)
    let j = string_to_code str in  (* convert the char string back to code
*)
    assert( i = j);
    if code_len i &lt;&gt; !len then (printf"New len at %x:%s\n" i str;
                               len := code_len i )
  done


let make_big_string last = (* create a utf8 string of consecutive code
points *)
  let buf = Buffer.create (16 * 1024 * 1024 ) in (* ocaml tolerates large *)
  let str = Bytes.create 6 in
  for i = 0 to last do
    code_into_string str i;
    Buffer.add_string buf str;
  done;
  Buffer.contents buf
  ;;

let make_big_string last = (* create a utf8 string of consecutive code
points *)
  let buf = Buffer.create (16 * 1024 * 1024 ) in (* ocaml tolerates large *)
  let str = Bytes.create 7 in
  for i = 0 to last do
    code_into_string str i;
    Buffer.add_string buf str;
  done;
  let b = Buffer.contents buf in
  printf"\n\ncreated %i strings. \nfinal length: %i bytes. \
         \nAvg len %f\n%!"
         last
         (String.length b)
         ((float_of_int (String.length b)) /. (float_of_int last));
  b

let decode_big big =              (* create a utf8 string; convert to int
S.t *)
  let check = ref 0 in             (* map char S.t to int S.t and test
result *)
  (String.to_seq big)
  (mapUtf8Char2Code (fun j -&gt; assert (j = !check) ; incr check))


let last1 = 0x3ffffff;; (*    67_108_863 *)
let last2 = 0x7fffffff;; (* 1073_741_823 *)
let last = last2 (* last2 uses ALL code points and takes a while *)

(* Sample: Convert a utf8 char string to a Vector *)
let utf8_to_vector str = str |&gt; gen_of_utf8 |&gt; V.of_gen

let _ = printf "\"SKサイトリf\" |&gt; utf8_to_vector \n\t |&gt; Vector.to_seq |&gt;
S.map code_to_string |&gt; fun seq -&gt; seq (printf\"%s\t\")\n!";;

"SKサイトリf" |&gt; utf8_to_vector |&gt; Vector.to_seq |&gt; S.map code_to_string |&gt;
 fun seq -&gt; seq (printf"%s\t");;

(* Test below does not work for last 2 because it allocates a to big string
*)
let big = measure make_big_string last1 last1 "make_big_string";;
measure decode_big big last1 "decode_big";;

(* Here last2 encodes/decodes ALL possible code points *)
measure round_about2 last last "round_about2";;
measure round_about3 last last "round_about3";;
measure code_into_string_test last last "code_into_string";;
measure code_to_string_test last last "code_to_string";;

let _ = (* One can never have to many samples ... *)
 printf"\n\n    "; S.( 0 -- 15) (fun i -&gt; printf" %2x" i);
 S.( 0 -- 15)
  (fun i -&gt; printf"\n%4x  " (i * 16 + 0x2500);
    S.( (0x2500 + i * 16) -- (0x250F + i * 16))
    |&gt; S.map code_to_string
    |&gt; S.to_list |&gt; String.concat "  " |&gt; print_string
  );;
*)

</pre>
      </blockquote>
      <pre wrap="">

</pre>
      <br>
      <fieldset class="mimeAttachmentHeader"></fieldset>
      <br>
      <pre wrap="">_______________________________________________
Containers-users mailing list
<a class="moz-txt-link-abbreviated" href="mailto:Containers-users@lists.ocaml.org">Containers-users@lists.ocaml.org</a>
<a class="moz-txt-link-freetext" href="http://lists.ocaml.org/listinfo/containers-users">http://lists.ocaml.org/listinfo/containers-users</a>
</pre>
    </blockquote>
    <br>
  </body>
</html>

--------------7E25187510F75ADED296950B--


From sp@orbitalfox.eu  Sat Feb 24 17:54:24 2018
Return-Path: <sp@orbitalfox.eu>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id C117B3CE6E
 for <containers-users@lists.ocaml.org>; Sat, 24 Feb 2018 17:54:24 +0000 (GMT)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.1-1825198 
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from orbitalfox.com ([95.172.232.202]:42508 helo=orbitalfox.eu)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtp id 1epeD8-000Dlx-9W (Exim 4.90_1) for
 containers-users@lists.ocaml.org
 (return-path <sp@orbitalfox.eu>); Sat, 24 Feb 2018 18:06:15 +0000
Received: from darkstar (unknown [192.168.88.3])
 by orbitalfox.eu (Postfix) with ESMTPSA id 75A0EAA0064;
 Sat, 24 Feb 2018 18:06:14 +0000 (UTC)
Date: Sat, 24 Feb 2018 18:06:12 +0000
From: SP <sp@orbitalfox.eu>
To: Drup <drupyog@zoho.com>
Message-ID: <20180224180612.qk3uawdfocbxypff@darkstar>
References: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
 <a8d6653c-537d-47b0-9dcc-c0fcec4d1a7f@zoho.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
In-Reply-To: <a8d6653c-537d-47b0-9dcc-c0fcec4d1a7f@zoho.com>
User-Agent: NeoMutt/20171215
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Request for comments on BiMap
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 24 Feb 2018 17:54:24 -0000

On Sat, Feb 24, 2018 at 01:01:45PM +0100, Drup wrote:
>Why not call this "Bijection" or "BijMap" ? BiMap simply implies two 
>maps. This a bit more specific.

With BiMap I was hoping to do a catch-all for Two-maps, bidirectional
maps, etc. Bijection map would get caught in there too.

I've not decided if the fact that it's two maps will be exposed or not.

Exposing it means the interfaces don't have to be written, but it won't
allow for future optimisations.

Bijection map is an apt name. Thinking about it...

-- 
	SP

From SRS0=//9i=FS=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sat Feb 24 17:59:50 2018
Return-Path: <SRS0=//9i=FS=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id D9BED3CE73
 for <containers-users@lists.ocaml.org>; Sat, 24 Feb 2018 17:59:50 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1825198 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:57495)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1epeIO-000HQQ-94 (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=//9i=FS=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sat, 24 Feb 2018 18:11:41 +0000
Received: from carty (cpe-70-112-2-148.austin.res.rr.com [70.112.2.148])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 444AC56126E;
 Sat, 24 Feb 2018 19:11:14 +0100 (CET)
Date: Sat, 24 Feb 2018 12:11:10 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: Drup <drupyog@zoho.com>
Message-ID: <20180224175318.GA1900@carty>
References: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
 <a8d6653c-537d-47b0-9dcc-c0fcec4d1a7f@zoho.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="DBIVS5p969aUjpLe"
Content-Disposition: inline
In-Reply-To: <a8d6653c-537d-47b0-9dcc-c0fcec4d1a7f@zoho.com>
User-Agent: Mutt/1.9.3 (2018-01-21)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sat Feb 24
 19:11:16 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=4EC7F5605ED
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Request for comments on BiMap
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 24 Feb 2018 17:59:50 -0000


--DBIVS5p969aUjpLe
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Sat, 24 Feb 2018, Drup wrote:
> Why not call this "Bijection" or "BijMap" ? BiMap simply implies two maps.
> This a bit more specific.

It makes sense! `Bijection` is about the intent, `BiMap` ties to an
implementation. However if we change the name we still have to convey
that it's a functional bijection (rather than imperative).


--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--DBIVS5p969aUjpLe
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlqRqr0ACgkQSsAdCEmq
YrawjA//SD0iU2KRtPSkOZl9bxfaO37gbavMX0/41aMoaxlvzP5AxuHHmoRkweb0
9JM7OH8M8hqT2CgPoE4RM75xY85Pe0M1AIgJZjQsttXABCeY26FS+joJM7ulIYrt
dinBEMY9CRZ7p4TxDtiQEgA5204w17X6rcj6doVITaqinNWecAe6aOQSX8o+Qmwl
0yjxwIVZcCbJL6i1DZXwxmwJRtxQk6m/pnqQNL8MS9a6RDLvnjXl4YFy1CyEEJUG
8UIwEIkSqZKQvcDNIvo8hxRM5BV83VkD3cosvaV9eM9iD4GLwrlzK11LKKf1tJ80
+n296+hYwZvzKmFte4j7UL5Gr19vMzxNZdLkPiMDU1t+/lBb0N+WP0nMBgB3GHn2
+k6c285gZqTvB1MeX4vJ27ozMJEn0m6MwyuiF1oe645uXgod+IxgFjD+aEqw0PU7
UYQetfQoabCHoy4ssVPUnnEnhsiBTIWIPY7EX0SZ+94zSm+reDaPSV3JV/l/Uy3b
wzmUMg233ODGpocCRkp5e+3oX9UCku5jHvr8PN+M7Nwd5gxYzxMcvn1E4a6xe1xB
SJR7g41wA58wna40Y289gdlDifZX/4+uVWgd69S57+8H5pPmlNLAaW8SyfFbtqIM
nkm0ljxnAEl7aWOjv1kc8rM0EmlVkRC0ssMRGgScmLHxRtp3MHE=
=TNNa
-----END PGP SIGNATURE-----

--DBIVS5p969aUjpLe--


From SRS0=//9i=FS=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sat Feb 24 18:10:11 2018
Return-Path: <SRS0=//9i=FS=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-30.csi.cam.ac.uk (ppsw-30.csi.cam.ac.uk [131.111.8.130])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id AA9803CE86
 for <containers-users@lists.ocaml.org>; Sat, 24 Feb 2018 18:10:11 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1825198 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:36812)
 by ppsw-30.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1epeSP-000gJP-eS (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=//9i=FS=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sat, 24 Feb 2018 18:22:02 +0000
Received: from carty (cpe-70-112-2-148.austin.res.rr.com [70.112.2.148])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 779235646AB;
 Sat, 24 Feb 2018 19:21:57 +0100 (CET)
Date: Sat, 24 Feb 2018 12:21:52 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: Drup <drupyog@zoho.com>
Message-ID: <20180224182152.GA1858@carty>
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
 <20180210195351.GE1388@carty>
 <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="9jxsPFA5p3P2qPhR"
Content-Disposition: inline
In-Reply-To: <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
User-Agent: Mutt/1.9.3 (2018-01-21)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sat Feb 24
 19:21:58 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=7DE3156468D
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 24 Feb 2018 18:10:11 -0000


--9jxsPFA5p3P2qPhR
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Sat, 24 Feb 2018, Drup wrote:
> Shouldn't we just standardize on bunzli's libraries (including the new
> https://github.com/dbuenzli/utext) instead of trying to re-write code that
> usually ends up being quite subtle in each standard library ?

We could build on uutf, it's relatively small and doesn't have too many
deps. However, I also don't think utf8 is that complicated that we
couldn't just redo the codepoint<-> byte conversions in a simpler (and
arguably lower overhead) way. In particular,
`Utf8string.to_seq : t -> codepoint sequence` could be faster than
calling uutf with all its poly variants.

For utext, meh. It's not stable yet, and relies on a complicated non
standard underlying vec structure. Ustring (or Utf8string, possibly, as
it's the only reasonable string to support) should be a (possibly
private) alias to string. There should be a similar Utf8buffer where you
can push/pop codepoints and append other Utf8buffers.


--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--9jxsPFA5p3P2qPhR
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlqRrTYACgkQSsAdCEmq
YrY/Sg/+Mv+Tv2B8df8KNIvgxam/r+he+we0IGElN5TwPL976l9NMz8TQvZrX9L1
muPMHoNy9leUS5wGvNEKZlHNej3eP6ce4xyser7fhb0ApSmP2Elx+MK88EQpPQKm
6o3M9wCbrvVs+TFES79P6I2noHEsq1H/NHUYA1f3tQJ8czvp4aXxQcfaeTp7b4Vw
sbCmE1nS/Y4kkjHHuaa56QwUoawepAWHGqp10ghSQjpRPbvfKxMV9Yip9k5AJ7kW
kI+dUuZ5Szu+GMeZQFipFDj69+4LFsOcOcuLMBvWss8VhzBBe9LdlX01toMmQt7m
L5nKCn/AhOKbkAruqSKxo4Wdzi9mskn8BeQuWEgLAUPUzcDgfDPUPcual/qeB5qY
czME5d19SHmblYDLMUkeX9WEJZTlEIzbk0KIT0ckcbhNVs1yNXlJ7MsRLark5qLr
oKHGXQwe0UHizZmiHNtc6sV5bZehzLkvnJhfZGpcG2XGcqu4sRtXbyzORI8LDJfp
k+5Bar+YPDym/M/d15QlhwbdACQ3G2bX8jufCcjkVlWkp0nxLrNPzygDTAQk5s3j
Qciu7IGS9tLS1hZdpPodKvBdY1Xy2Ii5NyXNPZTNHqHUgQov1qXc+UDkJmRyfmpe
onpbLbA242LBlTZ4fthePOjs2A5SPdbc7oAgRuBBezDSXx6yvEM=
=oLi/
-----END PGP SIGNATURE-----

--9jxsPFA5p3P2qPhR--


From sp@orbitalfox.eu  Sun Feb 25 10:01:05 2018
Return-Path: <sp@orbitalfox.eu>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 9FACA3C465
 for <containers-users@lists.ocaml.org>; Sun, 25 Feb 2018 10:01:05 +0000 (GMT)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.1-1825292 
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from orbitalfox.com ([95.172.232.202]:42884 helo=orbitalfox.eu)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtp id 1eptIg-000tke-70 (Exim 4.90_1) for
 containers-users@lists.ocaml.org
 (return-path <sp@orbitalfox.eu>); Sun, 25 Feb 2018 10:12:58 +0000
Received: from darkstar (unknown [192.168.88.3])
 by orbitalfox.eu (Postfix) with ESMTPSA id 9022CAA0064;
 Sun, 25 Feb 2018 10:12:57 +0000 (UTC)
Date: Sun, 25 Feb 2018 10:12:55 +0000
From: SP <sp@orbitalfox.eu>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
Message-ID: <20180225101255.56q7gebfamvrrgz4@darkstar>
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
 <20180210195351.GE1388@carty>
 <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
 <20180224182152.GA1858@carty>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
In-Reply-To: <20180224182152.GA1858@carty>
User-Agent: NeoMutt/20171215
Cc: containers-users@lists.ocaml.org, Drup <drupyog@zoho.com>
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sun, 25 Feb 2018 10:01:05 -0000

On Sat, Feb 24, 2018 at 12:21:52PM -0600, Simon Cruanes wrote:
>We could build on uutf, it's relatively small and doesn't have too many
>deps. However, I also don't think utf8 is that complicated that we
>couldn't just redo the codepoint<-> byte conversions in a simpler

Make it uutf compatible then, so one can either use uutf for full
functionality or use a few basic converters provided in Containers.

-- 
	SP

From SRS0=Kjju=FT=m4x.org=simon.cruanes.2007@bounces.m4x.org  Sun Feb 25 14:33:22 2018
Return-Path: <SRS0=Kjju=FT=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id B5FEC3C4AD
 for <containers-users@lists.ocaml.org>; Sun, 25 Feb 2018 14:33:22 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1825292 
 *  0.0 HTML_MESSAGE BODY: HTML included in message
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:53507)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1epxYB-000rhD-9Y (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=Kjju=FT=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Sun, 25 Feb 2018 14:45:16 +0000
Received: from [192.168.0.14] (cpe-70-112-2-148.austin.res.rr.com
 [70.112.2.148])
 (using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 2041D564724;
 Sun, 25 Feb 2018 15:37:13 +0100 (CET)
Date: Sun, 25 Feb 2018 08:37:10 -0600
User-Agent: K-9 Mail for Android
In-Reply-To: <20180225101255.56q7gebfamvrrgz4@darkstar>
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
 <20180210195351.GE1388@carty> <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
 <20180224182152.GA1858@carty> <20180225101255.56q7gebfamvrrgz4@darkstar>
MIME-Version: 1.0
Content-Type: multipart/alternative;
 boundary="----MLHHF06LLEGFRS3QQ4ODM2HUGI901C"
Content-Transfer-Encoding: 7bit
To: SP <sp@orbitalfox.eu>
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
Message-ID: <099985F3-ACA1-490E-A451-7E93971FB92E@m4x.org>
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Sun Feb 25
 15:37:14 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000373, queueID=E072A564725
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org, Drup <drupyog@zoho.com>
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sun, 25 Feb 2018 14:33:22 -0000

------MLHHF06LLEGFRS3QQ4ODM2HUGI901C
Content-Type: text/plain;
 charset=utf-8
Content-Transfer-Encoding: quoted-printable

Well, there's the standard uchar type, I think compatibility is achievable =
:) 
------MLHHF06LLEGFRS3QQ4ODM2HUGI901C
Content-Type: text/html;
 charset=utf-8
Content-Transfer-Encoding: quoted-printable

Well, there&#39;s the standard uchar type, I think compatibility is achieva=
ble :) 
------MLHHF06LLEGFRS3QQ4ODM2HUGI901C--


From pjfrey@sympatico.ca  Mon Feb 26 23:40:59 2018
Return-Path: <pjfrey@sympatico.ca>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-40.csi.cam.ac.uk (ppsw-40.csi.cam.ac.uk [131.111.8.140])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 113DE3C579
 for <containers-users@lists.ocaml.org>; Mon, 26 Feb 2018 23:40:59 +0000 (GMT)
X-Cam-SpamDetails: score -0.8 from SpamAssassin-3.4.1-1825347 
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at http://www.dnswl.org/, low
 *      trust
 *      [184.150.200.79 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 *  0.0 UNPARSEABLE_RELAY Informational: message has unparseable relay
 *      lines
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from belmont79srvr.owm.bell.net ([184.150.200.79]:51810
 helo=mtlfep01.bell.net)
 by ppsw-40.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1:DHE-RSA-AES256-SHA:256)
 id 1eqSZf-00081M-ls (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <pjfrey@sympatico.ca>); Mon, 26 Feb 2018 23:52:57 +0000
Received: from bell.net mtlfep01 184.150.200.30 by mtlfep01.bell.net with ESMTP
 id <20180226235224.LVHM19887.mtlfep01.bell.net@mtlspm01.bell.net>
 for <containers-users@lists.ocaml.org>;
 Mon, 26 Feb 2018 18:52:24 -0500
Received: from [192.168.2.22] (really [74.12.55.71]) by mtlspm01.bell.net
 with ESMTP
 id <20180226235224.PDGB28394.mtlspm01.bell.net@[192.168.2.22]>
 for <containers-users@lists.ocaml.org>;
 Mon, 26 Feb 2018 18:52:24 -0500
To: containers-users@lists.ocaml.org
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
 <20180210195351.GE1388@carty> <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
 <20180224182152.GA1858@carty> <20180225101255.56q7gebfamvrrgz4@darkstar>
From: peter frey <pjfrey@sympatico.ca>
Message-ID: <46bcd6d5-35cf-c84c-a4c1-94774eeb9580@sympatico.ca>
Date: Mon, 26 Feb 2018 18:52:24 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.6.0
MIME-Version: 1.0
In-Reply-To: <20180225101255.56q7gebfamvrrgz4@darkstar>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: en-US
X-Cloudmark-Analysis: v=2.2 cv=IaFoYSia c=1 sm=0 tr=0
 a=fXKWxymDiLb0AS7UaBURww==:17 a=IkcTkHD0fZMA:10 a=Op4juWPpsa0A:10
 a=WZc2Rl2NvITjME0C7SsA:9 a=QEXdDO2ut3YA:10
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 26 Feb 2018 23:40:59 -0000

Simon occasionally includes code from some other part of the libraries 
to avoid requiring, say, Gen to access Sequence or Containers; I don't 
remember offhand.  In the case of some tiny piece of code thats 
sensible. (And so far that is all I have provided)

Pervasives has now a type uchar which Uutf uses consistently. In the 
case that one is not dealing with the many exigencies that Uutf deals 
with, thats a bit overkill?  Alain Frisch used ints in Ulex and I 
remember another usage of uchar only in Camomille.

Uutf has a smaller range of codes that it accepts; namely Utf8.
Thats 0 to (1024 * 16) + (1024 * 16) + (64 * 1024) where 64k portion at 
the end is also excluded from the 1Mb range before.

Originally Utf8 encoded all possible codes in the positive int32 range.
I prefer to revert to the old standard; (and call it Utf31) since I this 
allows me to encode alphabets that are larger than, but include, the 
utf8 range.  (This may not work with js_of_ocaml; but not all 
applications involve the web)
When it comes to comparing utf8 chars (codes; ints) consider the following:

utop # ((=));;
- : 'a -> 'a -> bool = <fun> after loading utop
utop # open Containers;;
utop # ((=));;
- : int -> int -> bool = <fun>                      type is overloaded
utop #

( I noticed this also in Jane Streets's "Sequence" .  Possibly they want 
to avoid 'polymorphic'  comparisons; i.e.: comparisons that examine the 
internal structure)

Did you intend to do that?

Peter


On 2018-02-25 05:12 AM, SP wrote:
> On Sat, Feb 24, 2018 at 12:21:52PM -0600, Simon Cruanes wrote:
>> We could build on uutf, it's relatively small and doesn't have too many
>> deps. However, I also don't think utf8 is that complicated that we
>> couldn't just redo the codepoint<-> byte conversions in a simpler
>
> Make it uutf compatible then, so one can either use uutf for full
> functionality or use a few basic converters provided in Containers.
>


From SRS0=+Ml5=FV=m4x.org=simon.cruanes.2007@bounces.m4x.org  Mon Feb 26 23:59:07 2018
Return-Path: <SRS0=+Ml5=FV=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id CCEC33CC65
 for <containers-users@lists.ocaml.org>; Mon, 26 Feb 2018 23:59:07 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1825347 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:34674)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1eqSrJ-0005tA-8a (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=+Ml5=FV=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Tue, 27 Feb 2018 00:11:06 +0000
Received: from church (unknown [63.65.120.22])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 5B458560663;
 Tue, 27 Feb 2018 01:11:00 +0100 (CET)
Date: Mon, 26 Feb 2018 18:11:32 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: peter frey <pjfrey@sympatico.ca>
Message-ID: <20180227001131.GU29073@church>
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
 <20180210195351.GE1388@carty>
 <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
 <20180224182152.GA1858@carty>
 <20180225101255.56q7gebfamvrrgz4@darkstar>
 <46bcd6d5-35cf-c84c-a4c1-94774eeb9580@sympatico.ca>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="c7rykKtsZvepKFKR"
Content-Disposition: inline
In-Reply-To: <46bcd6d5-35cf-c84c-a4c1-94774eeb9580@sympatico.ca>
User-Agent: Mutt/1.9.2 (2017-12-15)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Feb 27
 01:11:01 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=16C49560664
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 26 Feb 2018 23:59:07 -0000


--c7rykKtsZvepKFKR
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Mon, 26 Feb 2018, peter frey wrote:
> Simon occasionally includes code from some other part of the libraries to
> avoid requiring, say, Gen to access Sequence or Containers; I don't remem=
ber
> offhand.=C2=A0 In the case of some tiny piece of code thats sensible. (An=
d so far
> that is all I have provided)

Indeed, and I find it sensible too to have a basic UTF8 encoder/decoder.

> Pervasives has now a type uchar which Uutf uses consistently. In the case
> that one is not dealing with the many exigencies that Uutf deals with, th=
ats
> a bit overkill?=C2=A0 Alain Frisch used ints in Ulex and I remember anoth=
er usage
> of uchar only in Camomille.
>=20
> Uutf has a smaller range of codes that it accepts; namely Utf8.
> Thats 0 to (1024 * 16) + (1024 * 16) + (64 * 1024) where 64k portion at t=
he
> end is also excluded from the 1Mb range before.
>=20
> Originally Utf8 encoded all possible codes in the positive int32 range.
> I prefer to revert to the old standard; (and call it Utf31) since I this
> allows me to encode alphabets that are larger than, but include, the utf8
> range.=C2=A0 (This may not work with js_of_ocaml; but not all applications
> involve the web)

I'm not sure I understand, what is the point of supporting "more" than
utf8?

> When it comes to comparing utf8 chars (codes; ints) consider the followin=
g:
>=20
> utop # ((=3D));;
> - : 'a -> 'a -> bool =3D <fun> after loading utop
> utop # open Containers;;
> utop # ((=3D));;
> - : int -> int -> bool =3D <fun>=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=
=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 type is overloaded
> utop #
>=20
> ( I noticed this also in Jane Streets's "Sequence" .=C2=A0 Possibly they =
want to
> avoid 'polymorphic'=C2=A0 comparisons; i.e.: comparisons that examine the
> internal structure)
>=20
> Did you intend to do that?

It's intended, yes. You can find a rationale for it in the CHANGELOG
file or on release notes for 2.0.


--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--c7rykKtsZvepKFKR
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlqUojMACgkQSsAdCEmq
YrY6iw/+OiTDQnXpw2OG8tJJjdYujn3GFnEep4+joRH17apnPk81kzB7JZdPoNoH
SMyfL+Y5xug/1xfch7zAc4x/4BFbgE59umXdi5CZJyaAmIGFbETL/aF+jbs7+p+T
gO0DOmnYR1a9JZCfqLS3aXk/A5+Te2R7VEOa8KWi7whxqfe6wDY6iUQqTTFLzzPm
VO1UryBwW/hHHBbFDvzznh5opkh6qtbwhZh+Dw0SwS2VUAdUxbYzwmGRaT6SXul5
sDXCgWVfZGzUaVlM7aBMs01+U0VTBaHCTn+CqZ0MOAOVhrv83z6rpqKSOr/hpUc8
eug+c9UQWPYnbaVKgMB7UVIdifmiu40eeo/e7HJyxBV3KV1Rp8Yw/ZBLYLRDZ4lJ
WGcIeR5p9tOd3QISRN92NFwxqqHxCsYVVxMatBx+9dmYK0igK5LTyL1KQREzCYM9
eR5/axZ3sIFO9SLxJgH/2EA5N4X99azFXwFfO8h8xsmGvuTJbOW7DPGq+pZ2wQn7
tUvB+0CFCElQjdENXAQ+S57I/h1DH2HT+RA3SFy9oywzsbvBEytWWOki4I3IpUJM
9FtwQEOGrA58ApFYERtS43gF+Qd91T+GhYgUeC1V+2aqCJKMo5+M34pVvqWS1w2k
/Q5y8ohbdj6nD2Yq3uJTo5CH/YHLjRAZxC8ccI+GRlEVnF71LbI=
=fCVr
-----END PGP SIGNATURE-----

--c7rykKtsZvepKFKR--


From sp@orbitalfox.eu  Tue Feb 27 17:41:48 2018
Return-Path: <sp@orbitalfox.eu>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-31.csi.cam.ac.uk (ppsw-31.csi.cam.ac.uk [131.111.8.131])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id C3A713C454
 for <containers-users@lists.ocaml.org>; Tue, 27 Feb 2018 17:41:48 +0000 (GMT)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.1-1825432 
 * -0.0 T_RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from orbitalfox.eu ([95.172.232.202]:32898)
 by ppsw-31.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtp id 1eqjRl-0008aQ-KG (Exim 4.90_1) for
 containers-users@lists.ocaml.org
 (return-path <sp@orbitalfox.eu>); Tue, 27 Feb 2018 17:53:49 +0000
Received: from tiger (unknown [192.168.88.5])
 by orbitalfox.eu (Postfix) with ESMTPSA id A47A1AA00FA
 for <containers-users@lists.ocaml.org>; Tue, 27 Feb 2018 17:53:48 +0000 (UTC)
Date: Tue, 27 Feb 2018 17:53:47 +0000
From: SP <sp@orbitalfox.eu>
To: containers-users@lists.ocaml.org
Message-ID: <20180227175347.4j24ofy5qcuvxffg@tiger>
References: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
In-Reply-To: <20180223003729.lnkfx5fncnyiqxvd@darkstar>
User-Agent: NeoMutt/20180223
Subject: Re: [containers-users] Request for comments on BiMap
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Tue, 27 Feb 2018 17:41:48 -0000

Made progress with enriching the module's interface and done some
basic testing.

https://github.com/c-cube/ocaml-containers/compare/master...orbifx:bimap

It's missing sequence conversions, which I need to read about before I
can implement them.

Anything else?

-- 
    SP

From pjfrey@sympatico.ca  Thu Mar  1 18:33:10 2018
Return-Path: <pjfrey@sympatico.ca>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-40.csi.cam.ac.uk (ppsw-40.csi.cam.ac.uk [131.111.8.140])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 5AC033C0D2
 for <containers-users@lists.ocaml.org>; Thu,  1 Mar 2018 18:33:10 +0000 (GMT)
X-Cam-SpamDetails: score -0.8 from SpamAssassin-3.4.1-1825629 
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at http://www.dnswl.org/, low
 *      trust
 *      [184.150.200.207 listed in list.dnswl.dnsbl.ja.net]
 *  0.0 UNPARSEABLE_RELAY Informational: message has unparseable relay
 *      lines
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from simcoe207srvr.owm.bell.net ([184.150.200.207]:47701
 helo=torfep01.bell.net)
 by ppsw-40.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1:DHE-RSA-AES256-SHA:256)
 id 1erTCb-000xuO-jO (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <pjfrey@sympatico.ca>); Thu, 01 Mar 2018 18:45:18 +0000
Received: from bell.net torfep01 184.150.200.158 by torfep01.bell.net
 with ESMTP
 id <20180301184445.BRXE3030.torfep01.bell.net@torspm01.bell.net>
 for <containers-users@lists.ocaml.org>;
 Thu, 1 Mar 2018 13:44:45 -0500
Received: from [192.168.2.22] (really [74.12.55.71]) by torspm01.bell.net
 with ESMTP
 id <20180301184445.JMHT26298.torspm01.bell.net@[192.168.2.22]>;
 Thu, 1 Mar 2018 13:44:45 -0500
From: peter frey <pjfrey@sympatico.ca>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
 <20180210195351.GE1388@carty> <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
 <20180224182152.GA1858@carty> <20180225101255.56q7gebfamvrrgz4@darkstar>
 <46bcd6d5-35cf-c84c-a4c1-94774eeb9580@sympatico.ca>
 <20180227001131.GU29073@church>
Message-ID: <fadd3ae7-904d-7ded-0ed3-e4b69fafc691@sympatico.ca>
Date: Thu, 1 Mar 2018 13:44:45 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.6.0
MIME-Version: 1.0
In-Reply-To: <20180227001131.GU29073@church>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: en-US
X-Cloudmark-Analysis: v=2.2 cv=JtkelIwC c=1 sm=0 tr=0
 a=fXKWxymDiLb0AS7UaBURww==:17 a=IkcTkHD0fZMA:10 a=v2DPQv5-lfwA:10
 a=QNSm044NRN32_R68sfkA:9 a=YYCb-WiRFTN61HLi:21 a=Vs096qSprlCLSITD:21
 a=QEXdDO2ut3YA:10
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Mar 2018 18:33:10 -0000


I'm not sure I understand, what is the point of supporting "more" than
> utf8?
In the original utf8 standard the encoding is:
The code is encoded as a string of length 1 + additional length.
The additional length is a 0-ary encoding of the length '10' to 
'1111110'  (i.e.: 1.. 6)
The first char supplies 1 to 7 bits; the following chars supply 6 bits each.
The maximal # bits is 31 bits. (5 * 6 + low bit from 0-byte).
I am using this encoding but it is no longer 'standard'.  Instead the range
   0xD7FF .. 0xE000 is excluded from the TOTAL range 0 .. 0x10FFFF
In Uutf8 only this range is accepted.


All I tried to say is: My code does not encode the current standard; in 
fact it does
little checking. (Encodes more - checks less).

Calling it utf31 would be an informal way of signaling this;
we can call anything what we want to call it.

I will write a filter that does verification; especially :
A code that has length 1 + n must have n bytes following with format 
10xxxxxx;  if the decoder encounters 0xxxxxxx or x1xxxxxxx or end of 
string; that is an error.
Uutf8 replaces such sequences with an error code.

peter



From pjfrey@sympatico.ca  Thu Mar  1 19:29:04 2018
Return-Path: <pjfrey@sympatico.ca>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 0E8863CEB6
 for <containers-users@lists.ocaml.org>; Thu,  1 Mar 2018 19:29:04 +0000 (GMT)
X-Cam-SpamDetails: score -0.8 from SpamAssassin-3.4.1-1825629 
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at http://www.dnswl.org/, low
 *      trust
 *      [184.150.200.79 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 *  0.0 UNPARSEABLE_RELAY Informational: message has unparseable relay
 *      lines
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from belmont79srvr.owm.bell.net ([184.150.200.79]:35845
 helo=mtlfep01.bell.net)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1:DHE-RSA-AES256-SHA:256)
 id 1erU4c-000Toz-6S (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <pjfrey@sympatico.ca>); Thu, 01 Mar 2018 19:41:12 +0000
Received: from bell.net mtlfep01 184.150.200.30 by mtlfep01.bell.net with ESMTP
 id <20180301194034.FCSX19887.mtlfep01.bell.net@mtlspm01.bell.net>
 for <containers-users@lists.ocaml.org>;
 Thu, 1 Mar 2018 14:40:34 -0500
Received: from [192.168.2.22] (really [74.12.55.71]) by mtlspm01.bell.net
 with ESMTP
 id <20180301194034.XMQB28394.mtlspm01.bell.net@[192.168.2.22]>
 for <containers-users@lists.ocaml.org>;
 Thu, 1 Mar 2018 14:40:34 -0500
To: containers-users@lists.ocaml.org
From: peter frey <pjfrey@sympatico.ca>
Message-ID: <8429414f-8a7f-01f7-5ed1-b90d7c24444d@sympatico.ca>
Date: Thu, 1 Mar 2018 14:40:34 -0500
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101
 Thunderbird/52.6.0
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: en-US
X-Cloudmark-Analysis: v=2.2 cv=IaFoYSia c=1 sm=0 tr=0
 a=fXKWxymDiLb0AS7UaBURww==:17 a=IkcTkHD0fZMA:10 a=v2DPQv5-lfwA:10
 a=qwv5eg7JVTyrbuTwvR4A:9 a=uR3Dg4mnke_K3w9L:21 a=WAnUwTmKFWefwAFp:21
 a=QEXdDO2ut3YA:10
Subject: [containers-users] Vector.slice_seq
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Mar 2018 19:29:04 -0000

Pasted from source code:

utop # Vector.slice_seq (Vector.of_list [0;1;2;3;4]) 1 3 |> CCList.of_seq;;
- : int list = [1; 2; 3]
─( 14:27:21 )─< command 41 >─────────────────────────────────────{ 
counter: 0 }─

Same thing with length 5:

utop # Vector.slice_seq (Vector.of_list [0;1;2;3;4]) 1 5 |> CCList.of_seq;;
Exception: Assert_failure ("src/core/CCVector.ml", 656, 4).

Source:

let slice_seq v start len =
   assert (start >= 0 && len >= 0);
   fun k ->
     assert (start+len < v.size);                 should be <= v.size ???
     for i = start to start+len-1 do
       let x = Array.unsafe_get v.vec i in
       k x
     done

with length 5 the slice is not a proper slice; but as with strings, a 
string is a (not proper) sub_string of itself; so a slice of the whole 
vector would also be expected to be a slice?

Peter



From SRS0=dzO8=FX=m4x.org=simon.cruanes.2007@bounces.m4x.org  Thu Mar  1 20:19:59 2018
Return-Path: <SRS0=dzO8=FX=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-40.csi.cam.ac.uk (ppsw-40.csi.cam.ac.uk [131.111.8.140])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id C44F33CEB7
 for <containers-users@lists.ocaml.org>; Thu,  1 Mar 2018 20:19:59 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1825629 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:43272)
 by ppsw-40.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1erUs3-000VVe-lM (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=dzO8=FX=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Thu, 01 Mar 2018 20:32:08 +0000
Received: from church (unknown [63.65.120.22])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 40A5B56468A;
 Thu,  1 Mar 2018 21:32:03 +0100 (CET)
Date: Thu, 1 Mar 2018 14:32:36 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: peter frey <pjfrey@sympatico.ca>
Message-ID: <20180301203236.GW29073@church>
References: <8429414f-8a7f-01f7-5ed1-b90d7c24444d@sympatico.ca>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="iRaAnoDFBoP0sW/E"
Content-Disposition: inline
In-Reply-To: <8429414f-8a7f-01f7-5ed1-b90d7c24444d@sympatico.ca>
User-Agent: Mutt/1.9.2 (2017-12-15)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Thu Mar 1
 21:32:03 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=EAC1A56468E
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Vector.slice_seq
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Thu, 01 Mar 2018 20:19:59 -0000


--iRaAnoDFBoP0sW/E
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Thu, 01 Mar 2018, peter frey wrote:
> utop # Vector.slice_seq (Vector.of_list [0;1;2;3;4]) 1 3 |> CCList.of_seq=
;;
> - : int list =3D [1; 2; 3]
> =E2=94=80( 14:27:21 )=E2=94=80< command 41 >=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80{ counter:
> 0 }=E2=94=80

This is correct.

> Same thing with length 5:
>=20
> utop # Vector.slice_seq (Vector.of_list [0;1;2;3;4]) 1 5 |> CCList.of_seq=
;;
> Exception: Assert_failure ("src/core/CCVector.ml", 656, 4).

This should fail (with a better error), because indexing starts at 0.
Can you open an issue so I can track this better? :)

(on github: go to c-cube/ocaml-containers, click "issues" then "open".
Then add a title and, roughly, this message).

If you prefer I can open an issue myself.


> Source:
>=20
> let slice_seq v start len =3D
> =C2=A0 assert (start >=3D 0 && len >=3D 0);
> =C2=A0 fun k ->
> =C2=A0=C2=A0=C2=A0 assert (start+len < v.size);=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 sh=
ould be <=3D v.size ???
> =C2=A0=C2=A0=C2=A0 for i =3D start to start+len-1 do
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 let x =3D Array.unsafe_get v.vec i in
> =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 k x
> =C2=A0=C2=A0=C2=A0 done
>=20
> with length 5 the slice is not a proper slice; but as with strings, a str=
ing
> is a (not proper) sub_string of itself; so a slice of the whole vector wo=
uld
> also be expected to be a slice?

Right, should be <=3D v.size indeed. An not an assertion, a check +
invalid_arg.

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--iRaAnoDFBoP0sW/E
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlqYY2MACgkQSsAdCEmq
YrbHKBAApx2lEZ/EGSVYkqgMx47cLxLTTsiIbXJoxOW82nysh/8+13xOmVF2wnGk
y+xup1nvJCinDwbk18KiwFB1R6zAaKANEVLaS2jhkCtHBWdvhZJJZ6hnlxkQTzCj
2xIdiqmFbknzZ6xU6aiFuGF2eR5zc72h/n3vms+cZKRG/IlKuganttY+Bcb3hUmz
98X9wvfnCwmRhW/q1xdhBoUEsZzrpf0Uof+El3Blhm5aU9wdgfwm3LpUFhtwfSyc
ABKHq9Yamov6D50nd8jq76d3JMvRiFG2Z0vL7Z4ocPLT71pqftKL7OkPQ6OUxb8G
icVfW+V/rG6Cqf9mp5HG/87RfGoOFJFz+sV3qjqItMtfSBY776hPJIOm2Q44HP3R
6d59/3E7PkKqXfy3vTMudiuAJt8OCFx7ZgH0qpx7vkhngtY/6O5aBnzjWWMAA/x5
4VyeRIpaahXtSp8fMBrGdQ1ToUr6uB+JMnAJJdgC/tGfAzPGKY/P/aXRgscQ2GwY
w+wElqZut5lBB4Y3te7bYf87kG2OXJdKAFK9VqshlrlJm4RImLYlyfbNSKfJClFu
4F2q22/hp752vV46uYuYsT/65McHuqlcSGPk3YBRXZMWA61wbHTPgOGUZw/dxSdi
ImuygkpVuLtB/slCr2hc/4aixMrM/g7UghjeEzR4kU/RZ/p/bsI=
=6lAM
-----END PGP SIGNATURE-----

--iRaAnoDFBoP0sW/E--


From SRS0=/esu=F5=m4x.org=simon.cruanes.2007@bounces.m4x.org  Wed Mar  7 04:08:10 2018
Return-Path: <SRS0=/esu=F5=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-31.csi.cam.ac.uk (ppsw-31.csi.cam.ac.uk [131.111.8.131])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 862443C0A4
 for <containers-users@lists.ocaml.org>; Wed,  7 Mar 2018 04:08:10 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1825959 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:36141)
 by ppsw-31.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1etQZA-000GEO-MQ (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=/esu=F5=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Wed, 07 Mar 2018 04:20:37 +0000
Received: from carty (cpe-70-112-2-148.austin.res.rr.com [70.112.2.148])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id 2BB6456127B;
 Wed,  7 Mar 2018 05:20:29 +0100 (CET)
Date: Tue, 6 Mar 2018 22:20:26 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: peter frey <pjfrey@sympatico.ca>
Message-ID: <20180307042025.GB2084@carty>
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
 <20180210195351.GE1388@carty>
 <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
 <20180224182152.GA1858@carty>
 <20180225101255.56q7gebfamvrrgz4@darkstar>
 <46bcd6d5-35cf-c84c-a4c1-94774eeb9580@sympatico.ca>
 <20180227001131.GU29073@church>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="i9LlY+UWpKt15+FH"
Content-Disposition: inline
In-Reply-To: <20180227001131.GU29073@church>
User-Agent: Mutt/1.9.3 (2018-01-21)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Wed Mar 7
 05:20:30 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=EF2FA56127C
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 07 Mar 2018 04:08:10 -0000


--i9LlY+UWpKt15+FH
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

I merged and adapted the code from Peter:

https://github.com/c-cube/ocaml-containers/blob/master/src/core/CCUtf8_stri=
ng.mli
https://github.com/c-cube/ocaml-containers/blob/master/src/core/CCUtf8_stri=
ng.ml

it's stricter (only accepts valid UTF8) and the random tests should
ensure that it agrees with Uutf on what is valid utf8, and on the list
of codepoints of a valid UTF8 string.

The code is not that complicated: encoding is 25 lines, decoding is 67
lines. I had to rewrite part of it to make it strictly UTF8 compliant.

Comments very welcome! And thanks again to Peter, without whom I'd never
have had the courage to do it.

--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--i9LlY+UWpKt15+FH
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlqfaIkACgkQSsAdCEmq
Yrar2g//XnP8zjfAq1FbgCGLOhAdLdDEgRd9Zq5MqXUVG7UiZ2Pja6fxe52RPmU1
ScoPIF2Flo1ngYjwtlMPOiHTknFPgPQlREACfLNuF4ypFkiNTovgzAjhd3+K4ag3
j4I/tRvP/qGnPFxn/Lc2fZHSILaPtRNuy4oEw+fgtRW6ZXpsxF+E6ILr3WV343nL
+F818Enozd2FYIAVQmZPVzGLOMFScvhBfrQpNA2iju+fFNVTdzS95omdO7Dw5tGQ
6ECkzxZyBlEHYreTgVsSa+lIgvA0Asoicb1bQxn25s4SeUhL5+OOJkZ+2iEzwG/k
YBg4Lsw10Ze9/jaFF3fZHtlmVFnBS7udIOUudYN8gHSO8yvYiTm52JA5zsPzZbPr
js8WTtrv7MOxYY8a22FCU/SPCDXMvG/bLy6j5WoxZ6Q/HZR7nU8lGzqlqwMCbdBd
OOsZy7QcOwOO/LP2fgRkcF1M6QVgmwbnH+qDCleyWM78Kvw8W0C60AKzwRpV0Ack
3wZnG6ANLTIuggkDJlvo0e3KvlAH+HD0S1qeMvCM65OCsq7IvXANjeQyC3g9GOz9
gYJHl5i9M+2oSrF/XW2PP915kMIEm5DxbK9XxTshSQ747NaOzwV3mmM5Gc0HtpW4
z7DbOGlgKyTOk9lA19B0jwOflfL52eUqMFH61mhQffw212dc5Us=
=0C60
-----END PGP SIGNATURE-----

--i9LlY+UWpKt15+FH--


From SRS0=/esu=F5=m4x.org=simon.cruanes.2007@bounces.m4x.org  Wed Mar  7 05:42:39 2018
Return-Path: <SRS0=/esu=F5=m4x.org=simon.cruanes.2007@bounces.m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-31.csi.cam.ac.uk (ppsw-31.csi.cam.ac.uk [131.111.8.131])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id E9F5A3C0A4
 for <containers-users@lists.ocaml.org>; Wed,  7 Mar 2018 05:42:39 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.1-1825959 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [129.104.30.34 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mx1.polytechnique.org ([129.104.30.34]:51870)
 by ppsw-31.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1etS2c-0008bO-LE (Exim 4.90_1) for containers-users@lists.ocaml.org
 (return-path <SRS0=/esu=F5=m4x.org=simon.cruanes.2007@bounces.m4x.org>);
 Wed, 07 Mar 2018 05:55:07 +0000
Received: from carty (cpe-70-112-2-148.austin.res.rr.com [70.112.2.148])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by ssl.polytechnique.org (Postfix) with ESMTPSA id B02FC5612C1;
 Wed,  7 Mar 2018 06:55:02 +0100 (CET)
Date: Tue, 6 Mar 2018 23:55:00 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: peter frey <pjfrey@sympatico.ca>
Message-ID: <20180307055459.GC2084@carty>
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
 <20180210195351.GE1388@carty>
 <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
 <20180224182152.GA1858@carty>
 <20180225101255.56q7gebfamvrrgz4@darkstar>
 <46bcd6d5-35cf-c84c-a4c1-94774eeb9580@sympatico.ca>
 <20180227001131.GU29073@church> <20180307042025.GB2084@carty>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="69pVuxX8awAiJ7fD"
Content-Disposition: inline
In-Reply-To: <20180307042025.GB2084@carty>
User-Agent: Mutt/1.9.3 (2018-01-21)
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Wed Mar 7
 06:55:03 2018 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=821CC561357
X-Org-Mail: simon.cruanes.2007@polytechnique.org
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 07 Mar 2018 05:42:40 -0000


--69pVuxX8awAiJ7fD
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Of course I spoke too soon, and missed so validation cases (that would
have been accepted by Peter's code).

In particular, I just learnt about some interesting corner cases of UTF8,
namely overlong encodings.

If anyone is knowledgeable about UTF8, reviewing the code would be
greatly appreciated!

Cheers! :)


--=20
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6

--69pVuxX8awAiJ7fD
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlqffrMACgkQSsAdCEmq
YrZk1w//RjLOR32eqXdAVX9BYJjttYlGBGYvnI1yn7nq1Z9BhgM8hES5iH18RAVE
dxVg2gXxIGaIeQmEc42isYsvA4gMuSQlxHqxd8pSOqZUSJUUMQgHLQoSL/AA9Mwx
+Xsy+bSUScc0QPZRAmaMPL9KEdJMOIEnHYAzdASC42g2feFt3Yy4eb4IUQa79nut
XUSWtO4m4qJUlrB0dbvKI01y4PqRNxZHnwUSqYWjw4ZkuX6oyOeoqm2DEE+/zhGK
sb9a7cIlxmCSjQvpbnVfJzC5syIhOS+z8SfuawPBLPEL/pqZ2Z5D08ArKfX0swms
ehA3x12f3ZNiZG+WpYP3tWEKnq3D8EUDNxHWHhA58vafAw7hgKmw0HtkhdmrR2Fu
ciuqlPBtKquzOPLovKOmEnR8KdwOk/XzOJAx6B0N1D8fWAqJmtYm2epgQAdHTIkk
YziwJEHzjPQYq9oqyzCaxqyjzUpSuZsPU0HQL8vAY3j8Mp3LnTFXX2s3Ae6e/CpT
DOa5lo4oTRsq+GYF8/dB5xVdDOCaVe4MmSKr5341lpaclN7wewfGHarvbdchy4ZV
cNRuxvGe/gpGMSeUky5cl677SIiOVIzVj1KaSVJvAEkUBOwx6aeArOWGaFDVO5/v
M4N9YuOPZNs8Mop2PrZmE23lSGdrBG+5/l1eNDmKmF0ZduDXYKc=
=pb/L
-----END PGP SIGNATURE-----

--69pVuxX8awAiJ7fD--


From sp@orbitalfox.eu  Wed Mar  7 07:05:27 2018
Return-Path: <sp@orbitalfox.eu>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 560C03C43C
 for <containers-users@lists.ocaml.org>; Wed,  7 Mar 2018 07:05:27 +0000 (GMT)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.1-1825959 
 * -0.0 T_RP_MATCHES_RCVD Envelope sender domain matches handover relay
 *      domain
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from orbitalfox.eu ([95.172.232.202]:33646)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtp id 1etTKk-000S3a-88 (Exim 4.90_1) for
 containers-users@lists.ocaml.org
 (return-path <sp@orbitalfox.eu>); Wed, 07 Mar 2018 07:17:54 +0000
Received: from darkstar (unknown [192.168.88.17])
 by orbitalfox.eu (Postfix) with ESMTPSA id EB179AA006F;
 Wed,  7 Mar 2018 07:17:53 +0000 (UTC)
Date: Wed, 7 Mar 2018 07:17:53 +0000
From: SP <sp@orbitalfox.eu>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
Message-ID: <20180307071753.2jjvth55gabw47bx@darkstar>
References: <2be2d373-c3ad-535a-0510-834aa92ae678@sympatico.ca>
 <20180210195351.GE1388@carty>
 <c48eeb40-1529-5e14-57fa-ff4102807040@zoho.com>
 <20180224182152.GA1858@carty>
 <20180225101255.56q7gebfamvrrgz4@darkstar>
 <46bcd6d5-35cf-c84c-a4c1-94774eeb9580@sympatico.ca>
 <20180227001131.GU29073@church> <20180307042025.GB2084@carty>
 <20180307055459.GC2084@carty>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
In-Reply-To: <20180307055459.GC2084@carty>
User-Agent: NeoMutt/20171215
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] Possible additions to Containers and Friends
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 07 Mar 2018 07:05:27 -0000

Speaking-too-soon is a valid and powerful code verification technique; it exploits tempting the bugs to make their move.

-- 
	SP

From simon.cruanes.2007@m4x.org  Fri Nov  2 15:29:55 2018
Return-Path: <simon.cruanes.2007@m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-32.csi.cam.ac.uk (ppsw-32.csi.cam.ac.uk [131.111.8.132])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 825913C1C7
 for <containers-users@lists.ocaml.org>; Fri,  2 Nov 2018 15:29:55 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.2-1845407 
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [185.67.36.142 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mout02.posteo.de ([185.67.36.142]:50811)
 by ppsw-32.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1gIc9Z-000t1x-2v (Exim 4.91) for containers-users@lists.ocaml.org
 (return-path <simon.cruanes.2007@m4x.org>); Fri, 02 Nov 2018 16:18:34 +0000
Received: from submission (posteo.de [89.146.220.130]) 
 by mout02.posteo.de (Postfix) with ESMTPS id 4332D2400E6
 for <containers-users@lists.ocaml.org>; Fri,  2 Nov 2018 17:18:33 +0100 (CET)
Received: from customer (localhost [127.0.0.1])
 by submission (posteo.de) with ESMTPSA id 42mnLc1HmRz9rxM
 for <containers-users@lists.ocaml.org>; Fri,  2 Nov 2018 17:18:32 +0100 (CET)
Date: Fri, 2 Nov 2018 11:19:16 -0500
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20181102161915.GJ3935@church>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="X1nVygsiVWPqOX6k"
Content-Disposition: inline
User-Agent: Mutt/1.10.1 (2018-07-13)
Subject: [containers-users] discord channel
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 02 Nov 2018 15:29:55 -0000


--X1nVygsiVWPqOX6k
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Hi everyone,

Fyi there's now a #containers channel on the OCaml discord
(cf https://discuss.ocaml.org/t/ocaml-discord-server/1884) and  I'll
try to be there to discuss as often as possible. Unless people here
complain I'm considering eventually removing the mailing list as it's
mostly crickets chirping and my occasional ramblings.

Cheers!

--=20
Simon Cruanes

--X1nVygsiVWPqOX6k
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlvceQMACgkQSsAdCEmq
YrZ5dA//dxlHuURjSuSNNBt13LmBDHrpkd7nHeu+RuTmoX0qU+aEXv4HPC8bB8dO
XYqVY6kWDjBGtEAeTaww/ykaAIWzA8cnGmRHDLD8yhB8LQFltCMUx5eX/LV3W10D
sDseHJ2d7W8+liDUF1bKIi25NSIVV/J6u17jLUH+jYu4aXyWrIg1ua3Dn+2HGVNJ
sM9/jyujouReAYafAU6BbYX0pdw0sP5D+GbildLwhpWs0G2fSWpccv98Q5rfGWK/
okcDyM1f6k6mrdglNeXDy4wHc47P0RoAX/4Krkrxh0edTL8MziRrAMWgoG/2d1Hn
mA65JMewB5NWbTl2ejZ19NSJaVaonV+NAgXyOiAACvUa8f7jqKWyGBbUKkN7qvA1
NomPB9YAyjTrMKlQ0HLy2j/o/XkCDxhLpNPVV4IP8PElfPkog6CRp+/iePcFm3rE
ZhQJNXL4dyVfuza3NxCrcmszD1He5ke8Uk7kr91cKOubS+RNfpkcbBnYO8nfNwcv
8RLkIWBYXfI8oOmzMhLOsqjpZMlqw8Xwowg57Pcz54eYG0RHlV3HnmUdeUAZdDB4
wr6cDfcwbuxXVG0XwDTyWylFyyRct3fBiIfjHb1MR5LB3mvEh7L7MbDFiRV53/AM
+e0KElX47BTetBt1ilbJG//UC0a9CRg+w6xrlnFY0r9UNeuKCG4=
=2e8y
-----END PGP SIGNATURE-----

--X1nVygsiVWPqOX6k--

From sp@orbitalfox.eu  Fri Nov  2 19:31:49 2018
Return-Path: <sp@orbitalfox.eu>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id F25063C1C7
 for <containers-users@lists.ocaml.org>; Fri,  2 Nov 2018 19:31:48 +0000 (GMT)
X-Cam-SpamDetails: score -0.0 from SpamAssassin-3.4.2-1845407 
 * -0.0 BAYES_05 BODY: Bayes spam probability is 1 to 5%
 *      [score: 0.0166]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from orbitalfox.eu ([95.172.232.202]:56206)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtp id 1gIfvf-000AQj-iu (Exim 4.91) for
 containers-users@lists.ocaml.org
 (return-path <sp@orbitalfox.eu>); Fri, 02 Nov 2018 20:20:28 +0000
Received: from [192.168.88.7] (unknown [192.168.88.7])
 by orbitalfox.eu (Postfix) with ESMTPSA id 1A913AA002F;
 Fri,  2 Nov 2018 20:20:25 +0000 (GMT)
Date: Fri, 02 Nov 2018 20:20:27 +0000
In-Reply-To: <20181102161915.GJ3935@church>
References: <20181102161915.GJ3935@church>
MIME-Version: 1.0
Content-Type: text/plain;
 charset=utf-8
Content-Transfer-Encoding: quoted-printable
To: Simon Cruanes <simon.cruanes.2007@m4x.org>,
 containers-users@lists.ocaml.org
From: SP <sp@orbitalfox.eu>
Message-ID: <4E7344D1-3113-40C3-866F-BC5C9E4A2CB5@orbitalfox.eu>
Subject: Re: [containers-users] discord channel
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 02 Nov 2018 19:31:49 -0000

Please don't put the list away, crickets need a place too and they don't te=
nd to like fad-y closed systems=2E  :) 

From simon.cruanes.2007@m4x.org  Fri Nov  2 19:59:20 2018
Return-Path: <simon.cruanes.2007@m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-31.csi.cam.ac.uk (ppsw-31.csi.cam.ac.uk [131.111.8.131])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 963B43C1C7
 for <containers-users@lists.ocaml.org>; Fri,  2 Nov 2018 19:59:20 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.2-1845407 
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at http://www.dnswl.org/,
 *      medium trust
 *      [185.67.36.142 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mout02.posteo.de ([185.67.36.142]:56917)
 by ppsw-31.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.147]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1gIgMJ-000obV-ML (Exim 4.91) for containers-users@lists.ocaml.org
 (return-path <simon.cruanes.2007@m4x.org>); Fri, 02 Nov 2018 20:48:00 +0000
Received: from submission (posteo.de [89.146.220.130]) 
 by mout02.posteo.de (Postfix) with ESMTPS id 264172400E5
 for <containers-users@lists.ocaml.org>; Fri,  2 Nov 2018 21:47:58 +0100 (CET)
Received: from customer (localhost [127.0.0.1])
 by submission (posteo.de) with ESMTPSA id 42mvKT4RFQz9rxN;
 Fri,  2 Nov 2018 21:47:56 +0100 (CET)
Date: Fri, 2 Nov 2018 15:48:39 -0500
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: SP <sp@orbitalfox.eu>
Message-ID: <20181102204838.GM3935@church>
References: <20181102161915.GJ3935@church>
 <4E7344D1-3113-40C3-866F-BC5C9E4A2CB5@orbitalfox.eu>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="3dbUQUznexwzCA76"
Content-Disposition: inline
In-Reply-To: <4E7344D1-3113-40C3-866F-BC5C9E4A2CB5@orbitalfox.eu>
User-Agent: Mutt/1.10.1 (2018-07-13)
Cc: containers-users@lists.ocaml.org
Subject: Re: [containers-users] discord channel
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Fri, 02 Nov 2018 19:59:20 -0000


--3dbUQUznexwzCA76
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le Fri, 02 Nov 2018, SP wrote:
> Please don't put the list away, crickets need a place too and they don't =
tend to like fad-y closed systems.  :)

Fair enough :-)  =EF=BF=BC

--=20
Simon Cruanes

--3dbUQUznexwzCA76
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAlvcuCYACgkQSsAdCEmq
YrbNYg/+PuHG72hH/9m1UIgIMd6ZYRUZpR01gtwPoxiu3z8ZfVFNOV0YBdoqA/m+
uAVCBfMfMH1zUhBAJ57AeuxoLYQIYhQ4iWRBvzeQ/S4f+Wzxwth7mQTFnyBgx4RE
D6Y8TsD2erqtsvLXKChu4R158M256h9QHFXbHlO+yy6vApmLV24Re6Aah0UNSyRr
gaGp2EWNXNUceaLFi1Ig90psS5fbnJnMB77LqH7HN445l+ob+EqxpEOoO9Ky6kle
oKrE1PVkdB6mePMgHrV4eQAApilQg3hfo3HRtq6Ingbd5fe/F9hvd63KhGZ/ptut
8GvKXKv3z7gJfIgu9rFOt+gCCNTFxngTq8CFHgBt1hH9n4gtmKpUEoZJxLEXUvz7
zl6A2hHX8HEdsp7dHkqwR6A+ynDWLJoICEHo+O/XSwLlRNsF8g6fA2PD89zG4jQ9
3kLciuQbeVQjKHmQXBJOI146jafkOhpGfZaQj9lz4XPRaWQlZ6ljAMOAiqqFC4pu
YHIfB2aPnkmuVOHCp9GaEkR7fGg1GPf7k+CVPscjwaoSVfFlE9D42b2oSiu5JBZX
7rWgekLu2e9XlaEKPa3t2mZG419iR8M+UUW+hNLS2OOiblNaM4OUjZRXWLjrZTkO
QFfqyiY/726cUlzXJB3F8tRQToefm3CQD9K9XOyRB7LUsUTqTss=
=0+rD
-----END PGP SIGNATURE-----

--3dbUQUznexwzCA76--

From David.Chemouil@onera.fr  Mon Nov  5 07:57:00 2018
Return-Path: <David.Chemouil@onera.fr>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-33.csi.cam.ac.uk (ppsw-33.csi.cam.ac.uk [131.111.8.133])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 4440A3C087
 for <containers-users@lists.ocaml.org>; Mon,  5 Nov 2018 07:57:00 +0000 (GMT)
X-Cam-SpamDetails: score -0.1 from SpamAssassin-3.4.2-1845718 
 * -0.0 RCVD_IN_DNSWL_NONE RBL: Sender listed at http://www.dnswl.org/, no
 *      trust
 *      [134.212.190.4 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from briaree.onecert.fr ([134.212.190.4]:54070)
 by ppsw-33.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1gJaW4-00099H-h7 (Exim 4.91) for containers-users@lists.ocaml.org
 (return-path <David.Chemouil@onera.fr>); Mon, 05 Nov 2018 08:45:49 +0000
Received: from neree.onecert.fr (thetis.onecert.fr [134.212.178.12])
 by briaree.onecert.fr (8.14.4/8.14.4/ONERA-SRI) with ESMTP id wA58jkR2013402
 for <containers-users@lists.ocaml.org>; Mon, 5 Nov 2018 09:45:46 +0100
Received: from neree.onecert.fr (thetis.antiviral [127.0.0.1])
 by neree.onecert.fr (8.14.3/8.14.3/ONERA-SRI) with ESMTP id wA58jjxg025401
 for <containers-users@lists.ocaml.org>; Mon, 5 Nov 2018 09:45:45 +0100
Received: from cottos.onecert.fr (cottos.onecert.fr [134.212.90.4])
 by neree.onecert.fr (8.14.3/8.14.3/ONERA-SRI) with ESMTP id wA58jjfv025398
 for <containers-users@lists.ocaml.org>; Mon, 5 Nov 2018 09:45:45 +0100
Received: from [134.212.25.168] (ct-ldtim307h.onecert.fr [134.212.25.168])
 by cottos.onecert.fr (Postfix) with ESMTP id D20DE2443F3
 for <containers-users@lists.ocaml.org>; Mon,  5 Nov 2018 09:45:45 +0100 (CET)
To: containers-users@lists.ocaml.org
References: <20181102161915.GJ3935@church>
 <4E7344D1-3113-40C3-866F-BC5C9E4A2CB5@orbitalfox.eu>
 <20181102204838.GM3935@church>
From: David CHEMOUIL <David.Chemouil@onera.fr>
Organization: Onera/DTIM, Toulouse
Message-ID: <f1d0a435-763c-3e9b-48a9-fefe76e9e38b@onera.fr>
Date: Mon, 5 Nov 2018 09:45:50 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.2.1
MIME-Version: 1.0
In-Reply-To: <20181102204838.GM3935@church>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Language: fr
Content-Transfer-Encoding: 8bit
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-4.4.3
 (briaree.onecert.fr [134.212.190.4]); Mon, 05 Nov 2018 09:45:46 +0100 (CET)
X-Virus-Scanned: clamav-milter 0.99.4 at briaree
X-Virus-Status: Clean
X-Spam-Status: No, score=-0.5 required=6.0 tests=ALL_TRUSTED, BAYES_00,
 DNS_FROM_AHBL_RHSBL, FH_DATE_PAST_20XX autolearn=no version=3.2.5-onera_sri_4
X-Spam-Checker-Version: SpamAssassin 3.2.5-onera_sri_4 (2008-06-10) on
 briaree.onecert.fr
Subject: Re: [containers-users] discord channel
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Mon, 05 Nov 2018 07:57:00 -0000

Le 02/11/2018 à 21:48, Simon Cruanes a écrit :
> Le Fri, 02 Nov 2018, SP wrote:
>> Please don't put the list away, crickets need a place too and they don't tend to like fad-y closed systems.  :)
> 
> Fair enough :-)  ￼

+1

david


-- 
David Chemouil
ONERA DTIS & Université de Toulouse
tel:+33-5-6225-2936
<http://www.onera.fr/staff/david-chemouil>

From simon.cruanes.2007@m4x.org  Wed Nov 20 15:08:58 2019
Return-Path: <simon.cruanes.2007@m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-32.csi.cam.ac.uk (ppsw-32.csi.cam.ac.uk [131.111.8.132])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 218283C1D2
 for <containers-users@lists.ocaml.org>; Wed, 20 Nov 2019 15:08:58 +0000 (GMT)
X-Cam-SpamDetails: score 0.3 from SpamAssassin-3.4.2-1869961 
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at https://www.dnswl.org/,
 *      medium trust
 *      [185.67.36.141 listed in list.dnswl.dnsbl.ja.net]
 *  2.7 AC_FROM_MANY_DOTS Multiple periods in From user name
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mout01.posteo.de ([185.67.36.141]:57985)
 by ppsw-32.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.146]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1iXSj0-000FnL-2j (Exim 4.92.3) for containers-users@lists.ocaml.org
 (return-path <simon.cruanes.2007@m4x.org>); Wed, 20 Nov 2019 16:21:03 +0000
Received: from submission (posteo.de [89.146.220.130]) 
 by mout01.posteo.de (Postfix) with ESMTPS id D0B0F160061
 for <containers-users@lists.ocaml.org>; Wed, 20 Nov 2019 17:21:01 +0100 (CET)
Received: from customer (localhost [127.0.0.1])
 by submission (posteo.de) with ESMTPSA id 47J7Gg63jYz6tmJ
 for <containers-users@lists.ocaml.org>; Wed, 20 Nov 2019 17:20:59 +0100 (CET)
Date: Wed, 20 Nov 2019 10:20:57 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Message-ID: <20191120162057.GA1256531@church>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="NzB8fVQJ5HfG6fxh"
Content-Disposition: inline
User-Agent: Mutt/1.12.2 (2019-09-21)
Subject: [containers-users] bump to 4.03
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Wed, 20 Nov 2019 15:08:58 -0000


--NzB8fVQJ5HfG6fxh
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Next version of containers might require 4.03,
as discussed here:
https://github.com/c-cube/ocaml-containers/issues/274

Comments are welcome! :)

--=20
Simon Cruanes

--NzB8fVQJ5HfG6fxh
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAl3VZ+kACgkQSsAdCEmq
YrZccA/9FHZYpA969A4W3a65Ao60Xp16vxmnll7Oxb8iW5bpDM3AdCJXjp/7d5OB
96IK7Es2QKpO9yIU1ARX28h/sDZqyA21Yy7uXryxunguL+e8dFzwQEuoO2XCoV5N
4fVGpTb9ILlmd973CoShBaX9XmRWU4stk91q+n3O5iqmNyN7b/54j0wKViIzZC6k
Uk0HqLwbswq9WsreFoRC740e4Ll36NaEyCcFs6ZGI23ed03PxG9cPsGybMSqucfs
9uYTuz2Co2KT3x0/4G5MsJ9devN0RV8DD+DhwD2opQE0QrlW7c2iHORYiNZddAHt
+eRA2MzLFKQC27wCad9TnS02eFGkIMkThm8xIZ/hTL0y5qf9/mWw2gOZ7BUIbQb9
zSdlewq3XyTZp8d7yBgQfi9zrRwGEWiH5uVumS1/VYm2YorUPaGaJCSY+XzG1n3K
K/jOHOmgZasRtr1c3geE2p0YiwW/bpMU7yuWmr55lncDOnA8vUcMAKYlF6og8zYT
x+zJidYaP5C7H+4b1nX66pA9llvOKNa508esIfzcX2cMBuMrGaxSzjRnhi2sfwsw
TezMVJc1eGylzVhqv2OB4pF6XkyvtkHPyjpMiJvs+W6A0Wxd6eJcB6Fo5yw/sOlL
T5WKKjVaXOrq24GdrA2r9cHEkABUjQKoJ42OgOqI2qNn4CdFxKg=
=IMvV
-----END PGP SIGNATURE-----

--NzB8fVQJ5HfG6fxh--

From simon.cruanes.2007@m4x.org  Sat Nov 23 17:08:38 2019
Return-Path: <simon.cruanes.2007@m4x.org>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-43.csi.cam.ac.uk (ppsw-43.csi.cam.ac.uk [131.111.8.143])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 6DD6E3C1B8
 for <containers-users@lists.ocaml.org>; Sat, 23 Nov 2019 17:08:38 +0000 (GMT)
X-Cam-SpamDetails: score -2.4 from SpamAssassin-3.4.2-1870145 
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 * -2.3 RCVD_IN_DNSWL_MED RBL: Sender listed at https://www.dnswl.org/,
 *      medium trust
 *      [185.67.36.141 listed in list.dnswl.dnsbl.ja.net]
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from mout01.posteo.de ([185.67.36.141]:38978)
 by ppsw-43.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.149]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1iYa1f-001Qps-mq (Exim 4.92.3) for containers-users@lists.ocaml.org
 (return-path <simon.cruanes.2007@m4x.org>); Sat, 23 Nov 2019 18:20:55 +0000
Received: from submission (posteo.de [89.146.220.130]) 
 by mout01.posteo.de (Postfix) with ESMTPS id 26EE816005C
 for <containers-users@lists.ocaml.org>; Sat, 23 Nov 2019 19:20:53 +0100 (CET)
Received: from customer (localhost [127.0.0.1])
 by submission (posteo.de) with ESMTPSA id 47L1nc1wwyz6tm8
 for <containers-users@lists.ocaml.org>; Sat, 23 Nov 2019 19:20:51 +0100 (CET)
Date: Sat, 23 Nov 2019 12:20:31 -0600
From: Simon Cruanes <simon.cruanes.2007@m4x.org>
To: containers-users@lists.ocaml.org
Subject: Re: bump to 4.03
Message-ID: <20191123182031.GA219734@carty>
References: <20191120162057.GA1256531@church>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature"; boundary="9amGYk9869ThD9tj"
Content-Disposition: inline
In-Reply-To: <20191120162057.GA1256531@church>
User-Agent: Mutt/1.12.2 (2019-09-21)
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sat, 23 Nov 2019 17:08:38 -0000


--9amGYk9869ThD9tj
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

I was told that bucklescript is still on OCaml 4.02, but it seems they
also maintain 4.06. Anyone knows more about that subject?

--=20
Simon Cruanes

--9amGYk9869ThD9tj
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQIzBAEBCAAdFiEElJ/rh48GWcbX032NSsAdCEmqYrYFAl3ZeGwACgkQSsAdCEmq
YrYZug//aHCN4znxzN57rooNi7QOK3x386ukrE+2izPZRiisorgZ3fTI7+1PIHsW
p2d327eHxJyJmqifc9asQWHfuTjdFvKNd6bscoL5smBO9+DyPGEKSEOLlc81bR1Q
ZNfv1uVhlqnOpqgEZig+w1nkJ0NU9P7e3S4sG1y/+gk6/M+ijeAdkZmxfQv+g2W/
hq0SSyC4XvWuKiPLJVskPNWnqTV4wJtaS2eNI3g7nWuc7U5mYcC3hH4J11msIGdq
v6I0qJ4+DPNAxEuEr2KuaVuhS5KFfjCWf4xXpJg3B5zd3IAwa2ul2Zf8LAnCbZjL
Jhjs/GGF5WEUL9Q7Hi/NIhi1Varv7d1ap1QNl5sHJw63G1ZpWdcMxaU+X6LdN2RJ
+9nuZmFQ1WOdevFGiQFM06TxHGKGvFrXIk3IBX6q6MRx8oLW/N+yxywpyzWiXfjD
xjXWai5x1qm4VT7Tb8cgjEqNn0K+iMFOxKrfbPZdYD/CZ1ffIEGOSuFdtrl8nyXt
JXN7QZ9iZCeBJA00+T6nu9D1m/X5Blq2jZBLfd750GcfZ4INgGRuWQxOSmHUCs8D
mNLY/6luiDmGiW+Qst1p0BALKFOWtYzSPcKn8E3edMUKqmayHE1KcDoFd2B3i3A7
SisnaFxS6x92zyjPNM03m8bQT3cvn6to3ROQPkUIjTdWYKmWWuk=
=lJ8V
-----END PGP SIGNATURE-----

--9amGYk9869ThD9tj--

From louis@louisroche.net  Sun Nov 24 23:49:15 2019
Return-Path: <louis@louisroche.net>
X-Original-To: containers-users@lists.ocaml.org
Delivered-To: containers-users@lists.ocaml.org
Received: from ppsw-42.csi.cam.ac.uk (ppsw-42.csi.cam.ac.uk [131.111.8.142])
 by ocaml-mx.ocamllabs.cl.cam.ac.uk (Postfix) with ESMTPS id 2D31B3C267
 for <containers-users@lists.ocaml.org>; Sun, 24 Nov 2019 23:49:15 +0000 (GMT)
X-Cam-SpamScore: ss
X-Cam-SpamDetails: score 2.5 from SpamAssassin-3.4.2-1870215 
 *  0.1 RCVD_IN_SBL RBL: Received via a relay in Spamhaus SBL
 *      [203.116.164.13 listed in zen.dnsbl.ja.net]
 *  3.3 RCVD_IN_SBL_CSS RBL: Received via a relay in Spamhaus SBL-CSS
 * -0.7 RCVD_IN_DNSWL_LOW RBL: Sender listed at https://www.dnswl.org/, low
 *       trust
 *      [64.147.123.19 listed in list.dnswl.dnsbl.ja.net]
 * -0.1 BAYES_00 BODY: Bayes spam probability is 0 to 1%
 *      [score: 0.0000]
 * -0.1 DKIM_VALID_EF Message has a valid DKIM or DK signature from
 *      envelope-from domain
 * -0.1 DKIM_VALID_AU Message has a valid DKIM or DK signature from
 *      author's domain
 *  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
 *      valid
 * -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
X-Cam-ScannerInfo: http://help.uis.cam.ac.uk/email-scanner-virus
Received: from wout3-smtp.messagingengine.com ([64.147.123.19]:41227)
 by ppsw-42.csi.cam.ac.uk (mx.cam.ac.uk [131.111.8.148]:25)
 with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
 id 1iZ2ky-0010nR-7N (Exim 4.92.3) for containers-users@lists.ocaml.org
 (return-path <louis@louisroche.net>); Mon, 25 Nov 2019 01:01:37 +0000
Received: from compute7.internal (compute7.nyi.internal [10.202.2.47])
 by mailout.west.internal (Postfix) with ESMTP id 39AFB5F6;
 Sun, 24 Nov 2019 20:01:32 -0500 (EST)
Received: from mailfrontend2 ([10.202.2.163])
 by compute7.internal (MEProxy); Sun, 24 Nov 2019 20:01:32 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=louisroche.net;
 h=content-type:mime-version:subject:from:in-reply-to:date:cc
 :content-transfer-encoding:message-id:references:to; s=fm2; bh=H
 To+A5nefsIaH39K9CIPRrPzVpHOOcgJEqZi/mT8TVc=; b=l3eh+99W9v2Nf6HSQ
 H2fvs6Jn7uDo8S6CShUNxj8dVghiEAo5IkCa5CYb96Koc0AyTLcxmDhLhDwDd6Az
 WeVz+vf8d11Fjd85smIr8lkquqe96sn4SBx9Z6bU/MQES9yn82inM17DmDE9EVXc
 Oh4X1zwwoW2LbZ9DuqfkYJ4rsptrXaUScFhhzoWOM8JvzFffFxTmNlMfJqz8pZaq
 DpMi1iYvEAicta0JlXlzzauX5H0ZG8j3IewHbUwQiXnDCAab/JphsC62y7PK9M4y
 /arVD0VouRcLmqThqd/N/HHu9Yp/gQRK7i+2xTvrYyx1gfvsmr6r8yXeF30yT/28
 Brs5Q==
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=
 messagingengine.com; h=cc:content-transfer-encoding:content-type
 :date:from:in-reply-to:message-id:mime-version:references
 :subject:to:x-me-proxy:x-me-proxy:x-me-sender:x-me-sender
 :x-sasl-enc; s=fm1; bh=HTo+A5nefsIaH39K9CIPRrPzVpHOOcgJEqZi/mT8T
 Vc=; b=b2yplFfG/3dmby/T6RQdwplyP7t0KJc0eSHJu75TMY3k1wol+Idl2iUH4
 A8dP9ezT9JR48VzxZz+GkkRgzxncResokZUeWFtWqxbJ+eH8YDCanPHGk1eafibh
 NcZQlkKxJLD+TIoScrBnEtez2qXFDENM9z/UrROTKwe8yz3OQoXHx9+Ef3P/577M
 ZgTebJemlp/9thXP+B6seqZpT/wHn36OVz3eDjwDidBj9j/bAijEo8dS59nrOSNI
 h7azi9OsdWWnW+/jH5DMEF7bdH0KuKPJOm7pg4J8+LwyVz8C4IohhKf123p/q80D
 ikYvLw5LA/3cWDdVC6VgXpAHMiCjQ==
X-ME-Sender: <xms:6yfbXYNTX7Ht0B0c_lMvkrptXvLDG7dyUez13b2HsFjbHj94qXc9lw>
X-ME-Proxy-Cause: gggruggvucftvghtrhhoucdtuddrgedufedrudehledgvdekucetufdoteggodetrfdotf
 fvucfrrhhofhhilhgvmecuhfgrshhtofgrihhlpdfqfgfvpdfurfetoffkrfgpnffqhgen
 uceurghilhhouhhtmecufedttdenucesvcftvggtihhpihgvnhhtshculddquddttddmne
 cujfgurheptggguffhofgjfffgkfhfvfesthhqmhdthhdtjeenucfhrhhomhepnfhouhhi
 shgptfhotghhrocuoehlohhuihhssehlohhuihhsrhhotghhvgdrnhgvtheqnecukfhppe
 dvtdefrdduudeirdduieegrddufeenucfrrghrrghmpehmrghilhhfrhhomheplhhouhhi
 sheslhhouhhishhrohgthhgvrdhnvghtnecuvehluhhsthgvrhfuihiivgeptd
X-ME-Proxy: <xmx:6yfbXU_g9ZlsmkEeSxFoiE4imKvesxSXkbItTyBWOzRo7OHSMuy9eg>
 <xmx:6yfbXc5xVPQcGK6gMNuTEkytwJPaW7u3jA8htS8sRuj9-nPhUlGVbQ>
 <xmx:6yfbXb3R9ZvLCNGmFEKDBdIBAifKTBcquVg_lvVJOuL5PLdcfnNVMw>
 <xmx:6yfbXeIalN7dRmZrZoVUKQ7DVd2PWtqk5lDagXxpiK-Imf0R4IiMTQ>
Received: from [10.131.19.31] (amx-tls3.starhub.net.sg [203.116.164.13])
 by mail.messagingengine.com (Postfix) with ESMTPA id 037AD306005E;
 Sun, 24 Nov 2019 20:01:31 -0500 (EST)
Content-Type: text/plain;
	charset=utf-8
Mime-Version: 1.0 (1.0)
Subject: Re: bump to 4.03
From: =?utf-8?Q?Louis_Roch=C3=A9?= <louis@louisroche.net>
X-Mailer: iPhone Mail (16G102)
In-Reply-To: <20191123182031.GA219734@carty>
Date: Mon, 25 Nov 2019 09:01:27 +0800
Content-Transfer-Encoding: quoted-printable
Message-Id: <041014B4-126D-4FB1-AB71-41015E8B43DD@louisroche.net>
References: <20191120162057.GA1256531@church> <20191123182031.GA219734@carty>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
Cc: containers-users@lists.ocaml.org
X-BeenThere: containers-users@lists.ocaml.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Users of the Containers library <containers-users.lists.ocaml.org>
List-Unsubscribe: <http://lists.ocaml.org/options/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=unsubscribe>
List-Archive: <http://lists.ocaml.org/pipermail/containers-users/>
List-Post: <mailto:containers-users@lists.ocaml.org>
List-Help: <mailto:containers-users-request@lists.ocaml.org?subject=help>
List-Subscribe: <http://lists.ocaml.org/listinfo/containers-users>,
 <mailto:containers-users-request@lists.ocaml.org?subject=subscribe>
X-List-Received-Date: Sun, 24 Nov 2019 23:49:15 -0000

They released the support of 4.06 recently. The community didn=E2=80=99t shi=
fted yet. But they also plan to deprecate 4.02.3 pretty soon.=


