From monnier.florent at gmail.com  Wed Mar  6 23:39:04 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Thu, 7 Mar 2013 00:39:04 +0100
Subject: [opam-devel] feedback about the install under Cygwin
Message-ID: <CAE1DttBWUu9eX3Y5PLMD_WC_1A3PS+jjs4zDtjGtu=ODk68R1A@mail.gmail.com>

Hello,

This is not a request for help, only some feedback (and probably not a
very usefull one).

I've tryed to install opam under cygwin (maybe about one month ago)
but didn't succeed.

I do remember that I tryed both the install.sh, and compile the sources of Opam.
I do not remember if it was with cygwin's ocaml, or protz's installer,
or with both.
I do not remember what was the error messages.

Anyway I would like to express some encouragements !

-- 
Thanks

From amc79 at cam.ac.uk  Thu Mar  7 11:33:56 2013
From: amc79 at cam.ac.uk (Amir Chaudhry)
Date: Thu, 7 Mar 2013 11:33:56 +0000
Subject: [opam-devel] [Caml-list] OPAM mailing-lists ERRATUM
In-Reply-To: <20130307072202.GB26518@voyager>
References: <5137AB10.1020206@inria.fr> <5137C870.1010009@inria.fr>
 <5137CEFC.5090402@inria.fr> <20130307072202.GB26518@voyager>
Message-ID: <BA4F9A50-4EBF-4ED0-A361-2C1BBDB6B758@cam.ac.uk>


On 7 Mar 2013, at 07:22, Roberto Di Cosmo <roberto at dicosmo.org> wrote:

> I think that opam fills a major need of OCaml users:
> even if it is still young, needs polishing and will
> surely evolve quickly, it already provides a very
> valuable tool.
> 
> But tools are useless without a user community, and
> users need a place to discuss, exchange ideas, ask
> for help, share tips and tricks, without fear of
> asking silly questions.

I agree!

> Hundreds of successful free software projects use a
> -devel mailing list for developer discussions, and a
> -users mailing list for user exchanges.

Ok, but is this a _necessary_ requirement to being successful? That's not quite what you state but you seem to support that suggestion.  I completely understand the usefulness of a -devel list but less so the -users list (since I'm not power user by any means).

> So I strongly believe we need an opam-users list
> too (and I actually do not care where the list is
> hosted, as far as the hosting service is solid, and
> archives are searchable and backed up).

I'm not against the idea of a -users list but I'm not one of the people who'd use it (though perhaps I'm misunderstanding the use-case).  When I have any kind of question or confusion about something, my first resort is to google it.  I'd typically look to see if others have had similar issues and would expect to find things on stack-overflow, blogs and other things on the web.  This is usually sufficient for most of my problems.  

The following might help explain my viewpoint. I think of a 'software community' as a series of concentric circles with creators/maintainers right in the middle and the random public in the outermost ring.  I'd argue that mailing lists only serve those nearer the centre (to varying degrees).  Information scattered around the web, and well-indexed by search engines, better serves those nearer the outer rings (where I'd put myself).  

While I completely and whole-heartedly agree with your point about needing a vibrant user community, I'm essentially (1) questioning what that actually looks like and (2) trying to decouple it from mailing-lists.  I'm basically arguing that the needs once served by user lists can largely be met by other means.

I don't have particularly strong opinions on this (other than "<your-favourite-search-engine> should be able to get you to the answer", wherever that is).  I merely wanted to present a counterpoint to what I felt could be taken as 'mailing list -> community'.  If you, or others, have more information or resources on community-building in open-source projects I'd be very keen to learn more (though perhaps we should do that off the main list).

Best wishes,
Amir

> 
> --
> Roberto
> 
> On Thu, Mar 07, 2013 at 12:19:24AM +0100, Fabrice Le Fessant wrote:
>> Finally, there will be only one mailing-list devoted to OPAM (for
>> both users and developers discussions), it is now
>> opam-devel at lists.ocaml.org, and you can subscribe on this page:
>> 
>> http://lists.ocaml.org/listinfo/opam-devel
>> 
>> --Fabrice
>> 
>> On 03/06/2013 11:51 PM, Fabrice Le Fessant wrote:
>>> Hi,
>>> 
>>>  I was proposed to either move these two mailing-lists to
>>> http://lists.ocaml.org/, to improve their visibility, or to have them
>>> merged into the more generic platform at lists.ocaml.org mailing-list.
>>> 
>>>  I will send a new mail when we have reached a consensus on the best
>>> solution, but in the meantime, don't subscribe to them as I won't be
>>> able to easily move subscriptions from one system to the other one.
>>> 
>>> --Fabrice
>>> 
>>> On 03/06/2013 09:46 PM, Fabrice Le Fessant wrote:
>>>> Hi,
>>>> 
>>>>  I just created two mailing-lists for questions and specific
>>>> discussions about OPAM, "opam-users at inria.fr" for discussions about how
>>>> to use OPAM, and "opam-devel at inria.fr" for discussions about the code of
>>>> OPAM (for developers only, or interactions with them).
>>>> 
>>>> --Fabrice
>>>> 
>>>> 
>>> 
>> 
>> -- 
>> Caml-list mailing list.  Subscription management and archives:
>> https://sympa.inria.fr/sympa/arc/caml-list
>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>> Bug reports: http://caml.inria.fr/bin/caml-bugs
> 
> 
> 
> -- 
> Roberto Di Cosmo
> 
> ------------------------------------------------------------------
> Professeur               En delegation a l'INRIA
> PPS                      E-mail: roberto at dicosmo.org
> Universite Paris Diderot WWW  : http://www.dicosmo.org
> Case 7014                Tel  : ++33-(0)1-57 27 92 20
> 5, Rue Thomas Mann       
> F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
> FRANCE.                  Twitter: http://twitter.com/rdicosmo
> ------------------------------------------------------------------
> Attachments:
> MIME accepted, Word deprecated
>      http://www.gnu.org/philosophy/no-word-attachments.html
> ------------------------------------------------------------------
> Office location:
> 
> Bureau 320 (3rd floor)
> Batiment Sophie Germain
> Avenue de France
> Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
> -----------------------------------------------------------------
> GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        
> 
> -- 
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs


From roberto at dicosmo.org  Thu Mar  7 11:48:54 2013
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Thu, 7 Mar 2013 12:48:54 +0100
Subject: [opam-devel] [Caml-list] OPAM mailing-lists ERRATUM
In-Reply-To: <BA4F9A50-4EBF-4ED0-A361-2C1BBDB6B758@cam.ac.uk>
References: <5137AB10.1020206@inria.fr> <5137C870.1010009@inria.fr>
 <5137CEFC.5090402@inria.fr> <20130307072202.GB26518@voyager>
 <BA4F9A50-4EBF-4ED0-A361-2C1BBDB6B758@cam.ac.uk>
Message-ID: <20130307114854.GB7281@voyager>

Hi Amir,
   just to sum up my feeling, let me say that a mailing
list, albeit old-fashioned, is still a good compromise
between cost and benefits, and has the great advantage
to keep all relevant content in one place, and not
depend on pagerank magic and google cache to summon it up
and make it persistent...

But I agree we should bring this off the list (and by the way,
my apologies for the OCaml list subscribers for wasting
bandwidth :-))... 

--
Roberto


On Thu, Mar 07, 2013 at 11:33:56AM +0000, Amir Chaudhry wrote:
> 
> On 7 Mar 2013, at 07:22, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
> 
> > I think that opam fills a major need of OCaml users:
> > even if it is still young, needs polishing and will
> > surely evolve quickly, it already provides a very
> > valuable tool.
> > 
> > But tools are useless without a user community, and
> > users need a place to discuss, exchange ideas, ask
> > for help, share tips and tricks, without fear of
> > asking silly questions.
> 
> I agree!
> 
> > Hundreds of successful free software projects use a
> > -devel mailing list for developer discussions, and a
> > -users mailing list for user exchanges.
> 
> Ok, but is this a _necessary_ requirement to being successful? That's not quite what you state but you seem to support that suggestion.  I completely understand the usefulness of a -devel list but less so the -users list (since I'm not power user by any means).
> 
> > So I strongly believe we need an opam-users list
> > too (and I actually do not care where the list is
> > hosted, as far as the hosting service is solid, and
> > archives are searchable and backed up).
> 
> I'm not against the idea of a -users list but I'm not one of the people who'd use it (though perhaps I'm misunderstanding the use-case).  When I have any kind of question or confusion about something, my first resort is to google it.  I'd typically look to see if others have had similar issues and would expect to find things on stack-overflow, blogs and other things on the web.  This is usually sufficient for most of my problems.  
> 
> The following might help explain my viewpoint. I think of a 'software community' as a series of concentric circles with creators/maintainers right in the middle and the random public in the outermost ring.  I'd argue that mailing lists only serve those nearer the centre (to varying degrees).  Information scattered around the web, and well-indexed by search engines, better serves those nearer the outer rings (where I'd put myself).  
> 
> While I completely and whole-heartedly agree with your point about needing a vibrant user community, I'm essentially (1) questioning what that actually looks like and (2) trying to decouple it from mailing-lists.  I'm basically arguing that the needs once served by user lists can largely be met by other means.
> 
> I don't have particularly strong opinions on this (other than "<your-favourite-search-engine> should be able to get you to the answer", wherever that is).  I merely wanted to present a counterpoint to what I felt could be taken as 'mailing list -> community'.  If you, or others, have more information or resources on community-building in open-source projects I'd be very keen to learn more (though perhaps we should do that off the main list).
> 
> Best wishes,
> Amir
> 
> > 
> > --
> > Roberto
> > 
> > On Thu, Mar 07, 2013 at 12:19:24AM +0100, Fabrice Le Fessant wrote:
> >> Finally, there will be only one mailing-list devoted to OPAM (for
> >> both users and developers discussions), it is now
> >> opam-devel at lists.ocaml.org, and you can subscribe on this page:
> >> 
> >> http://lists.ocaml.org/listinfo/opam-devel
> >> 
> >> --Fabrice
> >> 
> >> On 03/06/2013 11:51 PM, Fabrice Le Fessant wrote:
> >>> Hi,
> >>> 
> >>>  I was proposed to either move these two mailing-lists to
> >>> http://lists.ocaml.org/, to improve their visibility, or to have them
> >>> merged into the more generic platform at lists.ocaml.org mailing-list.
> >>> 
> >>>  I will send a new mail when we have reached a consensus on the best
> >>> solution, but in the meantime, don't subscribe to them as I won't be
> >>> able to easily move subscriptions from one system to the other one.
> >>> 
> >>> --Fabrice
> >>> 
> >>> On 03/06/2013 09:46 PM, Fabrice Le Fessant wrote:
> >>>> Hi,
> >>>> 
> >>>>  I just created two mailing-lists for questions and specific
> >>>> discussions about OPAM, "opam-users at inria.fr" for discussions about how
> >>>> to use OPAM, and "opam-devel at inria.fr" for discussions about the code of
> >>>> OPAM (for developers only, or interactions with them).
> >>>> 
> >>>> --Fabrice
> >>>> 
> >>>> 
> >>> 
> >> 
> >> -- 
> >> Caml-list mailing list.  Subscription management and archives:
> >> https://sympa.inria.fr/sympa/arc/caml-list
> >> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> >> Bug reports: http://caml.inria.fr/bin/caml-bugs
> > 
> > 
> > 
> > -- 
> > Roberto Di Cosmo
> > 
> > ------------------------------------------------------------------
> > Professeur               En delegation a l'INRIA
> > PPS                      E-mail: roberto at dicosmo.org
> > Universite Paris Diderot WWW  : http://www.dicosmo.org
> > Case 7014                Tel  : ++33-(0)1-57 27 92 20
> > 5, Rue Thomas Mann       
> > F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
> > FRANCE.                  Twitter: http://twitter.com/rdicosmo
> > ------------------------------------------------------------------
> > Attachments:
> > MIME accepted, Word deprecated
> >      http://www.gnu.org/philosophy/no-word-attachments.html
> > ------------------------------------------------------------------
> > Office location:
> > 
> > Bureau 320 (3rd floor)
> > Batiment Sophie Germain
> > Avenue de France
> > Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
> > -----------------------------------------------------------------
> > GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        
> > 
> > -- 
> > Caml-list mailing list.  Subscription management and archives:
> > https://sympa.inria.fr/sympa/arc/caml-list
> > Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> > Bug reports: http://caml.inria.fr/bin/caml-bugs
> 

-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 320 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        

From agarwal1975 at gmail.com  Thu Mar  7 22:08:27 2013
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Thu, 7 Mar 2013 17:08:27 -0500
Subject: [opam-devel] [Caml-list] OPAM mailing-lists ERRATUM
In-Reply-To: <20130307114854.GB7281@voyager>
References: <5137AB10.1020206@inria.fr> <5137C870.1010009@inria.fr>
 <5137CEFC.5090402@inria.fr> <20130307072202.GB26518@voyager>
 <BA4F9A50-4EBF-4ED0-A361-2C1BBDB6B758@cam.ac.uk>
 <20130307114854.GB7281@voyager>
Message-ID: <CAMu2m2J9_f9izMGwEaY1Vjh2vbrvsBMfSHzj-=wG0acjBj8w5g@mail.gmail.com>

Maybe it's just the name "opam-devel" that is sub-optimal. If it is for
users and developers, why not just call it "opam at lists.ocaml.org". If the
"devel" traffic ever gets too high, then later "opam-devel at lists.ocaml.org"
can be created, leaving the shorter "opam at lists.ocaml.org" for users.

On Thu, Mar 7, 2013 at 6:48 AM, Roberto Di Cosmo <roberto at dicosmo.org>wrote:

> Hi Amir,
>    just to sum up my feeling, let me say that a mailing
> list, albeit old-fashioned, is still a good compromise
> between cost and benefits, and has the great advantage
> to keep all relevant content in one place, and not
> depend on pagerank magic and google cache to summon it up
> and make it persistent...
>
> But I agree we should bring this off the list (and by the way,
> my apologies for the OCaml list subscribers for wasting
> bandwidth :-))...
>
> --
> Roberto
>
>
> On Thu, Mar 07, 2013 at 11:33:56AM +0000, Amir Chaudhry wrote:
> >
> > On 7 Mar 2013, at 07:22, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
> >
> > > I think that opam fills a major need of OCaml users:
> > > even if it is still young, needs polishing and will
> > > surely evolve quickly, it already provides a very
> > > valuable tool.
> > >
> > > But tools are useless without a user community, and
> > > users need a place to discuss, exchange ideas, ask
> > > for help, share tips and tricks, without fear of
> > > asking silly questions.
> >
> > I agree!
> >
> > > Hundreds of successful free software projects use a
> > > -devel mailing list for developer discussions, and a
> > > -users mailing list for user exchanges.
> >
> > Ok, but is this a _necessary_ requirement to being successful? That's
> not quite what you state but you seem to support that suggestion.  I
> completely understand the usefulness of a -devel list but less so the
> -users list (since I'm not power user by any means).
> >
> > > So I strongly believe we need an opam-users list
> > > too (and I actually do not care where the list is
> > > hosted, as far as the hosting service is solid, and
> > > archives are searchable and backed up).
> >
> > I'm not against the idea of a -users list but I'm not one of the people
> who'd use it (though perhaps I'm misunderstanding the use-case).  When I
> have any kind of question or confusion about something, my first resort is
> to google it.  I'd typically look to see if others have had similar issues
> and would expect to find things on stack-overflow, blogs and other things
> on the web.  This is usually sufficient for most of my problems.
> >
> > The following might help explain my viewpoint. I think of a 'software
> community' as a series of concentric circles with creators/maintainers
> right in the middle and the random public in the outermost ring.  I'd argue
> that mailing lists only serve those nearer the centre (to varying degrees).
>  Information scattered around the web, and well-indexed by search engines,
> better serves those nearer the outer rings (where I'd put myself).
> >
> > While I completely and whole-heartedly agree with your point about
> needing a vibrant user community, I'm essentially (1) questioning what that
> actually looks like and (2) trying to decouple it from mailing-lists.  I'm
> basically arguing that the needs once served by user lists can largely be
> met by other means.
> >
> > I don't have particularly strong opinions on this (other than
> "<your-favourite-search-engine> should be able to get you to the answer",
> wherever that is).  I merely wanted to present a counterpoint to what I
> felt could be taken as 'mailing list -> community'.  If you, or others,
> have more information or resources on community-building in open-source
> projects I'd be very keen to learn more (though perhaps we should do that
> off the main list).
> >
> > Best wishes,
> > Amir
> >
> > >
> > > --
> > > Roberto
> > >
> > > On Thu, Mar 07, 2013 at 12:19:24AM +0100, Fabrice Le Fessant wrote:
> > >> Finally, there will be only one mailing-list devoted to OPAM (for
> > >> both users and developers discussions), it is now
> > >> opam-devel at lists.ocaml.org, and you can subscribe on this page:
> > >>
> > >> http://lists.ocaml.org/listinfo/opam-devel
> > >>
> > >> --Fabrice
> > >>
> > >> On 03/06/2013 11:51 PM, Fabrice Le Fessant wrote:
> > >>> Hi,
> > >>>
> > >>>  I was proposed to either move these two mailing-lists to
> > >>> http://lists.ocaml.org/, to improve their visibility, or to have
> them
> > >>> merged into the more generic platform at lists.ocaml.org mailing-list.
> > >>>
> > >>>  I will send a new mail when we have reached a consensus on the best
> > >>> solution, but in the meantime, don't subscribe to them as I won't be
> > >>> able to easily move subscriptions from one system to the other one.
> > >>>
> > >>> --Fabrice
> > >>>
> > >>> On 03/06/2013 09:46 PM, Fabrice Le Fessant wrote:
> > >>>> Hi,
> > >>>>
> > >>>>  I just created two mailing-lists for questions and specific
> > >>>> discussions about OPAM, "opam-users at inria.fr" for discussions
> about how
> > >>>> to use OPAM, and "opam-devel at inria.fr" for discussions about the
> code of
> > >>>> OPAM (for developers only, or interactions with them).
> > >>>>
> > >>>> --Fabrice
> > >>>>
> > >>>>
> > >>>
> > >>
> > >> --
> > >> Caml-list mailing list.  Subscription management and archives:
> > >> https://sympa.inria.fr/sympa/arc/caml-list
> > >> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> > >> Bug reports: http://caml.inria.fr/bin/caml-bugs
> > >
> > >
> > >
> > > --
> > > Roberto Di Cosmo
> > >
> > > ------------------------------------------------------------------
> > > Professeur               En delegation a l'INRIA
> > > PPS                      E-mail: roberto at dicosmo.org
> > > Universite Paris Diderot WWW  : http://www.dicosmo.org
> > > Case 7014                Tel  : ++33-(0)1-57 27 92 20
> > > 5, Rue Thomas Mann
> > > F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
> > > FRANCE.                  Twitter: http://twitter.com/rdicosmo
> > > ------------------------------------------------------------------
> > > Attachments:
> > > MIME accepted, Word deprecated
> > >      http://www.gnu.org/philosophy/no-word-attachments.html
> > > ------------------------------------------------------------------
> > > Office location:
> > >
> > > Bureau 320 (3rd floor)
> > > Batiment Sophie Germain
> > > Avenue de France
> > > Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
> > > -----------------------------------------------------------------
> > > GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3
> > >
> > > --
> > > Caml-list mailing list.  Subscription management and archives:
> > > https://sympa.inria.fr/sympa/arc/caml-list
> > > Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> > > Bug reports: http://caml.inria.fr/bin/caml-bugs
> >
>
> --
> Roberto Di Cosmo
>
> ------------------------------------------------------------------
> Professeur               En delegation a l'INRIA
> PPS                      E-mail: roberto at dicosmo.org
> Universite Paris Diderot WWW  : http://www.dicosmo.org
> Case 7014                Tel  : ++33-(0)1-57 27 92 20
> 5, Rue Thomas Mann
> F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
> FRANCE.                  Twitter: http://twitter.com/rdicosmo
> ------------------------------------------------------------------
> Attachments:
> MIME accepted, Word deprecated
>       http://www.gnu.org/philosophy/no-word-attachments.html
> ------------------------------------------------------------------
> Office location:
>
> Bureau 320 (3rd floor)
> Batiment Sophie Germain
> Avenue de France
> Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
> -----------------------------------------------------------------
> GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130307/90a51fed/attachment-0001.html>

From thomas at ocamlpro.com  Fri Mar  8 16:30:29 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Fri, 8 Mar 2013 17:30:29 +0100
Subject: [opam-devel] OPAM 0.9.5 released
Message-ID: <5A92BC9D-0A67-49BA-9CB8-CD8E76F210D1@ocamlpro.com>

Hi,

I'm pleased to announce the release 0.9.5 of OPAM.  All the features that I though are important for the first releases are in, so you can consider 0.9.5 to be something like 1.0-rc1.

For this release, I'm particularly keen on getting people feebdack on the new auto-setup thing: OPAM now asks the user if he wants his local configuration upgraded to fully use OPAM (including installation auto-completion scripts). Use `opam init --no-setup` if you want to continue using OPAM as before.

One notable change which will please packagers of OPAM for OS distributions: I've added a `make with-ocamlbuild` and `make install-with-ocamlbuild` targets to not depend on the unreleased (and thus unpackaged) ocp-build. Otherwise, when using the development version of OPAM, it is still recommended to use ocp-build (as it is much faster). 

The changelog:
* If necessary, apply patches and substitute files before removing a package
* Fix `opam remove <pkg> --keep-build-dir` keeps the folder if a source archive is extracted
* Add build and install rules using ocamlbuild to help distro packagers
* Support arbitrary level of nested subdirectories in packages repositories
* Add `opam config exec "CMD ARG1 ... ARGn" --switch=SWITCH` to execute a command in a subshell
* Improve the behaviour of `opam update` wrt. pinned packages
* Change the default external solver criteria (only useful if you have aspcud installed on your machine)
* Add support for global and user configuration for OPAM (`opam config setup`)
* Stop yelling when OPAM is not up-to-date
* Update or generate `~/.ocamlinit` when running `opam init`
* Fix tests on *BSD (thx Arnaud Degroote)
* Fix compilation for the source archive

The files:
[OPAM] https://github.com/OCamlPro/opam/archive/latest.tar.gz
[OPAM+depends] http://www.ocamlpro.com/pub/opam-latest-full.tar.gz

Best,
Thomas


From roberto at dicosmo.org  Fri Mar  8 19:30:00 2013
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Fri, 8 Mar 2013 20:30:00 +0100
Subject: [opam-devel] OPAM 0.9.5 released
In-Reply-To: <5A92BC9D-0A67-49BA-9CB8-CD8E76F210D1@ocamlpro.com>
References: <5A92BC9D-0A67-49BA-9CB8-CD8E76F210D1@ocamlpro.com>
Message-ID: <20130308193000.GC11970@voyager>

Thanks Thomas for all this work! I'll be upgrading in the
classroom and see what the feedback is over the next weeks.

Speaking about auto-setup, a sizable part of the students
are still working on csh/tcsh, while opam is more bash oriented.
Is there any autodetection magic to adapt the configuration
to the kind of shell used?

--
Roberto

On Fri, Mar 08, 2013 at 05:30:29PM +0100, Thomas Gazagnaire wrote:
> Hi,
> 
> I'm pleased to announce the release 0.9.5 of OPAM.  All the features that I though are important for the first releases are in, so you can consider 0.9.5 to be something like 1.0-rc1.
> 
> For this release, I'm particularly keen on getting people feebdack on the new auto-setup thing: OPAM now asks the user if he wants his local configuration upgraded to fully use OPAM (including installation auto-completion scripts). Use `opam init --no-setup` if you want to continue using OPAM as before.
> 
> One notable change which will please packagers of OPAM for OS distributions: I've added a `make with-ocamlbuild` and `make install-with-ocamlbuild` targets to not depend on the unreleased (and thus unpackaged) ocp-build. Otherwise, when using the development version of OPAM, it is still recommended to use ocp-build (as it is much faster). 
> 
> The changelog:
> * If necessary, apply patches and substitute files before removing a package
> * Fix `opam remove <pkg> --keep-build-dir` keeps the folder if a source archive is extracted
> * Add build and install rules using ocamlbuild to help distro packagers
> * Support arbitrary level of nested subdirectories in packages repositories
> * Add `opam config exec "CMD ARG1 ... ARGn" --switch=SWITCH` to execute a command in a subshell
> * Improve the behaviour of `opam update` wrt. pinned packages
> * Change the default external solver criteria (only useful if you have aspcud installed on your machine)
> * Add support for global and user configuration for OPAM (`opam config setup`)
> * Stop yelling when OPAM is not up-to-date
> * Update or generate `~/.ocamlinit` when running `opam init`
> * Fix tests on *BSD (thx Arnaud Degroote)
> * Fix compilation for the source archive
> 
> The files:
> [OPAM] https://github.com/OCamlPro/opam/archive/latest.tar.gz
> [OPAM+depends] http://www.ocamlpro.com/pub/opam-latest-full.tar.gz
> 
> Best,
> Thomas
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 320 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        

From mmatalka at gmail.com  Fri Mar  8 22:18:33 2013
From: mmatalka at gmail.com (Malcolm Matalka)
Date: Fri, 08 Mar 2013 17:18:33 -0500
Subject: [opam-devel] OPAM 0.9.5 released
In-Reply-To: <5A92BC9D-0A67-49BA-9CB8-CD8E76F210D1@ocamlpro.com> (Thomas
 Gazagnaire's message of "Fri, 8 Mar 2013 17:30:29 +0100")
References: <5A92BC9D-0A67-49BA-9CB8-CD8E76F210D1@ocamlpro.com>
Message-ID: <871ubph6x2.fsf@li195-236.members.linode.com>

For the 5 of you out there, I have added 0.9.5 to Nix:

https://github.com/NixOS/nixpkgs/commit/66ad1658292f6923f6866f81a9d285b4ffa5b8a0

You can install by pulling nixpkgs off github and installing with:

sudo nix-env -f /path/to/nixpkgs -i opam

It should be pulled into nixpkgs channel soon.

I will do my best to keep opam updated on nixpkgs, let me know if you
have any questions, concerns, or comments.

/M

Thomas Gazagnaire <thomas at ocamlpro.com> writes:

> Hi,
>
> I'm pleased to announce the release 0.9.5 of OPAM.  All the features that I though are important for the first releases are in, so you can consider 0.9.5 to be something like 1.0-rc1.
>
> For this release, I'm particularly keen on getting people feebdack on the new auto-setup thing: OPAM now asks the user if he wants his local
> configuration upgraded to fully use OPAM (including installation auto-completion scripts). Use `opam init --no-setup` if you want to
> continue using OPAM as before.
>
> One notable change which will please packagers of OPAM for OS distributions: I've added a `make with-ocamlbuild` and `make
> install-with-ocamlbuild` targets to not depend on the unreleased (and thus unpackaged) ocp-build. Otherwise, when using the development
> version of OPAM, it is still recommended to use ocp-build (as it is much faster).
>
> The changelog:
> * If necessary, apply patches and substitute files before removing a package
> * Fix `opam remove <pkg> --keep-build-dir` keeps the folder if a source archive is extracted
> * Add build and install rules using ocamlbuild to help distro packagers
> * Support arbitrary level of nested subdirectories in packages repositories
> * Add `opam config exec "CMD ARG1 ... ARGn" --switch=SWITCH` to execute a command in a subshell
> * Improve the behaviour of `opam update` wrt. pinned packages
> * Change the default external solver criteria (only useful if you have aspcud installed on your machine)
> * Add support for global and user configuration for OPAM (`opam config setup`)
> * Stop yelling when OPAM is not up-to-date
> * Update or generate `~/.ocamlinit` when running `opam init`
> * Fix tests on *BSD (thx Arnaud Degroote)
> * Fix compilation for the source archive
>
> The files:
> [OPAM] https://github.com/OCamlPro/opam/archive/latest.tar.gz
> [OPAM+depends] http://www.ocamlpro.com/pub/opam-latest-full.tar.gz
>
> Best,
> Thomas
>
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From thomas at ocamlpro.com  Fri Mar  8 23:39:00 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Sat, 9 Mar 2013 00:39:00 +0100
Subject: [opam-devel] OPAM 0.9.5 released
In-Reply-To: <20130308193000.GC11970@voyager>
References: <5A92BC9D-0A67-49BA-9CB8-CD8E76F210D1@ocamlpro.com>
 <20130308193000.GC11970@voyager>
Message-ID: <3A762469-9147-4A11-B8E8-DBB564CFFEB7@ocamlpro.com>

> Speaking about auto-setup, a sizable part of the students
> are still working on csh/tcsh, while opam is more bash oriented.
> Is there any autodetection magic to adapt the configuration
> to the kind of shell used?

Yes, there is some shell autodection magic and normally bash/sh/csh/tcsh/zsh should work fine, but I did a limited amount of testing so it might be a bit broken.
You can overwrite the autodection logic using --sh, --zsh or --csh when doing `opam init` or `opam config setup`.

Thomas

> 
> --
> Roberto
> 
> On Fri, Mar 08, 2013 at 05:30:29PM +0100, Thomas Gazagnaire wrote:
>> Hi,
>> 
>> I'm pleased to announce the release 0.9.5 of OPAM.  All the features that I though are important for the first releases are in, so you can consider 0.9.5 to be something like 1.0-rc1.
>> 
>> For this release, I'm particularly keen on getting people feebdack on the new auto-setup thing: OPAM now asks the user if he wants his local configuration upgraded to fully use OPAM (including installation auto-completion scripts). Use `opam init --no-setup` if you want to continue using OPAM as before.
>> 
>> One notable change which will please packagers of OPAM for OS distributions: I've added a `make with-ocamlbuild` and `make install-with-ocamlbuild` targets to not depend on the unreleased (and thus unpackaged) ocp-build. Otherwise, when using the development version of OPAM, it is still recommended to use ocp-build (as it is much faster). 
>> 
>> The changelog:
>> * If necessary, apply patches and substitute files before removing a package
>> * Fix `opam remove <pkg> --keep-build-dir` keeps the folder if a source archive is extracted
>> * Add build and install rules using ocamlbuild to help distro packagers
>> * Support arbitrary level of nested subdirectories in packages repositories
>> * Add `opam config exec "CMD ARG1 ... ARGn" --switch=SWITCH` to execute a command in a subshell
>> * Improve the behaviour of `opam update` wrt. pinned packages
>> * Change the default external solver criteria (only useful if you have aspcud installed on your machine)
>> * Add support for global and user configuration for OPAM (`opam config setup`)
>> * Stop yelling when OPAM is not up-to-date
>> * Update or generate `~/.ocamlinit` when running `opam init`
>> * Fix tests on *BSD (thx Arnaud Degroote)
>> * Fix compilation for the source archive
>> 
>> The files:
>> [OPAM] https://github.com/OCamlPro/opam/archive/latest.tar.gz
>> [OPAM+depends] http://www.ocamlpro.com/pub/opam-latest-full.tar.gz
>> 
>> Best,
>> Thomas
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> 
> -- 
> Roberto Di Cosmo
> 
> ------------------------------------------------------------------
> Professeur               En delegation a l'INRIA
> PPS                      E-mail: roberto at dicosmo.org
> Universite Paris Diderot WWW  : http://www.dicosmo.org
> Case 7014                Tel  : ++33-(0)1-57 27 92 20
> 5, Rue Thomas Mann       
> F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
> FRANCE.                  Twitter: http://twitter.com/rdicosmo
> ------------------------------------------------------------------
> Attachments:
> MIME accepted, Word deprecated
>      http://www.gnu.org/philosophy/no-word-attachments.html
> ------------------------------------------------------------------
> Office location:
> 
> Bureau 320 (3rd floor)
> Batiment Sophie Germain
> Avenue de France
> Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
> -----------------------------------------------------------------
> GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        


From thomas at ocamlpro.com  Sun Mar 10 16:17:33 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Sun, 10 Mar 2013 17:17:33 +0100
Subject: [opam-devel] OPAM 0.9.5 released
In-Reply-To: <5A92BC9D-0A67-49BA-9CB8-CD8E76F210D1@ocamlpro.com>
References: <5A92BC9D-0A67-49BA-9CB8-CD8E76F210D1@ocamlpro.com>
Message-ID: <50FFDD1F-112D-4D5C-B764-CD927AF4C8EF@ocamlpro.com>

Just a remark for the packagers of OPAM. 0.9.5 is broken for packages using symbolic links[1]. If possible, please apply the following patch on the version you are distributing:

https://github.com/OCamlPro/opam/commit/db5129d42fd70cb80ee33040d42f0103d9cc51ea.diff

Best,
Thomas

[1] https://github.com/OCamlPro/opam/issues/520


On Mar 8, 2013, at 5:30 PM, Thomas Gazagnaire wrote:

> Hi,
> 
> I'm pleased to announce the release 0.9.5 of OPAM.  All the features that I though are important for the first releases are in, so you can consider 0.9.5 to be something like 1.0-rc1.
> 
> For this release, I'm particularly keen on getting people feebdack on the new auto-setup thing: OPAM now asks the user if he wants his local configuration upgraded to fully use OPAM (including installation auto-completion scripts). Use `opam init --no-setup` if you want to continue using OPAM as before.
> 
> One notable change which will please packagers of OPAM for OS distributions: I've added a `make with-ocamlbuild` and `make install-with-ocamlbuild` targets to not depend on the unreleased (and thus unpackaged) ocp-build. Otherwise, when using the development version of OPAM, it is still recommended to use ocp-build (as it is much faster). 
> 
> The changelog:
> * If necessary, apply patches and substitute files before removing a package
> * Fix `opam remove <pkg> --keep-build-dir` keeps the folder if a source archive is extracted
> * Add build and install rules using ocamlbuild to help distro packagers
> * Support arbitrary level of nested subdirectories in packages repositories
> * Add `opam config exec "CMD ARG1 ... ARGn" --switch=SWITCH` to execute a command in a subshell
> * Improve the behaviour of `opam update` wrt. pinned packages
> * Change the default external solver criteria (only useful if you have aspcud installed on your machine)
> * Add support for global and user configuration for OPAM (`opam config setup`)
> * Stop yelling when OPAM is not up-to-date
> * Update or generate `~/.ocamlinit` when running `opam init`
> * Fix tests on *BSD (thx Arnaud Degroote)
> * Fix compilation for the source archive
> 
> The files:
> [OPAM] https://github.com/OCamlPro/opam/archive/latest.tar.gz
> [OPAM+depends] http://www.ocamlpro.com/pub/opam-latest-full.tar.gz
> 
> Best,
> Thomas
> 


From anil at recoil.org  Sun Mar 10 16:46:20 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 10 Mar 2013 16:46:20 +0000
Subject: [opam-devel] OPAM 0.9.5 released
In-Reply-To: <50FFDD1F-112D-4D5C-B764-CD927AF4C8EF@ocamlpro.com>
References: <5A92BC9D-0A67-49BA-9CB8-CD8E76F210D1@ocamlpro.com>
 <50FFDD1F-112D-4D5C-B764-CD927AF4C8EF@ocamlpro.com>
Message-ID: <3C8A9B7E-9BB7-4751-A871-A8EFE8310144@recoil.org>

I've opened a Homebrew pull request at:
https://github.com/mxcl/homebrew/pull/18376

-anil

On 10 Mar 2013, at 16:17, Thomas Gazagnaire <thomas at ocamlpro.com> wrote:

> Just a remark for the packagers of OPAM. 0.9.5 is broken for packages using symbolic links[1]. If possible, please apply the following patch on the version you are distributing:
> 
> https://github.com/OCamlPro/opam/commit/db5129d42fd70cb80ee33040d42f0103d9cc51ea.diff
> 
> Best,
> Thomas
> 
> [1] https://github.com/OCamlPro/opam/issues/520
> 
> 
> On Mar 8, 2013, at 5:30 PM, Thomas Gazagnaire wrote:
> 
>> Hi,
>> 
>> I'm pleased to announce the release 0.9.5 of OPAM.  All the features that I though are important for the first releases are in, so you can consider 0.9.5 to be something like 1.0-rc1.
>> 
>> For this release, I'm particularly keen on getting people feebdack on the new auto-setup thing: OPAM now asks the user if he wants his local configuration upgraded to fully use OPAM (including installation auto-completion scripts). Use `opam init --no-setup` if you want to continue using OPAM as before.
>> 
>> One notable change which will please packagers of OPAM for OS distributions: I've added a `make with-ocamlbuild` and `make install-with-ocamlbuild` targets to not depend on the unreleased (and thus unpackaged) ocp-build. Otherwise, when using the development version of OPAM, it is still recommended to use ocp-build (as it is much faster). 
>> 
>> The changelog:
>> * If necessary, apply patches and substitute files before removing a package
>> * Fix `opam remove <pkg> --keep-build-dir` keeps the folder if a source archive is extracted
>> * Add build and install rules using ocamlbuild to help distro packagers
>> * Support arbitrary level of nested subdirectories in packages repositories
>> * Add `opam config exec "CMD ARG1 ... ARGn" --switch=SWITCH` to execute a command in a subshell
>> * Improve the behaviour of `opam update` wrt. pinned packages
>> * Change the default external solver criteria (only useful if you have aspcud installed on your machine)
>> * Add support for global and user configuration for OPAM (`opam config setup`)
>> * Stop yelling when OPAM is not up-to-date
>> * Update or generate `~/.ocamlinit` when running `opam init`
>> * Fix tests on *BSD (thx Arnaud Degroote)
>> * Fix compilation for the source archive
>> 
>> The files:
>> [OPAM] https://github.com/OCamlPro/opam/archive/latest.tar.gz
>> [OPAM+depends] http://www.ocamlpro.com/pub/opam-latest-full.tar.gz
>> 
>> Best,
>> Thomas
>> 
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From thomas at ocamlpro.com  Mon Mar 11 10:01:33 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Mon, 11 Mar 2013 11:01:33 +0100
Subject: [opam-devel] OPAM 0.9.5 released
In-Reply-To: <50FFDD1F-112D-4D5C-B764-CD927AF4C8EF@ocamlpro.com>
References: <5A92BC9D-0A67-49BA-9CB8-CD8E76F210D1@ocamlpro.com>
 <50FFDD1F-112D-4D5C-B764-CD927AF4C8EF@ocamlpro.com>
Message-ID: <2D7C7994-EF62-4D19-93CE-5490444D84E0@ocamlpro.com>

So I've started to get some feedback to the auto-setup step and it seems to be broken under debian/ubuntu.

The symptom: gnome is not starting
The cure: open a textual console and add " > /dev/null 2> /dev/null || true" to the line ". ~/.opam/opam-int/init.sh" in your ~/.profile
The cause: some starting scripts use dash which is quite limited

For the linux packagers the fixing patches:
https://github.com/OCamlPro/opam/commit/93cf842464589d1e479072d7aeb76d94537facfe.diff
https://github.com/OCamlPro/opam/commit/8ca0faa4df701e0e15e26681ad3fbc9c5fa44780.diff

--
Thomas

On Mar 10, 2013, at 5:17 PM, Thomas Gazagnaire wrote:

> Just a remark for the packagers of OPAM. 0.9.5 is broken for packages using symbolic links[1]. If possible, please apply the following patch on the version you are distributing:
> 
> https://github.com/OCamlPro/opam/commit/db5129d42fd70cb80ee33040d42f0103d9cc51ea.diff
> 
> Best,
> Thomas
> 
> [1] https://github.com/OCamlPro/opam/issues/520
> 
> 
> On Mar 8, 2013, at 5:30 PM, Thomas Gazagnaire wrote:
> 
>> Hi,
>> 
>> I'm pleased to announce the release 0.9.5 of OPAM.  All the features that I though are important for the first releases are in, so you can consider 0.9.5 to be something like 1.0-rc1.
>> 
>> For this release, I'm particularly keen on getting people feebdack on the new auto-setup thing: OPAM now asks the user if he wants his local configuration upgraded to fully use OPAM (including installation auto-completion scripts). Use `opam init --no-setup` if you want to continue using OPAM as before.
>> 
>> One notable change which will please packagers of OPAM for OS distributions: I've added a `make with-ocamlbuild` and `make install-with-ocamlbuild` targets to not depend on the unreleased (and thus unpackaged) ocp-build. Otherwise, when using the development version of OPAM, it is still recommended to use ocp-build (as it is much faster). 
>> 
>> The changelog:
>> * If necessary, apply patches and substitute files before removing a package
>> * Fix `opam remove <pkg> --keep-build-dir` keeps the folder if a source archive is extracted
>> * Add build and install rules using ocamlbuild to help distro packagers
>> * Support arbitrary level of nested subdirectories in packages repositories
>> * Add `opam config exec "CMD ARG1 ... ARGn" --switch=SWITCH` to execute a command in a subshell
>> * Improve the behaviour of `opam update` wrt. pinned packages
>> * Change the default external solver criteria (only useful if you have aspcud installed on your machine)
>> * Add support for global and user configuration for OPAM (`opam config setup`)
>> * Stop yelling when OPAM is not up-to-date
>> * Update or generate `~/.ocamlinit` when running `opam init`
>> * Fix tests on *BSD (thx Arnaud Degroote)
>> * Fix compilation for the source archive
>> 
>> The files:
>> [OPAM] https://github.com/OCamlPro/opam/archive/latest.tar.gz
>> [OPAM+depends] http://www.ocamlpro.com/pub/opam-latest-full.tar.gz
>> 
>> Best,
>> Thomas
>> 
> 


From yminsky at gmail.com  Mon Mar 11 18:38:42 2013
From: yminsky at gmail.com (Yaron Minsky)
Date: Mon, 11 Mar 2013 14:38:42 -0400
Subject: [opam-devel] Problems with LablGL on the rpi
Message-ID: <CADKNfhKTZ82Jm-pGOg0tDwNLtanVks=hCqXcs1KP33yoiDLAOg@mail.gmail.com>

I suspect this is a package-level issue, so I'm not sure this is the
right list for it, but, nonetheless:

I've been playing around with getting lablgl working on the Raspberry
Pi, using the Raspian distribution. ?I got pretty far, but there's
some weird case-sensitivity issue I suspect when trying to actually
load the packages. ?Look at this:

# #require "lablgl";;
/home/pi/.opam/4.00.1+raspberrypi/lib/lablgl: added to search path
/home/pi/.opam/4.00.1+raspberrypi/lib/lablgl/lablgl.cma: loaded
# #require "lablgl.glut";;
No such package: lablGL - required by `lablgl.glut'

The same thing happens when I try to build using ocamlbuild. ?On the
mac I'm working on, however, everything works cleanly:

# #require "lablgl.glut";;
/Users/yminsky/.opam/4.01.0dev+trunk/lib/lablGL: added to search path
/Users/yminsky/.opam/4.01.0dev+trunk/lib/lablGL/lablgl.cma: loaded
/Users/yminsky/.opam/4.01.0dev+trunk/lib/lablgl: added to search path
/Users/yminsky/.opam/4.01.0dev+trunk/lib/lablgl/lablglut.cma: loaded

Any idea what could be causing this? ?(I'm also running a slightly
different version of the compiler, but I don't think that's the
issue.)

y

From anil at recoil.org  Mon Mar 11 20:47:44 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 11 Mar 2013 20:47:44 +0000
Subject: [opam-devel] Problems with LablGL on the rpi
In-Reply-To: <CADKNfhKTZ82Jm-pGOg0tDwNLtanVks=hCqXcs1KP33yoiDLAOg@mail.gmail.com>
References: <CADKNfhKTZ82Jm-pGOg0tDwNLtanVks=hCqXcs1KP33yoiDLAOg@mail.gmail.com>
Message-ID: <4F3221FD-A9C3-4173-91F2-E31BE2285DCB@recoil.org>

[+opengl at lists.ocaml.org]

Does this commit help?  I noticed that Mike McClurg fixed the META file
recently:

https://github.com/OCamlPro/opam-repository/commit/811e6af6c4dbf5da4c4f29362ce927fd7f8b61c0

It should be part of OPAM now, so upgrading to the latest will give you
this change.

-anil

On 11 Mar 2013, at 18:38, Yaron Minsky <yminsky at gmail.com> wrote:

> I suspect this is a package-level issue, so I'm not sure this is the
> right list for it, but, nonetheless:
> 
> I've been playing around with getting lablgl working on the Raspberry
> Pi, using the Raspian distribution.  I got pretty far, but there's
> some weird case-sensitivity issue I suspect when trying to actually
> load the packages.  Look at this:
> 
> # #require "lablgl";;
> /home/pi/.opam/4.00.1+raspberrypi/lib/lablgl: added to search path
> /home/pi/.opam/4.00.1+raspberrypi/lib/lablgl/lablgl.cma: loaded
> # #require "lablgl.glut";;
> No such package: lablGL - required by `lablgl.glut'
> 
> The same thing happens when I try to build using ocamlbuild.  On the
> mac I'm working on, however, everything works cleanly:
> 
> # #require "lablgl.glut";;
> /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablGL: added to search path
> /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablGL/lablgl.cma: loaded
> /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablgl: added to search path
> /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablgl/lablglut.cma: loaded
> 
> Any idea what could be causing this?  (I'm also running a slightly
> different version of the compiler, but I don't think that's the
> issue.)
> 
> y
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From mike.mcclurg at gmail.com  Mon Mar 11 21:59:16 2013
From: mike.mcclurg at gmail.com (Mike McClurg)
Date: Mon, 11 Mar 2013 21:59:16 +0000
Subject: [opam-devel] Problems with LablGL on the rpi
In-Reply-To: <4F3221FD-A9C3-4173-91F2-E31BE2285DCB@recoil.org>
References: <CADKNfhKTZ82Jm-pGOg0tDwNLtanVks=hCqXcs1KP33yoiDLAOg@mail.gmail.com>
 <4F3221FD-A9C3-4173-91F2-E31BE2285DCB@recoil.org>
Message-ID: <CALru5wWr6RRhhJmCwLgOxe9y18Bwdn25JOSfvWnY9aHfAwOqUg@mail.gmail.com>

That's the issue that I was having, Yaron. I think the update that Anil
mentioned should resolve it.

Mike


On Mon, Mar 11, 2013 at 8:47 PM, Anil Madhavapeddy <anil at recoil.org> wrote:

> [+opengl at lists.ocaml.org]
>
> Does this commit help?  I noticed that Mike McClurg fixed the META file
> recently:
>
>
> https://github.com/OCamlPro/opam-repository/commit/811e6af6c4dbf5da4c4f29362ce927fd7f8b61c0
>
> It should be part of OPAM now, so upgrading to the latest will give you
> this change.
>
> -anil
>
> On 11 Mar 2013, at 18:38, Yaron Minsky <yminsky at gmail.com> wrote:
>
> > I suspect this is a package-level issue, so I'm not sure this is the
> > right list for it, but, nonetheless:
> >
> > I've been playing around with getting lablgl working on the Raspberry
> > Pi, using the Raspian distribution.  I got pretty far, but there's
> > some weird case-sensitivity issue I suspect when trying to actually
> > load the packages.  Look at this:
> >
> > # #require "lablgl";;
> > /home/pi/.opam/4.00.1+raspberrypi/lib/lablgl: added to search path
> > /home/pi/.opam/4.00.1+raspberrypi/lib/lablgl/lablgl.cma: loaded
> > # #require "lablgl.glut";;
> > No such package: lablGL - required by `lablgl.glut'
> >
> > The same thing happens when I try to build using ocamlbuild.  On the
> > mac I'm working on, however, everything works cleanly:
> >
> > # #require "lablgl.glut";;
> > /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablGL: added to search path
> > /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablGL/lablgl.cma: loaded
> > /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablgl: added to search path
> > /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablgl/lablglut.cma: loaded
> >
> > Any idea what could be causing this?  (I'm also running a slightly
> > different version of the compiler, but I don't think that's the
> > issue.)
> >
> > y
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
> >
>
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130311/8c35e852/attachment.html>

From yminsky at gmail.com  Mon Mar 11 23:01:59 2013
From: yminsky at gmail.com (Yaron Minsky)
Date: Mon, 11 Mar 2013 19:01:59 -0400
Subject: [opam-devel] Problems with LablGL on the rpi
In-Reply-To: <CALru5wWr6RRhhJmCwLgOxe9y18Bwdn25JOSfvWnY9aHfAwOqUg@mail.gmail.com>
References: <CADKNfhKTZ82Jm-pGOg0tDwNLtanVks=hCqXcs1KP33yoiDLAOg@mail.gmail.com>
 <4F3221FD-A9C3-4173-91F2-E31BE2285DCB@recoil.org>
 <CALru5wWr6RRhhJmCwLgOxe9y18Bwdn25JOSfvWnY9aHfAwOqUg@mail.gmail.com>
Message-ID: <CADKNfh+o42V+2xUFM4pipf1B8s70JK1QAxziOP87SsOkb7AUDA@mail.gmail.com>

I'll give it a shot.
On Mar 11, 2013 5:59 PM, "Mike McClurg" <mike.mcclurg at gmail.com> wrote:

> That's the issue that I was having, Yaron. I think the update that Anil
> mentioned should resolve it.
>
> Mike
>
>
> On Mon, Mar 11, 2013 at 8:47 PM, Anil Madhavapeddy <anil at recoil.org>wrote:
>
>> [+opengl at lists.ocaml.org]
>>
>> Does this commit help?  I noticed that Mike McClurg fixed the META file
>> recently:
>>
>>
>> https://github.com/OCamlPro/opam-repository/commit/811e6af6c4dbf5da4c4f29362ce927fd7f8b61c0
>>
>> It should be part of OPAM now, so upgrading to the latest will give you
>> this change.
>>
>> -anil
>>
>> On 11 Mar 2013, at 18:38, Yaron Minsky <yminsky at gmail.com> wrote:
>>
>> > I suspect this is a package-level issue, so I'm not sure this is the
>> > right list for it, but, nonetheless:
>> >
>> > I've been playing around with getting lablgl working on the Raspberry
>> > Pi, using the Raspian distribution.  I got pretty far, but there's
>> > some weird case-sensitivity issue I suspect when trying to actually
>> > load the packages.  Look at this:
>> >
>> > # #require "lablgl";;
>> > /home/pi/.opam/4.00.1+raspberrypi/lib/lablgl: added to search path
>> > /home/pi/.opam/4.00.1+raspberrypi/lib/lablgl/lablgl.cma: loaded
>> > # #require "lablgl.glut";;
>> > No such package: lablGL - required by `lablgl.glut'
>> >
>> > The same thing happens when I try to build using ocamlbuild.  On the
>> > mac I'm working on, however, everything works cleanly:
>> >
>> > # #require "lablgl.glut";;
>> > /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablGL: added to search path
>> > /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablGL/lablgl.cma: loaded
>> > /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablgl: added to search path
>> > /Users/yminsky/.opam/4.01.0dev+trunk/lib/lablgl/lablglut.cma: loaded
>> >
>> > Any idea what could be causing this?  (I'm also running a slightly
>> > different version of the compiler, but I don't think that's the
>> > issue.)
>> >
>> > y
>> > _______________________________________________
>> > opam-devel mailing list
>> > opam-devel at lists.ocaml.org
>> > http://lists.ocaml.org/listinfo/opam-devel
>> >
>>
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
>>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130311/e99d5c7b/attachment.html>

From thomas at ocamlpro.com  Tue Mar 12 22:17:30 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Tue, 12 Mar 2013 23:17:30 +0100
Subject: [opam-devel] OPAM 0.9.6 released
Message-ID: <854C6D14-01C1-4626-A261-CD0FE6101B4B@ocamlpro.com>

Hi,

I've just released 0.9.6. This version is a bug-fix version:
* Fix configuration for zsh users (feature introduced in 0.9.5)
* Fix loading of `~/.profile` when using dash (eg. in Debian/Ubuntu) (feature introduced in 0.9.5)
* Fix installation of packages with symbolic links (regression introduced in 0.9.5)

If I don't have news bad bugs tomorrow, I plan to release 1.0 on thursday.

The links:
* I've updated the x86_64 binaries for the binary installer: http://www.ocamlpro.com/pub/opam_installer.sh
* source archive: https://github.com/OCamlPro/opam/archive/latest.tar.gz
* full archive (eg. with all the dependencies): http://www.ocamlpro.com/pub/opam-full-latest.tar.gz

Best,
Thomas

From anil at recoil.org  Tue Mar 12 23:40:44 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 12 Mar 2013 23:40:44 +0000
Subject: [opam-devel] OPAM 0.9.6 released
In-Reply-To: <854C6D14-01C1-4626-A261-CD0FE6101B4B@ocamlpro.com>
References: <854C6D14-01C1-4626-A261-CD0FE6101B4B@ocamlpro.com>
Message-ID: <9730DAB1-7F8B-4C1A-A2C7-595DB0B80ABC@recoil.org>

Homebrew pull req:
https://github.com/mxcl/homebrew/pull/18443

I've manually updated the Debian binary packages to 0.9.6 too.

-anil

On 12 Mar 2013, at 22:17, Thomas Gazagnaire <thomas at ocamlpro.com> wrote:

> Hi,
> 
> I've just released 0.9.6. This version is a bug-fix version:
> * Fix configuration for zsh users (feature introduced in 0.9.5)
> * Fix loading of `~/.profile` when using dash (eg. in Debian/Ubuntu) (feature introduced in 0.9.5)
> * Fix installation of packages with symbolic links (regression introduced in 0.9.5)
> 
> If I don't have news bad bugs tomorrow, I plan to release 1.0 on thursday.
> 
> The links:
> * I've updated the x86_64 binaries for the binary installer: http://www.ocamlpro.com/pub/opam_installer.sh
> * source archive: https://github.com/OCamlPro/opam/archive/latest.tar.gz
> * full archive (eg. with all the dependencies): http://www.ocamlpro.com/pub/opam-full-latest.tar.gz
> 
> Best,
> Thomas
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From mmatalka at gmail.com  Wed Mar 13 08:51:59 2013
From: mmatalka at gmail.com (Malcolm Matalka)
Date: Wed, 13 Mar 2013 04:51:59 -0400
Subject: [opam-devel] OPAM 0.9.6 released
In-Reply-To: <9730DAB1-7F8B-4C1A-A2C7-595DB0B80ABC@recoil.org> (Anil
 Madhavapeddy's message of "Tue, 12 Mar 2013 23:40:44 +0000")
References: <854C6D14-01C1-4626-A261-CD0FE6101B4B@ocamlpro.com>
 <9730DAB1-7F8B-4C1A-A2C7-595DB0B80ABC@recoil.org>
Message-ID: <87boanfzrk.fsf@li195-236.members.linode.com>

I am going to wait for 1.0 on Thursday before pushing to NixPkgs.

Anil Madhavapeddy <anil at recoil.org> writes:

> Homebrew pull req:
> https://github.com/mxcl/homebrew/pull/18443
>
> I've manually updated the Debian binary packages to 0.9.6 too.
>
> -anil
>
> On 12 Mar 2013, at 22:17, Thomas Gazagnaire <thomas at ocamlpro.com> wrote:
>
>> Hi,
>> 
>> I've just released 0.9.6. This version is a bug-fix version:
>> * Fix configuration for zsh users (feature introduced in 0.9.5)
>> * Fix loading of `~/.profile` when using dash (eg. in Debian/Ubuntu) (feature introduced in 0.9.5)
>> * Fix installation of packages with symbolic links (regression introduced in 0.9.5)
>> 
>> If I don't have news bad bugs tomorrow, I plan to release 1.0 on thursday.
>> 
>> The links:
>> * I've updated the x86_64 binaries for the binary installer: http://www.ocamlpro.com/pub/opam_installer.sh
>> * source archive: https://github.com/OCamlPro/opam/archive/latest.tar.gz
>> * full archive (eg. with all the dependencies): http://www.ocamlpro.com/pub/opam-full-latest.tar.gz
>> 
>> Best,
>> Thomas
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
>> 
>
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From yminsky at gmail.com  Mon Mar 11 18:36:26 2013
From: yminsky at gmail.com (Yaron Minsky)
Date: Mon, 11 Mar 2013 14:36:26 -0400
Subject: [opam-devel] Problems with lablgl on the rpi
Message-ID: <CADKNfhKwnZk635JJMT2UgPnH+MR=62zqfsYH_EZWz1ARZM3PHg@mail.gmail.com>

I suspect this is a package-level issue, so I'm not sure this is the
right list for it, but, nonetheless:

I've been playing around with getting lablgl working on the Raspberry
Pi, using the Raspian distribution. ?I got pretty far, but there's
some weird case-sensitivity issue I suspect when trying to actually
load the packages. ?Look at this:

# #require "lablgl";;
/home/pi/.opam/4.00.1+raspberrypi/lib/lablgl: added to search path
/home/pi/.opam/4.00.1+raspberrypi/lib/lablgl/lablgl.cma: loaded
# #require "lablgl.glut";;
No such package: lablGL - required by `lablgl.glut'

The same thing happens when I try to build using ocamlbuild. ?On the
mac I'm working on, however, everything works cleanly:

# #require "lablgl.glut";;
/Users/yminsky/.opam/4.01.0dev+trunk/lib/lablGL: added to search path
/Users/yminsky/.opam/4.01.0dev+trunk/lib/lablGL/lablgl.cma: loaded
/Users/yminsky/.opam/4.01.0dev+trunk/lib/lablgl: added to search path
/Users/yminsky/.opam/4.01.0dev+trunk/lib/lablgl/lablglut.cma: loaded

Any idea what could be causing this? ?(I'm also running a slightly
different version of the compiler, but I don't think that's the
issue.)

y

From thomas at ocamlpro.com  Thu Mar 14 20:28:32 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Thu, 14 Mar 2013 21:28:32 +0100
Subject: [opam-devel] OPAM 1.0.0 released !
Message-ID: <999F571F-57A2-46F0-9DA8-83DC7026363E@ocamlpro.com>

I nm *very* happy to announce the first official release of OPAM!

Many of you already know and use OPAM so I won't be long. Please read http://www.ocamlpro.com/blog/2013/01/17/opam-beta.html for a longer description.

1.0.0 fixes many bugs and add few new features to the previously announced beta-release.

The most visible new feature, which should be useful for beginners with OCaml and OPAM,  is an auto-configuration tool. This tool easily enables all the features of OPAM (auto-completion, fix the loading of scripts for the toplevel, opam-switch-eval alias, etc). This tool runs interactively on each `opam init` invocation. If you don't like OPAM to change your configuration files, use `opam init --no-setup`. If you trust the tool blindly,  use `opam init --auto-setup`. You can later review the setup by doing `opam config setup --list` and call the tool again using `opam config setup` (and you can of course manually edit your ~/.profile (or ~/.zshrc for zsh users), ~/.ocamlinit and ~/.opam/opam-init/*).

Please report:
- Bug reports and feature requests for the OPAM tool: http://github.com/OCamlPro/opam/issues
- Packaging issues or requests for a new package: http://github.com/OCamlPro/opam-repository/issues
- General queries to: http://lists.ocaml.org/listinfo/platform
- More specific queries about the internals of OPAM to: http://lists.ocaml.org/listinfo/opam-devel

On behalf on the OPAM team,
Thomas

=== Install ===

Packages for Debian and OSX (at least homebrew) should follow shortly and I'm looking for volunteers to create and maintain rpm packages. The binary installer is up-to-date for Linux and Darwin 64-bit architectures, the 32-bit version for Linux should arrive shortly.

If you want to build from sources, the full archive (including dependencies) is available here:
   
   http://www.ocamlpro.com/pub/opam-full-latest.tar.gz

=== Upgrade ===

If you are upgrading from 0.9.* you won't  have anything special to do apart installing the new binary. You can then update your package metadata by running `opam update`. If you want to use the auto-setup feature, remove the "eval `opam config env` line you have previously added in your ~/.profile and run `opam config setup --all`.

So everything should be fine. But you never know ... so if something goes horribly wrong in the upgrade process (of if your are upgrading from an old version of OPAM) you can still trash your ~/.opam, manually remove what OPAM added in  your ~/.profile (~/.zshrc for zsh users) and ~/.ocamlinit, and start again from scratch. 

=== Random stats ===

Great success on github. Thanks everybody for the great contributions!

https://github.com/OCamlPro/opam: +2000 commits, 26 contributors
https://github.com/OCamlPro/opam-repository: +1700 commits, 75 contributors, 370+ packages

on http://opam.ocamlpro.com/
+400 unique visitor per week, 15k 'opam update' per week
+1300 unique visitor per month, 55k 'opam update' per month
3815 unique visitor since the alpha release

=== Changelog ===

The full change-log since the beta release in January:

1.0.0 [Mar 2013]
* Improve the lexer performance (thx to @oandrieu)
* Fix various typos (thx to @chaudhuri)
* Fix build issue (thx to @avsm)

0.9.6 [Mar 2013]
* Fix installation of pinned packages on BSD (thx to @smondet)
* Fix configuration for zsh users (thx to @AltGr)
* Fix loading of `~/.profile` when using dash (eg. in Debian/Ubuntu)
* Fix installation of packages with symbolic links (regression introduced in 0.9.5)

0.9.5 [Mar 2013]
* If necessary, apply patches and substitute files before removing a package
* Fix `opam remove <pkg> --keep-build-dir` keeps the folder if a source archive is extracted
* Add build and install rules using ocamlbuild to help distro packagers
* Support arbitrary level of nested subdirectories in packages repositories
* Add `opam config exec "CMD ARG1 ... ARGn" --switch=SWITCH` to execute a command in a subshell
* Improve the behaviour of `opam update` wrt. pinned packages
* Change the default external solver criteria (only useful if you have aspcud installed on your machine)
* Add support for global and user configuration for OPAM (`opam config setup`)
* Stop yelling when OPAM is not up-to-date
* Update or generate `~/.ocamlinit` when running `opam init`
* Fix tests on *BSD (thx Arnaud Degroote)
* Fix compilation for the source archive

0.9.4 [Feb 2013]
* Disable auto-removal of unused dependencies. This can now be enabled on-demand using `-a`
* Fix compilation and basic usage on Cygwin
* Fix BSD support (use `type` instead of `which` to detect existing commands)
* Add a way to tag external dependencies in OPAM files
* Better error messages when trying to upgrade pinned packages
* Display `depends` and `depopts` fields in `opam info`
* `opam info pkg.version` shows the metadata for this given package version
* Add missing `doc` fields in `.install` files
* `opam list` now only shows installable packages

0.9.3 [Feb 2013]
* Add system compiler constraints in OPAM files
* Better error messages in case of conflicts
* Cleaner API to install/uninstall packages
* On upgrade, OPAM now perform all the remove action first
* Use a cache for main storing OPAM metadata: this greatly speed-up OPAM invocations
* after an upgrade, propose to reinstall a pinned package only if there were some changes
* improvements to the solver heuristics
* better error messages on cyclic dependencies

0.9.2 [Jan 2013]
* Install all the API files
* Fix `opam repo remove repo-name`
* speed-up `opam config env`
* support for `opam-foo` scripts (which can be called using `opam foo`)
* 'opam update pinned-package' works
* Fix 'opam-mk-repo -a'
* Fix 'opam-mk-repo -i'
* clean-up pinned cache dir when a pinned package fails to install

0.9.1 [Jan 2013]
* Use ocaml-re 1.2.0


From thomas at ocamlpro.com  Fri Mar 15 11:34:42 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Fri, 15 Mar 2013 12:34:42 +0100
Subject: [opam-devel] [ocaml-infra] Wireframe demo of OCaml.og
In-Reply-To: <20130315103939.7b462576@alcazar>
References: <F31BA4AC-7B9C-491E-A133-F5D8F98AC923@cam.ac.uk>
 <20130315103939.7b462576@alcazar>
Message-ID: <929BED6A-2B31-4ECE-8764-0C910CA5C4B8@ocamlpro.com>

Hi,

> I mean: could it be possible to create some kind of "info" packages in
> opam to indicate that a library/tool/... exists but is not packaged
> yet ? With a flag to make them appear in opam list and search ?

You can already create "empty" packages with a dummy build instruction which just display "NOT PACKAGED YET!" and exit with a non-zero code, but I doubt this would be very helpful to the user (and quite frustrating). But why not ...

> This could encourage contributors to package not yet packaged tools and
> libs.
> 
> Regarding tags, it is possible that I missed the information, but is
> opam going to handle tags associated to packages ? (I saw some
> tag-based search in packages in Amir's demos)

Yup, OPAM 1.0.0 supports tags but we haven't advertise that properly yet (the priority was to release the tool with all the rights features in). Now we can concentrate on the package metadata themselves.

If you look at section 1.2.4 of the dev-manual[1] your can see that you can add these new fields in the .opam:

homepage: "url"
authors: [ "me" "you" ]
tags: [ "foo" "bar" ]

I encourage everybody with some spare time to add these relevant fields to the existing package metadata :-) Bonus points if you come-up with some automatic tools to do this.
For the tag conventions, I'm pretty in favor of re-using the great work that has already been put in the hump. Is there a list of tags and their description available somewhere ?

You can query the tags on the command line: `opam info foo -f tags` will display the tags associated to the package foo but I just realize that the search function doesn't look at the tags yet ... I've opened [2] to to keep track of this.

> At last, I also saw in Amir's demos news feeds associated to packages.
> Will the RSS feed be indicated in opam package information ?

This is a great idea, I'm not sure how to do this properly yet but that's something what we really aim for (ie. give the user the ability to get quick feedback on a given package). This is now tracked by [3].

--
Thomas

[1] https://github.com/OCamlPro/opam/raw/master/doc/dev-manual/dev-manual.pdf
[2] https://github.com/OCamlPro/opam/issues/535
[3] https://github.com/OCamlPro/opam/issues/536


From Maxence.Guesdon at inria.fr  Fri Mar 15 12:21:05 2013
From: Maxence.Guesdon at inria.fr (Maxence Guesdon)
Date: Fri, 15 Mar 2013 13:21:05 +0100
Subject: [opam-devel] [ocaml-infra] Wireframe demo of OCaml.og
In-Reply-To: <929BED6A-2B31-4ECE-8764-0C910CA5C4B8@ocamlpro.com>
References: <F31BA4AC-7B9C-491E-A133-F5D8F98AC923@cam.ac.uk>
 <20130315103939.7b462576@alcazar>
 <929BED6A-2B31-4ECE-8764-0C910CA5C4B8@ocamlpro.com>
Message-ID: <20130315132105.16e6d06d@alcazar>

On Fri, 15 Mar 2013 12:34:42 +0100
Thomas Gazagnaire <thomas at ocamlpro.com> wrote:

> Hi,
> 
> > I mean: could it be possible to create some kind of "info" packages in
> > opam to indicate that a library/tool/... exists but is not packaged
> > yet ? With a flag to make them appear in opam list and search ?
> 
> You can already create "empty" packages with a dummy build instruction which just display "NOT PACKAGED YET!" and exit with a non-zero code, but I doubt this would be very helpful to the user (and quite frustrating). But why not ...
> 
> > This could encourage contributors to package not yet packaged tools and
> > libs.
> > 
> > Regarding tags, it is possible that I missed the information, but is
> > opam going to handle tags associated to packages ? (I saw some
> > tag-based search in packages in Amir's demos)
> 
> Yup, OPAM 1.0.0 supports tags but we haven't advertise that properly yet (the priority was to release the tool with all the rights features in). Now we can concentrate on the package metadata themselves.
> 
> If you look at section 1.2.4 of the dev-manual[1] your can see that you can add these new fields in the .opam:
> 
> homepage: "url"
> authors: [ "me" "you" ]
> tags: [ "foo" "bar" ]
> 
> I encourage everybody with some spare time to add these relevant fields to the existing package metadata :-) Bonus points if you come-up with some automatic tools to do this.
> For the tag conventions, I'm pretty in favor of re-using the great work that has already been put in the hump. Is there a list of tags and their description available somewhere ?

I can extract it, but it may not be the best one. Some kind of merge
with oasis-db tags could be better. Of course, there should not be any
restriction on tags, but a way to list the tags used in existing
packages should be useful to choose appropriate ones for a new package.
Something like `opam tag -l`.

> You can query the tags on the command line: `opam info foo -f tags` will display the tags associated to the package foo but I just realize that the search function doesn't look at the tags yet ... I've opened [2] to to keep track of this.
> 
> > At last, I also saw in Amir's demos news feeds associated to packages.
> > Will the RSS feed be indicated in opam package information ?
> 
> This is a great idea, I'm not sure how to do this properly yet but that's something what we really aim for (ie. give the user the ability to get quick feedback on a given package). This is now tracked by [3].

I replied into [3]
> --
> Thomas
> 
> [1] https://github.com/OCamlPro/opam/raw/master/doc/dev-manual/dev-manual.pdf
> [2] https://github.com/OCamlPro/opam/issues/535
> [3] https://github.com/OCamlPro/opam/issues/536
> 

Maxence

From louis.gesbert at ocamlpro.com  Fri Mar 15 12:35:00 2013
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Fri, 15 Mar 2013 13:35:00 +0100
Subject: [opam-devel] [ocaml-infra] Wireframe demo of OCaml.og
In-Reply-To: <929BED6A-2B31-4ECE-8764-0C910CA5C4B8@ocamlpro.com>
References: <F31BA4AC-7B9C-491E-A133-F5D8F98AC923@cam.ac.uk>
 <20130315103939.7b462576@alcazar>
 <929BED6A-2B31-4ECE-8764-0C910CA5C4B8@ocamlpro.com>
Message-ID: <201303151335.00714.louis.gesbert@ocamlpro.com>

Here is a quick & dirty shell/sed script that I used to put links to the github pages, for our projects hosted on github. Better than nothing for now.

If anyone may find it useful:

for f in **/url; do          
    homepage=$(sed \
        's#archive: *"\(http.\?://.\+\.github\.com/[^/]\+\)/.*"#\1#; t ok; s#archive: *"\(http.\?://github.com/[^/]\+/[^/]\+\)/.*"#\1#; t ok; d; :ok' $f)
    if [ -n "$homepage" ]; then
        echo -en "\e[32m$f\e[m... "
        if \! grep -q 'ocamlpro.com' ${f%url}opam; then
            echo '\e[31mNot ours\e[m'
        elif grep -q 'homepage' ${f%url}opam; then
            echo -e '\e[32mAlready there\e[m'
        else
            echo "\e[33mAdding $homepage\e[m"
            echo "homepage: \"$homepage\"" >> ${f%url}opam
        fi
    fi
done

Louis

Le Friday 15 March 2013 12:34:42, Thomas Gazagnaire a ?crit :
> Hi,
> 
> > I mean: could it be possible to create some kind of "info" packages in
> > opam to indicate that a library/tool/... exists but is not packaged
> > yet ? With a flag to make them appear in opam list and search ?
> 
> You can already create "empty" packages with a dummy build instruction which just display "NOT PACKAGED YET!" and exit with a non-zero code, but I doubt this would be very helpful to the user (and quite frustrating). But why not ...
> 
> > This could encourage contributors to package not yet packaged tools and
> > libs.
> > 
> > Regarding tags, it is possible that I missed the information, but is
> > opam going to handle tags associated to packages ? (I saw some
> > tag-based search in packages in Amir's demos)
> 
> Yup, OPAM 1.0.0 supports tags but we haven't advertise that properly yet (the priority was to release the tool with all the rights features in). Now we can concentrate on the package metadata themselves.
> 
> If you look at section 1.2.4 of the dev-manual[1] your can see that you can add these new fields in the .opam:
> 
> homepage: "url"
> authors: [ "me" "you" ]
> tags: [ "foo" "bar" ]
> 
> I encourage everybody with some spare time to add these relevant fields to the existing package metadata :-) Bonus points if you come-up with some automatic tools to do this.
> For the tag conventions, I'm pretty in favor of re-using the great work that has already been put in the hump. Is there a list of tags and their description available somewhere ?
> 
> You can query the tags on the command line: `opam info foo -f tags` will display the tags associated to the package foo but I just realize that the search function doesn't look at the tags yet ... I've opened [2] to to keep track of this.
> 
> > At last, I also saw in Amir's demos news feeds associated to packages.
> > Will the RSS feed be indicated in opam package information ?
> 
> This is a great idea, I'm not sure how to do this properly yet but that's something what we really aim for (ie. give the user the ability to get quick feedback on a given package). This is now tracked by [3].
> 
> --
> Thomas
> 
> [1] https://github.com/OCamlPro/opam/raw/master/doc/dev-manual/dev-manual.pdf
> [2] https://github.com/OCamlPro/opam/issues/535
> [3] https://github.com/OCamlPro/opam/issues/536
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 

From daniel.buenzli at erratique.ch  Fri Mar 15 13:09:41 2013
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Fri, 15 Mar 2013 14:09:41 +0100
Subject: [opam-devel] [ocaml-platform] [ocaml-infra] Wireframe demo of
	OCaml.og
In-Reply-To: <929BED6A-2B31-4ECE-8764-0C910CA5C4B8@ocamlpro.com>
References: <F31BA4AC-7B9C-491E-A133-F5D8F98AC923@cam.ac.uk>
 <20130315103939.7b462576@alcazar>
 <929BED6A-2B31-4ECE-8764-0C910CA5C4B8@ocamlpro.com>
Message-ID: <7FE2CCC895F44A5D97D8D7FD07272A38@erratique.ch>

Le vendredi, 15 mars 2013 ? 12:34, Thomas Gazagnaire a ?crit :
> I encourage everybody with some spare time to add these relevant fields to the existing package metadata :-) Bonus points if you come-up with some automatic tools to do this.

For my packages I started to generate opam files from _oasis files, some things are still missing (.install files) and the code is ad-hoc (e.g it won't handle complex dependencies specs) but it mostly works for my packages and can be used as a starting point. The relevant parts are:

https://github.com/dbuenzli/cmdliner/blob/master/build#L46
https://github.com/dbuenzli/cmdliner/blob/master/build#L122

Don't ask me what these sed invocations actually do? The results can be seen here:  

http://erratique.ch/software/opam/packages/

Daniel



From thomas at ocamlpro.com  Fri Mar 15 13:34:16 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Fri, 15 Mar 2013 14:34:16 +0100
Subject: [opam-devel] OPAM 1.0.0 released !
In-Reply-To: <999F571F-57A2-46F0-9DA8-83DC7026363E@ocamlpro.com>
References: <999F571F-57A2-46F0-9DA8-83DC7026363E@ocamlpro.com>
Message-ID: <B761C4CC-18EA-4A94-B6CC-A4EFE5C8746E@ocamlpro.com>

As I've received few questions related to upgrading OPAM itself, I've added Anil's response to [1] to the FAQ:

    https://github.com/OCamlPro/opam/wiki/FAQ

[1] https://github.com/OCamlPro/opam/issues/528

Best,
Thomas

On Mar 14, 2013, at 9:28 PM, Thomas Gazagnaire wrote:

> I nm *very* happy to announce the first official release of OPAM!
> 
> Many of you already know and use OPAM so I won't be long. Please read http://www.ocamlpro.com/blog/2013/01/17/opam-beta.html for a longer description.
> 
> 1.0.0 fixes many bugs and add few new features to the previously announced beta-release.
> 
> The most visible new feature, which should be useful for beginners with OCaml and OPAM,  is an auto-configuration tool. This tool easily enables all the features of OPAM (auto-completion, fix the loading of scripts for the toplevel, opam-switch-eval alias, etc). This tool runs interactively on each `opam init` invocation. If you don't like OPAM to change your configuration files, use `opam init --no-setup`. If you trust the tool blindly,  use `opam init --auto-setup`. You can later review the setup by doing `opam config setup --list` and call the tool again using `opam config setup` (and you can of course manually edit your ~/.profile (or ~/.zshrc for zsh users), ~/.ocamlinit and ~/.opam/opam-init/*).
> 
> Please report:
> - Bug reports and feature requests for the OPAM tool: http://github.com/OCamlPro/opam/issues
> - Packaging issues or requests for a new package: http://github.com/OCamlPro/opam-repository/issues
> - General queries to: http://lists.ocaml.org/listinfo/platform
> - More specific queries about the internals of OPAM to: http://lists.ocaml.org/listinfo/opam-devel
> 
> On behalf on the OPAM team,
> Thomas
> 
> === Install ===
> 
> Packages for Debian and OSX (at least homebrew) should follow shortly and I'm looking for volunteers to create and maintain rpm packages. The binary installer is up-to-date for Linux and Darwin 64-bit architectures, the 32-bit version for Linux should arrive shortly.
> 
> If you want to build from sources, the full archive (including dependencies) is available here:
> 
>   http://www.ocamlpro.com/pub/opam-full-latest.tar.gz
> 
> === Upgrade ===
> 
> If you are upgrading from 0.9.* you won't  have anything special to do apart installing the new binary. You can then update your package metadata by running `opam update`. If you want to use the auto-setup feature, remove the "eval `opam config env` line you have previously added in your ~/.profile and run `opam config setup --all`.
> 
> So everything should be fine. But you never know ... so if something goes horribly wrong in the upgrade process (of if your are upgrading from an old version of OPAM) you can still trash your ~/.opam, manually remove what OPAM added in  your ~/.profile (~/.zshrc for zsh users) and ~/.ocamlinit, and start again from scratch. 
> 
> === Random stats ===
> 
> Great success on github. Thanks everybody for the great contributions!
> 
> https://github.com/OCamlPro/opam: +2000 commits, 26 contributors
> https://github.com/OCamlPro/opam-repository: +1700 commits, 75 contributors, 370+ packages
> 
> on http://opam.ocamlpro.com/
> +400 unique visitor per week, 15k 'opam update' per week
> +1300 unique visitor per month, 55k 'opam update' per month
> 3815 unique visitor since the alpha release
> 
> === Changelog ===
> 
> The full change-log since the beta release in January:
> 
> 1.0.0 [Mar 2013]
> * Improve the lexer performance (thx to @oandrieu)
> * Fix various typos (thx to @chaudhuri)
> * Fix build issue (thx to @avsm)
> 
> 0.9.6 [Mar 2013]
> * Fix installation of pinned packages on BSD (thx to @smondet)
> * Fix configuration for zsh users (thx to @AltGr)
> * Fix loading of `~/.profile` when using dash (eg. in Debian/Ubuntu)
> * Fix installation of packages with symbolic links (regression introduced in 0.9.5)
> 
> 0.9.5 [Mar 2013]
> * If necessary, apply patches and substitute files before removing a package
> * Fix `opam remove <pkg> --keep-build-dir` keeps the folder if a source archive is extracted
> * Add build and install rules using ocamlbuild to help distro packagers
> * Support arbitrary level of nested subdirectories in packages repositories
> * Add `opam config exec "CMD ARG1 ... ARGn" --switch=SWITCH` to execute a command in a subshell
> * Improve the behaviour of `opam update` wrt. pinned packages
> * Change the default external solver criteria (only useful if you have aspcud installed on your machine)
> * Add support for global and user configuration for OPAM (`opam config setup`)
> * Stop yelling when OPAM is not up-to-date
> * Update or generate `~/.ocamlinit` when running `opam init`
> * Fix tests on *BSD (thx Arnaud Degroote)
> * Fix compilation for the source archive
> 
> 0.9.4 [Feb 2013]
> * Disable auto-removal of unused dependencies. This can now be enabled on-demand using `-a`
> * Fix compilation and basic usage on Cygwin
> * Fix BSD support (use `type` instead of `which` to detect existing commands)
> * Add a way to tag external dependencies in OPAM files
> * Better error messages when trying to upgrade pinned packages
> * Display `depends` and `depopts` fields in `opam info`
> * `opam info pkg.version` shows the metadata for this given package version
> * Add missing `doc` fields in `.install` files
> * `opam list` now only shows installable packages
> 
> 0.9.3 [Feb 2013]
> * Add system compiler constraints in OPAM files
> * Better error messages in case of conflicts
> * Cleaner API to install/uninstall packages
> * On upgrade, OPAM now perform all the remove action first
> * Use a cache for main storing OPAM metadata: this greatly speed-up OPAM invocations
> * after an upgrade, propose to reinstall a pinned package only if there were some changes
> * improvements to the solver heuristics
> * better error messages on cyclic dependencies
> 
> 0.9.2 [Jan 2013]
> * Install all the API files
> * Fix `opam repo remove repo-name`
> * speed-up `opam config env`
> * support for `opam-foo` scripts (which can be called using `opam foo`)
> * 'opam update pinned-package' works
> * Fix 'opam-mk-repo -a'
> * Fix 'opam-mk-repo -i'
> * clean-up pinned cache dir when a pinned package fails to install
> 
> 0.9.1 [Jan 2013]
> * Use ocaml-re 1.2.0
> 


From mmatalka at gmail.com  Sun Mar 17 15:52:51 2013
From: mmatalka at gmail.com (Malcolm Matalka)
Date: Sun, 17 Mar 2013 11:52:51 -0400
Subject: [opam-devel] Leaving 3.12.x support behind
Message-ID: <87obeic9bg.fsf@li195-236.members.linode.com>

I have a situation where the interface to Async has changed between
108.08.00 and 109.13.00.  It is a simple change, but by making the
change I am giving up support for Ocaml 3.12.x, as far as I can tell.
Is this the accepted direction for opam packages?

/Malcolm

From anil at recoil.org  Sun Mar 17 15:58:58 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 17 Mar 2013 10:58:58 -0500
Subject: [opam-devel] Leaving 3.12.x support behind
In-Reply-To: <87obeic9bg.fsf@li195-236.members.linode.com>
References: <87obeic9bg.fsf@li195-236.members.linode.com>
Message-ID: <9DD4203E-2AA3-4E1A-BF1C-7F69848B4C2B@recoil.org>

OPAM doesn't really mandate any particular version of the compiler.
It simply requests that you keep the correct 'ocaml-version' constraint
in the OPAM file so that users will not get a build error when using
an incompatible compiler.

So if you feel that you wish to move to a newer Core, then go right
ahead!

-anil

On 17 Mar 2013, at 10:52, Malcolm Matalka <mmatalka at gmail.com> wrote:

> I have a situation where the interface to Async has changed between
> 108.08.00 and 109.13.00.  It is a simple change, but by making the
> change I am giving up support for Ocaml 3.12.x, as far as I can tell.
> Is this the accepted direction for opam packages?
> 
> /Malcolm
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From mmatalka at gmail.com  Sun Mar 17 16:02:58 2013
From: mmatalka at gmail.com (Malcolm Matalka)
Date: Sun, 17 Mar 2013 12:02:58 -0400
Subject: [opam-devel] Leaving 3.12.x support behind
In-Reply-To: <9DD4203E-2AA3-4E1A-BF1C-7F69848B4C2B@recoil.org> (Anil
 Madhavapeddy's message of "Sun, 17 Mar 2013 10:58:58 -0500")
References: <87obeic9bg.fsf@li195-236.members.linode.com>
 <9DD4203E-2AA3-4E1A-BF1C-7F69848B4C2B@recoil.org>
Message-ID: <87hakac8ul.fsf@li195-236.members.linode.com>

I guess my question is more about: as an opam package maintainer, is
giving up 3.12.x support considered acceptable at this point?

If you depend on Core, I don't think there is much choice...or am I
missing another option?

Anil Madhavapeddy <anil at recoil.org> writes:

> OPAM doesn't really mandate any particular version of the compiler.
> It simply requests that you keep the correct 'ocaml-version' constraint
> in the OPAM file so that users will not get a build error when using
> an incompatible compiler.
>
> So if you feel that you wish to move to a newer Core, then go right
> ahead!
>
> -anil
>
> On 17 Mar 2013, at 10:52, Malcolm Matalka <mmatalka at gmail.com> wrote:
>
>> I have a situation where the interface to Async has changed between
>> 108.08.00 and 109.13.00.  It is a simple change, but by making the
>> change I am giving up support for Ocaml 3.12.x, as far as I can tell.
>> Is this the accepted direction for opam packages?
>> 
>> /Malcolm
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
>> 

From roberto at dicosmo.org  Sun Mar 17 16:04:30 2013
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Sun, 17 Mar 2013 17:04:30 +0100
Subject: [opam-devel] Leaving 3.12.x support behind
In-Reply-To: <87obeic9bg.fsf@li195-236.members.linode.com>
References: <87obeic9bg.fsf@li195-236.members.linode.com>
Message-ID: <20130317160430.GA30924@voyager>

3.12.x is still a fairly recent version of OCaml... what
kind of new featurs do you need from 4.00 in your changes?

On Sun, Mar 17, 2013 at 11:52:51AM -0400, Malcolm Matalka wrote:
> I have a situation where the interface to Async has changed between
> 108.08.00 and 109.13.00.  It is a simple change, but by making the
> change I am giving up support for Ocaml 3.12.x, as far as I can tell.
> Is this the accepted direction for opam packages?
> 
> /Malcolm
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 320 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        

From mmatalka at gmail.com  Sun Mar 17 16:10:48 2013
From: mmatalka at gmail.com (Malcolm Matalka)
Date: Sun, 17 Mar 2013 17:10:48 +0100
Subject: [opam-devel] Leaving 3.12.x support behind
In-Reply-To: <20130317160430.GA30924@voyager>
References: <87obeic9bg.fsf@li195-236.members.linode.com>
 <20130317160430.GA30924@voyager>
Message-ID: <CAKziXDUxEXJd_UeaBUD45Uc7knBBM34Nh5tdOpc4BQBon9R0rA@mail.gmail.com>

I don't need a feature, but the lattest versions of Core require 4.00. And
one of the API changes affects my package, so to support newer versions of
Core I have to go to 4.00.  I'm ok with this, I'm just trying to make sure
it's the right choice.
Den 17 mar 2013 17:04 skrev "Roberto Di Cosmo" <roberto at dicosmo.org>:

> 3.12.x is still a fairly recent version of OCaml... what
> kind of new featurs do you need from 4.00 in your changes?
>
> On Sun, Mar 17, 2013 at 11:52:51AM -0400, Malcolm Matalka wrote:
> > I have a situation where the interface to Async has changed between
> > 108.08.00 and 109.13.00.  It is a simple change, but by making the
> > change I am giving up support for Ocaml 3.12.x, as far as I can tell.
> > Is this the accepted direction for opam packages?
> >
> > /Malcolm
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
>
> --
> Roberto Di Cosmo
>
> ------------------------------------------------------------------
> Professeur               En delegation a l'INRIA
> PPS                      E-mail: roberto at dicosmo.org
> Universite Paris Diderot WWW  : http://www.dicosmo.org
> Case 7014                Tel  : ++33-(0)1-57 27 92 20
> 5, Rue Thomas Mann
> F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
> FRANCE.                  Twitter: http://twitter.com/rdicosmo
> ------------------------------------------------------------------
> Attachments:
> MIME accepted, Word deprecated
>       http://www.gnu.org/philosophy/no-word-attachments.html
> ------------------------------------------------------------------
> Office location:
>
> Bureau 320 (3rd floor)
> Batiment Sophie Germain
> Avenue de France
> Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
> -----------------------------------------------------------------
> GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130317/16cd166c/attachment.html>

From anil at recoil.org  Sun Mar 17 16:22:15 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 17 Mar 2013 11:22:15 -0500
Subject: [opam-devel] Leaving 3.12.x support behind
In-Reply-To: <CAKziXDUxEXJd_UeaBUD45Uc7knBBM34Nh5tdOpc4BQBon9R0rA@mail.gmail.com>
References: <87obeic9bg.fsf@li195-236.members.linode.com>
 <20130317160430.GA30924@voyager>
 <CAKziXDUxEXJd_UeaBUD45Uc7knBBM34Nh5tdOpc4BQBon9R0rA@mail.gmail.com>
Message-ID: <72E2E01F-DEFD-4CD2-83F0-BD90E370147A@recoil.org>

I would follow Core. Staying pinned on an older version doesn't seem useful for a new package such as yours.

-anil

On 17 Mar 2013, at 11:10, Malcolm Matalka <mmatalka at gmail.com> wrote:

> I don't need a feature, but the lattest versions of Core require 4.00. And one of the API changes affects my package, so to support newer versions of Core I have to go to 4.00.  I'm ok with this, I'm just trying to make sure it's the right choice.
> 
> Den 17 mar 2013 17:04 skrev "Roberto Di Cosmo" <roberto at dicosmo.org>:
> 3.12.x is still a fairly recent version of OCaml... what
> kind of new featurs do you need from 4.00 in your changes?
> 
> On Sun, Mar 17, 2013 at 11:52:51AM -0400, Malcolm Matalka wrote:
> > I have a situation where the interface to Async has changed between
> > 108.08.00 and 109.13.00.  It is a simple change, but by making the
> > change I am giving up support for Ocaml 3.12.x, as far as I can tell.
> > Is this the accepted direction for opam packages?
> >
> > /Malcolm
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
> 
> --
> Roberto Di Cosmo
> 
> ------------------------------------------------------------------
> Professeur               En delegation a l'INRIA
> PPS                      E-mail: roberto at dicosmo.org
> Universite Paris Diderot WWW  : http://www.dicosmo.org
> Case 7014                Tel  : ++33-(0)1-57 27 92 20
> 5, Rue Thomas Mann
> F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
> FRANCE.                  Twitter: http://twitter.com/rdicosmo
> ------------------------------------------------------------------
> Attachments:
> MIME accepted, Word deprecated
>       http://www.gnu.org/philosophy/no-word-attachments.html
> ------------------------------------------------------------------
> Office location:
> 
> Bureau 320 (3rd floor)
> Batiment Sophie Germain
> Avenue de France
> Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
> -----------------------------------------------------------------
> GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From anil at recoil.org  Mon Mar 18 15:48:53 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 18 Mar 2013 10:48:53 -0500
Subject: [opam-devel] opam-1.0.1?
Message-ID: <526F3B52-54E5-48D8-9231-CD8CEB53AEE4@recoil.org>

The FreeBSD bug that snuck into 1.0.0 breaks quite a few things on that platform. The OS is considered to be "freebs", which is an unfortunate typo :-)

Thomas, should we issue a 1.0.1 point release with the fix, to make it easier to debug the other FreeBSD issues?

-anil


From thomas at ocamlpro.com  Mon Mar 18 15:58:25 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Mon, 18 Mar 2013 16:58:25 +0100
Subject: [opam-devel] opam-1.0.1?
In-Reply-To: <526F3B52-54E5-48D8-9231-CD8CEB53AEE4@recoil.org>
References: <526F3B52-54E5-48D8-9231-CD8CEB53AEE4@recoil.org>
Message-ID: <90F4AF14-C6E8-4A7A-A9BF-9AAE6DB20F96@ocamlpro.com>

> The FreeBSD bug that snuck into 1.0.0 breaks quite a few things on that platform. The OS is considered to be "freebs", which is an unfortunate typo :-)

Can't we just use "freebs" as an OS filter for now ? Or can we tell people on freeBSD to install from sources for `master` (if we fix the typo in master) ?

> Thomas, should we issue a 1.0.1 point release with the fix, to make it easier to debug the other FreeBSD issues?

Not sure it's worth running the release cycle again ...

Thomas


From anil at recoil.org  Mon Mar 18 16:04:05 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 18 Mar 2013 11:04:05 -0500
Subject: [opam-devel] opam-1.0.1?
In-Reply-To: <90F4AF14-C6E8-4A7A-A9BF-9AAE6DB20F96@ocamlpro.com>
References: <526F3B52-54E5-48D8-9231-CD8CEB53AEE4@recoil.org>
 <90F4AF14-C6E8-4A7A-A9BF-9AAE6DB20F96@ocamlpro.com>
Message-ID: <9637C4CA-DD66-4D75-B563-215151DE9633@recoil.org>

On 18 Mar 2013, at 10:58, Thomas Gazagnaire <thomas at ocamlpro.com> wrote:

>> The FreeBSD bug that snuck into 1.0.0 breaks quite a few things on that platform. The OS is considered to be "freebs", which is an unfortunate typo :-)
> 
> Can't we just use "freebs" as an OS filter for now ? Or can we tell people on freeBSD to install from sources for `master` (if we fix the typo in master) ?

The former won't be very nice when we fix the bug!  We could just tell people to run trunk, yeah...

> 
>> Thomas, should we issue a 1.0.1 point release with the fix, to make it easier to debug the other FreeBSD issues?
> 
> Not sure it's worth running the release cycle again ...

If there's nothing else in the queue immediately, it would be better not to let fixes linger in trunk... (but you might have other patches queued, hence this question)

-a

From thomas at ocamlpro.com  Mon Mar 18 16:09:37 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Mon, 18 Mar 2013 17:09:37 +0100
Subject: [opam-devel] opam-1.0.1?
In-Reply-To: <9637C4CA-DD66-4D75-B563-215151DE9633@recoil.org>
References: <526F3B52-54E5-48D8-9231-CD8CEB53AEE4@recoil.org>
 <90F4AF14-C6E8-4A7A-A9BF-9AAE6DB20F96@ocamlpro.com>
 <9637C4CA-DD66-4D75-B563-215151DE9633@recoil.org>
Message-ID: <7E406AF3-4B60-4528-AEF1-C03AFFD3FC4D@ocamlpro.com>

> The former won't be very nice when we fix the bug!  We could just tell people to run trunk, yeah...
we can still have a short transition period with ( os = "freebs" | os = "freebsd")

An other option it to tell people to temporary edit their ~/.opam/<swith>/conf/con-ocaml.config to fix their os variable.

>>> Thomas, should we issue a 1.0.1 point release with the fix, to make it easier to debug the other FreeBSD issues?
>> 
>> Not sure it's worth running the release cycle again ...
> 
> If there's nothing else in the queue immediately, it would be better not to let fixes linger in trunk... (but you might have other patches queued, hence this question)

No, no urgent patches in the pipeline (I haven't pushed anything to opam since the release actually).

--
Thomas

From anil at recoil.org  Mon Mar 18 16:12:47 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 18 Mar 2013 11:12:47 -0500
Subject: [opam-devel] opam-1.0.1?
In-Reply-To: <7E406AF3-4B60-4528-AEF1-C03AFFD3FC4D@ocamlpro.com>
References: <526F3B52-54E5-48D8-9231-CD8CEB53AEE4@recoil.org>
 <90F4AF14-C6E8-4A7A-A9BF-9AAE6DB20F96@ocamlpro.com>
 <9637C4CA-DD66-4D75-B563-215151DE9633@recoil.org>
 <7E406AF3-4B60-4528-AEF1-C03AFFD3FC4D@ocamlpro.com>
Message-ID: <2C83A7C1-FBD3-4278-AA8D-DD6362FECBA0@recoil.org>

On 18 Mar 2013, at 11:09, Thomas Gazagnaire <thomas at ocamlpro.com> wrote:

>> The former won't be very nice when we fix the bug!  We could just tell people to run trunk, yeah...
> we can still have a short transition period with ( os = "freebs" | os = "freebsd")
> 
> An other option it to tell people to temporary edit their ~/.opam/<swith>/conf/con-ocaml.config to fix their os variable.
> 
>>>> Thomas, should we issue a 1.0.1 point release with the fix, to make it easier to debug the other FreeBSD issues?
>>> 
>>> Not sure it's worth running the release cycle again ...
>> 
>> If there's nothing else in the queue immediately, it would be better not to let fixes linger in trunk... (but you might have other patches queued, hence this question)
> 
> No, no urgent patches in the pipeline (I haven't pushed anything to opam since the release actually).
> 

If there's nothing else, I think we should just cut a release... the problem is that it leaves people with a broken ~/.opam/<switch>/conf/con-ocaml.config, and a binary upgrade has to fix it up.

It seems prudent to prevent these broken configs as soon as possible, and release note the workaround...

-anil

(I haven't done the Deb packages yet, although of course this fix isn't material for Debian)

From anil at recoil.org  Mon Mar 18 16:13:41 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 18 Mar 2013 11:13:41 -0500
Subject: [opam-devel] [ocaml-platform] A small script for compiler
	hackers: create short-lived opam switches out of any git branch
In-Reply-To: <wf620psule.fsf@gmail.com>
References: <CAPFanBFcpQ8t-_HGiJxzxcsOUo6KLQ3FFoKZhGAxiLqgoaU7VA@mail.gmail.com>
 <wf620psule.fsf@gmail.com>
Message-ID: <2B25C84C-22EA-4774-879C-3F852929E47C@recoil.org>

On 17 Mar 2013, at 14:18, Wojciech Meyer <wojciech.meyer at gmail.com> wrote:

> Hi Gabriel,
> 
> all is needed for testing ocamlbuild and local patches for the compiler,
> thank you.
> 
> Other useful thing in general for OPAM would be something like:
> 
> opam patch add <ordered list_of_patches>
> opam patch reset
> 
> then we are able quickly test some local patches without touching
> command line and invoking makefiles.

Just to clarify this, are you asking for this for the compiler switches,
or for packages, or for both?

Local patches can be made to work with packages via `opam pin`, although
supporting a patch queue model may be useful in the future.

Compiler patches don't exist at the moment within OPAM, but I like Gabriel's
approach of taking an existing tree (that's, e.g., a git repo) and moving
it into the OPAM space.  You can just use the underlying VCS to track your
patches and branches without requiring more complexity in OPAM.

-anil



> 
> Gabriel Scherer <gabriel.scherer at gmail.com> writes:
> 
>> As part of the slowly-evolving benchmark work, I have developed a
>> script to turn any repository that quacks like an OCaml compiler and
>> can run "make world.opt" into an OPAM compiler switch.
>> 
>>  https://github.com/gasche/opam-compiler-conf
>> 
>> The intended use case is to change something, recompile what need be,
>> get a compiler switch for that, and install one or two packages for
>> testing something. You could envision, for example, OPAM being used in
>> the internal loop of a bisection process. In this case it is important
>> that OPAM does not recompile the compiler on its side (so the usual
>> technique of making a tarball of the compiler source and letting OPAM
>> do its job from there is not pleasant in that situation); the scripts
>> makes use of voodoo OPAM compiler options (thanks to Thomas in
>> https://github.com/OCamlPro/opam/pull/519 ) to have it just run "make
>> install" each time "opam switch reinstall" is called.
>> 
>> This is a quick&dirty shell script that works on my machine. No
>> guarantee that it will work on yours. It also assumes that the
>> version-control system (VCS) used is git, and calls "git branch" to
>> infer the name of the compiler switch to use. Eventual patches to
>> support other VCSs (or, for example, infer the switch name from the
>> directory name) would be welcome.
> _______________________________________________
> Platform mailing list
> Platform at lists.ocaml.org
> http://lists.ocaml.org/listinfo/platform
> 


From thomas at ocamlpro.com  Mon Mar 18 16:21:24 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Mon, 18 Mar 2013 17:21:24 +0100
Subject: [opam-devel] [ocaml-platform] A small script for compiler
	hackers: create short-lived opam switches out of any git branch
In-Reply-To: <2B25C84C-22EA-4774-879C-3F852929E47C@recoil.org>
References: <CAPFanBFcpQ8t-_HGiJxzxcsOUo6KLQ3FFoKZhGAxiLqgoaU7VA@mail.gmail.com>
 <wf620psule.fsf@gmail.com> <2B25C84C-22EA-4774-879C-3F852929E47C@recoil.org>
Message-ID: <9669B7CC-E026-4709-9426-6697B697A118@ocamlpro.com>

> Compiler patches don't exist at the moment within OPAM, but I like Gabriel's
> approach of taking an existing tree (that's, e.g., a git repo) and moving
> it into the OPAM space.  You can just use the underlying VCS to track your
> patches and branches without requiring more complexity in OPAM.

Not true :-)

You can use

patches: [ ... ]

in your compiler files as well. See: https://github.com/OCamlPro/opam/blob/master/src/core/opamFile.ml#L1167

The patch can be local or available via HTTP.

--
Thomas


> 
> -anil
> 
> 
> 
>> 
>> Gabriel Scherer <gabriel.scherer at gmail.com> writes:
>> 
>>> As part of the slowly-evolving benchmark work, I have developed a
>>> script to turn any repository that quacks like an OCaml compiler and
>>> can run "make world.opt" into an OPAM compiler switch.
>>> 
>>> https://github.com/gasche/opam-compiler-conf
>>> 
>>> The intended use case is to change something, recompile what need be,
>>> get a compiler switch for that, and install one or two packages for
>>> testing something. You could envision, for example, OPAM being used in
>>> the internal loop of a bisection process. In this case it is important
>>> that OPAM does not recompile the compiler on its side (so the usual
>>> technique of making a tarball of the compiler source and letting OPAM
>>> do its job from there is not pleasant in that situation); the scripts
>>> makes use of voodoo OPAM compiler options (thanks to Thomas in
>>> https://github.com/OCamlPro/opam/pull/519 ) to have it just run "make
>>> install" each time "opam switch reinstall" is called.
>>> 
>>> This is a quick&dirty shell script that works on my machine. No
>>> guarantee that it will work on yours. It also assumes that the
>>> version-control system (VCS) used is git, and calls "git branch" to
>>> infer the name of the compiler switch to use. Eventual patches to
>>> support other VCSs (or, for example, infer the switch name from the
>>> directory name) would be welcome.
>> _______________________________________________
>> Platform mailing list
>> Platform at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/platform
>> 
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From thomas at ocamlpro.com  Mon Mar 18 16:23:27 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Mon, 18 Mar 2013 17:23:27 +0100
Subject: [opam-devel] opam-1.0.1?
In-Reply-To: <2C83A7C1-FBD3-4278-AA8D-DD6362FECBA0@recoil.org>
References: <526F3B52-54E5-48D8-9231-CD8CEB53AEE4@recoil.org>
 <90F4AF14-C6E8-4A7A-A9BF-9AAE6DB20F96@ocamlpro.com>
 <9637C4CA-DD66-4D75-B563-215151DE9633@recoil.org>
 <7E406AF3-4B60-4528-AEF1-C03AFFD3FC4D@ocamlpro.com>
 <2C83A7C1-FBD3-4278-AA8D-DD6362FECBA0@recoil.org>
Message-ID: <D7078BF6-37C5-48E0-BB07-6067F9EEAD92@ocamlpro.com>

>>>>> Thomas, should we issue a 1.0.1 point release with the fix, to make it easier to debug the other FreeBSD issues?
>>>> 
>>>> Not sure it's worth running the release cycle again ...
>>> 
>>> If there's nothing else in the queue immediately, it would be better not to let fixes linger in trunk... (but you might have other patches queued, hence this question)
>> 
>> No, no urgent patches in the pipeline (I haven't pushed anything to opam since the release actually).
>> 
> 
> If there's nothing else, I think we should just cut a release... the problem is that it leaves people with a broken ~/.opam/<switch>/conf/con-ocaml.config, and a binary upgrade has to fix it up.
> 
> It seems prudent to prevent these broken configs as soon as possible, and release note the workaround...

Your're right, I'll find some time to do this tomorrow then. 

--
Thomas

From anil at recoil.org  Mon Mar 18 16:24:46 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 18 Mar 2013 11:24:46 -0500
Subject: [opam-devel] [ocaml-platform] A small script for compiler
	hackers: create short-lived opam switches out of any git branch
In-Reply-To: <9669B7CC-E026-4709-9426-6697B697A118@ocamlpro.com>
References: <CAPFanBFcpQ8t-_HGiJxzxcsOUo6KLQ3FFoKZhGAxiLqgoaU7VA@mail.gmail.com>
 <wf620psule.fsf@gmail.com> <2B25C84C-22EA-4774-879C-3F852929E47C@recoil.org>
 <9669B7CC-E026-4709-9426-6697B697A118@ocamlpro.com>
Message-ID: <0B0A8E91-DBC7-45ED-B75D-09B55F008B8E@recoil.org>

On 18 Mar 2013, at 11:21, Thomas Gazagnaire <thomas at ocamlpro.com> wrote:

>> Compiler patches don't exist at the moment within OPAM, but I like Gabriel's
>> approach of taking an existing tree (that's, e.g., a git repo) and moving
>> it into the OPAM space.  You can just use the underlying VCS to track your
>> patches and branches without requiring more complexity in OPAM.
> 
> Not true :-)
> 
> You can use
> 
> patches: [ ... ]
> 
> in your compiler files as well. See: https://github.com/OCamlPro/opam/blob/master/src/core/opamFile.ml#L1167
> 
> The patch can be local or available via HTTP.

Aha... I didn't realise these could be local too...very handy!

I still find it easier to work with a git repo directly, rather than having
to generate patch files (unless the branch is for 'publishing' to other people).

-anil

From wojciech.meyer at gmail.com  Mon Mar 18 16:41:24 2013
From: wojciech.meyer at gmail.com (Wojciech Meyer)
Date: Mon, 18 Mar 2013 16:41:24 +0000
Subject: [opam-devel] [ocaml-platform] A small script for compiler
 hackers: create short-lived opam switches out of any git branch
In-Reply-To: <2B25C84C-22EA-4774-879C-3F852929E47C@recoil.org>
References: <CAPFanBFcpQ8t-_HGiJxzxcsOUo6KLQ3FFoKZhGAxiLqgoaU7VA@mail.gmail.com>
 <wf620psule.fsf@gmail.com>
 <2B25C84C-22EA-4774-879C-3F852929E47C@recoil.org>
Message-ID: <CAOg1smBmaAAOFF8NNXtwUbY9Wkm8RwKGU1bzC_Q7CCy0x-LqGw@mail.gmail.com>

So the idea here was to use command line to quick apply patches and
test the integrity them after reviewing, but do this in such way I am
not forced to make the tree full of diffs.

On other hand maybe Gabriel idea scales better, I agree as we want to
commit them eventually.

The idea came to my mind after struggling with testing my patches and
trying out ocamlbuild on OPAM repo which I did but saying just "make
world.opt opt.opt install".

So probably the shell script takes precedence.


On Mon, Mar 18, 2013 at 4:13 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> On 17 Mar 2013, at 14:18, Wojciech Meyer <wojciech.meyer at gmail.com> wrote:
>
>> Hi Gabriel,
>>
>> all is needed for testing ocamlbuild and local patches for the compiler,
>> thank you.
>>
>> Other useful thing in general for OPAM would be something like:
>>
>> opam patch add <ordered list_of_patches>
>> opam patch reset
>>
>> then we are able quickly test some local patches without touching
>> command line and invoking makefiles.
>
> Just to clarify this, are you asking for this for the compiler switches,
> or for packages, or for both?
>
> Local patches can be made to work with packages via `opam pin`, although
> supporting a patch queue model may be useful in the future.
>
> Compiler patches don't exist at the moment within OPAM, but I like Gabriel's
> approach of taking an existing tree (that's, e.g., a git repo) and moving
> it into the OPAM space.  You can just use the underlying VCS to track your
> patches and branches without requiring more complexity in OPAM.
>
> -anil
>
>
>
>>
>> Gabriel Scherer <gabriel.scherer at gmail.com> writes:
>>
>>> As part of the slowly-evolving benchmark work, I have developed a
>>> script to turn any repository that quacks like an OCaml compiler and
>>> can run "make world.opt" into an OPAM compiler switch.
>>>
>>>  https://github.com/gasche/opam-compiler-conf
>>>
>>> The intended use case is to change something, recompile what need be,
>>> get a compiler switch for that, and install one or two packages for
>>> testing something. You could envision, for example, OPAM being used in
>>> the internal loop of a bisection process. In this case it is important
>>> that OPAM does not recompile the compiler on its side (so the usual
>>> technique of making a tarball of the compiler source and letting OPAM
>>> do its job from there is not pleasant in that situation); the scripts
>>> makes use of voodoo OPAM compiler options (thanks to Thomas in
>>> https://github.com/OCamlPro/opam/pull/519 ) to have it just run "make
>>> install" each time "opam switch reinstall" is called.
>>>
>>> This is a quick&dirty shell script that works on my machine. No
>>> guarantee that it will work on yours. It also assumes that the
>>> version-control system (VCS) used is git, and calls "git branch" to
>>> infer the name of the compiler switch to use. Eventual patches to
>>> support other VCSs (or, for example, infer the switch name from the
>>> directory name) would be welcome.
>> _______________________________________________
>> Platform mailing list
>> Platform at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/platform
>>
>

From gabriel.scherer at gmail.com  Mon Mar 18 18:03:10 2013
From: gabriel.scherer at gmail.com (Gabriel Scherer)
Date: Mon, 18 Mar 2013 19:03:10 +0100
Subject: [opam-devel] [ocaml-platform] A small script for compiler
 hackers: create short-lived opam switches out of any git branch
In-Reply-To: <CAOg1smBmaAAOFF8NNXtwUbY9Wkm8RwKGU1bzC_Q7CCy0x-LqGw@mail.gmail.com>
References: <CAPFanBFcpQ8t-_HGiJxzxcsOUo6KLQ3FFoKZhGAxiLqgoaU7VA@mail.gmail.com>
 <wf620psule.fsf@gmail.com> <2B25C84C-22EA-4774-879C-3F852929E47C@recoil.org>
 <CAOg1smBmaAAOFF8NNXtwUbY9Wkm8RwKGU1bzC_Q7CCy0x-LqGw@mail.gmail.com>
Message-ID: <CAPFanBFgjHPk=jF8wq5RSaEeShsEnu-xbjKZzhnvRJGEhdtWWg@mail.gmail.com>

I think my approach and the "patch" feature fulfill different needs:
the point here is that opam does *not* recompile the sources when
installing the switch. If you only provide an archive and a patch,
opam will have to recompile the sources.
I see my script as useful locally for compiler hackers (make
world.opt, hack a bit, make all to recompile only what's changed, opam
install & test, hack a bit, make all, opam install & test).
On the other side, the "patch" feature is useful if you want to
distribute your patches to less savvy users ("check my new
optimization patchset against your own programs", BER-MetaOCaml,
etc...).

On Mon, Mar 18, 2013 at 5:41 PM, Wojciech Meyer
<wojciech.meyer at gmail.com> wrote:
> So the idea here was to use command line to quick apply patches and
> test the integrity them after reviewing, but do this in such way I am
> not forced to make the tree full of diffs.
>
> On other hand maybe Gabriel idea scales better, I agree as we want to
> commit them eventually.
>
> The idea came to my mind after struggling with testing my patches and
> trying out ocamlbuild on OPAM repo which I did but saying just "make
> world.opt opt.opt install".
>
> So probably the shell script takes precedence.
>
>
> On Mon, Mar 18, 2013 at 4:13 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> On 17 Mar 2013, at 14:18, Wojciech Meyer <wojciech.meyer at gmail.com> wrote:
>>
>>> Hi Gabriel,
>>>
>>> all is needed for testing ocamlbuild and local patches for the compiler,
>>> thank you.
>>>
>>> Other useful thing in general for OPAM would be something like:
>>>
>>> opam patch add <ordered list_of_patches>
>>> opam patch reset
>>>
>>> then we are able quickly test some local patches without touching
>>> command line and invoking makefiles.
>>
>> Just to clarify this, are you asking for this for the compiler switches,
>> or for packages, or for both?
>>
>> Local patches can be made to work with packages via `opam pin`, although
>> supporting a patch queue model may be useful in the future.
>>
>> Compiler patches don't exist at the moment within OPAM, but I like Gabriel's
>> approach of taking an existing tree (that's, e.g., a git repo) and moving
>> it into the OPAM space.  You can just use the underlying VCS to track your
>> patches and branches without requiring more complexity in OPAM.
>>
>> -anil
>>
>>
>>
>>>
>>> Gabriel Scherer <gabriel.scherer at gmail.com> writes:
>>>
>>>> As part of the slowly-evolving benchmark work, I have developed a
>>>> script to turn any repository that quacks like an OCaml compiler and
>>>> can run "make world.opt" into an OPAM compiler switch.
>>>>
>>>>  https://github.com/gasche/opam-compiler-conf
>>>>
>>>> The intended use case is to change something, recompile what need be,
>>>> get a compiler switch for that, and install one or two packages for
>>>> testing something. You could envision, for example, OPAM being used in
>>>> the internal loop of a bisection process. In this case it is important
>>>> that OPAM does not recompile the compiler on its side (so the usual
>>>> technique of making a tarball of the compiler source and letting OPAM
>>>> do its job from there is not pleasant in that situation); the scripts
>>>> makes use of voodoo OPAM compiler options (thanks to Thomas in
>>>> https://github.com/OCamlPro/opam/pull/519 ) to have it just run "make
>>>> install" each time "opam switch reinstall" is called.
>>>>
>>>> This is a quick&dirty shell script that works on my machine. No
>>>> guarantee that it will work on yours. It also assumes that the
>>>> version-control system (VCS) used is git, and calls "git branch" to
>>>> infer the name of the compiler switch to use. Eventual patches to
>>>> support other VCSs (or, for example, infer the switch name from the
>>>> directory name) would be welcome.
>>> _______________________________________________
>>> Platform mailing list
>>> Platform at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/platform
>>>
>>

From daniel.buenzli at erratique.ch  Tue Mar 19 00:56:14 2013
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Tue, 19 Mar 2013 01:56:14 +0100
Subject: [opam-devel] Patching packages (was Re: [ocaml-platform] A small
 script for compiler hackers: create short-lived opam switches out of any
 git branch)
In-Reply-To: <9669B7CC-E026-4709-9426-6697B697A118@ocamlpro.com>
References: <CAPFanBFcpQ8t-_HGiJxzxcsOUo6KLQ3FFoKZhGAxiLqgoaU7VA@mail.gmail.com>
 <wf620psule.fsf@gmail.com>
 <2B25C84C-22EA-4774-879C-3F852929E47C@recoil.org>
 <9669B7CC-E026-4709-9426-6697B697A118@ocamlpro.com>
Message-ID: <0F4674D723B446349AC4809560814966@erratique.ch>

Le lundi, 18 mars 2013 ? 17:21, Thomas Gazagnaire a ?crit :
> You can use
>  
> patches: [ ... ]
>  
> in your compiler files as well. See: https://github.com/OCamlPro/opam/blob/master/src/core/opamFile.ml#L1167
>  
> The patch can be local or available via HTTP.
Is there a way to specify patches during install ? That is patching an existing package without redoing a package.  

The use case is that I have this patch [1] on ocp-indent that seems unlikely to be integrated (cf. [2]). Now I would like to be able to benefit from ocp-indent's default package updates but just apply the patch before installing.  

Is there a simple workflow to achieve that ?

Best,

Daniel

[1] https://github.com/dbuenzli/ocp-indent/commit/8e76b83b8ee8e3c084a39b3d02c9a2f331e91dd9
[2] https://github.com/OCamlPro/ocp-indent/issues/37



From anil at recoil.org  Tue Mar 19 14:26:23 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 19 Mar 2013 09:26:23 -0500
Subject: [opam-devel] [ocaml-platform] A small script for compiler
	hackers: create short-lived opam switches out of any git branch
In-Reply-To: <CAPFanBFgjHPk=jF8wq5RSaEeShsEnu-xbjKZzhnvRJGEhdtWWg@mail.gmail.com>
References: <CAPFanBFcpQ8t-_HGiJxzxcsOUo6KLQ3FFoKZhGAxiLqgoaU7VA@mail.gmail.com>
 <wf620psule.fsf@gmail.com> <2B25C84C-22EA-4774-879C-3F852929E47C@recoil.org>
 <CAOg1smBmaAAOFF8NNXtwUbY9Wkm8RwKGU1bzC_Q7CCy0x-LqGw@mail.gmail.com>
 <CAPFanBFgjHPk=jF8wq5RSaEeShsEnu-xbjKZzhnvRJGEhdtWWg@mail.gmail.com>
Message-ID: <4034A7F5-CFB9-4988-ADCA-C698E86511CF@recoil.org>

Yeah.  Is there any reason not to distribute your script with OPAM in a 
contrib/ directory btw?  It would be good to keep these in one place
just to make testing easier.

-anil

On 18 Mar 2013, at 13:03, Gabriel Scherer <gabriel.scherer at gmail.com> wrote:

> I think my approach and the "patch" feature fulfill different needs:
> the point here is that opam does *not* recompile the sources when
> installing the switch. If you only provide an archive and a patch,
> opam will have to recompile the sources.
> I see my script as useful locally for compiler hackers (make
> world.opt, hack a bit, make all to recompile only what's changed, opam
> install & test, hack a bit, make all, opam install & test).
> On the other side, the "patch" feature is useful if you want to
> distribute your patches to less savvy users ("check my new
> optimization patchset against your own programs", BER-MetaOCaml,
> etc...).
> 
> On Mon, Mar 18, 2013 at 5:41 PM, Wojciech Meyer
> <wojciech.meyer at gmail.com> wrote:
>> So the idea here was to use command line to quick apply patches and
>> test the integrity them after reviewing, but do this in such way I am
>> not forced to make the tree full of diffs.
>> 
>> On other hand maybe Gabriel idea scales better, I agree as we want to
>> commit them eventually.
>> 
>> The idea came to my mind after struggling with testing my patches and
>> trying out ocamlbuild on OPAM repo which I did but saying just "make
>> world.opt opt.opt install".
>> 
>> So probably the shell script takes precedence.
>> 
>> 
>> On Mon, Mar 18, 2013 at 4:13 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> On 17 Mar 2013, at 14:18, Wojciech Meyer <wojciech.meyer at gmail.com> wrote:
>>> 
>>>> Hi Gabriel,
>>>> 
>>>> all is needed for testing ocamlbuild and local patches for the compiler,
>>>> thank you.
>>>> 
>>>> Other useful thing in general for OPAM would be something like:
>>>> 
>>>> opam patch add <ordered list_of_patches>
>>>> opam patch reset
>>>> 
>>>> then we are able quickly test some local patches without touching
>>>> command line and invoking makefiles.
>>> 
>>> Just to clarify this, are you asking for this for the compiler switches,
>>> or for packages, or for both?
>>> 
>>> Local patches can be made to work with packages via `opam pin`, although
>>> supporting a patch queue model may be useful in the future.
>>> 
>>> Compiler patches don't exist at the moment within OPAM, but I like Gabriel's
>>> approach of taking an existing tree (that's, e.g., a git repo) and moving
>>> it into the OPAM space.  You can just use the underlying VCS to track your
>>> patches and branches without requiring more complexity in OPAM.
>>> 
>>> -anil
>>> 
>>> 
>>> 
>>>> 
>>>> Gabriel Scherer <gabriel.scherer at gmail.com> writes:
>>>> 
>>>>> As part of the slowly-evolving benchmark work, I have developed a
>>>>> script to turn any repository that quacks like an OCaml compiler and
>>>>> can run "make world.opt" into an OPAM compiler switch.
>>>>> 
>>>>> https://github.com/gasche/opam-compiler-conf
>>>>> 
>>>>> The intended use case is to change something, recompile what need be,
>>>>> get a compiler switch for that, and install one or two packages for
>>>>> testing something. You could envision, for example, OPAM being used in
>>>>> the internal loop of a bisection process. In this case it is important
>>>>> that OPAM does not recompile the compiler on its side (so the usual
>>>>> technique of making a tarball of the compiler source and letting OPAM
>>>>> do its job from there is not pleasant in that situation); the scripts
>>>>> makes use of voodoo OPAM compiler options (thanks to Thomas in
>>>>> https://github.com/OCamlPro/opam/pull/519 ) to have it just run "make
>>>>> install" each time "opam switch reinstall" is called.
>>>>> 
>>>>> This is a quick&dirty shell script that works on my machine. No
>>>>> guarantee that it will work on yours. It also assumes that the
>>>>> version-control system (VCS) used is git, and calls "git branch" to
>>>>> infer the name of the compiler switch to use. Eventual patches to
>>>>> support other VCSs (or, for example, infer the switch name from the
>>>>> directory name) would be welcome.
>>>> _______________________________________________
>>>> Platform mailing list
>>>> Platform at lists.ocaml.org
>>>> http://lists.ocaml.org/listinfo/platform
>>>> 
>>> 
> 


From daniel.buenzli at erratique.ch  Mon Mar 25 15:33:05 2013
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Mon, 25 Mar 2013 16:33:05 +0100
Subject: [opam-devel] Separation of descr and opam
Message-ID: <67BB0CBB82E447E4A9888C4FA239F34A@erratique.ch>

Hello,

I guess there must be a reason why opam chooses not to include the info of `descr` as fields in `opam` files. I have a few hypotheses but none that convince me, I'm interested in knowing the technical rationale behind that choice; just being curious.

Best,

Daniel

  



From anil at recoil.org  Mon Mar 25 15:53:14 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 25 Mar 2013 15:53:14 +0000
Subject: [opam-devel] versioning of Core packages
Message-ID: <D31C666D-EA65-4B53-AE8C-264B7BBE9FBD@recoil.org>

I think we do need to figure out a better versioning story for the various Core packages in OPAM. While there is a fair amount of change every week, there are a lot of packages that never materially change between versions.  This is causing a lot of rebuilding churn.  In particular, as useful libraries such as Jenga and type_conv get used more and more, it places Core right at the heart of the build graph.

Jeremie, Yaron, what's your view on decoupling a few of the more core libraries and bumping their versions independently of Core itself?  I'm thinking of the syntax extensions mainly.

Note that this could be as simple as not including them in a weekly release, and bumping their versions up to the latest if a change does happen.  Or, an alternative is to specify the constraints in OPAM such that an older interface that hasn't changed would be included in the constraint, and hence not trigger an upgrade unless required.

-anil



From thomas at ocamlpro.com  Mon Mar 25 15:56:52 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Mon, 25 Mar 2013 16:56:52 +0100
Subject: [opam-devel] Separation of descr and opam
In-Reply-To: <67BB0CBB82E447E4A9888C4FA239F34A@erratique.ch>
References: <67BB0CBB82E447E4A9888C4FA239F34A@erratique.ch>
Message-ID: <3359C462-80C2-4B89-ADB0-37065E372668@ocamlpro.com>

The main reason is escaping. When you want to use some raw text in a structured file you need escaping rules and I found it very annoying.

Thomas

On Mar 25, 2013, at 4:33 PM, Daniel B?nzli wrote:

> Hello,
> 
> I guess there must be a reason why opam chooses not to include the info of `descr` as fields in `opam` files. I have a few hypotheses but none that convince me, I'm interested in knowing the technical rationale behind that choice; just being curious.
> 
> Best,
> 
> Daniel
> 
> 
> 
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From jdimino at janestreet.com  Mon Mar 25 16:16:31 2013
From: jdimino at janestreet.com (Jeremie Dimino)
Date: Mon, 25 Mar 2013 16:16:31 +0000
Subject: [opam-devel] versioning of Core packages
In-Reply-To: <D31C666D-EA65-4B53-AE8C-264B7BBE9FBD@recoil.org>
References: <D31C666D-EA65-4B53-AE8C-264B7BBE9FBD@recoil.org>
Message-ID: <CANhEzE6_YE3ve4089njhMiN26zfr7DY2463Oe0BV3_KdOKtUhw@mail.gmail.com>

On Mon, Mar 25, 2013 at 3:53 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> Jeremie, Yaron, what's your view on decoupling a few of the more core libraries and bumping their versions independently of Core itself?  I'm thinking of the syntax extensions mainly.

I have no objection.

> Note that this could be as simple as not including them in a weekly release, and bumping their versions up to the latest if a change does happen.  Or, an alternative is to specify the constraints in OPAM such that an older interface that hasn't changed would be included in the constraint, and hence not trigger an upgrade unless required.

The first solution seems fine to me.  For the second one all the
packages would still be rebuilt by "opam upgrade"?

From anil at recoil.org  Mon Mar 25 16:20:11 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 25 Mar 2013 16:20:11 +0000
Subject: [opam-devel] versioning of Core packages
In-Reply-To: <CANhEzE6_YE3ve4089njhMiN26zfr7DY2463Oe0BV3_KdOKtUhw@mail.gmail.com>
References: <D31C666D-EA65-4B53-AE8C-264B7BBE9FBD@recoil.org>
 <CANhEzE6_YE3ve4089njhMiN26zfr7DY2463Oe0BV3_KdOKtUhw@mail.gmail.com>
Message-ID: <444F36B2-E1B0-4E95-B020-3EFB231DE4E6@recoil.org>

On 25 Mar 2013, at 16:16, Jeremie Dimino <jdimino at janestreet.com> wrote:

> On Mon, Mar 25, 2013 at 3:53 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> Jeremie, Yaron, what's your view on decoupling a few of the more core libraries and bumping their versions independently of Core itself?  I'm thinking of the syntax extensions mainly.
> 
> I have no objection.
> 
>> Note that this could be as simple as not including them in a weekly release, and bumping their versions up to the latest if a change does happen.  Or, an alternative is to specify the constraints in OPAM such that an older interface that hasn't changed would be included in the constraint, and hence not trigger an upgrade unless required.
> 
> The first solution seems fine to me.  For the second one all the
> packages would still be rebuilt by "opam upgrade"?
> 

Yeah they would.  I was thinking of a heuristic that would require only the root packages to be upgraded to their latest versions (that is, the ones explicitly installed by the OPAM user), and leave intermediate packages until a full upgrade is requested.

However, it would just be easier if the versioning was decoupled from the get-go.

-anil

From jdimino at janestreet.com  Mon Mar 25 16:33:20 2013
From: jdimino at janestreet.com (Jeremie Dimino)
Date: Mon, 25 Mar 2013 16:33:20 +0000
Subject: [opam-devel] versioning of Core packages
In-Reply-To: <444F36B2-E1B0-4E95-B020-3EFB231DE4E6@recoil.org>
References: <D31C666D-EA65-4B53-AE8C-264B7BBE9FBD@recoil.org>
 <CANhEzE6_YE3ve4089njhMiN26zfr7DY2463Oe0BV3_KdOKtUhw@mail.gmail.com>
 <444F36B2-E1B0-4E95-B020-3EFB231DE4E6@recoil.org>
Message-ID: <CANhEzE6RjUX=KuLQMpVMYX+hOhCniVa_6vWv+wiPJTpMH1pbDg@mail.gmail.com>

On Mon, Mar 25, 2013 at 4:20 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> Yeah they would.  I was thinking of a heuristic that would require only the root packages to be upgraded to their latest versions (that is, the ones explicitly installed by the OPAM user), and leave intermediate packages until a full upgrade is requested.
>
> However, it would just be easier if the versioning was decoupled from the get-go.

Agreed.  It seems much simpler this way.  I can do that for the next
week release.

-- 
Jeremie

From anil at recoil.org  Mon Mar 25 16:35:29 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 25 Mar 2013 16:35:29 +0000
Subject: [opam-devel] versioning of Core packages
In-Reply-To: <CANhEzE6RjUX=KuLQMpVMYX+hOhCniVa_6vWv+wiPJTpMH1pbDg@mail.gmail.com>
References: <D31C666D-EA65-4B53-AE8C-264B7BBE9FBD@recoil.org>
 <CANhEzE6_YE3ve4089njhMiN26zfr7DY2463Oe0BV3_KdOKtUhw@mail.gmail.com>
 <444F36B2-E1B0-4E95-B020-3EFB231DE4E6@recoil.org>
 <CANhEzE6RjUX=KuLQMpVMYX+hOhCniVa_6vWv+wiPJTpMH1pbDg@mail.gmail.com>
Message-ID: <118A0383-171D-4740-8367-7B60B4979C5B@recoil.org>

On 25 Mar 2013, at 16:33, Jeremie Dimino <jdimino at janestreet.com> wrote:

> On Mon, Mar 25, 2013 at 4:20 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> Yeah they would.  I was thinking of a heuristic that would require only the root packages to be upgraded to their latest versions (that is, the ones explicitly installed by the OPAM user), and leave intermediate packages until a full upgrade is requested.
>> 
>> However, it would just be easier if the versioning was decoupled from the get-go.
> 
> Agreed.  It seems much simpler this way.  I can do that for the next
> week release.

Thanks! The staging builds for this 109.15.00 are still running, but look fine so far.

-anil

From anil at recoil.org  Tue Mar 26 15:22:54 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 26 Mar 2013 15:22:54 +0000
Subject: [opam-devel] [wg-camlp4] Changes to the parsetree
In-Reply-To: <CALru5wV2n-+oo1Vy5J=RWKD966hGAFiQ4APKnVcLcNW0L+mxAQ@mail.gmail.com>
References: <87r4jh3nnj.fsf@kingston.cl.cam.ac.uk>
 <1625554563.3446096.1363346665809.JavaMail.root@lexifi.com>
 <CAPFanBG+2necpa3XvjQLhLiYM0rc1m9tpj=6yJ60i2GDaS3h-g@mail.gmail.com>
 <87sj3wojlp.fsf@kingston.cl.cam.ac.uk>
 <CAPFanBFgNn1knLyafsAh6bxy5V_O--cyuvfUJ-ba-MBRfrKLmg@mail.gmail.com>
 <514ACFC1.5090705@lexifi.com> <87ppytm53s.fsf@kingston.cl.cam.ac.uk>
 <CAPFanBHi473eqdtW8hpoH1xk+buMjiRQ_xLgH3SiJOE1gu67ag@mail.gmail.com>
 <514C424A.6070905@lexifi.com> <51503841.7040708@lexifi.com>
 <83EA4AF5-E403-4CB1-971B-04C82078C183@gmail.com>
 <51509C4D.9010509@lexifi.com>
 <CALru5wV2n-+oo1Vy5J=RWKD966hGAFiQ4APKnVcLcNW0L+mxAQ@mail.gmail.com>
Message-ID: <DAF0958C-4577-4694-9348-3BC7A37C8FD4@recoil.org>

There is no such OPAM remote at the moment, but I think it would be good to add one and move out some of the more experimental branches (e.g. allocation-profiling) from the main OPAM repo.

Thomas, any objections to me doing this rearrangement in OCamlPro/opam-repository?

-anil

On 26 Mar 2013, at 15:15, Mike McClurg <mike.mcclurg at gmail.com> wrote:

> Hi Alain,
> 
> Thanks for writing up that proposal. Is the code in your extension_points branch ready for testing at all yet?
> 
> On a separate note, might it be a good idea to add an opam-repo-dev repository to github.com/ocaml, which would provide opam switches for all the experimental OCaml branches, such as extension_points? Or is there such an experimental opam repo out there already?
> 
> Mike
> 
> 
> On Mon, Mar 25, 2013 at 6:49 PM, Alain Frisch <alain.frisch at lexifi.com> wrote:
> On 03/25/2013 03:13 PM, jathdr wrote:
> Could we get a summary of the current syntax proposal? I've been
> following along, but I'm a bit lost as to what has been discussed,
> accepted, rejected, etc.
> 
> This file describes the current syntax proposal:
> 
> http://caml.inria.fr/cgi-bin/viewvc.cgi/ocaml/branches/extension_points/experimental/frisch/extension_points.txt?revision=HEAD&view=markup
> 
> 
> 
> This is probably a bit off topic, but while we're talking about
> interval patterns: I discovered the other day that interval patterns
> only work for chars, while I always assumed they also worked for
> ints. Is there a reason why they don't?
> 
> Currently, range patterns for characters are expanded in the parser. Doing so for integers as well could lead to huge or-patterns to be processed by the rest of the compiler.  Supporting range patterns directly in the compiler would add a little bit of extra complexity for type-checking (exhaustiveness check) and code generation.  I don't see any theoretical problem, though.
> 
> 
> -- Alain
> 
> _______________________________________________
> wg-camlp4 mailing list
> wg-camlp4 at lists.ocaml.org
> http://lists.ocaml.org/listinfo/wg-camlp4
> 
> _______________________________________________
> wg-camlp4 mailing list
> wg-camlp4 at lists.ocaml.org
> http://lists.ocaml.org/listinfo/wg-camlp4


From thomas at ocamlpro.com  Tue Mar 26 15:25:44 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Tue, 26 Mar 2013 16:25:44 +0100
Subject: [opam-devel] [wg-camlp4] Changes to the parsetree
In-Reply-To: <DAF0958C-4577-4694-9348-3BC7A37C8FD4@recoil.org>
References: <87r4jh3nnj.fsf@kingston.cl.cam.ac.uk>
 <1625554563.3446096.1363346665809.JavaMail.root@lexifi.com>
 <CAPFanBG+2necpa3XvjQLhLiYM0rc1m9tpj=6yJ60i2GDaS3h-g@mail.gmail.com>
 <87sj3wojlp.fsf@kingston.cl.cam.ac.uk>
 <CAPFanBFgNn1knLyafsAh6bxy5V_O--cyuvfUJ-ba-MBRfrKLmg@mail.gmail.com>
 <514ACFC1.5090705@lexifi.com> <87ppytm53s.fsf@kingston.cl.cam.ac.uk>
 <CAPFanBHi473eqdtW8hpoH1xk+buMjiRQ_xLgH3SiJOE1gu67ag@mail.gmail.com>
 <514C424A.6070905@lexifi.com> <51503841.7040708@lexifi.com>
 <83EA4AF5-E403-4CB1-971B-04C82078C183@gmail.com>
 <51509C4D.9010509@lexifi.com>
 <CALru5wV2n-+oo1Vy5J=RWKD966hGAFiQ4APKnVcLcNW0L+mxAQ@mail.gmail.com>
 <DAF0958C-4577-4694-9348-3BC7A37C8FD4@recoil.org>
Message-ID: <F67CCC6A-1F88-4092-9108-1B792FDE6757@ocamlpro.com>

> Thomas, any objections to me doing this rearrangement in OCamlPro/opam-repository?

No pb. I am just a bit concerned with the list of compilers growing unbounded, but for now I think it's completely fine.

Thomas

> 
> -anil
> 
> On 26 Mar 2013, at 15:15, Mike McClurg <mike.mcclurg at gmail.com> wrote:
> 
>> Hi Alain,
>> 
>> Thanks for writing up that proposal. Is the code in your extension_points branch ready for testing at all yet?
>> 
>> On a separate note, might it be a good idea to add an opam-repo-dev repository to github.com/ocaml, which would provide opam switches for all the experimental OCaml branches, such as extension_points? Or is there such an experimental opam repo out there already?
>> 
>> Mike
>> 
>> 
>> On Mon, Mar 25, 2013 at 6:49 PM, Alain Frisch <alain.frisch at lexifi.com> wrote:
>> On 03/25/2013 03:13 PM, jathdr wrote:
>> Could we get a summary of the current syntax proposal? I've been
>> following along, but I'm a bit lost as to what has been discussed,
>> accepted, rejected, etc.
>> 
>> This file describes the current syntax proposal:
>> 
>> http://caml.inria.fr/cgi-bin/viewvc.cgi/ocaml/branches/extension_points/experimental/frisch/extension_points.txt?revision=HEAD&view=markup
>> 
>> 
>> 
>> This is probably a bit off topic, but while we're talking about
>> interval patterns: I discovered the other day that interval patterns
>> only work for chars, while I always assumed they also worked for
>> ints. Is there a reason why they don't?
>> 
>> Currently, range patterns for characters are expanded in the parser. Doing so for integers as well could lead to huge or-patterns to be processed by the rest of the compiler.  Supporting range patterns directly in the compiler would add a little bit of extra complexity for type-checking (exhaustiveness check) and code generation.  I don't see any theoretical problem, though.
>> 
>> 
>> -- Alain
>> 
>> _______________________________________________
>> wg-camlp4 mailing list
>> wg-camlp4 at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/wg-camlp4
>> 
>> _______________________________________________
>> wg-camlp4 mailing list
>> wg-camlp4 at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/wg-camlp4
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From anil at recoil.org  Tue Mar 26 15:27:19 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 26 Mar 2013 15:27:19 +0000
Subject: [opam-devel] [wg-camlp4] Changes to the parsetree
In-Reply-To: <F67CCC6A-1F88-4092-9108-1B792FDE6757@ocamlpro.com>
References: <87r4jh3nnj.fsf@kingston.cl.cam.ac.uk>
 <1625554563.3446096.1363346665809.JavaMail.root@lexifi.com>
 <CAPFanBG+2necpa3XvjQLhLiYM0rc1m9tpj=6yJ60i2GDaS3h-g@mail.gmail.com>
 <87sj3wojlp.fsf@kingston.cl.cam.ac.uk>
 <CAPFanBFgNn1knLyafsAh6bxy5V_O--cyuvfUJ-ba-MBRfrKLmg@mail.gmail.com>
 <514ACFC1.5090705@lexifi.com> <87ppytm53s.fsf@kingston.cl.cam.ac.uk>
 <CAPFanBHi473eqdtW8hpoH1xk+buMjiRQ_xLgH3SiJOE1gu67ag@mail.gmail.com>
 <514C424A.6070905@lexifi.com> <51503841.7040708@lexifi.com>
 <83EA4AF5-E403-4CB1-971B-04C82078C183@gmail.com>
 <51509C4D.9010509@lexifi.com>
 <CALru5wV2n-+oo1Vy5J=RWKD966hGAFiQ4APKnVcLcNW0L+mxAQ@mail.gmail.com>
 <DAF0958C-4577-4694-9348-3BC7A37C8FD4@recoil.org>
 <F67CCC6A-1F88-4092-9108-1B792FDE6757@ocamlpro.com>
Message-ID: <F7606EEE-F157-4128-8D1D-009028FD055C@recoil.org>

On 26 Mar 2013, at 15:25, Thomas Gazagnaire <thomas at ocamlpro.com> wrote:

>> Thomas, any objections to me doing this rearrangement in OCamlPro/opam-repository?
> 
> No pb. I am just a bit concerned with the list of compilers growing unbounded, but for now I think it's completely fine.
> 

Right, so this would reduce the number of compilers in OCamlPro/opam-repository and move them to this experimental one.

I wonder if it's time to have an OPAM remotes discovery service :-)

-anil



> Thomas
> 
>> 
>> -anil
>> 
>> On 26 Mar 2013, at 15:15, Mike McClurg <mike.mcclurg at gmail.com> wrote:
>> 
>>> Hi Alain,
>>> 
>>> Thanks for writing up that proposal. Is the code in your extension_points branch ready for testing at all yet?
>>> 
>>> On a separate note, might it be a good idea to add an opam-repo-dev repository to github.com/ocaml, which would provide opam switches for all the experimental OCaml branches, such as extension_points? Or is there such an experimental opam repo out there already?
>>> 
>>> Mike
>>> 
>>> 
>>> On Mon, Mar 25, 2013 at 6:49 PM, Alain Frisch <alain.frisch at lexifi.com> wrote:
>>> On 03/25/2013 03:13 PM, jathdr wrote:
>>> Could we get a summary of the current syntax proposal? I've been
>>> following along, but I'm a bit lost as to what has been discussed,
>>> accepted, rejected, etc.
>>> 
>>> This file describes the current syntax proposal:
>>> 
>>> http://caml.inria.fr/cgi-bin/viewvc.cgi/ocaml/branches/extension_points/experimental/frisch/extension_points.txt?revision=HEAD&view=markup
>>> 
>>> 
>>> 
>>> This is probably a bit off topic, but while we're talking about
>>> interval patterns: I discovered the other day that interval patterns
>>> only work for chars, while I always assumed they also worked for
>>> ints. Is there a reason why they don't?
>>> 
>>> Currently, range patterns for characters are expanded in the parser. Doing so for integers as well could lead to huge or-patterns to be processed by the rest of the compiler.  Supporting range patterns directly in the compiler would add a little bit of extra complexity for type-checking (exhaustiveness check) and code generation.  I don't see any theoretical problem, though.
>>> 
>>> 
>>> -- Alain
>>> 
>>> _______________________________________________
>>> wg-camlp4 mailing list
>>> wg-camlp4 at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/wg-camlp4
>>> 
>>> _______________________________________________
>>> wg-camlp4 mailing list
>>> wg-camlp4 at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/wg-camlp4
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> 


From agarwal1975 at gmail.com  Wed Mar 27 14:31:53 2013
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Wed, 27 Mar 2013 10:31:53 -0400
Subject: [opam-devel] printing detailed dependency analysis
Message-ID: <CAMu2m2LUYR0NstYRe0DRhCzqm+xFqHri_qKGJBmCZt_kZ3fcrQ@mail.gmail.com>

Is there any way to get a detailed print out of a package's dependency
tree? I'm in a situation that is hard to debug.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130327/d3684d1e/attachment.html>

From thomas at ocamlpro.com  Wed Mar 27 14:47:08 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Wed, 27 Mar 2013 15:47:08 +0100
Subject: [opam-devel] printing detailed dependency analysis
In-Reply-To: <CAMu2m2LUYR0NstYRe0DRhCzqm+xFqHri_qKGJBmCZt_kZ3fcrQ@mail.gmail.com>
References: <CAMu2m2LUYR0NstYRe0DRhCzqm+xFqHri_qKGJBmCZt_kZ3fcrQ@mail.gmail.com>
Message-ID: <E31BA96D-021F-4355-AA31-0F4CEFC50EDB@ocamlpro.com>

You can try:

$ opam upgrade --cudf=foo ocamlfind

hopefully this is just a no-op which produces foo.dot. Then:

$ dot -Tpng foo.dot > foo.png

This will build the graph of all available packages where the roots are the installed ones.

--
Thomas



On Mar 27, 2013, at 3:31 PM, Ashish Agarwal wrote:

> Is there any way to get a detailed print out of a package's dependency tree? I'm in a situation that is hard to debug.
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From thomas at ocamlpro.com  Wed Mar 27 14:50:09 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Wed, 27 Mar 2013 15:50:09 +0100
Subject: [opam-devel] printing detailed dependency analysis
In-Reply-To: <E31BA96D-021F-4355-AA31-0F4CEFC50EDB@ocamlpro.com>
References: <CAMu2m2LUYR0NstYRe0DRhCzqm+xFqHri_qKGJBmCZt_kZ3fcrQ@mail.gmail.com>
 <E31BA96D-021F-4355-AA31-0F4CEFC50EDB@ocamlpro.com>
Message-ID: <8FB01DDD-A9AE-4691-BE53-3AF4CBCD0D3C@ocamlpro.com>

Remark: this is really just a hack, I agree it would be good to move that thing into a proper command later.

We've discussed about creating 'opam-check' which will do this kind of computations using opam-lib, but we've never really had the time to do this properly. As always, contributions are welcome as this is quite distinct from the core of OPAM (eg. the mechanics of installing/removing packages).

Thomas


On Mar 27, 2013, at 3:47 PM, Thomas Gazagnaire wrote:

> You can try:
> 
> $ opam upgrade --cudf=foo ocamlfind
> 
> hopefully this is just a no-op which produces foo.dot. Then:
> 
> $ dot -Tpng foo.dot > foo.png
> 
> This will build the graph of all available packages where the roots are the installed ones.
> 
> --
> Thomas
> 
> 
> 
> On Mar 27, 2013, at 3:31 PM, Ashish Agarwal wrote:
> 
>> Is there any way to get a detailed print out of a package's dependency tree? I'm in a situation that is hard to debug.
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> 


From agarwal1975 at gmail.com  Wed Mar 27 15:32:49 2013
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Wed, 27 Mar 2013 11:32:49 -0400
Subject: [opam-devel] printing detailed dependency analysis
In-Reply-To: <8FB01DDD-A9AE-4691-BE53-3AF4CBCD0D3C@ocamlpro.com>
References: <CAMu2m2LUYR0NstYRe0DRhCzqm+xFqHri_qKGJBmCZt_kZ3fcrQ@mail.gmail.com>
 <E31BA96D-021F-4355-AA31-0F4CEFC50EDB@ocamlpro.com>
 <8FB01DDD-A9AE-4691-BE53-3AF4CBCD0D3C@ocamlpro.com>
Message-ID: <CAMu2m2Li4-RzK6rQgpy6=cy=SPR_rt8CCDagXaDCbUQxBqWMDw@mail.gmail.com>

We have a package Flow (pinned to a local copy), which when I try to
install it, I'm told requires downgrading lwt to 2.4.2. I see no reason why
this should be, so I tried running your command to investigate:

$ opam upgrade --cudf=flow flow
flow is not installed.
Already up-to-date.

$ dot -Tpng flow.dot > flow.png

However, the resulting png doesn't have a node for Flow. I guess only
installed packages are depicted.

So I pinned lwt to the currently installed version 2.4.3, then managed to
successfully install Flow. Now, the output shows that Flow depends on lwt
2.4.3.

Unfortunately, I need to see why opam thought Flow depends on lwt 2.4.2 in
the original case. Unfortunately, the output doesn't help investigate this.

Precisely, what we need is to see---when `opam install` says such and such
packages must be upgraded, installed, downgraded---to know exactly what
sequence of dependencies led to that end result. I appreciate this may not
be easy to provide.


On Wed, Mar 27, 2013 at 10:50 AM, Thomas Gazagnaire <thomas at ocamlpro.com>wrote:

> Remark: this is really just a hack, I agree it would be good to move that
> thing into a proper command later.
>
> We've discussed about creating 'opam-check' which will do this kind of
> computations using opam-lib, but we've never really had the time to do this
> properly. As always, contributions are welcome as this is quite distinct
> from the core of OPAM (eg. the mechanics of installing/removing packages).
>
> Thomas
>
>
> On Mar 27, 2013, at 3:47 PM, Thomas Gazagnaire wrote:
>
> > You can try:
> >
> > $ opam upgrade --cudf=foo ocamlfind
> >
> > hopefully this is just a no-op which produces foo.dot. Then:
> >
> > $ dot -Tpng foo.dot > foo.png
> >
> > This will build the graph of all available packages where the roots are
> the installed ones.
> >
> > --
> > Thomas
> >
> >
> >
> > On Mar 27, 2013, at 3:31 PM, Ashish Agarwal wrote:
> >
> >> Is there any way to get a detailed print out of a package's dependency
> tree? I'm in a situation that is hard to debug.
> >>
> >> _______________________________________________
> >> opam-devel mailing list
> >> opam-devel at lists.ocaml.org
> >> http://lists.ocaml.org/listinfo/opam-devel
> >
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130327/42bd0702/attachment.html>

From agarwal1975 at gmail.com  Wed Mar 27 15:42:11 2013
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Wed, 27 Mar 2013 11:42:11 -0400
Subject: [opam-devel] printing detailed dependency analysis
In-Reply-To: <CAMu2m2Li4-RzK6rQgpy6=cy=SPR_rt8CCDagXaDCbUQxBqWMDw@mail.gmail.com>
References: <CAMu2m2LUYR0NstYRe0DRhCzqm+xFqHri_qKGJBmCZt_kZ3fcrQ@mail.gmail.com>
 <E31BA96D-021F-4355-AA31-0F4CEFC50EDB@ocamlpro.com>
 <8FB01DDD-A9AE-4691-BE53-3AF4CBCD0D3C@ocamlpro.com>
 <CAMu2m2Li4-RzK6rQgpy6=cy=SPR_rt8CCDagXaDCbUQxBqWMDw@mail.gmail.com>
Message-ID: <CAMu2m2JvjZkqFGA5BXjLw2sWX56W0xrBrdQ9bbYmGXLJcnnJVA@mail.gmail.com>

Sorry, I realize a simpler explanation is possible: I want to see the
dependencies that are actually stated in a package. For example, the output
with the suggested commands includes version numbers, but there are no
version number constraints stated in Flow's opam file.

On Wed, Mar 27, 2013 at 11:32 AM, Ashish Agarwal <agarwal1975 at gmail.com>wrote:

> We have a package Flow (pinned to a local copy), which when I try to
> install it, I'm told requires downgrading lwt to 2.4.2. I see no reason why
> this should be, so I tried running your command to investigate:
>
>  $ opam upgrade --cudf=flow flow
> flow is not installed.
> Already up-to-date.
>
> $ dot -Tpng flow.dot > flow.png
>
> However, the resulting png doesn't have a node for Flow. I guess only
> installed packages are depicted.
>
> So I pinned lwt to the currently installed version 2.4.3, then managed to
> successfully install Flow. Now, the output shows that Flow depends on lwt
> 2.4.3.
>
> Unfortunately, I need to see why opam thought Flow depends on lwt 2.4.2 in
> the original case. Unfortunately, the output doesn't help investigate this.
>
> Precisely, what we need is to see---when `opam install` says such and such
> packages must be upgraded, installed, downgraded---to know exactly what
> sequence of dependencies led to that end result. I appreciate this may not
> be easy to provide.
>
>
> On Wed, Mar 27, 2013 at 10:50 AM, Thomas Gazagnaire <thomas at ocamlpro.com>wrote:
>
>> Remark: this is really just a hack, I agree it would be good to move that
>> thing into a proper command later.
>>
>> We've discussed about creating 'opam-check' which will do this kind of
>> computations using opam-lib, but we've never really had the time to do this
>> properly. As always, contributions are welcome as this is quite distinct
>> from the core of OPAM (eg. the mechanics of installing/removing packages).
>>
>> Thomas
>>
>>
>> On Mar 27, 2013, at 3:47 PM, Thomas Gazagnaire wrote:
>>
>> > You can try:
>> >
>> > $ opam upgrade --cudf=foo ocamlfind
>> >
>> > hopefully this is just a no-op which produces foo.dot. Then:
>> >
>> > $ dot -Tpng foo.dot > foo.png
>> >
>> > This will build the graph of all available packages where the roots are
>> the installed ones.
>> >
>> > --
>> > Thomas
>> >
>> >
>> >
>> > On Mar 27, 2013, at 3:31 PM, Ashish Agarwal wrote:
>> >
>> >> Is there any way to get a detailed print out of a package's dependency
>> tree? I'm in a situation that is hard to debug.
>> >>
>> >> _______________________________________________
>> >> opam-devel mailing list
>> >> opam-devel at lists.ocaml.org
>> >> http://lists.ocaml.org/listinfo/opam-devel
>> >
>>
>>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130327/1a0db83a/attachment-0001.html>

From roberto at dicosmo.org  Wed Mar 27 16:00:04 2013
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Wed, 27 Mar 2013 17:00:04 +0100
Subject: [opam-devel] printing detailed dependency analysis
In-Reply-To: <8FB01DDD-A9AE-4691-BE53-3AF4CBCD0D3C@ocamlpro.com>
References: <CAMu2m2LUYR0NstYRe0DRhCzqm+xFqHri_qKGJBmCZt_kZ3fcrQ@mail.gmail.com>
 <E31BA96D-021F-4355-AA31-0F4CEFC50EDB@ocamlpro.com>
 <8FB01DDD-A9AE-4691-BE53-3AF4CBCD0D3C@ocamlpro.com>
Message-ID: <20130327160004.GA10273@voyager>

Hmmm... I tried the option, but unlike Ashish, I get an unreadable
output with an extra-wide shallow forest with a lot of \N nodes... 
(opam 0.9.5 here, maybe I am lagging behind) :-(

In the meanwhile, I used the ceve tool, that comes with
dose: it is able to extract the dependency cone of a package from
a Cudf file, and generate the dependeny graph.

For example, after running

  opam upgrade --cudf=foo

one can type

  ceve -c "cryptokit-sha512" -Tdot cudf://foo-1.cudf | dot -Tpng -o cryptokit-sha512.png

to obtain the attached image.

Notice that ceve has not been so extensively tested, and bug reports
and bug fixes are welcome here https://gforge.inria.fr/projects/dose/

--Roberto

On Wed, Mar 27, 2013 at 03:50:09PM +0100, Thomas Gazagnaire wrote:
> Remark: this is really just a hack, I agree it would be good to move that thing into a proper command later.
> 
> We've discussed about creating 'opam-check' which will do this kind of computations using opam-lib, but we've never really had the time to do this properly. As always, contributions are welcome as this is quite distinct from the core of OPAM (eg. the mechanics of installing/removing packages).
> 
> Thomas
> 
> 
> On Mar 27, 2013, at 3:47 PM, Thomas Gazagnaire wrote:
> 
> > You can try:
> > 
> > $ opam upgrade --cudf=foo ocamlfind
> > 
> > hopefully this is just a no-op which produces foo.dot. Then:
> > 
> > $ dot -Tpng foo.dot > foo.png
> > 
> > This will build the graph of all available packages where the roots are the installed ones.
> > 
> > --
> > Thomas
> > 
> > 
> > 
> > On Mar 27, 2013, at 3:31 PM, Ashish Agarwal wrote:
> > 
> >> Is there any way to get a detailed print out of a package's dependency tree? I'm in a situation that is hard to debug.
> >> 
> >> _______________________________________________
> >> opam-devel mailing list
> >> opam-devel at lists.ocaml.org
> >> http://lists.ocaml.org/listinfo/opam-devel
> > 
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 320 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cryptokit-sha512.png
Type: image/png
Size: 14686 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130327/7022dc48/attachment.png>

From Pietro.Abate at pps.univ-paris-diderot.fr  Wed Mar 27 16:03:12 2013
From: Pietro.Abate at pps.univ-paris-diderot.fr (Pietro Abate)
Date: Wed, 27 Mar 2013 17:03:12 +0100
Subject: [opam-devel] printing detailed dependency analysis
In-Reply-To: <CAMu2m2Li4-RzK6rQgpy6=cy=SPR_rt8CCDagXaDCbUQxBqWMDw@mail.gmail.com>
References: <CAMu2m2LUYR0NstYRe0DRhCzqm+xFqHri_qKGJBmCZt_kZ3fcrQ@mail.gmail.com>
 <E31BA96D-021F-4355-AA31-0F4CEFC50EDB@ocamlpro.com>
 <8FB01DDD-A9AE-4691-BE53-3AF4CBCD0D3C@ocamlpro.com>
 <CAMu2m2Li4-RzK6rQgpy6=cy=SPR_rt8CCDagXaDCbUQxBqWMDw@mail.gmail.com>
Message-ID: <20130327160312.GA19176@zed.irill.org>

On 27/03/13 11:32, Ashish Agarwal wrote:
> We have a package Flow (pinned to a local copy), which when I try to
> install it, I'm told requires downgrading lwt to 2.4.2. I see no reason why
> this should be, so I tried running your command to investigate:
> 
> $ opam upgrade --cudf=flow flow
> flow is not installed.
> Already up-to-date.
> 
> $ dot -Tpng flow.dot > flow.png

Maybe you can use ceve (part of dose3) to generate nice graphs ...

I think opam has a switch to generate the cudf file of your
repository. Once you have this file, it is easy to use ceve to obtain
the dependency tree (or reverse dependency tree) of a specific
package.

ex : 
./ceve.native -tcudf opam-reposiotry.cudf -r cstruct -Tdot > cstruct-reverse.dot

./ceve.native -tcudf opam-reposiotry.cudf -c cstruct -Tdot > cstruct-direct.dot

I've attached to this message the two dot files.

ceve is a pretty versatile tool able to generate different type of
graphs from the repository. I advice you to get the latest git
snapshot from out git repo : 

git clone git://scm.gforge.inria.fr/dose/dose.git

> On Wed, Mar 27, 2013 at 10:50 AM, Thomas Gazagnaire <thomas at ocamlpro.com>wrote:
> 
> > Remark: this is really just a hack, I agree it would be good to move that
> > thing into a proper command later.
> >
> > We've discussed about creating 'opam-check' which will do this kind of
> > computations using opam-lib, but we've never really had the time to do this
> > properly. As always, contributions are welcome as this is quite distinct
> > from the core of OPAM (eg. the mechanics of installing/removing packages).

Dose3 already provides all the necessary bricks to do all kind of
analysis. If you can put down a list of desiderata for 'opam-check',
I'll be happy to point you in the right direction.

pp

-------------- next part --------------
A non-text attachment was scrubbed...
Name: cstruct-reverse.dot
Type: application/msword
Size: 2218 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130327/72d06e38/attachment-0002.dot>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: cstruct-cone.dot
Type: application/msword
Size: 7104 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130327/72d06e38/attachment-0003.dot>

From thomas at ocamlpro.com  Wed Mar 27 16:23:16 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Wed, 27 Mar 2013 17:23:16 +0100
Subject: [opam-devel] printing detailed dependency analysis
In-Reply-To: <20130327160004.GA10273@voyager>
References: <CAMu2m2LUYR0NstYRe0DRhCzqm+xFqHri_qKGJBmCZt_kZ3fcrQ@mail.gmail.com>
 <E31BA96D-021F-4355-AA31-0F4CEFC50EDB@ocamlpro.com>
 <8FB01DDD-A9AE-4691-BE53-3AF4CBCD0D3C@ocamlpro.com>
 <20130327160004.GA10273@voyager>
Message-ID: <C5949372-B729-45D4-AE26-13A5B2DBEC61@ocamlpro.com>

> Hmmm... I tried the option, but unlike Ashish, I get an unreadable
> output with an extra-wide shallow forest with a lot of \N nodes... 
> (opam 0.9.5 here, maybe I am lagging behind) :-(

When you use the --cudf option, I'm outputinf a .cudf files for each solver invocation + a .dot file of the raw universe, limited to installed packages, using the dose API. So using 'ceve' on the cudf seems indeed a much better option that my quick hack.

Thomas


> In the meanwhile, I used the ceve tool, that comes with
> dose: it is able to extract the dependency cone of a package from
> a Cudf file, and generate the dependeny graph.
> 
> For example, after running
> 
>  opam upgrade --cudf=foo
> 
> one can type
> 
>  ceve -c "cryptokit-sha512" -Tdot cudf://foo-1.cudf | dot -Tpng -o cryptokit-sha512.png
> 
> to obtain the attached image.
> 
> Notice that ceve has not been so extensively tested, and bug reports
> and bug fixes are welcome here https://gforge.inria.fr/projects/dose/
> 
> --Roberto
> 
> On Wed, Mar 27, 2013 at 03:50:09PM +0100, Thomas Gazagnaire wrote:
>> Remark: this is really just a hack, I agree it would be good to move that thing into a proper command later.
>> 
>> We've discussed about creating 'opam-check' which will do this kind of computations using opam-lib, but we've never really had the time to do this properly. As always, contributions are welcome as this is quite distinct from the core of OPAM (eg. the mechanics of installing/removing packages).
>> 
>> Thomas
>> 
>> 
>> On Mar 27, 2013, at 3:47 PM, Thomas Gazagnaire wrote:
>> 
>>> You can try:
>>> 
>>> $ opam upgrade --cudf=foo ocamlfind
>>> 
>>> hopefully this is just a no-op which produces foo.dot. Then:
>>> 
>>> $ dot -Tpng foo.dot > foo.png
>>> 
>>> This will build the graph of all available packages where the roots are the installed ones.
>>> 
>>> --
>>> Thomas
>>> 
>>> 
>>> 
>>> On Mar 27, 2013, at 3:31 PM, Ashish Agarwal wrote:
>>> 
>>>> Is there any way to get a detailed print out of a package's dependency tree? I'm in a situation that is hard to debug.
>>>> 
>>>> _______________________________________________
>>>> opam-devel mailing list
>>>> opam-devel at lists.ocaml.org
>>>> http://lists.ocaml.org/listinfo/opam-devel
>>> 
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> 
> -- 
> Roberto Di Cosmo
> 
> ------------------------------------------------------------------
> Professeur               En delegation a l'INRIA
> PPS                      E-mail: roberto at dicosmo.org
> Universite Paris Diderot WWW  : http://www.dicosmo.org
> Case 7014                Tel  : ++33-(0)1-57 27 92 20
> 5, Rue Thomas Mann       
> F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
> FRANCE.                  Twitter: http://twitter.com/rdicosmo
> ------------------------------------------------------------------
> Attachments:
> MIME accepted, Word deprecated
>      http://www.gnu.org/philosophy/no-word-attachments.html
> ------------------------------------------------------------------
> Office location:
> 
> Bureau 320 (3rd floor)
> Batiment Sophie Germain
> Avenue de France
> Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
> -----------------------------------------------------------------
> GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        
> <cryptokit-sha512.png>


From roberto at dicosmo.org  Wed Mar 27 16:36:49 2013
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Wed, 27 Mar 2013 17:36:49 +0100
Subject: [opam-devel] printing detailed dependency analysis
In-Reply-To: <C5949372-B729-45D4-AE26-13A5B2DBEC61@ocamlpro.com>
References: <CAMu2m2LUYR0NstYRe0DRhCzqm+xFqHri_qKGJBmCZt_kZ3fcrQ@mail.gmail.com>
 <E31BA96D-021F-4355-AA31-0F4CEFC50EDB@ocamlpro.com>
 <8FB01DDD-A9AE-4691-BE53-3AF4CBCD0D3C@ocamlpro.com>
 <20130327160004.GA10273@voyager>
 <C5949372-B729-45D4-AE26-13A5B2DBEC61@ocamlpro.com>
Message-ID: <20130327163649.GB13071@voyager>

On Wed, Mar 27, 2013 at 05:23:16PM +0100, Thomas Gazagnaire wrote:
> When you use the --cudf option, I'm outputinf a .cudf files 
> for each solver invocation 

cool!

> + a .dot file of the raw universe, limited to installed packages, using the dose API.

Ok, that explains the large graph in my case...

> So using 'ceve' on the cudf seems indeed a much better option that my quick hack.
> 

ceve is a sort of swiss-army knife for dependency metadata, so one can play
with it and see what is really needed; then it will be easy to import in
opam whatever is interesting (the bindings are all there :-))

> Thomas
> 
> 
> > In the meanwhile, I used the ceve tool, that comes with
> > dose: it is able to extract the dependency cone of a package from
> > a Cudf file, and generate the dependeny graph.
> > 
> > For example, after running
> > 
> >  opam upgrade --cudf=foo
> > 
> > one can type
> > 
> >  ceve -c "cryptokit-sha512" -Tdot cudf://foo-1.cudf | dot -Tpng -o cryptokit-sha512.png
> > 
> > to obtain the attached image.
> > 
> > Notice that ceve has not been so extensively tested, and bug reports
> > and bug fixes are welcome here https://gforge.inria.fr/projects/dose/
> > 
> > --Roberto
> > 
> > On Wed, Mar 27, 2013 at 03:50:09PM +0100, Thomas Gazagnaire wrote:
> >> Remark: this is really just a hack, I agree it would be good to move that thing into a proper command later.
> >> 
> >> We've discussed about creating 'opam-check' which will do this kind of computations using opam-lib, but we've never really had the time to do this properly. As always, contributions are welcome as this is quite distinct from the core of OPAM (eg. the mechanics of installing/removing packages).
> >> 
> >> Thomas
> >> 
> >> 
> >> On Mar 27, 2013, at 3:47 PM, Thomas Gazagnaire wrote:
> >> 
> >>> You can try:
> >>> 
> >>> $ opam upgrade --cudf=foo ocamlfind
> >>> 
> >>> hopefully this is just a no-op which produces foo.dot. Then:
> >>> 
> >>> $ dot -Tpng foo.dot > foo.png
> >>> 
> >>> This will build the graph of all available packages where the roots are the installed ones.
> >>> 
> >>> --
> >>> Thomas
> >>> 
> >>> 
> >>> 
> >>> On Mar 27, 2013, at 3:31 PM, Ashish Agarwal wrote:
> >>> 
> >>>> Is there any way to get a detailed print out of a package's dependency tree? I'm in a situation that is hard to debug.
> >>>> 
> >>>> _______________________________________________
> >>>> opam-devel mailing list
> >>>> opam-devel at lists.ocaml.org
> >>>> http://lists.ocaml.org/listinfo/opam-devel
> >>> 
> >> 
> >> _______________________________________________
> >> opam-devel mailing list
> >> opam-devel at lists.ocaml.org
> >> http://lists.ocaml.org/listinfo/opam-devel
> > 
> > -- 
> > Roberto Di Cosmo
> > 
> > ------------------------------------------------------------------
> > Professeur               En delegation a l'INRIA
> > PPS                      E-mail: roberto at dicosmo.org
> > Universite Paris Diderot WWW  : http://www.dicosmo.org
> > Case 7014                Tel  : ++33-(0)1-57 27 92 20
> > 5, Rue Thomas Mann       
> > F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
> > FRANCE.                  Twitter: http://twitter.com/rdicosmo
> > ------------------------------------------------------------------
> > Attachments:
> > MIME accepted, Word deprecated
> >      http://www.gnu.org/philosophy/no-word-attachments.html
> > ------------------------------------------------------------------
> > Office location:
> > 
> > Bureau 320 (3rd floor)
> > Batiment Sophie Germain
> > Avenue de France
> > Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
> > -----------------------------------------------------------------
> > GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        
> > <cryptokit-sha512.png>
> 

-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 320 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        

From monnier.florent at gmail.com  Thu Mar 28 13:35:07 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Thu, 28 Mar 2013 14:35:07 +0100
Subject: [opam-devel] compile the sources of 1.0.0
Message-ID: <CAE1DttAfQuwG6EhMf523nwA_W+6MrCtDc0+qJGdW_M3obOLzqQ@mail.gmail.com>

Hi,

I'm trying to compile the sources of Opam version 1.0.0
under Cygwin / Windows 7 starter
I'm using protz's ocaml version 4.00.1

The compilation ends with:

./ocp-build -help >/dev/null
Fatal error: unknown C primitive `unix_waitpid'
Makefile:4: recipe for target `ocp-build' failed
make[1]: *** [ocp-build] Error 2

-- 
Cheers

From monnier.florent at gmail.com  Thu Mar 28 13:42:19 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Thu, 28 Mar 2013 14:42:19 +0100
Subject: [opam-devel] binary installer 1.0.0 under Cygwin
Message-ID: <CAE1DttAFVNz_FiS=19AfRJcMv5NFAPjFUTAku2wvdh4W+KSwbg@mail.gmail.com>

Hi,

I'm trying to install using the "opam_installer.sh" version 1.0.0
under Cygwin / Windows 7 starter
I'm using protz's ocaml version 4.00.1

The script outputs:

$ wget http://www.ocamlpro.com/pub/opam_installer.sh
$ sh ./opam_installer.sh /usr/local/bin
No file yet for i686:CYGWIN_NT-6.1

-- 
Cheers

From anil at recoil.org  Thu Mar 28 16:42:29 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 28 Mar 2013 16:42:29 +0000
Subject: [opam-devel] Repository format tools
Message-ID: <207C0738-581F-4FF1-B58A-07F662F1B84D@recoil.org>

A number of us are assembling quite a few repositories for proper open-source releases. In particular, between Mirage and Xen, I think we have about 40 to work through in the next couple of months.

One thing I'd like to have is some tooling to make it easier to manipulate these groups of repositories.  I've started a repository here:

https://github.com/avsm/opam-repo-tools

...which builds an opam-changelog binary that can connect to Github and parses the CHANGES file from the repository.  For example:

> $ opam-changelog OCamlPro opam
> 
> 1.0.1
> * By default, turn-on checking of certificates for downloaded dependency archives: use `./configure --disable-certificate-check` to go back to the previous behavior
> * Check the md5sum of downloaded archives when compiling OPAM
> * Improved `opam info` command (more information, non-zero error code when no patterns match)
> * Display OS and OPAM version on internal errors to ease error reporting
> * Fix `opam reinstall` when reinstalling a package wich is a dependency of installed packages (regression introduced in 0.9.5)
> * Export and read `OPAMSWITCH` to be able to call OPAM in different switches
> * `opam-client` can now be used in a toplevel
> * `-n` now means `--no-setup` and not `--no-checksums` anymore
> * Fix stupid typo in detection of FreeBSD archs
> * Fix installation of local compilers with local paths endings with `.../ocaml/`
> 
> 1.0.0
> * Improve the lexer performance (thx to @oandrieu)
> * Fix various typos (thx to @chaudhuri)
> * Fix build issue (thx to @avsm)
> 

I wanted to find out what else people want.  I'd like to know:

* README: What a repository is for
* TODO: "There be dragons here"
* CONTRIBUTING: Guidelines for sending pull requests, see https://github.com/blog/1184-contributing-guidelines
* CHANGES: See above -- this would be particularly useful to display after an OPAM update, for example.

Some of these are subsumed by various metadata files such as _oasis, but not all the repositories use OASIS, so I'd prefer simple text files in Markdown where possible.

So, does anyone have any strong opinions on this?  I'm inclined to go for the simple CHANGES format that OPAM currently uses (and several Mirage libraries).  But I also notice the Debian changelog format is quite simple and we could adopt that: http://www.debian.org/doc/debian-policy/ch-source.html

     package (version) distribution(s); urgency=urgency
     [optional blank line(s), stripped]
       * change details
       more change details    
       [blank line(s), included in output of dpkg-parsechangelog]
       * even more change details
     [optional blank line(s), stripped]
      -- maintainer name <email address>[two spaces]  date


-anil

From thomas at ocamlpro.com  Fri Mar 29 15:38:35 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Fri, 29 Mar 2013 16:38:35 +0100
Subject: [opam-devel] compile the sources of 1.0.0
In-Reply-To: <CAE1DttAfQuwG6EhMf523nwA_W+6MrCtDc0+qJGdW_M3obOLzqQ@mail.gmail.com>
References: <CAE1DttAfQuwG6EhMf523nwA_W+6MrCtDc0+qJGdW_M3obOLzqQ@mail.gmail.com>
Message-ID: <0BBECF53-E0E6-4470-AE91-0E9D636331D9@ocamlpro.com>

Thanks for the report!

I was planning to install a windows VM and try to compile OPAM on it this week, but I've been being busy with other concerns. But, I've just upgraded the version of ocp-build used by OPAM to the latest version which is supposed to work better on windows. Promise, I'll look into this more seriously next week.

--
Thomas

On Mar 28, 2013, at 2:35 PM, Florent Monnier wrote:

> Hi,
> 
> I'm trying to compile the sources of Opam version 1.0.0
> under Cygwin / Windows 7 starter
> I'm using protz's ocaml version 4.00.1
> 
> The compilation ends with:
> 
> ./ocp-build -help >/dev/null
> Fatal error: unknown C primitive `unix_waitpid'
> Makefile:4: recipe for target `ocp-build' failed
> make[1]: *** [ocp-build] Error 2
> 
> -- 
> Cheers
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From monnier.florent at gmail.com  Sat Mar 30 12:48:08 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 13:48:08 +0100
Subject: [opam-devel] [ANN] imagemagick.0.34
Message-ID: <CAE1DttAPQ1orbU3pf8hwR3Bbu-0pt_oWpSa0R8ayTkVPgjWakQ@mail.gmail.com>

Hi,

While browsing opam's available packages I've seen imagemagick.0.33.*
and I've seen that homepage is:
https://github.com/besport/ocaml-imagemagick/

I am the original upstream for this one, I really don't mind there are
forks. I'm even happy with it because it means that some poeple seem
got interested by it, but I really don't know how to handle this kind
of situation.

I've introduced the 0.33.* fixes in my 0.34 version.
I've introduced them all almost verbatim, except the findlib install.
I've kept my manual install, and added the 0.33.2 install renamed as
find_install.
(maybe I should do the opposite install for the find one, and the
other one install_manual?)

There is also a bug fix for the function: Magick.get_magick_version ()
this was a very beginner error, but this is because this was the first
thing I wrote in C in 2004. There are still probably other kind of
similar errors :)

I've also switched from GPL to MIT.
I also fixed the broken urls given in the README, and added the github
forker's name in the contributors.

Maybe I should do some fork and pull requests on github, but I've not
learned how to use git and github yet.
I've created an account (https://github.com/blue-prawn) but now I need
to read the man to learn how to use these.

Here are below *untested* opam files.
I've added an "author" field, so that you may use it later, in a
similar way than in the Pear community (the wishlist links):
http://pear.php.net/package/Archive_Tar/

$ cat descr
Bindings for ImageMagick

$ cat opam
opam-version: "1"
maintainer: "contact at ocamlpro.com"
authors: [
  ["blue_prawn" "Florent Monnier"]
]
contributors: [
  ["hhugo" "Hugo Heuzard"]
  ["?" "Fabrice Le Fessant"]
]
build: [
  [make]
  [make "find_install"]
]
remove: [
  [make "find_uninstall"]
]
depends:["ocamlfind"]
homepages: [
  "https://github.com/besport/ocaml-imagemagick"
  "http://www.linux-nantes.org/%7Efmonnier/OCaml/ImageMagick/"
]

$ cat url
archive: "http://www.linux-nantes.org/%7Efmonnier/OCaml/ImageMagick/\
downloads/OCaml-ImageMagick-0.34.tgz"
checksum: "d4e28dce94ccefba878ad31016f05fe4"

-- 
Cheers

From thomas at ocamlpro.com  Sat Mar 30 13:00:35 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Sat, 30 Mar 2013 14:00:35 +0100
Subject: [opam-devel] [ANN] imagemagick.0.34
In-Reply-To: <CAE1DttAPQ1orbU3pf8hwR3Bbu-0pt_oWpSa0R8ayTkVPgjWakQ@mail.gmail.com>
References: <CAE1DttAPQ1orbU3pf8hwR3Bbu-0pt_oWpSa0R8ayTkVPgjWakQ@mail.gmail.com>
Message-ID: <30556629-32A7-48F6-83EC-1C7FFCB65117@ocamlpro.com>

Hi Florent,

Apologies for the confusion, we've recently automatically generated the homepage from the archive url for all packages "maintained" by OCamlPro. In this case, it was clearly not the right thing to do, and I am very happy to give you back the ownership of the package: I'll change the homepage of imagemagick to point to your homepage and I'll add you new release. Also, if you are fine with this,  I can change the maintainer contact address to yours (we've initially imported the package, that's why we were the maintainer and we are happy to help if there are some problems with new releases, but we really want giving back the credits to the original authors / maintainers of packages we've imported).

Best and sorry again for the confusion,
Thomas

On Mar 30, 2013, at 1:48 PM, Florent Monnier wrote:

> Hi,
> 
> While browsing opam's available packages I've seen imagemagick.0.33.*
> and I've seen that homepage is:
> https://github.com/besport/ocaml-imagemagick/
> 
> I am the original upstream for this one, I really don't mind there are
> forks. I'm even happy with it because it means that some poeple seem
> got interested by it, but I really don't know how to handle this kind
> of situation.
> 
> I've introduced the 0.33.* fixes in my 0.34 version.
> I've introduced them all almost verbatim, except the findlib install.
> I've kept my manual install, and added the 0.33.2 install renamed as
> find_install.
> (maybe I should do the opposite install for the find one, and the
> other one install_manual?)
> 
> There is also a bug fix for the function: Magick.get_magick_version ()
> this was a very beginner error, but this is because this was the first
> thing I wrote in C in 2004. There are still probably other kind of
> similar errors :)
> 
> I've also switched from GPL to MIT.
> I also fixed the broken urls given in the README, and added the github
> forker's name in the contributors.
> 
> Maybe I should do some fork and pull requests on github, but I've not
> learned how to use git and github yet.
> I've created an account (https://github.com/blue-prawn) but now I need
> to read the man to learn how to use these.
> 
> Here are below *untested* opam files.
> I've added an "author" field, so that you may use it later, in a
> similar way than in the Pear community (the wishlist links):
> http://pear.php.net/package/Archive_Tar/
> 
> $ cat descr
> Bindings for ImageMagick
> 
> $ cat opam
> opam-version: "1"
> maintainer: "contact at ocamlpro.com"
> authors: [
>  ["blue_prawn" "Florent Monnier"]
> ]
> contributors: [
>  ["hhugo" "Hugo Heuzard"]
>  ["?" "Fabrice Le Fessant"]
> ]
> build: [
>  [make]
>  [make "find_install"]
> ]
> remove: [
>  [make "find_uninstall"]
> ]
> depends:["ocamlfind"]
> homepages: [
>  "https://github.com/besport/ocaml-imagemagick"
>  "http://www.linux-nantes.org/%7Efmonnier/OCaml/ImageMagick/"
> ]
> 
> $ cat url
> archive: "http://www.linux-nantes.org/%7Efmonnier/OCaml/ImageMagick/\
> downloads/OCaml-ImageMagick-0.34.tgz"
> checksum: "d4e28dce94ccefba878ad31016f05fe4"
> 
> -- 
> Cheers
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From thomas at ocamlpro.com  Sat Mar 30 13:30:26 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Sat, 30 Mar 2013 14:30:26 +0100
Subject: [opam-devel] [ANN] imagemagick.0.34
In-Reply-To: <30556629-32A7-48F6-83EC-1C7FFCB65117@ocamlpro.com>
References: <CAE1DttAPQ1orbU3pf8hwR3Bbu-0pt_oWpSa0R8ayTkVPgjWakQ@mail.gmail.com>
 <30556629-32A7-48F6-83EC-1C7FFCB65117@ocamlpro.com>
Message-ID: <C139672E-F5B7-4869-AABD-7BFFD4EE4664@ocamlpro.com>

> I'll change the homepage of imagemagick to point to your homepage and I'll add you new release.

Done [1]

> Also, if you are fine with this,  I can change the maintainer contact address to yours

Just waiting for you ack before doing this (or feel free to send me a patch).

--
Thomas

[1] http://opam.ocamlpro.com/pkg/imagemagick.0.34.html


> Best and sorry again for the confusion,
> Thomas
> 
> On Mar 30, 2013, at 1:48 PM, Florent Monnier wrote:
> 
>> Hi,
>> 
>> While browsing opam's available packages I've seen imagemagick.0.33.*
>> and I've seen that homepage is:
>> https://github.com/besport/ocaml-imagemagick/
>> 
>> I am the original upstream for this one, I really don't mind there are
>> forks. I'm even happy with it because it means that some poeple seem
>> got interested by it, but I really don't know how to handle this kind
>> of situation.
>> 
>> I've introduced the 0.33.* fixes in my 0.34 version.
>> I've introduced them all almost verbatim, except the findlib install.
>> I've kept my manual install, and added the 0.33.2 install renamed as
>> find_install.
>> (maybe I should do the opposite install for the find one, and the
>> other one install_manual?)
>> 
>> There is also a bug fix for the function: Magick.get_magick_version ()
>> this was a very beginner error, but this is because this was the first
>> thing I wrote in C in 2004. There are still probably other kind of
>> similar errors :)
>> 
>> I've also switched from GPL to MIT.
>> I also fixed the broken urls given in the README, and added the github
>> forker's name in the contributors.
>> 
>> Maybe I should do some fork and pull requests on github, but I've not
>> learned how to use git and github yet.
>> I've created an account (https://github.com/blue-prawn) but now I need
>> to read the man to learn how to use these.
>> 
>> Here are below *untested* opam files.
>> I've added an "author" field, so that you may use it later, in a
>> similar way than in the Pear community (the wishlist links):
>> http://pear.php.net/package/Archive_Tar/
>> 
>> $ cat descr
>> Bindings for ImageMagick
>> 
>> $ cat opam
>> opam-version: "1"
>> maintainer: "contact at ocamlpro.com"
>> authors: [
>> ["blue_prawn" "Florent Monnier"]
>> ]
>> contributors: [
>> ["hhugo" "Hugo Heuzard"]
>> ["?" "Fabrice Le Fessant"]
>> ]
>> build: [
>> [make]
>> [make "find_install"]
>> ]
>> remove: [
>> [make "find_uninstall"]
>> ]
>> depends:["ocamlfind"]
>> homepages: [
>> "https://github.com/besport/ocaml-imagemagick"
>> "http://www.linux-nantes.org/%7Efmonnier/OCaml/ImageMagick/"
>> ]
>> 
>> $ cat url
>> archive: "http://www.linux-nantes.org/%7Efmonnier/OCaml/ImageMagick/\
>> downloads/OCaml-ImageMagick-0.34.tgz"
>> checksum: "d4e28dce94ccefba878ad31016f05fe4"
>> 
>> -- 
>> Cheers
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> 


From monnier.florent at gmail.com  Sat Mar 30 13:57:38 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 14:57:38 +0100
Subject: [opam-devel] [ANN] imagemagick.0.34
In-Reply-To: <C139672E-F5B7-4869-AABD-7BFFD4EE4664@ocamlpro.com>
References: <CAE1DttAPQ1orbU3pf8hwR3Bbu-0pt_oWpSa0R8ayTkVPgjWakQ@mail.gmail.com>
 <30556629-32A7-48F6-83EC-1C7FFCB65117@ocamlpro.com>
 <C139672E-F5B7-4869-AABD-7BFFD4EE4664@ocamlpro.com>
Message-ID: <CAE1DttAc9PGOt=rFS30AMZwFHtwr3161nPk=9F80izrrE6yw3w@mail.gmail.com>

2013/03/30, Thomas Gazagnaire <thomas at ocamlpr...>:
[...]
>> Also, if you are fine with this,  I can change the maintainer contact
>> address to yours
>
> Just waiting for you ack before doing this (or feel free to send me a
> patch).

is it possible to write it in a web-obfuscated way for spammers?

--

From monnier.florent at gmail.com  Sat Mar 30 14:02:51 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 15:02:51 +0100
Subject: [opam-devel] [ANN] imagemagick.0.34
In-Reply-To: <30556629-32A7-48F6-83EC-1C7FFCB65117@ocamlpro.com>
References: <CAE1DttAPQ1orbU3pf8hwR3Bbu-0pt_oWpSa0R8ayTkVPgjWakQ@mail.gmail.com>
 <30556629-32A7-48F6-83EC-1C7FFCB65117@ocamlpro.com>
Message-ID: <CAE1DttA1msN8FqP0dx3yX_2GUWW=j-bBGP0vjc5ryv3Dwj6aoQ@mail.gmail.com>

2013/03/30, Thomas Gazagnaire <thomas at ocamlpr...>:
> Hi Florent,

Hi Thomas,

> Apologies for the confusion, we've recently automatically generated the
> homepage from the archive url for all packages "maintained" by OCamlPro. In
> this case, it was clearly not the right thing to do, and I am very happy to
> give you back the ownership of the package: I'll change the homepage of
> imagemagick to point to your homepage and I'll add you new release.

No need to apology, it's normal to take the most recent version available.
Floss is made to make this possible, and this is great !

-- 
Cheers

From monnier.florent at gmail.com  Sat Mar 30 14:06:29 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 15:06:29 +0100
Subject: [opam-devel] [ANN] imagemagick.0.34
In-Reply-To: <CAE1DttAc9PGOt=rFS30AMZwFHtwr3161nPk=9F80izrrE6yw3w@mail.gmail.com>
References: <CAE1DttAPQ1orbU3pf8hwR3Bbu-0pt_oWpSa0R8ayTkVPgjWakQ@mail.gmail.com>
 <30556629-32A7-48F6-83EC-1C7FFCB65117@ocamlpro.com>
 <C139672E-F5B7-4869-AABD-7BFFD4EE4664@ocamlpro.com>
 <CAE1DttAc9PGOt=rFS30AMZwFHtwr3161nPk=9F80izrrE6yw3w@mail.gmail.com>
Message-ID: <CAE1DttDrCivdcF4ydKV+AOCXZiKdvSKtJ67aRg4k6ChLSY--Ng@mail.gmail.com>

>>> Also, if you are fine with this,  I can change the maintainer contact
>>> address to yours
>>
>> Just waiting for you ack before doing this (or feel free to send me a
>> patch).
>
> is it possible to write it in a web-obfuscated way for spammers?

maybe some kind of:
maintainer: "monnier." ^ "florent at gmail.com"
?


-- 
Cheers

From monnier.florent at gmail.com  Sat Mar 30 14:48:24 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 15:48:24 +0100
Subject: [opam-devel] lablgl.20120306
Message-ID: <CAE1DttAzoFa1KcyLCkE6Y2e-kyEjgw5r8w0FMnGDMaBFM1spCQ@mail.gmail.com>

Hi,

in the file:
lablgl.20120306 / files / META

there is:
version = "1.04"

maybe it should be:
version = "20120306"


-- 
Cheers

From daniel.buenzli at erratique.ch  Sat Mar 30 15:08:21 2013
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Sat, 30 Mar 2013 16:08:21 +0100
Subject: [opam-devel] Repository format tools
In-Reply-To: <207C0738-581F-4FF1-B58A-07F662F1B84D@recoil.org>
References: <207C0738-581F-4FF1-B58A-07F662F1B84D@recoil.org>
Message-ID: <970493CCD3174FB1AF2A6C74F312AB52@erratique.ch>



Le jeudi, 28 mars 2013 ? 17:42, Anil Madhavapeddy a ?crit :

> I wanted to find out what else people want. I'd like to know:
>  
> * README: What a repository is for
> * TODO: "There be dragons here"
> * CONTRIBUTING: Guidelines for sending pull requests, see https://github.com/blog/1184-contributing-guidelines
> * CHANGES: See above -- this would be particularly useful to display after an OPAM update, for example.

I also sometimes add a DEVEL file for developer instructions (e.g. https://github.com/dbuenzli/uunf/blob/master/DEVEL). Do you think this should go in CONTRIBUTING ? (I'd still prefer DEVEL it's less intrusive when you `ls`).  

> Some of these are subsumed by various metadata files such as _oasis, but not all the repositories use OASIS, so I'd prefer simple text files in Markdown where possible.
Seems a good idea to me. I currently use the metadata of _oasis to generate my READMEs, but it is suboptimal on github. The thing is that I don't want to repeat myself. Maybe the extraction should be done the other way round.  
   
> So, does anyone have any strong opinions on this? I'm inclined to go for the simple CHANGES format that OPAM currently uses (and several Mirage libraries).

I think it should be tweaked to at least:

1) Be fully markdown renderable. That means I'd use proper sections (#) for releases.

2) Use the yyyy-mm-dd time stamp format (rfc 3339). This format has a lot of good properties (e.g. ascii order gives you time order, clear month vs day order, etc.).  

3) (That's really a pointless obsession of mine) I like to give the physical location I'm in when I release. For me it gives a little human touch to all these virtual bits.

Example, https://github.com/dbuenzli/xmlm/blob/master/CHANGES (with a release made from ????, I can precisely remember that hotel room with a good wired connection, worked on Vg for a few days there).

Best,

Daniel



From monnier.florent at gmail.com  Sat Mar 30 15:47:09 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 16:47:09 +0100
Subject: [opam-devel]  lablgl.1.04
Message-ID: <CAE1DttBpkZ16nEy8oCqTUi=XVfLxKtymEsNSLHrujyh1DrwJmg@mail.gmail.com>

Hi,

On my Windows test environment I can not use "lablgl-20120306" because
of the glShader module that I myself provided before I get a Windows
test environment.

But the vanilla "lablgl-1.04" works fine.

If I've understood correctly Opam is a source package manager, so
maybe opam could provide "lablgl.1.04" for Windows users that have a
similar environment than mine ?

My windows test environment is:
Windows 7 starter with protz's ocaml version 4.00.1

Well in this environment only lablgl itself compiles out of the box.
LablGlut does not.
Togl (Tk) does not either.
(I think that the devel libs for both glut and tkgl are there)

LablGlut and Togl are for windowing, so if we use OCamlSDL instead
this is just fine we don't need these. OCamlSDL1 compiles out of the
box in my win env.

In this environment I compile the Vanilla LablGL like this:

cp Makefile.config.mingw Makefile.config
# need to add -I/usr/include, the patch below does this:
patch < Makefile.config-cygwin-needs-I_usr_include.patch

# don't build anything else than lablgl itself or we get errors:
make lib
make libopt

LABLGL_INSTALLDIR="/tmp/mylblgl0"
make install INSTALLDIR="$LABLGL_INSTALLDIR"
# it seems that the file "dlllablgl.dll" is not installed, so:
cp src/dlllablgl.dll "$LABLGL_INSTALLDIR"/

Now a hello-world works fine.
(I'm providing this hello at the end after the config patch)

===============

$ cat Makefile.config-cygwin-needs-I_usr_include.patch
+++ Makefile.config~    2013-03-12 18:11:58.945140000 +0100
--- Makefile.config     2013-03-30 13:55:08.524315300 +0100
@@ -35,7 +35,7 @@
   -lws2_32 -luser32 -lgdi32

 # Where to find OpenGL/Mesa/Glut headers and libraries
-GLINCLUDES = -DHAS_GLEXT_H -DGL_GLEXT_PROTOTYPES -DGLU_VERSION_1_3
+GLINCLUDES = -I/usr/include -DHAS_GLEXT_H -DGL_GLEXT_PROTOTYPES
-DGLU_VERSION_1_3
 GLLIBS = -lglu32 -lopengl32
 GLLIBS0 = $(GLLIBS)
 GLUTLIBS = -lglut32


============

$ cat lblgl_hello.ml
let display () =
  GlClear.color (0.0, 0.0, 0.0);
  GlClear.clear [`color];
  GlDraw.color (1.0, 1.0, 0.0);
  GlMat.mode `projection;
  GlMat.load_identity ();
  GlMat.ortho ~x:(-1.0,1.0) ~y:(-1.0,1.0) ~z:(-1.0,1.0);
  GlDraw.begins `polygon;
  GlDraw.vertex ~x:(-0.5) ~y:(-0.5) ();
  GlDraw.vertex ~x:(-0.5) ~y:(0.5) ();
  GlDraw.vertex ~x:(0.5) ~y:(0.5) ();
  GlDraw.vertex ~x:(0.5) ~y:(-0.5) ();
  GlDraw.ends ();
  Gl.flush ()

let () =
  Sdl.init [`EVERYTHING];
  let _ =
    Sdlvideo.set_video_mode ~w:640 ~h:400
      [`HWSURFACE; `DOUBLEBUF; `OPENGL; `RESIZABLE]
  in
  for i = 1 to 6 do
    display ();
    Sdlgl.swap_buffers ();
    Sdltimer.delay 1000;
  done;
  Sdl.quit ()


# using full windows path, because protz's ocaml doesn't like cygwin ones:
$ ocaml bigarray.cma -I +site-lib/sdl sdl.cma -I
C:/cygwin/tmp/mylblgl0 lablgl.cma lblgl_hello.ml


===========

# completely untested, just copied and modified from "lablgl.20120306"

$ cat opam

opam-version: "1"
maintainer: "contact at ocamlpro.com"
homepage: "https://forge.ocamlcore.org/projects/lablgl/"
authors: [
  "Jacques Garrigue"
  "Isaac Trotts"
  "Erick Tryzelaar"
  "Christophe Raffali"
]
# "Jon Harrop" contributed the files "gluTess.ml" / "ml_glutess.c"
# should he be considered as one of the authors? or just a contributor?
build: [
  ["cp" "Makefile.config.ex" "Makefile.config"]
  ["cp" "Makefile.config.osx" "Makefile.config"] {"%{os}%" = "darwin"}
  ["cp" "Makefile.config.mingw" "Makefile.config"] {"%{os}%" =
"windows 7 starter with protz's ocaml 4"}

  ["mkdir" "-p" "%{bin}%"]

#  [make "glut"]  ### do not build this one, it doesn't compile out of
the box in my W env
#  [make "glutopt"]  ### do not build this one, it doesn't compile out
of the box in my W env

### in my W env, only build lablgl.{cma,cmxa}
  [make "lib"]
  [make "libopt"]

  [make "install" "-C" "src" "BINDIR=%{bin}%"
"INSTALLDIR=%{lib}%/lablgl" "DLLDIR=%{lib}%/stublibs"]
  # it seems that the makefile forgets to install this one:
  ["cp" "src/dlllablgl.dll" "DLLDIR=%{lib}%/stublibs"] {"%{os:env}%" =
"win7::protz"}

### do not install LablGlut, it doesn't compile out of the box in my W env
### [make "install" "-C" "LablGlut/src" "BINDIR=%{bin}%"
"INSTALLDIR=%{lib}%/lablgl" "DLLDIR=%{lib}%/stublibs"]
]

-- 
Cheers

From monnier.florent at gmail.com  Sat Mar 30 15:49:49 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 16:49:49 +0100
Subject: [opam-devel] lablgl.1.04
In-Reply-To: <CAE1DttBpkZ16nEy8oCqTUi=XVfLxKtymEsNSLHrujyh1DrwJmg@mail.gmail.com>
References: <CAE1DttBpkZ16nEy8oCqTUi=XVfLxKtymEsNSLHrujyh1DrwJmg@mail.gmail.com>
Message-ID: <CAE1DttDuFT7CGJgsqZbp+3rV+UTVEOoZJ=mjD6YQ--2bEaaBhQ@mail.gmail.com>

forgot this part:

$ cat url
archive: "https://forge.ocamlcore.org/frs/download.php/814/lablgl-1.04.tar.gz"
checksum: "dcf05a0cffffdf06cbe0fe55f9eff974"

From monnier.florent at gmail.com  Sat Mar 30 15:53:42 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 16:53:42 +0100
Subject: [opam-devel] packages tree
Message-ID: <CAE1DttCFWuQhroRautnsJtLMCL3FyDwvUL07j5maLSi9aSxH+g@mail.gmail.com>

Hi,

In my opinion if the tree instead of:

batteries.1.4.3
batteries.1.5.0
batteries.2.0.0

was:

batteries/1.4.3
batteries/1.5.0
batteries/2.0.0

it would make both human and script browsing easier.

-- 
Cheers

From monnier.florent at gmail.com  Sat Mar 30 16:41:19 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 17:41:19 +0100
Subject: [opam-devel] csv.1.2.3
Message-ID: <CAE1DttAuVo7rchpNOTQsT1LybOkkXMsXo_uYqR4B73JE3EVuDA@mail.gmail.com>

$ cat csv.1.2.3/url

archive: "http://forge.ocamlcore.org/frs/download.php/978/csv-1.2.3.tar.gz"
checksum: "d8210746f93212d73f99dab338799659"

$ cat csv.1.2.3/opam

authors: [
  "Richard Jones"
  "Christophe Troestler"
]
homepage: "https://forge.ocamlcore.org/projects/csv/"
[...]

--

From monnier.florent at gmail.com  Sat Mar 30 17:33:10 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 18:33:10 +0100
Subject: [opam-devel] cfg.2.0.1
Message-ID: <CAE1DttAVDyYP5ZSAOs4S4rU3X5ng7e--qM68QGhzLmmXASBYQA@mail.gmail.com>

$ cat >> cfg.2.0.1/opam
authors: [
  "Markus Mottl"
]
homepage: "https://bitbucket.org/mmottl/cfg"



# contact: "markus.mottl" %40 "gmail..."

--

From monnier.florent at gmail.com  Sat Mar 30 18:31:28 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 19:31:28 +0100
Subject: [opam-devel] ancient.0.9.0
Message-ID: <CAE1DttAT_VLAJs9KcFnsy2tOVf7LWMa1GxvOPAQ-oBN+v10jHw@mail.gmail.com>

$ cat >> ancient.0.9.0/opam

authors: [
  "Richard W.M. Jones"
  "Markus Mottl"
  "Martin Jambon"
?  "Xavier Leroy" ?
?  "Damien Doligez" ?
  "Mike Haertel"
  "Fred Fish"
]

# grep Authors from:
# http://git.annexia.org/?p=ocaml-ancient.git;a=blob;f=README.txt;h=e2d9103d5f1820f89e5fd9e18f245cc330e8b29d;hb=HEAD


projectpage: "http://git.annexia.org/?p=ocaml-ancient.git"

--

From monnier.florent at gmail.com  Sat Mar 30 18:41:35 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 19:41:35 +0100
Subject: [opam-devel] ansicolor.0.5
Message-ID: <CAE1DttC9NqwOZaT1-YM1ic26u2Wcrz9=0RYhTFtn-jOQdAiKpA@mail.gmail.com>

Hi,

On the webpage:
http://projects.phauna.org/ansicolor/
cite:
"""ANSIColor deprecated in favor of ANSITerminal"""

Opam already provides:
packages/ANSITerminal.0.6.3

Is it for backward compatibility?
Anyway maybe you could add this info in the "descr" file ?

-- 
Cheers

From anil at recoil.org  Sat Mar 30 18:55:13 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 30 Mar 2013 18:55:13 +0000
Subject: [opam-devel] ancient.0.9.0
In-Reply-To: <CAE1DttAT_VLAJs9KcFnsy2tOVf7LWMa1GxvOPAQ-oBN+v10jHw@mail.gmail.com>
References: <CAE1DttAT_VLAJs9KcFnsy2tOVf7LWMa1GxvOPAQ-oBN+v10jHw@mail.gmail.com>
Message-ID: <CC1FBCCD-FBFF-4C4F-ABA6-1B9ED52CC6D7@recoil.org>

Hi Florent,

Are these mails patches that you wish to be applied to the OPAM package repository?

If so, you should fork the repository on Github at:
http://github.com/OCamlPro/opam-repository

This will give you a local version of the repository on your own account.
Then, commit the changes that you want to propose, and send a 'pull request'
to us to merge your changes.

You can find more help about pull requests here:
https://help.github.com/articles/using-pull-requests

and example ones against OPAM at:
https://github.com/OCamlPro/opam-repository/pulls?direction=desc&page=1&sort=created&state=closed

-anil

On 30 Mar 2013, at 18:31, Florent Monnier <monnier.florent at gmail.com> wrote:

> $ cat >> ancient.0.9.0/opam
> 
> authors: [
>  "Richard W.M. Jones"
>  "Markus Mottl"
>  "Martin Jambon"
> ?  "Xavier Leroy" ?
> ?  "Damien Doligez" ?
>  "Mike Haertel"
>  "Fred Fish"
> ]
> 
> # grep Authors from:
> # http://git.annexia.org/?p=ocaml-ancient.git;a=blob;f=README.txt;h=e2d9103d5f1820f89e5fd9e18f245cc330e8b29d;hb=HEAD
> 
> 
> projectpage: "http://git.annexia.org/?p=ocaml-ancient.git"
> 
> --
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From anil at recoil.org  Sat Mar 30 18:56:36 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 30 Mar 2013 18:56:36 +0000
Subject: [opam-devel] packages tree
In-Reply-To: <CAE1DttCFWuQhroRautnsJtLMCL3FyDwvUL07j5maLSi9aSxH+g@mail.gmail.com>
References: <CAE1DttCFWuQhroRautnsJtLMCL3FyDwvUL07j5maLSi9aSxH+g@mail.gmail.com>
Message-ID: <66550D83-C7F8-4325-B268-6D6A3BBDB1EF@recoil.org>

There is some support for this in OPAM-1.0, but we haven't migrated the repositories yet. See:

https://github.com/OCamlPro/opam/issues/483

for the full discussion and resulting patch.

-anil

On 30 Mar 2013, at 15:53, Florent Monnier <monnier.florent at gmail.com> wrote:

> Hi,
> 
> In my opinion if the tree instead of:
> 
> batteries.1.4.3
> batteries.1.5.0
> batteries.2.0.0
> 
> was:
> 
> batteries/1.4.3
> batteries/1.5.0
> batteries/2.0.0
> 
> it would make both human and script browsing easier.
> 
> -- 
> Cheers
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From agarwal1975 at gmail.com  Sat Mar 30 18:58:27 2013
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Sat, 30 Mar 2013 14:58:27 -0400
Subject: [opam-devel] ancient.0.9.0
In-Reply-To: <CC1FBCCD-FBFF-4C4F-ABA6-1B9ED52CC6D7@recoil.org>
References: <CAE1DttAT_VLAJs9KcFnsy2tOVf7LWMa1GxvOPAQ-oBN+v10jHw@mail.gmail.com>
 <CC1FBCCD-FBFF-4C4F-ABA6-1B9ED52CC6D7@recoil.org>
Message-ID: <CAMu2m2+Sy3pa1dvPUh0CULFQg-UY3e2j-Od4-oY4v5gKcmU=kg@mail.gmail.com>

Or if you are not yet comfortable with git/github, submitting an issue [1]
would be the next best thing. However, a pull-request is *much* better as
the opam team isn't exactly supposed to do all this work themselves.

[1] https://github.com/ocamlpro/opam-repository/issues


On Sat, Mar 30, 2013 at 2:55 PM, Anil Madhavapeddy <anil at recoil.org> wrote:

> Hi Florent,
>
> Are these mails patches that you wish to be applied to the OPAM package
> repository?
>
> If so, you should fork the repository on Github at:
> http://github.com/OCamlPro/opam-repository
>
> This will give you a local version of the repository on your own account.
> Then, commit the changes that you want to propose, and send a 'pull
> request'
> to us to merge your changes.
>
> You can find more help about pull requests here:
> https://help.github.com/articles/using-pull-requests
>
> and example ones against OPAM at:
>
> https://github.com/OCamlPro/opam-repository/pulls?direction=desc&page=1&sort=created&state=closed
>
> -anil
>
> On 30 Mar 2013, at 18:31, Florent Monnier <monnier.florent at gmail.com>
> wrote:
>
> > $ cat >> ancient.0.9.0/opam
> >
> > authors: [
> >  "Richard W.M. Jones"
> >  "Markus Mottl"
> >  "Martin Jambon"
> > ?  "Xavier Leroy" ?
> > ?  "Damien Doligez" ?
> >  "Mike Haertel"
> >  "Fred Fish"
> > ]
> >
> > # grep Authors from:
> > #
> http://git.annexia.org/?p=ocaml-ancient.git;a=blob;f=README.txt;h=e2d9103d5f1820f89e5fd9e18f245cc330e8b29d;hb=HEAD
> >
> >
> > projectpage: "http://git.annexia.org/?p=ocaml-ancient.git"
> >
> > --
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
> >
>
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130330/bdb3346b/attachment.html>

From anil at recoil.org  Sat Mar 30 19:05:21 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 30 Mar 2013 19:05:21 +0000
Subject: [opam-devel] Repository format tools
In-Reply-To: <970493CCD3174FB1AF2A6C74F312AB52@erratique.ch>
References: <207C0738-581F-4FF1-B58A-07F662F1B84D@recoil.org>
 <970493CCD3174FB1AF2A6C74F312AB52@erratique.ch>
Message-ID: <3517D216-4E0A-48E3-9168-08503A02DCD1@recoil.org>

On 30 Mar 2013, at 15:08, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:
> 
> Le jeudi, 28 mars 2013 ? 17:42, Anil Madhavapeddy a ?crit :
> 
>> I wanted to find out what else people want. I'd like to know:
>> 
>> * README: What a repository is for
>> * TODO: "There be dragons here"
>> * CONTRIBUTING: Guidelines for sending pull requests, see https://github.com/blog/1184-contributing-guidelines
>> * CHANGES: See above -- this would be particularly useful to display after an OPAM update, for example.
> 
> I also sometimes add a DEVEL file for developer instructions (e.g. https://github.com/dbuenzli/uunf/blob/master/DEVEL). Do you think this should go in CONTRIBUTING ? (I'd still prefer DEVEL it's less intrusive when you `ls`).

CONTRIBUTING is used by Github to add help to a pull request, so it's not quite the same as DEVEL.  I like the idea of a file that tells you how to build and hack on a repository -- for instance, which the recommended build system is, what autogenerated files will present (e.g. from ATDgen) and so forth.

I'll add DEVEL to the skeleton repository...

>> Some of these are subsumed by various metadata files such as _oasis, but not all the repositories use OASIS, so I'd prefer simple text files in Markdown where possible.
> Seems a good idea to me. I currently use the metadata of _oasis to generate my READMEs, but it is suboptimal on github. The thing is that I don't want to repeat myself. Maybe the extraction should be done the other way round.

Unfortunately, not all projects can use OASIS for various reasons, usually because they are large repositories that use OMake and need the faster build speed, or have special compilation requirements (some of the Mirage ones).

I agree this all needs to converge, but it'll take some time...

>> So, does anyone have any strong opinions on this? I'm inclined to go for the simple CHANGES format that OPAM currently uses (and several Mirage libraries).
> 
> I think it should be tweaked to at least:
> 
> 1) Be fully markdown renderable. That means I'd use proper sections (#) for releases.
> 
> 2) Use the yyyy-mm-dd time stamp format (rfc 3339). This format has a lot of good properties (e.g. ascii order gives you time order, clear month vs day order, etc.).  
> 

Yeah, this is easily parseable too. Thomas, any objections to using something like this for OPAM and friends?  We'd need to call the file 'CHANGES.md' so that Github will render it as a Markdown file.


> 3) (That's really a pointless obsession of mine) I like to give the physical location I'm in when I release. For me it gives a little human touch to all these virtual bits.

Heh, I once correlated the GPS traces from my phone to my Git commit times to figure out where I was most productive writing code (answer: Ray's Jazz Cafe at Foyles).

Anything after the version and header would ben fine to leave as user-defined metadata in our format then.  I agree that having a Markdown format is probably better than the Debian metadata.

-anil

From wojciech.meyer at gmail.com  Sat Mar 30 19:12:09 2013
From: wojciech.meyer at gmail.com (Wojciech Meyer)
Date: Sat, 30 Mar 2013 19:12:09 +0000
Subject: [opam-devel] [ocaml-opengl]  lablgl.1.04
In-Reply-To: <CAE1DttBpkZ16nEy8oCqTUi=XVfLxKtymEsNSLHrujyh1DrwJmg@mail.gmail.com>
 (Florent Monnier's message of "Sat, 30 Mar 2013 16:47:09 +0100")
References: <CAE1DttBpkZ16nEy8oCqTUi=XVfLxKtymEsNSLHrujyh1DrwJmg@mail.gmail.com>
Message-ID: <wfsj3c1z3q.fsf@gmail.com>

Hi Florent,

For the Windows users: I'd talk to Adrien Nader and maybe provide a
binary package for LablGL for Windows through Yypkg. At the moment the
packages are crosscompiled on the linux box and there are about 50 of
them. I'm putting Adrien on the recipient list.

- Wojciech
Florent Monnier <monnier.florent at gmail.com> writes:

> Hi,
>
> On my Windows test environment I can not use "lablgl-20120306" because
> of the glShader module that I myself provided before I get a Windows
> test environment.
>
> But the vanilla "lablgl-1.04" works fine.
>
> If I've understood correctly Opam is a source package manager, so
> maybe opam could provide "lablgl.1.04" for Windows users that have a
> similar environment than mine ?
>
> My windows test environment is:
> Windows 7 starter with protz's ocaml version 4.00.1
>
> Well in this environment only lablgl itself compiles out of the box.
> LablGlut does not.
> Togl (Tk) does not either.
> (I think that the devel libs for both glut and tkgl are there)
>
> LablGlut and Togl are for windowing, so if we use OCamlSDL instead
> this is just fine we don't need these. OCamlSDL1 compiles out of the
> box in my win env.
>
> In this environment I compile the Vanilla LablGL like this:
>
> cp Makefile.config.mingw Makefile.config
> # need to add -I/usr/include, the patch below does this:
> patch < Makefile.config-cygwin-needs-I_usr_include.patch
>
> # don't build anything else than lablgl itself or we get errors:
> make lib
> make libopt
>
> LABLGL_INSTALLDIR="/tmp/mylblgl0"
> make install INSTALLDIR="$LABLGL_INSTALLDIR"
> # it seems that the file "dlllablgl.dll" is not installed, so:
> cp src/dlllablgl.dll "$LABLGL_INSTALLDIR"/
>
> Now a hello-world works fine.
> (I'm providing this hello at the end after the config patch)
>
> ===============
>
> $ cat Makefile.config-cygwin-needs-I_usr_include.patch
> +++ Makefile.config~    2013-03-12 18:11:58.945140000 +0100
> --- Makefile.config     2013-03-30 13:55:08.524315300 +0100
> @@ -35,7 +35,7 @@
>    -lws2_32 -luser32 -lgdi32
>
>  # Where to find OpenGL/Mesa/Glut headers and libraries
> -GLINCLUDES = -DHAS_GLEXT_H -DGL_GLEXT_PROTOTYPES -DGLU_VERSION_1_3
> +GLINCLUDES = -I/usr/include -DHAS_GLEXT_H -DGL_GLEXT_PROTOTYPES
> -DGLU_VERSION_1_3
>  GLLIBS = -lglu32 -lopengl32
>  GLLIBS0 = $(GLLIBS)
>  GLUTLIBS = -lglut32
>
>
> ============
>
> $ cat lblgl_hello.ml
> let display () =
>   GlClear.color (0.0, 0.0, 0.0);
>   GlClear.clear [`color];
>   GlDraw.color (1.0, 1.0, 0.0);
>   GlMat.mode `projection;
>   GlMat.load_identity ();
>   GlMat.ortho ~x:(-1.0,1.0) ~y:(-1.0,1.0) ~z:(-1.0,1.0);
>   GlDraw.begins `polygon;
>   GlDraw.vertex ~x:(-0.5) ~y:(-0.5) ();
>   GlDraw.vertex ~x:(-0.5) ~y:(0.5) ();
>   GlDraw.vertex ~x:(0.5) ~y:(0.5) ();
>   GlDraw.vertex ~x:(0.5) ~y:(-0.5) ();
>   GlDraw.ends ();
>   Gl.flush ()
>
> let () =
>   Sdl.init [`EVERYTHING];
>   let _ =
>     Sdlvideo.set_video_mode ~w:640 ~h:400
>       [`HWSURFACE; `DOUBLEBUF; `OPENGL; `RESIZABLE]
>   in
>   for i = 1 to 6 do
>     display ();
>     Sdlgl.swap_buffers ();
>     Sdltimer.delay 1000;
>   done;
>   Sdl.quit ()
>
>
> # using full windows path, because protz's ocaml doesn't like cygwin ones:
> $ ocaml bigarray.cma -I +site-lib/sdl sdl.cma -I
> C:/cygwin/tmp/mylblgl0 lablgl.cma lblgl_hello.ml
>
>
> ===========
>
> # completely untested, just copied and modified from "lablgl.20120306"
>
> $ cat opam
>
> opam-version: "1"
> maintainer: "contact at ocamlpro.com"
> homepage: "https://forge.ocamlcore.org/projects/lablgl/"
> authors: [
>   "Jacques Garrigue"
>   "Isaac Trotts"
>   "Erick Tryzelaar"
>   "Christophe Raffali"
> ]
> # "Jon Harrop" contributed the files "gluTess.ml" / "ml_glutess.c"
> # should he be considered as one of the authors? or just a contributor?
> build: [
>   ["cp" "Makefile.config.ex" "Makefile.config"]
>   ["cp" "Makefile.config.osx" "Makefile.config"] {"%{os}%" = "darwin"}
>   ["cp" "Makefile.config.mingw" "Makefile.config"] {"%{os}%" =
> "windows 7 starter with protz's ocaml 4"}
>
>   ["mkdir" "-p" "%{bin}%"]
>
> #  [make "glut"]  ### do not build this one, it doesn't compile out of
> the box in my W env
> #  [make "glutopt"]  ### do not build this one, it doesn't compile out
> of the box in my W env
>
> ### in my W env, only build lablgl.{cma,cmxa}
>   [make "lib"]
>   [make "libopt"]
>
>   [make "install" "-C" "src" "BINDIR=%{bin}%"
> "INSTALLDIR=%{lib}%/lablgl" "DLLDIR=%{lib}%/stublibs"]
>   # it seems that the makefile forgets to install this one:
>   ["cp" "src/dlllablgl.dll" "DLLDIR=%{lib}%/stublibs"] {"%{os:env}%" =
> "win7::protz"}
>
> ### do not install LablGlut, it doesn't compile out of the box in my W env
> ### [make "install" "-C" "LablGlut/src" "BINDIR=%{bin}%"
> "INSTALLDIR=%{lib}%/lablgl" "DLLDIR=%{lib}%/stublibs"]
> ]

--
Wojciech Meyer
http://danmey.org

From monnier.florent at gmail.com  Sat Mar 30 19:23:00 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 20:23:00 +0100
Subject: [opam-devel] using git/github
Message-ID: <CAE1DttBkwrz40EZwCR+yhGaP3EEbMjo5z2dyiqqiZ3XBVH_U+A@mail.gmail.com>

2013/3/30, Ashish Agarwal <agarwal1975 at gma...>:
> Or if you are not yet comfortable with git/github,

As I told in one of these emails I have not learned how to use git/github yet.
And need to be in good shape/state/mood to read mans :)

>                                                    submitting an issue [1]
> would be the next best thing.

could you RTFM me with some doc link ?

-- 
Cheers

From agarwal1975 at gmail.com  Sat Mar 30 19:28:30 2013
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Sat, 30 Mar 2013 15:28:30 -0400
Subject: [opam-devel] using git/github
In-Reply-To: <CAE1DttBkwrz40EZwCR+yhGaP3EEbMjo5z2dyiqqiZ3XBVH_U+A@mail.gmail.com>
References: <CAE1DttBkwrz40EZwCR+yhGaP3EEbMjo5z2dyiqqiZ3XBVH_U+A@mail.gmail.com>
Message-ID: <CAMu2m2KotJqtKaTDXPL5yR8hTXj6L9+dyE4NPThKWdi2HfefMg@mail.gmail.com>

I don't understand. Are you asking for documentation on how to use the
Github issues system? Just click "New Issue" on the link I gave.

On Sat, Mar 30, 2013 at 3:23 PM, Florent Monnier
<monnier.florent at gmail.com>wrote:

> 2013/3/30, Ashish Agarwal <agarwal1975 at gma...>:
> > Or if you are not yet comfortable with git/github,
>
> As I told in one of these emails I have not learned how to use git/github
> yet.
> And need to be in good shape/state/mood to read mans :)
>
> >                                                    submitting an issue
> [1]
> > would be the next best thing.
>
> could you RTFM me with some doc link ?
>
> --
> Cheers
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130330/b93e7f58/attachment.html>

From monnier.florent at gmail.com  Sat Mar 30 19:35:38 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 20:35:38 +0100
Subject: [opam-devel] using git/github
In-Reply-To: <CAMu2m2KotJqtKaTDXPL5yR8hTXj6L9+dyE4NPThKWdi2HfefMg@mail.gmail.com>
References: <CAE1DttBkwrz40EZwCR+yhGaP3EEbMjo5z2dyiqqiZ3XBVH_U+A@mail.gmail.com>
 <CAMu2m2KotJqtKaTDXPL5yR8hTXj6L9+dyE4NPThKWdi2HfefMg@mail.gmail.com>
Message-ID: <CAE1DttDg=pN2gA9TqFffPWZ1zn+Ji5rHP+4MrMPWwSayTVotEg@mail.gmail.com>

2013/3/30, Ashish Agarwal <agarwal1975 at gma...>:
> I don't understand. Are you asking for documentation on how to use the
> Github issues system? Just click "New Issue" on the link I gave.

Oh yes, sorry for the noise.

(I'm too tired today to make good and productive work,
so I thought, browsing small things todo could be an alternative :)

-- 
Cheers

From monnier.florent at gmail.com  Sat Mar 30 19:54:24 2013
From: monnier.florent at gmail.com (Florent Monnier)
Date: Sat, 30 Mar 2013 20:54:24 +0100
Subject: [opam-devel] windows packaging
Message-ID: <CAE1DttAbwt0aX1=P7Pshat+e6jAGXWj_BbBynxpnDOvE9j5h9g@mail.gmail.com>

2013/3/30, Wojciech Meyer <wojciech.meyer at gmail.com>:
> Hi Florent,

Hi Wojciech,

> For the Windows users: I'd talk to Adrien Nader and maybe provide a
> binary package for LablGL for Windows through Yypkg. At the moment the
> packages are crosscompiled on the linux box and there are about 50 of
> them. I'm putting Adrien on the recipient list.

I'm indeed trying to find a project I could contribute to for Windows packaging.
But I'm very early beginner in the Windows environment, so that's not that easy.
I've been unable to use Opam and yypkg yet.
I'm considering if I would try to build .rpm's while I'm already used
to this, because Cygwin provides all the tools for that: rpm,
rpmbuild, etc.

-- 
Cheers

From agarwal1975 at gmail.com  Sat Mar 30 21:10:05 2013
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Sat, 30 Mar 2013 17:10:05 -0400
Subject: [opam-devel] opam installs package but ocamlfind fails
Message-ID: <CAMu2m2+RsuNdsJtLvJgu8uhRJ_OiFNXEm3Z0SpXQqqmgEx=THA@mail.gmail.com>

`opam install pxp` succeeds and `opam info pxp` shows that it is installed.
However,

$ ocamlfind query pxp
ocamlfind: Package `pxp' not found

This is only happening on one of my computers. On another, ocamlfind does
recognize pxp. I'm installing the same versions of all packages. How can I
investigate further?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130330/e30cb8c3/attachment.html>

