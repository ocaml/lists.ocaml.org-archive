From louis.gesbert at ocamlpro.com  Wed Oct  1 02:20:21 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Wed, 01 Oct 2014 03:20:21 +0200
Subject: [opam-devel] ows reports
In-Reply-To: <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
References: <08CEEB78-5430-48F2-BED2-368E05B16579@gazagnaire.org>
 <20140930152523.GB26724@traveler>
 <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
Message-ID: <1461872.QmSIJtBQxL@ocp-dell>

If you don't mind me barging in, I think the issue here is mainly one of what is hilighted, and about the use of the red color:
- if a package can't be installed on any OCaml version, we all agree that's something that needs fixing
- otherwise, if it only installs on some because of dependencies, we could propagate the 'available' constraint, but as Anil points out we might lose information that may have become useful on dependencies update
- what actually matters, and was planned from the beginning, but we didn't get to, is actually the _derived function_ of the current table. This is what should be hilighted and reported: if package A could install with version of OCaml X but can't anymore because of some repo change, something went wrong (or we just fixed the repo to reflect reality...)

These reports are very useful, but yes, you have to know what they are about and how to read them ; and they use package-management terminology that conflicts with end-user or opam terminology at some points.

Cheers,
Louis


On Tuesday 30 September 2014 17:19:36 Thomas Gazagnaire wrote:
> > In particular, it does not try to solve the difficult issue of finding who is to
> > blame for a particular broken package, that's up to the release manager or the
> > package maintainers: if a package P marked "available" for 3.12 cannot compile
> > because it depends on a package Q that has no version "available" for 3.12,
> > it is broken nonetheless, and it must be reported, because a user may try
> > to install it and see it fail. I do not understand why you want to change
> > this.
> 
> Because the kind of errors reported to the user is very different and the way to fix it is different as well.
> 
> $ opam install async.108.00.02
> The following dependencies couldn't be met:
>   - async -> async_core = 108.00.02 -> core < 109.31.00
> Your request can't be satisfied:
>   - core<109.31.00 is not available because it requires OCaml >= 4.00.1 & < 4.01.0.
> 
> vs.
> 
> $ opam install mirage-www.0.3.0
> The following dependencies couldn't be met:
>   - mirage-www -> cstruct < 0.6.0
>   - mirage-www -> mirage-fs >= 0.4.0 -> cstruct >= 0.6.0 | cstruct >= 0.6.0
> Your request can't be satisfied:
>   - Conflicting version constraints for cstruct
> 
> In the first case, there is nothing to "fix". But to make ows happy we can populate the "available" field of async to get the same message as when trying to install core:
> 
> $ opam install core.108.00.02
> [ERROR] core.108.00.02 is not available because it requires OCaml < 4.00.1.
> 
> This will transform the "red" box in ows into an "empty" box: that's good for the stats, but I'm not sure that's better for an user point-of-view.
> 
> In the second case, that's clearly an error if the package that should be fixed (or the package should be removed as there is no valid user configuration where it can be installed). This is a very valuable information which should be high-lighted to the repository (or package) maintainers.
> 
> > I'm sure in front of a blackboard things would be much easier to explain, both
> > ways, and we will certainly find common grounds then, so let's postpone this
> > discussion to the first occasion we can do that
> 
> I'm happy to discuss about than in person, although I think that's also good we have that kind of discussion in the open so that other people on that list can follow what's happening and comment if they (don't?) like. But we can maybe organise an opam-devel meeting close to the ocaml consortium meeting (not sure when it is exactly, but can be the same day or the day before/after).
> 
> Best,
> Thomas
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141001/3205428c/attachment.html>

From roberto at dicosmo.org  Wed Oct  1 09:13:19 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Wed, 1 Oct 2014 10:13:19 +0200
Subject: [opam-devel] ows reports
In-Reply-To: <FCDB52EE-36DB-4EAB-90A9-E59AB269AAAD@recoil.org>
References: <CAJBwKuULbLXwC5qy3qzMYAwArmS3FB95eUVNGhteqtBCPF2Rjw@mail.gmail.com>
 <C519F5AC-847F-49BF-8EC5-B409434DBBED@gazagnaire.org>
 <2926B1CD-BBF0-4505-A569-0D6ECF5B388C@gazagnaire.org>
 <20140928072038.GA15211@traveler>
 <8EF9869B-F0B8-474A-8C87-FE2351F53672@gazagnaire.org>
 <20140930152523.GB26724@traveler>
 <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
 <37DF7B34-5E16-4C14-9153-7C40F753F28A@recoil.org>
 <20140930204017.GA14738@traveler>
 <FCDB52EE-36DB-4EAB-90A9-E59AB269AAAD@recoil.org>
Message-ID: <20141001081319.GA9433@traveler>

On Tue, Sep 30, 2014 at 09:56:00PM +0100, Anil Madhavapeddy wrote:
> David Sheets points me to the version of Dose packaged up in OPAM as the
> right version to use here (it has various patches applied to it for
> compatibility with opamLib, I believe).
> 
> Thanks for the pointer,
> Anil
> 

Thanks for reminding me of these patches: none is opam specific: two seem to fix
real issues in dose, and one adds an extra function.

I have forwarded them upstream.

--
Roberto

From thomas at gazagnaire.org  Wed Oct  1 09:57:26 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Wed, 1 Oct 2014 09:57:26 +0100
Subject: [opam-devel] ows reports
In-Reply-To: <1461872.QmSIJtBQxL@ocp-dell>
References: <08CEEB78-5430-48F2-BED2-368E05B16579@gazagnaire.org>
 <20140930152523.GB26724@traveler>
 <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
 <1461872.QmSIJtBQxL@ocp-dell>
Message-ID: <9244AA20-9703-4163-8A85-532D09404B56@gazagnaire.org>

Hi Louis, welcome back :-)

> If you don't mind me barging in, I think the issue here is mainly one of what is hilighted, and about the use of the red color:
> - if a package can't be installed on any OCaml version, we all agree that's something that needs fixing
> - otherwise, if it only installs on some because of dependencies, we could propagate the 'available' constraint, but as Anil points out we might lose information that may have become useful on dependencies update
> - what actually matters, and was planned from the beginning, but we didn't get to, is actually the _derived function_ of the current table. This is what should be hilighted and reported: if package A could install with version of OCaml X but can't anymore because of some repo change, something went wrong (or we just fixed the repo to reflect reality...)

Agreed. My goal is that it should be possible to make *all* red cells disappear (which is not the case currently), because that's the metrics that people start using when they speak about the quality of opam packages.

Also I've noticed that packages which are not installable because they are not available on all compilers do not appear in the list. I think they should appear there, as it's usually an error in their metadata (see lablgtk-extras 1.2, 1.3 and 1.4, that I've just fixed).

Louis, Instead of the derived function, maybe we can apply to all "broken" packages a post-processing step to classify them using the same function as you wrote to reports conflicts / unavailability errors to the user?

Thomas

> These reports are very useful, but yes, you have to know what they are about and how to read them ; and they use package-management terminology that conflicts with end-user or opam terminology at some points.
>  
> Cheers,
> Louis
>  
>  
> On Tuesday 30 September 2014 17:19:36 Thomas Gazagnaire wrote:
> > > In particular, it does not try to solve the difficult issue of finding who is to
> > > blame for a particular broken package, that's up to the release manager or the
> > > package maintainers: if a package P marked "available" for 3.12 cannot compile
> > > because it depends on a package Q that has no version "available" for 3.12,
> > > it is broken nonetheless, and it must be reported, because a user may try
> > > to install it and see it fail. I do not understand why you want to change
> > > this.
> >
> > Because the kind of errors reported to the user is very different and the way to fix it is different as well.
> >
> > $ opam install async.108.00.02
> > The following dependencies couldn't be met:
> > - async -> async_core = 108.00.02 -> core < 109.31.00
> > Your request can't be satisfied:
> > - core<109.31.00 is not available because it requires OCaml >= 4.00.1 & < 4.01.0.
> >
> > vs.
> >
> > $ opam install mirage-www.0.3.0
> > The following dependencies couldn't be met:
> > - mirage-www -> cstruct < 0.6.0
> > - mirage-www -> mirage-fs >= 0.4.0 -> cstruct >= 0.6.0 | cstruct >= 0.6.0
> > Your request can't be satisfied:
> > - Conflicting version constraints for cstruct
> >
> > In the first case, there is nothing to "fix". But to make ows happy we can populate the "available" field of async to get the same message as when trying to install core:
> >
> > $ opam install core.108.00.02
> > [ERROR] core.108.00.02 is not available because it requires OCaml < 4.00.1.
> >
> > This will transform the "red" box in ows into an "empty" box: that's good for the stats, but I'm not sure that's better for an user point-of-view.
> >
> > In the second case, that's clearly an error if the package that should be fixed (or the package should be removed as there is no valid user configuration where it can be installed). This is a very valuable information which should be high-lighted to the repository (or package) maintainers.
> >
> > > I'm sure in front of a blackboard things would be much easier to explain, both
> > > ways, and we will certainly find common grounds then, so let's postpone this
> > > discussion to the first occasion we can do that
> >
> > I'm happy to discuss about than in person, although I think that's also good we have that kind of discussion in the open so that other people on that list can follow what's happening and comment if they (don't?) like. But we can maybe organise an opam-devel meeting close to the ocaml consortium meeting (not sure when it is exactly, but can be the same day or the day before/after).
> >
> > Best,
> > Thomas
> >
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
>  

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141001/ab27b22f/attachment-0001.html>

From Fabrice.Le_fessant at inria.fr  Wed Oct  1 10:41:43 2014
From: Fabrice.Le_fessant at inria.fr (Fabrice Le Fessant)
Date: Wed, 1 Oct 2014 11:41:43 +0200
Subject: [opam-devel] call for help: opam history
In-Reply-To: <EFCFEFB4-045D-4C10-922F-1A41DE272973@recoil.org>
References: <837CF831-839A-48E8-A685-70C48381D483@gazagnaire.org>
 <CAHvkLrPatjXttkGhZpahw_xq+JTR=OxagDOFdugJimwfzTEjGQ@mail.gmail.com>
 <FFCF273B-994C-4F82-9E83-DF90867DA237@gazagnaire.org>
 <CAHvkLrO3Hq5Or0erxe1wrhk6WJ=V+wcQAA1n7XpT6sBvhnL86g@mail.gmail.com>
 <8F9585AA-3C82-4283-A50B-377F5DC65914@gazagnaire.org>
 <CAHvkLrPF-pK=dzWwbkgpDmTf27sYUK_3Du=EVUDE51dAdzG0xQ@mail.gmail.com>
 <EFCFEFB4-045D-4C10-922F-1A41DE272973@recoil.org>
Message-ID: <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>

Ok. Before modifying the document, I would like to suggest the
following overview:

1/ The Ancestors of OPAM (GODI and so on)
2/ The Foundations of OPAM (gathering several teams to work on OPAM)
3/ The Birth of OPAM (first implementations)
4/ The Rise of OPAM (first release and current situation)

Also, I would like to put some stress on the 4 main differences
between GODI and OPAM, as I see them. The 4 short-comings of GODI I
see that are fixed by OPAM are:
- sub-optimal installation solutions => use of CUDF/Dose
- complex user interface => simple "? la apt" interface
- complex repository management => simple github-based workflow
- no automatic Q/A on the repository => Travis + OWS

What do you think ?
--Fabrice








On Tue, Sep 30, 2014 at 7:11 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> On 30 Sep 2014, at 18:06, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:
>>
>> @Anil: yes, I kind of remember that there was a tool to automatically
>> extract the meta-data from GODI packages and to translate it to
>> "descr" files. However, the work of filling OPAM files with build and
>> install instructions was not automated, to the best of my knowledge,
>> so Frederic had to build every package and check that it would work
>> well in OPAM. But of course, GODI should be credited, both for
>> providing an inspiration for OPAM (we built on the experience we had
>> of GODI and sometimes, of the problems we had with it) and for forcing
>> many developers to package nicely their programs and libraries, so
>> that we work of packaging them again was much more easy.
>
> Yes, I think that's right -- it was just the descriptions and metadata
> that were borrowed from GODI, with the build instructions being manually
> edited to add (e.g.) the prefix and make macros.  That was quite a bit of
> work...
>
> -anil
>



-- 
Fabrice LE FESSANT
Chercheur en Informatique
INRIA Paris Rocquencourt -- OCamlPro
Programming Languages and Distributed Systems

From anil at recoil.org  Wed Oct  1 10:47:34 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Wed, 1 Oct 2014 10:47:34 +0100
Subject: [opam-devel] call for help: opam history
In-Reply-To: <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>
References: <837CF831-839A-48E8-A685-70C48381D483@gazagnaire.org>
 <CAHvkLrPatjXttkGhZpahw_xq+JTR=OxagDOFdugJimwfzTEjGQ@mail.gmail.com>
 <FFCF273B-994C-4F82-9E83-DF90867DA237@gazagnaire.org>
 <CAHvkLrO3Hq5Or0erxe1wrhk6WJ=V+wcQAA1n7XpT6sBvhnL86g@mail.gmail.com>
 <8F9585AA-3C82-4283-A50B-377F5DC65914@gazagnaire.org>
 <CAHvkLrPF-pK=dzWwbkgpDmTf27sYUK_3Du=EVUDE51dAdzG0xQ@mail.gmail.com>
 <EFCFEFB4-045D-4C10-922F-1A41DE272973@recoil.org>
 <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>
Message-ID: <530857BA-C022-47BC-B2BC-D3A7869F2514@recoil.org>

Sounds good to me.

-anil

On 1 Oct 2014, at 10:41, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:

> Ok. Before modifying the document, I would like to suggest the
> following overview:
> 
> 1/ The Ancestors of OPAM (GODI and so on)
> 2/ The Foundations of OPAM (gathering several teams to work on OPAM)
> 3/ The Birth of OPAM (first implementations)
> 4/ The Rise of OPAM (first release and current situation)
> 
> Also, I would like to put some stress on the 4 main differences
> between GODI and OPAM, as I see them. The 4 short-comings of GODI I
> see that are fixed by OPAM are:
> - sub-optimal installation solutions => use of CUDF/Dose
> - complex user interface => simple "? la apt" interface
> - complex repository management => simple github-based workflow
> - no automatic Q/A on the repository => Travis + OWS
> 
> What do you think ?
> --Fabrice
> 
> 
> 
> 
> 
> 
> 
> 
> On Tue, Sep 30, 2014 at 7:11 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> On 30 Sep 2014, at 18:06, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:
>>> 
>>> @Anil: yes, I kind of remember that there was a tool to automatically
>>> extract the meta-data from GODI packages and to translate it to
>>> "descr" files. However, the work of filling OPAM files with build and
>>> install instructions was not automated, to the best of my knowledge,
>>> so Frederic had to build every package and check that it would work
>>> well in OPAM. But of course, GODI should be credited, both for
>>> providing an inspiration for OPAM (we built on the experience we had
>>> of GODI and sometimes, of the problems we had with it) and for forcing
>>> many developers to package nicely their programs and libraries, so
>>> that we work of packaging them again was much more easy.
>> 
>> Yes, I think that's right -- it was just the descriptions and metadata
>> that were borrowed from GODI, with the build instructions being manually
>> edited to add (e.g.) the prefix and make macros.  That was quite a bit of
>> work...
>> 
>> -anil
>> 
> 
> 
> 
> -- 
> Fabrice LE FESSANT
> Chercheur en Informatique
> INRIA Paris Rocquencourt -- OCamlPro
> Programming Languages and Distributed Systems


From Pietro.Abate at pps.univ-paris-diderot.fr  Wed Oct  1 11:01:40 2014
From: Pietro.Abate at pps.univ-paris-diderot.fr (Pietro Abate)
Date: Wed, 1 Oct 2014 12:01:40 +0200
Subject: [opam-devel] dose/opam patches WAS [Re:  ows reports]
Message-ID: <20141001100140.GA7297@zed.irill.org>

On 01/10/14 10:13, Roberto Di Cosmo wrote:
> On Tue, Sep 30, 2014 at 09:56:00PM +0100, Anil Madhavapeddy wrote:
> > David Sheets points me to the version of Dose packaged up in OPAM as the
> > right version to use here (it has various patches applied to it for
> > compatibility with opamLib, I believe).
> Thanks for reminding me of these patches: none is opam specific: two seem to fix
> real issues in dose, and one adds an extra function.

I've reviewed the three patches Roberto sent to me this morning.

- "Remove broken assert"
  I merged this one. Do you have a quick example ? I can imagine that
  this could happen, but I cannot think of anything concrete...

- "Removed hard failure cases, in favour of finer diagnostics" 
  I've NOT merged this one. The globalid variable is used internally.
  It is a fake package identifier that is only used to encode global
  constraints on the universe. It is indeed a fatal error to use this
  globalid otherwise. I cannot see why it should be missing or you
  should have another package to conflict with this id. Maybe you can
  convince me with an example how this could happen ...

- "Add a check_request function allowing more control over the
  underlying process"
  I merged this one. What kind of finer control do you need on the
  solver sub-process ? Maybe we can also generalize the function 
  CudfSolver.execsolver ?

These two patches are now merged in dose/master.

Thank you for these patches. Maybe next time, for a faster feedback,
you could post them directly on the dose development mailing list[1]. I
track opam-devel, but sometimes I miss one message or an other.

p

[1] dose-devel at lists.gforge.inria.fr

From louis.gesbert at ocamlpro.com  Wed Oct  1 11:02:14 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Wed, 01 Oct 2014 12:02:14 +0200
Subject: [opam-devel] Preparing the path for 1.2
In-Reply-To: <12168727.HDWJGTDxmd@agaric>
References: <12168727.HDWJGTDxmd@agaric>
Message-ID: <3118901.JQt2Q9qc4i@ocp-dell>

Hi all,

I just got back, and fixed the few tiny issues remaining on RC2 (except maybe #1753) ; the path seems to be clear  for the release, so unless there are objections I'll try and put the double repo and redirections in place tomorrow morning (which should be around 3am for most of you, so that shouldn't be too much disruption even if things go wrong).

Cheers,
Louis


On Friday 19 September 2014 17:02:43 Louis Gesbert wrote:
> Hi all,
> 
> As you may know, the 1.2.0 RC2 has just been tagged [1]. However, as discussed at [2], planning the migration of the repository is quite a delicate matter ; this doesn't have to be done at the same time as the release itself, but some confusion may arise if we advertise a new workflow that leads to packages that get refused from the main repo because they're not 1.1 compatible.
> 
> We tried to improve compatibility for the next release, but for 1.2 there are just too many changes and opam 1.1 _won't_ nicely handle them. So here is how I have been preparing:
> 
> - a batch conversion of the existing repo [7]: not required but useful for 1.2 (adding dev repos for archives held on github, setting ocamlfind deps as build-only, turning depopts constraints to conflicts [3]...). This is useful as a starting point for repo extension and example, and done using scripts in `admin-scripts/` [4]
> 
> - a `admin-scripts/to_1_1.ml` script in opam [5] that can convert a package back to 1.1 format. I successfully tested it on the above repo and with opam 1.1 ; there may be corner cases on new 1.2 opam files that this didn't get into, but these can be caught by Travis before they break.
> 
> - updated admin scripts on the 11-bridge branch of opam.ocaml.org [6]. The new scripts create a duplicate of the repo at opam.ocaml.org/1.1/, branch version-triggered redirects between the two, and apply the above script to the 1.1 repo mirror at every update. This should make it transparent whichever opam version is used.
> 
> - tested the opam.ocaml.org scripts on a local mirror I set up, and they seem to work fine (after _a lot_ of tweaking) ; note that these can be pushed live beforehand, they'll set up the redirects but the translation script doesn't change opam files with `opam-version` < "1.2" so it won't cause any user-visible changes until we actually accept 1.2 opam files in the repo (except for the "permanently redirected" message)
> 
> What remains to do:
> 
> - setup the opam-repository travis scripts to apply the 1.1 rewrite before testing, for opam versions < 1.2. Only tricky part is to get hold of a recent enough opam-lib to run the script (maybe we could cheat and put a standalone bytecode exe on opam-repository for that ; well one for 4.01 and one for 4.02 since the format changed...). This way PRs to opam-repo containing 1.2 opam files will be correctly tested, as well as the rewrite.
> 
> - release !
> 
> 
> Finally, note that I'll be moving across the globe next week, and won't be available for two weeks or so. Everything should be ready to release as soon as I get back.
> 
> Cheers,
> Louis
> 
> 
> 
> [1] https://github.com/ocaml/opam/releases/tag/1.2.0-rc2
> [2] https://github.com/ocaml/opam/issues/1662
> [3] https://github.com/ocaml/opam/pull/1325
> [4] https://github.com/ocaml/opam/tree/master/admin-scripts
> [5] https://github.com/ocaml/opam/pull/1743
> [6] https://github.com/ocaml/opam.ocaml.org/tree/11-bridge
> [7] https://github.com/ocaml/opam-repository/tree/1.2-test
> 
> 
> PS: during the course of these tests, I sadly found out that repo redirect handling in 1.1 wasn't that good: it works at update but not straight-away at init. See comment at https://github.com/ocaml/opam/pull/1744

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141001/87ab17c1/attachment-0001.html>

From louis.gesbert at ocamlpro.com  Thu Oct  2 02:03:35 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Thu, 02 Oct 2014 03:03:35 +0200
Subject: [opam-devel] ows reports
In-Reply-To: <20141001081319.GA9433@traveler>
References: <CAJBwKuULbLXwC5qy3qzMYAwArmS3FB95eUVNGhteqtBCPF2Rjw@mail.gmail.com>
 <FCDB52EE-36DB-4EAB-90A9-E59AB269AAAD@recoil.org>
 <20141001081319.GA9433@traveler>
Message-ID: <5391677.5ZD0Qs7Aza@ocp-dell>

Ah, yes, sorry, I intended to submit them upstream but didn't get the time yet.

Thanks a lot!
Louis

On Wednesday 01 October 2014 10:13:19 Roberto Di Cosmo wrote:
> On Tue, Sep 30, 2014 at 09:56:00PM +0100, Anil Madhavapeddy wrote:
> > David Sheets points me to the version of Dose packaged up in OPAM as the
> > right version to use here (it has various patches applied to it for
> > compatibility with opamLib, I believe).
> > 
> > Thanks for the pointer,
> > Anil
> > 
> 
> Thanks for reminding me of these patches: none is opam specific: two seem to fix
> real issues in dose, and one adds an extra function.
> 
> I have forwarded them upstream.
> 
> --
> Roberto
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141002/73742af7/attachment.html>

From louis.gesbert at ocamlpro.com  Thu Oct  2 08:29:52 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Thu, 02 Oct 2014 09:29:52 +0200
Subject: [opam-devel] Preparing the path for 1.2
In-Reply-To: <3118901.JQt2Q9qc4i@ocp-dell>
References: <12168727.HDWJGTDxmd@agaric> <3118901.JQt2Q9qc4i@ocp-dell>
Message-ID: <83074202.W1Kt3edFWk@ocp-dell>

This seems to have gone quite smoothly, the redirect and rewrite (that doesn't change anything at the moment, since no packages are declared as 'opam-version: "1.2"') are now in place. Please notify if you notice anything weird happening !

I'm now tweaking the travis tests to include the rewrite, so that you can submit 1.2 packages and:
- check them on opam 1.2
- check that they still work with earlier opams and the rewrite in place
Ongoing work at https://github.com/ocaml/opam-repository/pull/2804


That'll also ensure a proper 1.1 compat rewrite, and help improve it along the way if needed.

NOTE: this is NOT a green light to start submitting 1.2 packages yet, waiting for Anil and Thomas approval for that (we may wait at least a few days, to ensure the redirect is suitably propagated)

Cheers,
Louis

(Yay, travis build start much faster in this timezone :D)

On Wednesday 01 October 2014 12:02:14 Louis Gesbert wrote:
> Hi all,
> 
> I just got back, and fixed the few tiny issues remaining on RC2 (except maybe #1753) ; the path seems to be clear  for the release, so unless there are objections I'll try and put the double repo and redirections in place tomorrow morning (which should be around 3am for most of you, so that shouldn't be too much disruption even if things go wrong).
> 
> Cheers,
> Louis
> 
> 
> On Friday 19 September 2014 17:02:43 Louis Gesbert wrote:
> > Hi all,
> > 
> > As you may know, the 1.2.0 RC2 has just been tagged [1]. However, as discussed at [2], planning the migration of the repository is quite a delicate matter ; this doesn't have to be done at the same time as the release itself, but some confusion may arise if we advertise a new workflow that leads to packages that get refused from the main repo because they're not 1.1 compatible.
> > 
> > We tried to improve compatibility for the next release, but for 1.2 there are just too many changes and opam 1.1 _won't_ nicely handle them. So here is how I have been preparing:
> > 
> > - a batch conversion of the existing repo [7]: not required but useful for 1.2 (adding dev repos for archives held on github, setting ocamlfind deps as build-only, turning depopts constraints to conflicts [3]...). This is useful as a starting point for repo extension and example, and done using scripts in `admin-scripts/` [4]
> > 
> > - a `admin-scripts/to_1_1.ml` script in opam [5] that can convert a package back to 1.1 format. I successfully tested it on the above repo and with opam 1.1 ; there may be corner cases on new 1.2 opam files that this didn't get into, but these can be caught by Travis before they break.
> > 
> > - updated admin scripts on the 11-bridge branch of opam.ocaml.org [6]. The new scripts create a duplicate of the repo at opam.ocaml.org/1.1/, branch version-triggered redirects between the two, and apply the above script to the 1.1 repo mirror at every update. This should make it transparent whichever opam version is used.
> > 
> > - tested the opam.ocaml.org scripts on a local mirror I set up, and they seem to work fine (after _a lot_ of tweaking) ; note that these can be pushed live beforehand, they'll set up the redirects but the translation script doesn't change opam files with `opam-version` < "1.2" so it won't cause any user-visible changes until we actually accept 1.2 opam files in the repo (except for the "permanently redirected" message)
> > 
> > What remains to do:
> > 
> > - setup the opam-repository travis scripts to apply the 1.1 rewrite before testing, for opam versions < 1.2. Only tricky part is to get hold of a recent enough opam-lib to run the script (maybe we could cheat and put a standalone bytecode exe on opam-repository for that ; well one for 4.01 and one for 4.02 since the format changed...). This way PRs to opam-repo containing 1.2 opam files will be correctly tested, as well as the rewrite.
> > 
> > - release !
> > 
> > 
> > Finally, note that I'll be moving across the globe next week, and won't be available for two weeks or so. Everything should be ready to release as soon as I get back.
> > 
> > Cheers,
> > Louis
> > 
> > 
> > 
> > [1] https://github.com/ocaml/opam/releases/tag/1.2.0-rc2
> > [2] https://github.com/ocaml/opam/issues/1662
> > [3] https://github.com/ocaml/opam/pull/1325
> > [4] https://github.com/ocaml/opam/tree/master/admin-scripts
> > [5] https://github.com/ocaml/opam/pull/1743
> > [6] https://github.com/ocaml/opam.ocaml.org/tree/11-bridge
> > [7] https://github.com/ocaml/opam-repository/tree/1.2-test
> > 
> > 
> > PS: during the course of these tests, I sadly found out that repo redirect handling in 1.1 wasn't that good: it works at update but not straight-away at init. See comment at https://github.com/ocaml/opam/pull/1744
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141002/a87972b8/attachment-0001.html>

From Fabrice.Le_fessant at inria.fr  Thu Oct  2 08:30:25 2014
From: Fabrice.Le_fessant at inria.fr (Fabrice Le Fessant)
Date: Thu, 2 Oct 2014 09:30:25 +0200
Subject: [opam-devel] ows reports
In-Reply-To: <9244AA20-9703-4163-8A85-532D09404B56@gazagnaire.org>
References: <08CEEB78-5430-48F2-BED2-368E05B16579@gazagnaire.org>
 <20140930152523.GB26724@traveler>
 <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
 <1461872.QmSIJtBQxL@ocp-dell>
 <9244AA20-9703-4163-8A85-532D09404B56@gazagnaire.org>
Message-ID: <CAHvkLrP7x9+ZZpJMfPxtbfXLFU_jecRViwBwaVTn0hbmhthP5Q@mail.gmail.com>

Hi Thomas,

On Wed, Oct 1, 2014 at 10:57 AM, Thomas Gazagnaire
<thomas at gazagnaire.org> wrote:
> Agreed. My goal is that it should be possible to make *all* red cells
> disappear (which is not the case currently), because that's the metrics that
> people start using when they speak about the quality of opam packages.

Indeed, it is a good metrics to complement Travis testing.

> Also I've noticed that packages which are not installable because they are
> not available on all compilers do not appear in the list. I think they
> should appear there, as it's usually an error in their metadata (see
> lablgtk-extras 1.2, 1.3 and 1.4, that I've just fixed).
>
> Louis, Instead of the derived function, maybe we can apply to all "broken"
> packages a post-processing step to classify them using the same function as
> you wrote to reports conflicts / unavailability errors to the user?

  I don't think this is going to work: red boxes in OWS have a clear
semantics, from the user point of view, it means that 'opam list' is
going to show the package with the corresponding version as available
for the current switch, but 'opam install PACKAGE.VERSION' is going to
fail. That's bad user experience. Changing the red box into an orange
box is not going to change this bad experience for the user.

  Moreover, the reasons for a failure may me mixed: if package A
depends on B, and there are two versions of B, one depending on C with
a version of C that does not exist, the other one with a version of C
that is not available for the current compiler, what would be the
reason for A not being installed ? Something has to be done, either
adding a new version of C, or porting the old version of C on the
current compiler, maybe adding a new version of B, or dropping the
dependency on B for A, but whatever it is, OWS is not going to give an
advice. It will just say "A is broken" and put a red box.

  Actually, it would be nice to run `distcheck` twice for every new
pull-request: once to compute the number of broken packages before the
commit, and once to compute the number of broken packages after the
commit. This way, only pull-request decreasing the number of broken
packages would be accepted. This could be part of a general
`opam-repo-lint` tool, that would also verify that every package
description is smaller than 50 kB (ref. Coccinelle), and call
`opam-lint` on every `opam` file.

Best,
--Fabrice

From louis.gesbert at ocamlpro.com  Thu Oct  2 09:59:41 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Thu, 02 Oct 2014 10:59:41 +0200
Subject: [opam-devel] dose/opam patches WAS [Re:  ows reports]
In-Reply-To: <20141001100140.GA7297@zed.irill.org>
References: <20141001100140.GA7297@zed.irill.org>
Message-ID: <3380121.iz8XpubKAe@ocp-dell>

Thanks !

Yes, I should have submitted them earlier. More details on why the need for them arose:

1. That one may not be strictly needed anymore: at some point we wanted to check the solver version by first trying with advanced criteria, then falling back to more basic ones in case of error. The issue was that after the solver call failed, raising an exception, the timer would still be set, which would make the next call fail with this assert.

2. Hm, really should have done this earlier, I'll need to look it up but I _did_ get to a case where I wanted more info on the conflicts and this check prevented me from getting the conflict information. I'll find you the precise case.

3. OPAM already includes functions for running external commands, with logging, signal handling, etc. It's nicer from our side to be able to call the solver command consistently with the same functions and error handling. The different way to handle signals already proved a problem a couple times. Also, we were trying to achieve more compatibility between different solvers, and adding a layer at that point may get handy ; this could also be used to send a query to the solver farm, without any external command.

Cheers,
Louis

On Wednesday 01 October 2014 12:01:40 Pietro Abate wrote:
> On 01/10/14 10:13, Roberto Di Cosmo wrote:
> > On Tue, Sep 30, 2014 at 09:56:00PM +0100, Anil Madhavapeddy wrote:
> > > David Sheets points me to the version of Dose packaged up in OPAM as the
> > > right version to use here (it has various patches applied to it for
> > > compatibility with opamLib, I believe).
> > Thanks for reminding me of these patches: none is opam specific: two seem to fix
> > real issues in dose, and one adds an extra function.
> 
> I've reviewed the three patches Roberto sent to me this morning.
> 
> - "Remove broken assert"
>   I merged this one. Do you have a quick example ? I can imagine that
>   this could happen, but I cannot think of anything concrete...
> 
> - "Removed hard failure cases, in favour of finer diagnostics" 
>   I've NOT merged this one. The globalid variable is used internally.
>   It is a fake package identifier that is only used to encode global
>   constraints on the universe. It is indeed a fatal error to use this
>   globalid otherwise. I cannot see why it should be missing or you
>   should have another package to conflict with this id. Maybe you can
>   convince me with an example how this could happen ...
> 
> - "Add a check_request function allowing more control over the
>   underlying process"
>   I merged this one. What kind of finer control do you need on the
>   solver sub-process ? Maybe we can also generalize the function 
>   CudfSolver.execsolver ?
> 
> These two patches are now merged in dose/master.
> 
> Thank you for these patches. Maybe next time, for a faster feedback,
> you could post them directly on the dose development mailing list[1]. I
> track opam-devel, but sometimes I miss one message or an other.
> 
> p
> 
> [1] dose-devel at lists.gforge.inria.fr
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141002/b1359bc4/attachment.html>

From thomas at gazagnaire.org  Thu Oct  2 10:25:32 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Thu, 2 Oct 2014 10:25:32 +0100
Subject: [opam-devel] ows reports
In-Reply-To: <CAHvkLrP7x9+ZZpJMfPxtbfXLFU_jecRViwBwaVTn0hbmhthP5Q@mail.gmail.com>
References: <08CEEB78-5430-48F2-BED2-368E05B16579@gazagnaire.org>
 <20140930152523.GB26724@traveler>
 <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
 <1461872.QmSIJtBQxL@ocp-dell>
 <9244AA20-9703-4163-8A85-532D09404B56@gazagnaire.org>
 <CAHvkLrP7x9+ZZpJMfPxtbfXLFU_jecRViwBwaVTn0hbmhthP5Q@mail.gmail.com>
Message-ID: <36A65E76-3C37-4C22-9E90-C9A935046B74@gazagnaire.org>

>> Louis, Instead of the derived function, maybe we can apply to all "broken"
>> packages a post-processing step to classify them using the same function as
>> you wrote to reports conflicts / unavailability errors to the user?
> 
>  I don't think this is going to work: red boxes in OWS have a clear
> semantics, from the user point of view, it means that 'opam list' is
> going to show the package with the corresponding version as available
> for the current switch, but 'opam install PACKAGE.VERSION' is going to
> fail. That's bad user experience. Changing the red box into an orange
> box is not going to change this bad experience for the user.

Then the table is inconsistent:

$ opam install typerex.1.99.6-beta
[ERROR] typerex.1.99.6-beta is not available because it requires OCaml < 4.02.0.

opam returns an error, but the box is "white" on ows. Following your logics, it should be "red".

Usually users request a package name, not a specific version of a package. ows doesn't make the difference between "all versions are broken" and "the version X is broken" which is a far worst user experience.

Now, from a repository maintainer point-of-view, if someone creates a new metrics and advertises it by saying "look how bad it is", I guess the goal is to make some changes (the policy, the workflow, ...) to improve the metrics results or at least to propose or explain how it can be improved -- if not, I don't see the point. Currently, it is still unclear to me how we (the repo maintainers) can fix all the "broken" packages on the repo without requiring all packages to compile on all the versions of the compiler (which will never happen) or by duplicate metadata (the transitive closure of the available fields) which will get out-of-sync quickly.

>  Moreover, the reasons for a failure may me mixed: if package A
> depends on B, and there are two versions of B, one depending on C with
> a version of C that does not exist, the other one with a version of C
> that is not available for the current compiler, what would be the
> reason for A not being installed ? Something has to be done, either
> adding a new version of C, or porting the old version of C on the
> current compiler, maybe adding a new version of B, or dropping the
> dependency on B for A, but whatever it is, OWS is not going to give an
> advice. It will just say "A is broken" and put a red box.

These are the interesting packages which should be brought to attention to the maintainers. Not the other 99% of packages which are unavailable by transitivity (and reported as such by opam), especially when a more recent version of this package exists and fix the availability issue.

>  Actually, it would be nice to run `distcheck` twice for every new
> pull-request: once to compute the number of broken packages before the
> commit, and once to compute the number of broken packages after the
> commit. This way, only pull-request decreasing the number of broken
> packages would be accepted. This could be part of a general
> `opam-repo-lint` tool, that would also verify that every package
> description is smaller than 50 kB (ref. Coccinelle), and call
> `opam-lint` on every `opam` file.

Any tool to help us triaging incoming pull-requests is more than welcome.

Best,
Thomas

From thomas at gazagnaire.org  Thu Oct  2 10:27:08 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Thu, 2 Oct 2014 10:27:08 +0100
Subject: [opam-devel] Preparing the path for 1.2
In-Reply-To: <83074202.W1Kt3edFWk@ocp-dell>
References: <12168727.HDWJGTDxmd@agaric> <3118901.JQt2Q9qc4i@ocp-dell>
 <83074202.W1Kt3edFWk@ocp-dell>
Message-ID: <31CC26EA-C476-464F-B403-E0EB1B5F6558@gazagnaire.org>

> NOTE: this is NOT a green light to start submitting 1.2 packages yet, waiting for Anil and Thomas approval for that (we may wait at least a few days, to ensure the redirect is suitably propagated)

I'd say we should properly release opam 1.2 before accepting 1.2 packages :-)

Thanks for setting the redirection and the rewrite, though!

Thomas

>  
> Cheers,
> Louis
>  
> (Yay, travis build start much faster in this timezone :D)
>  
> On Wednesday 01 October 2014 12:02:14 Louis Gesbert wrote:
> > Hi all,
> >
> > I just got back, and fixed the few tiny issues remaining on RC2 (except maybe #1753) ; the path seems to be clear for the release, so unless there are objections I'll try and put the double repo and redirections in place tomorrow morning (which should be around 3am for most of you, so that shouldn't be too much disruption even if things go wrong).
> >
> > Cheers,
> > Louis
> >
> >
> > On Friday 19 September 2014 17:02:43 Louis Gesbert wrote:
> > > Hi all,
> > >
> > > As you may know, the 1.2.0 RC2 has just been tagged [1]. However, as discussed at [2], planning the migration of the repository is quite a delicate matter ; this doesn't have to be done at the same time as the release itself, but some confusion may arise if we advertise a new workflow that leads to packages that get refused from the main repo because they're not 1.1 compatible.
> > >
> > > We tried to improve compatibility for the next release, but for 1.2 there are just too many changes and opam 1.1 _won't_ nicely handle them. So here is how I have been preparing:
> > >
> > > - a batch conversion of the existing repo [7]: not required but useful for 1.2 (adding dev repos for archives held on github, setting ocamlfind deps as build-only, turning depopts constraints to conflicts [3]...). This is useful as a starting point for repo extension and example, and done using scripts in `admin-scripts/` [4]
> > >
> > > - a `admin-scripts/to_1_1.ml` script in opam [5] that can convert a package back to 1.1 format. I successfully tested it on the above repo and with opam 1.1 ; there may be corner cases on new 1.2 opam files that this didn't get into, but these can be caught by Travis before they break.
> > >
> > > - updated admin scripts on the 11-bridge branch of opam.ocaml.org [6]. The new scripts create a duplicate of the repo at opam.ocaml.org/1.1/, branch version-triggered redirects between the two, and apply the above script to the 1.1 repo mirror at every update. This should make it transparent whichever opam version is used.
> > >
> > > - tested the opam.ocaml.org scripts on a local mirror I set up, and they seem to work fine (after _a lot_ of tweaking) ; note that these can be pushed live beforehand, they'll set up the redirects but the translation script doesn't change opam files with `opam-version` < "1.2" so it won't cause any user-visible changes until we actually accept 1.2 opam files in the repo (except for the "permanently redirected" message)
> > >
> > > What remains to do:
> > >
> > > - setup the opam-repository travis scripts to apply the 1.1 rewrite before testing, for opam versions < 1.2. Only tricky part is to get hold of a recent enough opam-lib to run the script (maybe we could cheat and put a standalone bytecode exe on opam-repository for that ; well one for 4.01 and one for 4.02 since the format changed...). This way PRs to opam-repo containing 1.2 opam files will be correctly tested, as well as the rewrite.
> > >
> > > - release !
> > >
> > >
> > > Finally, note that I'll be moving across the globe next week, and won't be available for two weeks or so. Everything should be ready to release as soon as I get back.
> > >
> > > Cheers,
> > > Louis
> > >
> > >
> > >
> > > [1] https://github.com/ocaml/opam/releases/tag/1.2.0-rc2
> > > [2] https://github.com/ocaml/opam/issues/1662
> > > [3] https://github.com/ocaml/opam/pull/1325
> > > [4] https://github.com/ocaml/opam/tree/master/admin-scripts
> > > [5] https://github.com/ocaml/opam/pull/1743
> > > [6] https://github.com/ocaml/opam.ocaml.org/tree/11-bridge
> > > [7] https://github.com/ocaml/opam-repository/tree/1.2-test
> > >
> > >
> > > PS: during the course of these tests, I sadly found out that repo redirect handling in 1.1 wasn't that good: it works at update but not straight-away at init. See comment at https://github.com/ocaml/opam/pull/1744
> >
>  
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141002/aea32a11/attachment.html>

From thomas at gazagnaire.org  Thu Oct  2 10:27:44 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Thu, 2 Oct 2014 10:27:44 +0100
Subject: [opam-devel] call for help: opam history
In-Reply-To: <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>
References: <837CF831-839A-48E8-A685-70C48381D483@gazagnaire.org>
 <CAHvkLrPatjXttkGhZpahw_xq+JTR=OxagDOFdugJimwfzTEjGQ@mail.gmail.com>
 <FFCF273B-994C-4F82-9E83-DF90867DA237@gazagnaire.org>
 <CAHvkLrO3Hq5Or0erxe1wrhk6WJ=V+wcQAA1n7XpT6sBvhnL86g@mail.gmail.com>
 <8F9585AA-3C82-4283-A50B-377F5DC65914@gazagnaire.org>
 <CAHvkLrPF-pK=dzWwbkgpDmTf27sYUK_3Du=EVUDE51dAdzG0xQ@mail.gmail.com>
 <EFCFEFB4-045D-4C10-922F-1A41DE272973@recoil.org>
 <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>
Message-ID: <073D5C65-3D5D-4937-B429-07CAD46AAA22@gazagnaire.org>

> Ok. Before modifying the document, I would like to suggest the
> following overview:
> 
> 1/ The Ancestors of OPAM (GODI and so on)
> 2/ The Foundations of OPAM (gathering several teams to work on OPAM)
> 3/ The Birth of OPAM (first implementations)
> 4/ The Rise of OPAM (first release and current situation)
> 
> Also, I would like to put some stress on the 4 main differences
> between GODI and OPAM, as I see them. The 4 short-comings of GODI I
> see that are fixed by OPAM are:
> - sub-optimal installation solutions => use of CUDF/Dose
> - complex user interface => simple "? la apt" interface
> - complex repository management => simple github-based workflow
> - no automatic Q/A on the repository => Travis + OWS
> 
> What do you think ?

sounds good to me!

> --Fabrice
> 
> 
> 
> 
> 
> 
> 
> 
> On Tue, Sep 30, 2014 at 7:11 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> On 30 Sep 2014, at 18:06, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:
>>> 
>>> @Anil: yes, I kind of remember that there was a tool to automatically
>>> extract the meta-data from GODI packages and to translate it to
>>> "descr" files. However, the work of filling OPAM files with build and
>>> install instructions was not automated, to the best of my knowledge,
>>> so Frederic had to build every package and check that it would work
>>> well in OPAM. But of course, GODI should be credited, both for
>>> providing an inspiration for OPAM (we built on the experience we had
>>> of GODI and sometimes, of the problems we had with it) and for forcing
>>> many developers to package nicely their programs and libraries, so
>>> that we work of packaging them again was much more easy.
>> 
>> Yes, I think that's right -- it was just the descriptions and metadata
>> that were borrowed from GODI, with the build instructions being manually
>> edited to add (e.g.) the prefix and make macros.  That was quite a bit of
>> work...
>> 
>> -anil
>> 
> 
> 
> 
> -- 
> Fabrice LE FESSANT
> Chercheur en Informatique
> INRIA Paris Rocquencourt -- OCamlPro
> Programming Languages and Distributed Systems


From Fabrice.Le_fessant at inria.fr  Thu Oct  2 11:02:49 2014
From: Fabrice.Le_fessant at inria.fr (Fabrice Le Fessant)
Date: Thu, 2 Oct 2014 12:02:49 +0200
Subject: [opam-devel] ows reports
In-Reply-To: <36A65E76-3C37-4C22-9E90-C9A935046B74@gazagnaire.org>
References: <08CEEB78-5430-48F2-BED2-368E05B16579@gazagnaire.org>
 <20140930152523.GB26724@traveler>
 <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
 <1461872.QmSIJtBQxL@ocp-dell>
 <9244AA20-9703-4163-8A85-532D09404B56@gazagnaire.org>
 <CAHvkLrP7x9+ZZpJMfPxtbfXLFU_jecRViwBwaVTn0hbmhthP5Q@mail.gmail.com>
 <36A65E76-3C37-4C22-9E90-C9A935046B74@gazagnaire.org>
Message-ID: <CAHvkLrO2GKJd1dqDAiQ=FiwEhiJ7x1NYbCU_nkehWAhMh8OHFg@mail.gmail.com>

On Thu, Oct 2, 2014 at 11:25 AM, Thomas Gazagnaire
<thomas at gazagnaire.org> wrote:
>>  I don't think this is going to work: red boxes in OWS have a clear
>> semantics, from the user point of view, it means that 'opam list' is
>> going to show the package with the corresponding version as available
>> for the current switch, but 'opam install PACKAGE.VERSION' is going to
>> fail. That's bad user experience. Changing the red box into an orange
>> box is not going to change this bad experience for the user.
>
> Then the table is inconsistent:
>
> $ opam install typerex.1.99.6-beta
> [ERROR] typerex.1.99.6-beta is not available because it requires OCaml < 4.02.0.
>
> opam returns an error, but the box is "white" on ows. Following your logics, it should be "red".

?lefessan at peerocaml [~]
??? opam switch 4.02.0                                                  [11:36]
# To setup the new switch in the current shell, you need to run:
eval `opam config env`

??? opam list --all | grep typer                                        [11:36]
typerep                   --  typerep is a library for runtime types.
(no typerex here)

??? opam install typerex.1.99.6-beta                                    [11:36]
[ERROR] typerex.1.99.6-beta is not available because it requires OCaml < 4.02.0.

Why is it inconsistent ? It is not listed in "opam list --all" for 4.02.0.

More strangely:
??? opam search typerex                                                 [11:44]
# Existing packages for 4.02.0:
ocaml-top     --  The OCaml interactive editor for education
ocp-indent    --  A simple tool to indent OCaml programs
ocp-index     --  Lightweight documentation extractor for installed OCaml librar
spotinstall   --  A tool to facilitate the installation of OCaml annotation file
typerex       --

Here, typerex is listed, even though it is explicitely written in its
opam file that is cannot be installed on 4.02.0 (it is a bug in my
opam version, probably). I must say I am a bit puzzled by the output
of "opam list --all", it seems to not display some packages like
"js-lz4", although they are said to be available for 4.02.0 (but
broken in OWS).

> Usually users request a package name, not a specific version of a package. ows doesn't make the difference between "all versions are broken" and "the version X is broken" which is a far worst user experience.

You would like to have a red box on the package itself when all
versions are broken ? Indeed, it is a good idea.

> Now, from a repository maintainer point-of-view, if someone creates a new metrics and advertises it by saying "look how bad it is",

Are you saying that somebody at IRILL used OWS to complain about the
quality of the opam-repository ? I only remember it being advertised
as a complementary way to improve the quality of the repository, not
as a way to disqualify its maintainers.

> I guess the goal is to make some changes (the policy, the workflow, ...) to improve the metrics results or at least to propose or explain how it can be improved -- if not, I don't see the point. Currently, it is still unclear to me how we (the repo maintainers) can fix all the "broken" packages on the repo without requiring all packages to compile on all the versions of the compiler (which will never happen) or by duplicate metadata (the transitive closure of the available fields) which will get out-of-sync quickly.

Currently, the field "ocaml-version" is used to tell that the
"content" of the package is incompatible with a given OCaml version.
Maybe there should be another field to say that the package is known
to be incompatible with a given ocaml version, because of missing
dependencies. This way, it would not be printed in the list of
available packages for that version. OWS could test for packages which
are said to be unavailable because of missing dependencies, and become
available when a dependency is fixed, so that the repo maintainers can
immediatly update the status to make it available again in OPAM.

Note that you are touching a problem of the github workflow, the fact
that the maintenance of the repository relies on a small set of
volunteers, when in Debian, for example, every package is maintained
by its own maintainer, who is responsible to fix the problems.

>>  Moreover, the reasons for a failure may me mixed: if package A
>> depends on B, and there are two versions of B, one depending on C with
>> a version of C that does not exist, the other one with a version of C
>> that is not available for the current compiler, what would be the
>> reason for A not being installed ? Something has to be done, either
>> adding a new version of C, or porting the old version of C on the
>> current compiler, maybe adding a new version of B, or dropping the
>> dependency on B for A, but whatever it is, OWS is not going to give an
>> advice. It will just say "A is broken" and put a red box.
>
> These are the interesting packages which should be brought to attention to the maintainers. Not the other 99% of packages which are unavailable by transitivity (and reported as such by opam), especially when a more recent version of this package exists and fix the availability issue.

I was talking about a specific version of A, not all versions of A.

>>  Actually, it would be nice to run `distcheck` twice for every new
>> pull-request: once to compute the number of broken packages before the
>> commit, and once to compute the number of broken packages after the
>> commit. This way, only pull-request decreasing the number of broken
>> packages would be accepted. This could be part of a general
>> `opam-repo-lint` tool, that would also verify that every package
>> description is smaller than 50 kB (ref. Coccinelle), and call
>> `opam-lint` on every `opam` file.
>
> Any tool to help us triaging incoming pull-requests is more than welcome.

The question is more: should you put it on the roadmap of OPAM (so
that Louis can work on it after the release at some point), or do you
prefer to wait for somebody to contribute it from the outside of the
OPAM project ?

--Fabrice

From anil at recoil.org  Thu Oct  2 11:18:05 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 2 Oct 2014 11:18:05 +0100
Subject: [opam-devel] ows reports
In-Reply-To: <CAHvkLrO2GKJd1dqDAiQ=FiwEhiJ7x1NYbCU_nkehWAhMh8OHFg@mail.gmail.com>
References: <08CEEB78-5430-48F2-BED2-368E05B16579@gazagnaire.org>
 <20140930152523.GB26724@traveler>
 <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
 <1461872.QmSIJtBQxL@ocp-dell>
 <9244AA20-9703-4163-8A85-532D09404B56@gazagnaire.org>
 <CAHvkLrP7x9+ZZpJMfPxtbfXLFU_jecRViwBwaVTn0hbmhthP5Q@mail.gmail.com>
 <36A65E76-3C37-4C22-9E90-C9A935046B74@gazagnaire.org>
 <CAHvkLrO2GKJd1dqDAiQ=FiwEhiJ7x1NYbCU_nkehWAhMh8OHFg@mail.gmail.com>
Message-ID: <24D931DC-3D56-41DA-B0CF-B0B66F3E0FB2@recoil.org>

On 2 Oct 2014, at 11:02, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:

> Note that you are touching a problem of the github workflow, the fact
> that the maintenance of the repository relies on a small set of
> volunteers, when in Debian, for example, every package is maintained
> by its own maintainer, who is responsible to fix the problems.

I do not believe this statement is accurate.  There have been a growing
number of volunteers without direct merge access who have been fixing bugs
based on bulk builds (most recently, Dave Scott, Damien Doligez and
Jeremy Yallop have all submitted a significant number of fixes).  The
number of triage tools is slowly growing, hence the interest in making
OWS as useful as possible, alongside bulk build logs.  Almost every
contributor of a package uses the Travis results to refine their pull
requests, which also devolves maintenance responsibilities to the
contributor.

More broadly, we also direct problems back to package maintainers where
possible, and minimise the number of patches maintained directly in OPAM
as opposed to upstream integration. 

-anil


From thomas at gazagnaire.org  Thu Oct  2 11:22:57 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Thu, 2 Oct 2014 11:22:57 +0100
Subject: [opam-devel] Travis CI failures
In-Reply-To: <D445ED14-AC9A-4A65-88D6-AB45E1910AB2@gazagnaire.org>
References: <D445ED14-AC9A-4A65-88D6-AB45E1910AB2@gazagnaire.org>
Message-ID: <7D7EE0AF-88E7-4E79-829B-C3962C14289F@gazagnaire.org>

The system seems continue to be unreliable. Lots of errors like:

$ bash -e .travis-ci.sh
pull req: 2797
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  1687    0  1687    0     0  27101      0 --:--:-- --:--:-- --:--:-- 29086
Executing: gpg --ignore-time-conflict --no-options --no-default-keyring --secret-keyring /tmp/tmp.1mOg0GHsnL --trustdb-name /etc/apt/trustdb.gpg --keyring /etc/apt/trusted.gpg --primary-keyring /etc/apt/trusted.gpg --keyring /etc/apt/trusted.gpg.d//apt.postgresql.org.gpg --keyserver hkp://keyserver.ubuntu.com:80/ --recv 630F626C9FD811EBC19DF0955B2D0C5561707B09
gpg: requesting key 61707B09 from hkp server keyserver.ubuntu.com
gpg: key 61707B09: public key "Launchpad PPA for Anil Madhavapeddy" imported
gpg: Total number processed: 1
gpg:               imported: 1  (RSA: 1)
W: There is no public key available for the following key IDs:
3B4FE6ACC0B21F32
W: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/trusty/main/source/Sources  302  Moved Temporarily [Mirror: http://mirror.imbrandon.com/ubuntu/]
W: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/trusty/restricted/source/Sources  302  Moved Temporarily [Mirror: http://mirror.imbrandon.com/ubuntu/]
W: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/trusty/universe/source/Sources  302  Moved Temporarily [Mirror: http://mirror.imbrandon.com/ubuntu/]
W: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/trusty/main/binary-amd64/Packages  302  Moved Temporarily [Mirror: http://mirror.imbrandon.com/ubuntu/]
W: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/trusty/restricted/binary-amd64/Packages  302  Moved Temporarily [Mirror: http://mirror.imbrandon.com/ubuntu/]
W: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/trusty/universe/binary-amd64/Packages  302  Moved Temporarily [Mirror: http://mirror.imbrandon.com/ubuntu/]
W: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/trusty/main/binary-i386/Packages  302  Moved Temporarily [Mirror: http://mirror.imbrandon.com/ubuntu/]
W: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/trusty/restricted/binary-i386/Packages  302  Moved Temporarily [Mirror: http://mirror.imbrandon.com/ubuntu/]
W: Failed to fetch mirror://mirrors.ubuntu.com/mirrors.txt/dists/trusty/universe/binary-i386/Packages  302  Moved Temporarily [Mirror: http://mirror.imbrandon.com/ubuntu/]
E: Some index files failed to download. They have been ignored, or old ones used instead.
The command "bash -e .travis-ci.sh" exited with 100.

I'll try to contact Travis support later today.

Thomas

On 28 Sep 2014, at 16:38, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:

> Hi all,
> 
> Recently I saw Travis CI to be quite unreliable. It took sometimes hours to start and very often I need to manually re-lauch some tests because of connectivity errors. I don't complain too loudly because it's a free (and very useful) service, but I am wondering if we should not upgrade to something a bit more reliable.
> 
> Looking at https://travis-ci.com/plans they seem to have few paying offer which might be interesting, although I am not sure to understand if this will solve the current issues. And it looks a little bit expensive, but we rely on the free service a lot already. 
> 
> Also, ideally we should use Travis CI to only coordinate the build on the Rackspace VMs but we don't have that infrastructure in place yet, so  maybe we should switch to a paying service for few months.
> 
> What do people think?
> 
> Best,
> Thomas


From amc79 at cam.ac.uk  Thu Oct  2 11:40:48 2014
From: amc79 at cam.ac.uk (Amir Chaudhry)
Date: Thu, 2 Oct 2014 11:40:48 +0100
Subject: [opam-devel] call for help: opam history
In-Reply-To: <073D5C65-3D5D-4937-B429-07CAD46AAA22@gazagnaire.org>
References: <837CF831-839A-48E8-A685-70C48381D483@gazagnaire.org>
 <CAHvkLrPatjXttkGhZpahw_xq+JTR=OxagDOFdugJimwfzTEjGQ@mail.gmail.com>
 <FFCF273B-994C-4F82-9E83-DF90867DA237@gazagnaire.org>
 <CAHvkLrO3Hq5Or0erxe1wrhk6WJ=V+wcQAA1n7XpT6sBvhnL86g@mail.gmail.com>
 <8F9585AA-3C82-4283-A50B-377F5DC65914@gazagnaire.org>
 <CAHvkLrPF-pK=dzWwbkgpDmTf27sYUK_3Du=EVUDE51dAdzG0xQ@mail.gmail.com>
 <EFCFEFB4-045D-4C10-922F-1A41DE272973@recoil.org>
 <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>
 <073D5C65-3D5D-4937-B429-07CAD46AAA22@gazagnaire.org>
Message-ID: <26819D7D-4ABB-4782-AA28-67C722F5E9A9@cam.ac.uk>

Thanks for presenting the overview.  I actually don't really agree with point 1 (the ancestors), nor do I think it's helpful to point out specific differences between OPAM and GODI (at least in this document).

As a relative newcomer to OCaml, I would find it a little odd if much time was spent on other tools that existed before.  Of course, I would expect some brief reference to 'how things were' but this could be covered in a couple of sentences imho.  Since GODI is no longer maintained, any specific comparisons are completely unhelpful to me as it's not an option that I can choose to use ? it's not like I'm reading this document in order to make a trade-off between the two.  As a result, it just creates a cognitive burden for me as a reader because in order to understand why OPAM does something, I must first understand how GODI did it.  I'd rather just be told why OPAM does it. Anything more than that feels like unhelpful detail and takes me away from learning about OPAM itself.

What I'd really want from a 'Background' section is a high-level summary of what good things OPAM wanted to keep from previous systems and what problems it wanted to fix (regardless of whatever the tools/systems themselves were).  In other words, the things that would later become OPAM's guiding principles. Paraphrasing from Fabrice's list below (and adding my own) it seem like these are:
- simple user interface
- straightforward (programmer-friendly?) workflow
- Bias towards, extensive automated QA on packages
- 'professional-grade' solvers
- easy to add/update/release new packages

My 2cents :)

Best wishes,
Amir

On 2 Oct 2014, at 10:27, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:

>> Ok. Before modifying the document, I would like to suggest the
>> following overview:
>> 
>> 1/ The Ancestors of OPAM (GODI and so on)
>> 2/ The Foundations of OPAM (gathering several teams to work on OPAM)
>> 3/ The Birth of OPAM (first implementations)
>> 4/ The Rise of OPAM (first release and current situation)
>> 
>> Also, I would like to put some stress on the 4 main differences
>> between GODI and OPAM, as I see them. The 4 short-comings of GODI I
>> see that are fixed by OPAM are:
>> - sub-optimal installation solutions => use of CUDF/Dose
>> - complex user interface => simple "? la apt" interface
>> - complex repository management => simple github-based workflow
>> - no automatic Q/A on the repository => Travis + OWS
>> 
>> What do you think ?
> 
> sounds good to me!
> 
>> --Fabrice
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> On Tue, Sep 30, 2014 at 7:11 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> On 30 Sep 2014, at 18:06, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:
>>>> 
>>>> @Anil: yes, I kind of remember that there was a tool to automatically
>>>> extract the meta-data from GODI packages and to translate it to
>>>> "descr" files. However, the work of filling OPAM files with build and
>>>> install instructions was not automated, to the best of my knowledge,
>>>> so Frederic had to build every package and check that it would work
>>>> well in OPAM. But of course, GODI should be credited, both for
>>>> providing an inspiration for OPAM (we built on the experience we had
>>>> of GODI and sometimes, of the problems we had with it) and for forcing
>>>> many developers to package nicely their programs and libraries, so
>>>> that we work of packaging them again was much more easy.
>>> 
>>> Yes, I think that's right -- it was just the descriptions and metadata
>>> that were borrowed from GODI, with the build instructions being manually
>>> edited to add (e.g.) the prefix and make macros.  That was quite a bit of
>>> work...
>>> 
>>> -anil
>>> 
>> 
>> 
>> 
>> -- 
>> Fabrice LE FESSANT
>> Chercheur en Informatique
>> INRIA Paris Rocquencourt -- OCamlPro
>> Programming Languages and Distributed Systems
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From thomas at gazagnaire.org  Thu Oct  2 11:53:49 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Thu, 2 Oct 2014 11:53:49 +0100
Subject: [opam-devel] ows reports
In-Reply-To: <CAHvkLrO2GKJd1dqDAiQ=FiwEhiJ7x1NYbCU_nkehWAhMh8OHFg@mail.gmail.com>
References: <08CEEB78-5430-48F2-BED2-368E05B16579@gazagnaire.org>
 <20140930152523.GB26724@traveler>
 <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
 <1461872.QmSIJtBQxL@ocp-dell>
 <9244AA20-9703-4163-8A85-532D09404B56@gazagnaire.org>
 <CAHvkLrP7x9+ZZpJMfPxtbfXLFU_jecRViwBwaVTn0hbmhthP5Q@mail.gmail.com>
 <36A65E76-3C37-4C22-9E90-C9A935046B74@gazagnaire.org>
 <CAHvkLrO2GKJd1dqDAiQ=FiwEhiJ7x1NYbCU_nkehWAhMh8OHFg@mail.gmail.com>
Message-ID: <7A185B4B-A943-463D-96EE-90919CA0E130@gazagnaire.org>

> ?lefessan at peerocaml [~]
> ??? opam switch 4.02.0                                                  [11:36]
> # To setup the new switch in the current shell, you need to run:
> eval `opam config env`
> 
> ??? opam list --all | grep typer                                        [11:36]
> typerep                   --  typerep is a library for runtime types.
> (no typerex here)
> 
> ??? opam install typerex.1.99.6-beta                                    [11:36]
> [ERROR] typerex.1.99.6-beta is not available because it requires OCaml < 4.02.0.
> 
> Why is it inconsistent ? It is not listed in "opam list --all" for 4.02.0.

You are conflating "a package is unavailable because he has an available filter" and "a package is unavailable because one of its hard dependency is unavailable". `opam list --all` discards both kinds of packages but ows distinguish them. You are also conflating "at least a version of a package is installable" (which is what `opam list --all` shows) and all versions of the package are available (which is what is showed in ows).

So again, it's unclear to me what exactly is the metrics ows is supposed to reflect, for an user point-of-view and for a maintainer point-of-view. Maybe a good start should be to explain what you are trying to measure and how this is related to the quality an user will perceive.


> More strangely:
> ??? opam search typerex                                                 [11:44]
> # Existing packages for 4.02.0:
> ocaml-top     --  The OCaml interactive editor for education
> ocp-indent    --  A simple tool to indent OCaml programs
> ocp-index     --  Lightweight documentation extractor for installed OCaml librar
> spotinstall   --  A tool to facilitate the installation of OCaml annotation file
> typerex       --
> 
> Here, typerex is listed, even though it is explicitely written in its
> opam file that is cannot be installed on 4.02.0 (it is a bug in my
> opam version, probably).

not sure we are checking that the results of a search are installable. worth filling an issue on github about that.

> I must say I am a bit puzzled by the output
> of "opam list --all", it seems to not display some packages like
> "js-lz4", although they are said to be available for 4.02.0 (but
> broken in OWS).

js-lz4 is not installable so it does not show in the results of `opam list --all`. 

>> Usually users request a package name, not a specific version of a package. ows doesn't make the difference between "all versions are broken" and "the version X is broken" which is a far worst user experience.
> 
> You would like to have a red box on the package itself when all
> versions are broken ? Indeed, it is a good idea.

yes

>> Now, from a repository maintainer point-of-view, if someone creates a new metrics and advertises it by saying "look how bad it is",
> 
> Are you saying that somebody at IRILL used OWS to complain about the
> quality of the opam-repository ?

yes, but that's not a problem as long as it reflects reality and there is a way to improve

> I only remember it being advertised
> as a complementary way to improve the quality of the repository, not
> as a way to disqualify its maintainers.

Anil and I are "responsible" for fixing the policies to accept or not packages. We try to advise people on how to improve. For instance, it is not clear to me what to say to jane-street to improve the quality of their packages in ows. They follow they workflow we have defined initially.

>> I guess the goal is to make some changes (the policy, the workflow, ...) to improve the metrics results or at least to propose or explain how it can be improved -- if not, I don't see the point. Currently, it is still unclear to me how we (the repo maintainers) can fix all the "broken" packages on the repo without requiring all packages to compile on all the versions of the compiler (which will never happen) or by duplicate metadata (the transitive closure of the available fields) which will get out-of-sync quickly.
> 
> Currently, the field "ocaml-version" is used to tell that the
> "content" of the package is incompatible with a given OCaml version.
> Maybe there should be another field to say that the package is known
> to be incompatible with a given ocaml version, because of missing
> dependencies. This way, it would not be printed in the list of
> available packages for that version.

opam removes the transitive closure of unavailable packages in `opam list --all`.  But yes, maybe we need more meta-data. Is that the solution you recommend?

Thomas

From daniel.buenzli at erratique.ch  Thu Oct  2 12:39:23 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Thu, 2 Oct 2014 13:39:23 +0200
Subject: [opam-devel] call for help: opam history
In-Reply-To: <26819D7D-4ABB-4782-AA28-67C722F5E9A9@cam.ac.uk>
References: <837CF831-839A-48E8-A685-70C48381D483@gazagnaire.org>
 <CAHvkLrPatjXttkGhZpahw_xq+JTR=OxagDOFdugJimwfzTEjGQ@mail.gmail.com>
 <FFCF273B-994C-4F82-9E83-DF90867DA237@gazagnaire.org>
 <CAHvkLrO3Hq5Or0erxe1wrhk6WJ=V+wcQAA1n7XpT6sBvhnL86g@mail.gmail.com>
 <8F9585AA-3C82-4283-A50B-377F5DC65914@gazagnaire.org>
 <CAHvkLrPF-pK=dzWwbkgpDmTf27sYUK_3Du=EVUDE51dAdzG0xQ@mail.gmail.com>
 <EFCFEFB4-045D-4C10-922F-1A41DE272973@recoil.org>
 <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>
 <073D5C65-3D5D-4937-B429-07CAD46AAA22@gazagnaire.org>
 <26819D7D-4ABB-4782-AA28-67C722F5E9A9@cam.ac.uk>
Message-ID: <32A068A31A594350923E819449570C05@erratique.ch>

Le jeudi, 2 octobre 2014 ? 12:40, Amir Chaudhry a ?crit :
> Thanks for presenting the overview. I actually don't really agree with point 1 (the ancestors), nor do I think it's helpful to point out specific differences between OPAM and GODI (at least in this document).
>  
> As a relative newcomer to OCaml, I would find it a little odd if much time was spent on other tools that existed before.
I think you are confusing things. This is not a sales brochure or "why you want to use opam". It's about where does opam come from a historical perspective. As such it is important to put opam's birth in context and what existed at the time.

Best,

Daniel




From Fabrice.Le_fessant at inria.fr  Thu Oct  2 13:58:06 2014
From: Fabrice.Le_fessant at inria.fr (Fabrice Le Fessant)
Date: Thu, 2 Oct 2014 14:58:06 +0200
Subject: [opam-devel] ows reports
In-Reply-To: <7A185B4B-A943-463D-96EE-90919CA0E130@gazagnaire.org>
References: <08CEEB78-5430-48F2-BED2-368E05B16579@gazagnaire.org>
 <20140930152523.GB26724@traveler>
 <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
 <1461872.QmSIJtBQxL@ocp-dell>
 <9244AA20-9703-4163-8A85-532D09404B56@gazagnaire.org>
 <CAHvkLrP7x9+ZZpJMfPxtbfXLFU_jecRViwBwaVTn0hbmhthP5Q@mail.gmail.com>
 <36A65E76-3C37-4C22-9E90-C9A935046B74@gazagnaire.org>
 <CAHvkLrO2GKJd1dqDAiQ=FiwEhiJ7x1NYbCU_nkehWAhMh8OHFg@mail.gmail.com>
 <7A185B4B-A943-463D-96EE-90919CA0E130@gazagnaire.org>
Message-ID: <CAHvkLrPfmaLgXeLjNFpPEJf=YxPKSudvOFUp1Tc_CKq8bV5G_w@mail.gmail.com>

On Thu, Oct 2, 2014 at 12:53 PM, Thomas Gazagnaire
<thomas at gazagnaire.org> wrote:
> Anil and I are "responsible" for fixing the policies to accept or not packages. We try to advise people on how to improve. For instance, it is not clear to me what to say to jane-street to improve the quality of their packages in ows. They follow they workflow we have defined initially.

I think the choice is either:
1/ to decide that are not going to fix old packages. In this case,
they should take OWS information as definitive, and mark as
unavailable for a given OCaml version any package that is red for that
version.
2/ to fix dependencies to be compatible with all OCaml versions that
they want to support (i.e. that the package says it is available for).
For example, they could provide several implementations of the same
module for different versions of OCaml, if the module uses features of
specific OCaml versions.

In both case, the result is that the package is either advertised as
not being available for an OCaml version (an empty box in OWS), or it
is available with matching dependencies (a green box).

>>> I guess the goal is to make some changes (the policy, the workflow, ...) to improve the metrics results or at least to propose or explain how it can be improved -- if not, I don't see the point. Currently, it is still unclear to me how we (the repo maintainers) can fix all the "broken" packages on the repo without requiring all packages to compile on all the versions of the compiler (which will never happen) or by duplicate metadata (the transitive closure of the available fields) which will get out-of-sync quickly.
>>
>> Currently, the field "ocaml-version" is used to tell that the
>> "content" of the package is incompatible with a given OCaml version.
>> Maybe there should be another field to say that the package is known
>> to be incompatible with a given ocaml version, because of missing
>> dependencies. This way, it would not be printed in the list of
>> available packages for that version.
>
> opam removes the transitive closure of unavailable packages in `opam list --all`.  But yes, maybe we need more meta-data. Is that the solution you recommend?

Ideally, package maintainers would fix their dependencies to work on
all supported versions, but in the meantime, yes, such a meta-data
could help.

--Fabrice

From thomas at gazagnaire.org  Thu Oct  2 17:40:22 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Thu, 2 Oct 2014 17:40:22 +0100
Subject: [opam-devel] ows reports
In-Reply-To: <CAHvkLrPfmaLgXeLjNFpPEJf=YxPKSudvOFUp1Tc_CKq8bV5G_w@mail.gmail.com>
References: <08CEEB78-5430-48F2-BED2-368E05B16579@gazagnaire.org>
 <20140930152523.GB26724@traveler>
 <228736F0-FD04-4607-821F-79F9ADA97E55@gazagnaire.org>
 <1461872.QmSIJtBQxL@ocp-dell>
 <9244AA20-9703-4163-8A85-532D09404B56@gazagnaire.org>
 <CAHvkLrP7x9+ZZpJMfPxtbfXLFU_jecRViwBwaVTn0hbmhthP5Q@mail.gmail.com>
 <36A65E76-3C37-4C22-9E90-C9A935046B74@gazagnaire.org>
 <CAHvkLrO2GKJd1dqDAiQ=FiwEhiJ7x1NYbCU_nkehWAhMh8OHFg@mail.gmail.com>
 <7A185B4B-A943-463D-96EE-90919CA0E130@gazagnaire.org>
 <CAHvkLrPfmaLgXeLjNFpPEJf=YxPKSudvOFUp1Tc_CKq8bV5G_w@mail.gmail.com>
Message-ID: <2A5C29C2-D556-42DA-A7D1-A0D61AD9FDB8@gazagnaire.org>

> I think the choice is either:
> 1/ to decide that are not going to fix old packages. In this case,
> they should take OWS information as definitive, and mark as
> unavailable for a given OCaml version any package that is red for that
> version.

I have created https://github.com/ocaml/opam-repository/issues/2814 to track that. I won't be able to work on that in the next few days, but I'll fix that before the end of the month unless anyone else wants to contribute. So we will have a full green table on ows and it will be easier to accept/reject new packages.

Best,
Thomas


> 2/ to fix dependencies to be compatible with all OCaml versions that
> they want to support (i.e. that the package says it is available for).
> For example, they could provide several implementations of the same
> module for different versions of OCaml, if the module uses features of
> specific OCaml versions.
> 
> In both case, the result is that the package is either advertised as
> not being available for an OCaml version (an empty box in OWS), or it
> is available with matching dependencies (a green box).
> 
>>>> I guess the goal is to make some changes (the policy, the workflow, ...) to improve the metrics results or at least to propose or explain how it can be improved -- if not, I don't see the point. Currently, it is still unclear to me how we (the repo maintainers) can fix all the "broken" packages on the repo without requiring all packages to compile on all the versions of the compiler (which will never happen) or by duplicate metadata (the transitive closure of the available fields) which will get out-of-sync quickly.
>>> 
>>> Currently, the field "ocaml-version" is used to tell that the
>>> "content" of the package is incompatible with a given OCaml version.
>>> Maybe there should be another field to say that the package is known
>>> to be incompatible with a given ocaml version, because of missing
>>> dependencies. This way, it would not be printed in the list of
>>> available packages for that version.
>> 
>> opam removes the transitive closure of unavailable packages in `opam list --all`.  But yes, maybe we need more meta-data. Is that the solution you recommend?
> 
> Ideally, package maintainers would fix their dependencies to work on
> all supported versions, but in the meantime, yes, such a meta-data
> could help.
> 
> --Fabrice


From louis.gesbert at ocamlpro.com  Fri Oct  3 05:36:02 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Fri, 03 Oct 2014 06:36:02 +0200
Subject: [opam-devel] ows reports
In-Reply-To: <CAHvkLrP7x9+ZZpJMfPxtbfXLFU_jecRViwBwaVTn0hbmhthP5Q@mail.gmail.com>
References: <08CEEB78-5430-48F2-BED2-368E05B16579@gazagnaire.org>
 <9244AA20-9703-4163-8A85-532D09404B56@gazagnaire.org>
 <CAHvkLrP7x9+ZZpJMfPxtbfXLFU_jecRViwBwaVTn0hbmhthP5Q@mail.gmail.com>
Message-ID: <1584865.nGQ1pDpBUa@ocp-dell>

Hi

I think this discussion is going the wrong way.
>From my point of view, OWS was created as an extremely useful tool to help debug packages in bulk and locate some packaging errors.

Then we are mixing it with notions of metrics for the repository quality. I think this is wrong: it can certainly be used to help improve repo quality, and we _could_ either turn it into a repo-quality metrics tool, add that kind of functionality or use it as the basis of such a tool. But it's not that, not at the moment: that's probably a communication error, and the misunderstanding on what the OWS table precisely means at the beginning of this conversation is a clear sign of that.

Therefore, attempts to improve OWS results by tweaking the repo are absurd if that's their only goal.

Note that raw distcheck results may make much more sense as a metrics with single-version repos like that of Debian, which added to the confusion.

I'm opening a new thread to discuss repo metrics from fresh ground.

Cheers,
Louis


> > Also I've noticed that packages which are not installable because they are
> > not available on all compilers do not appear in the list. I think they
> > should appear there, as it's usually an error in their metadata (see
> > lablgtk-extras 1.2, 1.3 and 1.4, that I've just fixed).

Yes, this is a bug.

> > Louis, Instead of the derived function, maybe we can apply to all "broken"
> > packages a post-processing step to classify them using the same function as
> > you wrote to reports conflicts / unavailability errors to the user?
> 
>   I don't think this is going to work: red boxes in OWS have a clear
> semantics, from the user point of view, it means that 'opam list' is
> going to show the package with the corresponding version as available
> for the current switch, but 'opam install PACKAGE.VERSION' is going to
> fail. That's bad user experience. Changing the red box into an orange
> box is not going to change this bad experience for the user.

Wrong: Red boxes won't show in `opam list -a`; you can still try to install explicitely and get sensibly the same message as in OWS.
(Remark: `opam list -a` shows _installable_ packages. `opam list -A` shows all)

On the classification: we'd need to decide exactly what the categories are, to be discussed on the "metrics" thread.

>   Moreover, the reasons for a failure may me mixed: if package A
> depends on B, and there are two versions of B, one depending on C with
> a version of C that does not exist, the other one with a version of C
> that is not available for the current compiler, what would be the
> reason for A not being installed ? Something has to be done, either
> adding a new version of C, or porting the old version of C on the
> current compiler, maybe adding a new version of B, or dropping the
> dependency on B for A, but whatever it is, OWS is not going to give an
> advice. It will just say "A is broken" and put a red box.

The point is exactly that you get the precise details on these chains of deps by clicking the red box isn't it ?

>   Actually, it would be nice to run `distcheck` twice for every new
> pull-request: once to compute the number of broken packages before the
> commit, and once to compute the number of broken packages after the
> commit.

Excellent idea, akin to the "derived function" I mentionned earlier: this is where it makes most sense, finding out wether a given change has an impact on other packages.

The only related issue I could see on the user experience at the moment, is users seeing a package on opam.ocaml.org/packages and getting disappointed when they couldn't install it while nothing said so on the website. The proper way to fix that would be to add distcheck info (and ows links ?) in opam2web to advertise earlier.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141003/79be7045/attachment-0001.html>

From louis.gesbert at ocamlpro.com  Fri Oct  3 05:36:06 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Fri, 03 Oct 2014 06:36:06 +0200
Subject: [opam-devel] What metrics for opam-repository ?
Message-ID: <1451568.Km8kr4yNXV@ocp-dell>

We currently have several different tools to check and assess the repository ; however, it's unclear exactly how to measure global quality. I'm starting this thread afresh because I think the "ows reports" thread answers the wrong questions.

Stating the obvious:
* The ultimate goal is better user experience
* The metrics must correspond to a criterion that we want to optimize to lead towards that goal
* Related, secondary goal is to give pointers to maintainers on what to improve
* Finally, as much packages (and versions?) as possible should be installable, all ocaml versions and archs 
included.

Please be constructive !

Cheers,
Louis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141003/e96f596d/attachment.html>

From daniel.buenzli at erratique.ch  Fri Oct  3 07:53:24 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Fri, 3 Oct 2014 08:53:24 +0200
Subject: [opam-devel] What metrics for opam-repository ?
In-Reply-To: <1451568.Km8kr4yNXV@ocp-dell>
References: <1451568.Km8kr4yNXV@ocp-dell>
Message-ID: <DDEBB93381034AF5A3D9FEAD128E173C@erratique.ch>

Le vendredi, 3 octobre 2014 ? 06:36, Louis Gesbert a ?crit :
> * The ultimate goal is better user experience

Define user experience.  

* Who is the user ?  
* Are there different kind of users ?  
* What is each kind of user supposed to get from these tables ?  

Daniel



From thomas at gazagnaire.org  Fri Oct  3 08:30:05 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Fri, 3 Oct 2014 08:30:05 +0100
Subject: [opam-devel] What metrics for opam-repository ?
In-Reply-To: <1451568.Km8kr4yNXV@ocp-dell>
References: <1451568.Km8kr4yNXV@ocp-dell>
Message-ID: <9A736D8E-E0AA-4B85-B9C2-0563722ECEBC@gazagnaire.org>

Thanks for asking Louis.

> Stating the obvious:
> * The ultimate goal is better user experience
> * The metrics must correspond to a criterion that we want to optimize to lead towards that goal
> * Related, secondary goal is to give pointers to maintainers on what to improve
> * Finally, as much packages (and versions?) as possible should be installable, all ocaml versions and archs
> included.
>  
> Please be constructive !

From a maintainer point-of-view, the "implicit" static quality I'm tending towards is:

- for each package, there should be at least one version which works for every compiler. If not, there should be at least one version which works on the latest compiler.
- for each package, none of the versions should be broken on all compilers
- for each package, none of the versions should be in conflict

Only the 3rd point is specific to dependencies meta-data. The first 2 points also applies to build results.

Still as a maintainer point-of-view, I'm interested by the root causes of all of this as these better reflect the amount of work needed to improve.

Thomas

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141003/9444c0ce/attachment.html>

From anil at recoil.org  Sun Oct  5 15:31:58 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 5 Oct 2014 15:31:58 +0100
Subject: [opam-devel] What metrics for opam-repository ?
In-Reply-To: <9A736D8E-E0AA-4B85-B9C2-0563722ECEBC@gazagnaire.org>
References: <1451568.Km8kr4yNXV@ocp-dell>
 <9A736D8E-E0AA-4B85-B9C2-0563722ECEBC@gazagnaire.org>
Message-ID: <F4FC2340-7234-4B14-B471-326D15620CC4@recoil.org>

On 3 Oct 2014, at 08:30, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:

> Thanks for asking Louis.
> 
>> Stating the obvious:
>> * The ultimate goal is better user experience
>> * The metrics must correspond to a criterion that we want to optimize to lead towards that goal
>> * Related, secondary goal is to give pointers to maintainers on what to improve
>> * Finally, as much packages (and versions?) as possible should be installable, all ocaml versions and archs
>> included.
>>  
>> Please be constructive !
> 
> From a maintainer point-of-view, the "implicit" static quality I'm tending towards is:
> 
> - for each package, there should be at least one version which works for every compiler. If not, there should be at least one version which works on the latest compiler.
> - for each package, none of the versions should be broken on all compilers
> - for each package, none of the versions should be in conflict
> 
> Only the 3rd point is specific to dependencies meta-data. The first 2 points also applies to build results.
> 
> Still as a maintainer point-of-view, I'm interested by the root causes of all of this as these better reflect the amount of work needed to improve.

The other dimension that's as important is the depexts metadata for different operating systems.  We've started on Ubuntu/Debian pretty well, and have the beginnings of OSX Homebrew and CentOS, but there's a long way to go to get these to be reliable.  Metrics tracking the quality of bulk builds per-OS would be quite useful to have.

-anil

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141005/ac3b7b02/attachment.html>

From anil at recoil.org  Sun Oct  5 23:21:35 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 5 Oct 2014 23:21:35 +0100
Subject: [opam-devel] having an iocamljs for every pull request
In-Reply-To: <CAHYOizGx_G1QCN_s4sepgOQD0BR27gw0dpNWZGGGTiXwBxV+XA@mail.gmail.com>
References: <D5EEC383-6841-4AA6-90F8-DB3BD536FE42@recoil.org>
 <CAHYOizGx_G1QCN_s4sepgOQD0BR27gw0dpNWZGGGTiXwBxV+XA@mail.gmail.com>
Message-ID: <3E76A4C1-7B1D-49B4-A466-5BF91154FDC8@recoil.org>

On 6 May 2014, at 11:43, Andy Ray <andy.ray at ujamjar.com> wrote:

> On Tue, May 6, 2014 at 11:16 AM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> Jeremy enquired about what is required to have an iocamljs toplevel available for every new package pull request into OPAM repository.  I believe we actually have many of the mechanics already:
>> 
>> - Set up an `i.ocaml.org` virtual machine to serve the Cohttp static site for IOCamlJS.  This never runs native code, but does all the URL remapping for the JavaScript frontend to work.  We would need to add virtual hosting support for it, which should be fairly easy.
> 
> As discussed previously there are one or two things to 'harden' in the
> server to make this safe but nothing difficult or time consuming.
> 
>> - Detect if there's a new ocamlfind package in the pull request, which could be done using Thomas' ocamlfind-detection patch.
>> 
>> - Alter the OPAM-repository Travis scripts to POST to i.ocaml.org with the OPAM repository merge point and the name of the new package(s), and have the VM build the new libraries and make the cmo available.
> 
> Yeah, the only trick is keeping the opam/ocamlfind installation
> working correctly as new packages are installed/updated to the
> universe.
> 
>> - Have the Travis script comment on the original pull request with the URL of the toplevel.
> 
> Using the dynamic loading approach there would only be one generic
> iocamljs kernel (/url) and the packages would be loaded by the user.
> You could I suppose auto generate a notebook with the appropriate
> #require directives though.

Now that we have `findlib` files in the OPAM repository, I've been
wondering if it's practical to maintain an .ocamlinit that requires
all the installed libraries.  It might well be too slow, but I would
find that quite convenient, and it would also reduce confusion among
new users.

It would also help with the iocamljs use-case, since the list of
installed packages in a switch could be used to generate the directives
in the notebook.

-anil

From anil at recoil.org  Thu Oct  9 09:34:01 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 9 Oct 2014 09:34:01 +0100
Subject: [opam-devel] opam 1.2 deb/rpm snapshots updated
Message-ID: <92707DBE-F4CD-4716-8511-157FE51E7838@recoil.org>

I've updated the Launchpad and OpenSUSE build RPM and Debs to the latest RC snapshot as of today.  They are available in x86 and ARM variants only.

-anil

From louis.gesbert at ocamlpro.com  Fri Oct 10 01:39:01 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Fri, 10 Oct 2014 02:39:01 +0200
Subject: [opam-devel] opam 1.2 deb/rpm snapshots updated
In-Reply-To: <92707DBE-F4CD-4716-8511-157FE51E7838@recoil.org>
References: <92707DBE-F4CD-4716-8511-157FE51E7838@recoil.org>
Message-ID: <1750104.m8oS8aFZ8e@agaric>

Thanks !

I've just created a 1.2 branch, so that I can go forwards on master and at this point only critical fixes will be backported to 1.2.0.

Le jeudi 9 octobre 2014, 09:34:01 Anil Madhavapeddy a ?crit :
> I've updated the Launchpad and OpenSUSE build RPM and Debs to the latest RC snapshot as of today.  They are available in x86 and ARM variants only.
> 
> -anil
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141010/b4ca9bb9/attachment.html>

From anil at recoil.org  Sat Oct 11 14:09:49 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 11 Oct 2014 06:09:49 -0700
Subject: [opam-devel] [NEW] OCaml oasis and Janestreet Core and Async
In-Reply-To: <CAM8PUPz2cRzaBBEUBqTpOLsUCh8VzFE=E08je21AVZzOwD0fNw@mail.gmail.com>
References: <20141010190314.20679dd0@mortimer.gmerlin.de>
 <CAM8PUPz1W7LDTfn2K30OCc8agJi6ozVdp-3HuEyqYYqHoKQDvg@mail.gmail.com>
 <CAM8PUPz2cRzaBBEUBqTpOLsUCh8VzFE=E08je21AVZzOwD0fNw@mail.gmail.com>
Message-ID: <0CD20130-D55D-471C-8F1D-EE6AEE9DB112@recoil.org>

On 10 Oct 2014, at 11:48, Kenneth Westerback <kwesterback at gmail.com> wrote:

> On 10 October 2014 14:46, Kenneth Westerback <kwesterback at gmail.com> wrote:
>> On 10 October 2014 13:03, Christopher Zimmermann <christopher at gmerlin.de> wrote:
>>> Hi,
>>> 
>>> attached you find many new OCaml ports. Mainly the following two and
>>> their dependencies:
>>> 
>>> * Oasis (an OCaml project build and metadata tool) used by many of our
>>>  OCaml ports.
>>> 
>>> * Janestreet Core standard library overlay and Janestreet Async
>>> 
>>> Oasis depends on devel/janestreet/ocaml-type_conv while most of
>>> janestreet stuff uses oasis. If this is too much, I could leave the rest
>>> of janestreet for now and only import ocaml-type_conv.
>>> 
>>> Since I'm currently waiting for the release of OPAM 1.2
>>> (https://github.com/jasperla/openbsd-wip/tree/master/sysutils/opam),
>>> which can be used to install all those libraries and binaries, I'm
>>> wondering whether it still makes any sense to maintain those ports in
>>> our ports tree. The same applies to other ports already in our tree
>>> like devel/{utop,ocaml-lambda-term,ocaml-lwt} ...). Opinions? OKs?
>>> 
>>> 
>>> Christopher
>> 
>> Personally I would prefer to use opam over ports. The only reason I
>> can see for maintaining ports is if they are needed to build other
>> ocaml ports (mldonkey?) in the tree. That's my 0.05C (Canada has
>> eliminated the penny).
>> 
>> .... Ken
> 
> I guess we would also need a port when upstream needs patches to
> compile on OpenBSD. Hopefully a rare situation going forward.

I'm happy to merge OpenBSD-specific fixes into OPAM -- it's possible to
add OS-specific selectors in the patches field to not affect other OSes.

However, it is very convenient to be able to depend on a binary
installation of OCaml libraries for end-user applications, particularly
given the strict versioning requirements.  The OpenBSD port is also
higher quality when it comes to architecture portability, since it
separates out bytecode vs native code vs native dynlinking architectures.

There is enough metadata available in an OPAM package to generate a
snapshot of OpenBSD ports from a given package set.  I'm not suggesting
we automatically import the results into OpenBSD, but it would really
help keep the ports tree in sync with the latest versions of libraries.
The metadata needed for this is roughly:

- build instructions -- present in OPAM, but they do not separate out
  fake installation and native code at the moment.  This could be added
  to OPAM fairly easily.

- external dependencies -- OPAM has a 'depexts' field where OS packages
  can be specified.  This is a free-form field, so it could be a precise
  pkgspec for the OpenBSD entry.

- categories and homepages -- these can be lifted straight out of the 
  OPAM spec, and tags can be used to map OpenBSD-specific information.

More broadly though, does any other language-specific packaging system
do this at the moment, or all ports maintained manually? 

-anil





From kwesterback at gmail.com  Sat Oct 11 17:21:11 2014
From: kwesterback at gmail.com (Kenneth Westerback)
Date: Sat, 11 Oct 2014 12:21:11 -0400
Subject: [opam-devel] [NEW] OCaml oasis and Janestreet Core and Async
In-Reply-To: <0CD20130-D55D-471C-8F1D-EE6AEE9DB112@recoil.org>
References: <20141010190314.20679dd0@mortimer.gmerlin.de>
 <CAM8PUPz1W7LDTfn2K30OCc8agJi6ozVdp-3HuEyqYYqHoKQDvg@mail.gmail.com>
 <CAM8PUPz2cRzaBBEUBqTpOLsUCh8VzFE=E08je21AVZzOwD0fNw@mail.gmail.com>
 <0CD20130-D55D-471C-8F1D-EE6AEE9DB112@recoil.org>
Message-ID: <CAM8PUPwLg5U-iznJN-LSyKSyVWuJjA6je1iQFsQR=6B078sHkQ@mail.gmail.com>

On 11 October 2014 09:09, Anil Madhavapeddy <anil at recoil.org> wrote:
> On 10 Oct 2014, at 11:48, Kenneth Westerback <kwesterback at gmail.com> wrote:
>
>> On 10 October 2014 14:46, Kenneth Westerback <kwesterback at gmail.com> wrote:
>>> On 10 October 2014 13:03, Christopher Zimmermann <christopher at gmerlin.de> wrote:
>>>> Hi,
>>>>
>>>> attached you find many new OCaml ports. Mainly the following two and
>>>> their dependencies:
>>>>
>>>> * Oasis (an OCaml project build and metadata tool) used by many of our
>>>>  OCaml ports.
>>>>
>>>> * Janestreet Core standard library overlay and Janestreet Async
>>>>
>>>> Oasis depends on devel/janestreet/ocaml-type_conv while most of
>>>> janestreet stuff uses oasis. If this is too much, I could leave the rest
>>>> of janestreet for now and only import ocaml-type_conv.
>>>>
>>>> Since I'm currently waiting for the release of OPAM 1.2
>>>> (https://github.com/jasperla/openbsd-wip/tree/master/sysutils/opam),
>>>> which can be used to install all those libraries and binaries, I'm
>>>> wondering whether it still makes any sense to maintain those ports in
>>>> our ports tree. The same applies to other ports already in our tree
>>>> like devel/{utop,ocaml-lambda-term,ocaml-lwt} ...). Opinions? OKs?
>>>>
>>>>
>>>> Christopher
>>>
>>> Personally I would prefer to use opam over ports. The only reason I
>>> can see for maintaining ports is if they are needed to build other
>>> ocaml ports (mldonkey?) in the tree. That's my 0.05C (Canada has
>>> eliminated the penny).
>>>
>>> .... Ken
>>
>> I guess we would also need a port when upstream needs patches to
>> compile on OpenBSD. Hopefully a rare situation going forward.
>
> I'm happy to merge OpenBSD-specific fixes into OPAM -- it's possible to
> add OS-specific selectors in the patches field to not affect other OSes.
>
> However, it is very convenient to be able to depend on a binary
> installation of OCaml libraries for end-user applications, particularly
> given the strict versioning requirements.  The OpenBSD port is also
> higher quality when it comes to architecture portability, since it
> separates out bytecode vs native code vs native dynlinking architectures.
>
> There is enough metadata available in an OPAM package to generate a
> snapshot of OpenBSD ports from a given package set.  I'm not suggesting
> we automatically import the results into OpenBSD, but it would really
> help keep the ports tree in sync with the latest versions of libraries.
> The metadata needed for this is roughly:
>
> - build instructions -- present in OPAM, but they do not separate out
>   fake installation and native code at the moment.  This could be added
>   to OPAM fairly easily.
>
> - external dependencies -- OPAM has a 'depexts' field where OS packages
>   can be specified.  This is a free-form field, so it could be a precise
>   pkgspec for the OpenBSD entry.
>
> - categories and homepages -- these can be lifted straight out of the
>   OPAM spec, and tags can be used to map OpenBSD-specific information.
>
> More broadly though, does any other language-specific packaging system
> do this at the moment, or all ports maintained manually?
>
> -anil

IANA porter, so I speak only from a user perspective. And I don't use
any perl ports so I don't know if they represent all perl ports used
on OpenBSD or just those needed OpenBSD specific tweaks.

If there are OpenBSD specific patches needed then I think a port is
the way to go. I'd hate to have a lot of info kept in opam only to
find Oxford has kidnapped Anil on boat race night and is demanding the
OpenBSD Ocaml community cough up. :-)

I currently have no idea how many OpenBSD patches are needed. The
couple I found while playing with getting core_extended working were
fixed by OpenBSD commits or are in queue to get fixed in core_extended
(right, Anil?). The other packages I needed/wanted to try all worked
from the wip opam 1.2 port.

My two minor concerns are 1) making sure RWO readers find OpenBSD a
congenial place to follow along, and 2) making sure that opam and
ports can co-exist if opam is available on OpenBSD.

In regards to 2), I encountered confusion when I had utop port
installed and then also blithely installed it with opam. Not to say it
is certain that I didn't screw up something just on my system, but the
relations between the two should be well known/easily discovered.

.... Ken

From chrisz at openbsd.org  Sat Oct 11 22:53:42 2014
From: chrisz at openbsd.org (Christopher Zimmermann)
Date: Sat, 11 Oct 2014 23:53:42 +0200
Subject: [opam-devel] [NEW] OCaml oasis and Janestreet Core and Async
In-Reply-To: <0CD20130-D55D-471C-8F1D-EE6AEE9DB112@recoil.org>
References: <20141010190314.20679dd0@mortimer.gmerlin.de>
 <CAM8PUPz1W7LDTfn2K30OCc8agJi6ozVdp-3HuEyqYYqHoKQDvg@mail.gmail.com>
 <CAM8PUPz2cRzaBBEUBqTpOLsUCh8VzFE=E08je21AVZzOwD0fNw@mail.gmail.com>
 <0CD20130-D55D-471C-8F1D-EE6AEE9DB112@recoil.org>
Message-ID: <20141011235342.395dee7e@mortimer.gmerlin.de>

On Sat, 11 Oct 2014 06:09:49 -0700 Anil Madhavapeddy <anil at recoil.org>
wrote:
> 
> I'm happy to merge OpenBSD-specific fixes into OPAM -- it's possible
> to add OS-specific selectors in the patches field to not affect other
> OSes.

Can you show me an example please?

> However, it is very convenient to be able to depend on a binary
> installation of OCaml libraries for end-user applications,
> particularly given the strict versioning requirements.

If that's the only reason for maintaining OCaml ports, I'd rather 
remove all ports without any end-user reverse-depends. If we don't add 
oasis, this would be all devel/ocaml-* ports (for starters).
Our current set of OCaml end-user applications has a quite modest set 
of dependencies. Is this prone to change?

> The OpenBSD port is also higher quality when it comes to architecture
> portability, since it separates out bytecode vs native code vs native
> dynlinking architectures.

In general I'd rather improve the quality of upstream / the OPAM 
repository than just OpenBSD ports.

> There is enough metadata available in an OPAM package to generate a
> snapshot of OpenBSD ports from a given package set.  I'm not
> suggesting we automatically import the results into OpenBSD, but it
> would really help keep the ports tree in sync with the latest
> versions of libraries. The metadata needed for this is roughly:
> 
> - build instructions -- present in OPAM, but they do not separate out
>   fake installation and native code at the moment.  This could be
> added to OPAM fairly easily.
> 
> - external dependencies -- OPAM has a 'depexts' field where OS
> packages can be specified.  This is a free-form field, so it could be
> a precise pkgspec for the OpenBSD entry.
> 
> - categories and homepages -- these can be lifted straight out of the 
>   OPAM spec, and tags can be used to map OpenBSD-specific information.

Great! That's something I wanted for quite some time now, but I didn't 
know enough of OPAM to tell whether it was feasible. Are you thinking 
of translating the OPAM repository to a ports tree or let OPAM generate
binary packages?

> More broadly though, does any other language-specific packaging system
> do this at the moment, or all ports maintained manually? 
> 
> -anil

-- 
http://gmerlin.de
OpenPGP: http://gmerlin.de/christopher.pub
F190 D013 8F01 AA53 E080  3F3C F17F B0A1 D44E 4FEE
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141011/bf7f0d9a/attachment.sig>

From whitequark at whitequark.org  Fri Oct 17 08:06:53 2014
From: whitequark at whitequark.org (Peter Zotov)
Date: Fri, 17 Oct 2014 11:06:53 +0400
Subject: [opam-devel] Becoming an opam-repository merger
Message-ID: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>

Hello,

I see opam-repository currently has a shortage of attention.
I would like to help out.

-- 
Peter Zotov

From anil at recoil.org  Fri Oct 17 16:14:37 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 17 Oct 2014 08:14:37 -0700
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
Message-ID: <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>

On 17 Oct 2014, at 00:06, Peter Zotov <whitequark at whitequark.org> wrote:

> Hello,
> 
> I see opam-repository currently has a shortage of attention.
> I would like to help out.

Thanks for offering!  I'd love to see more maintainers and mergers for
the repository.  Since there's a rather undocumented process for 
determining what to merge, Thomas kicked off a web page to describe it
better: 
 - https://github.com/ocaml/opam-repository/wiki/PR-checks

It's a bit of a delicate time to be merging since we are in the
1.2 transition, so the delays have been partly due to that as well.
In general, more automation to remove all the manual stuff from that
checklist is the goal.  For instance, setting OPAMSTRICT and getting
the repository clear of warnings would really help avoid a manual check.

Another very valuable contribution would be to look through the
github.com/ocaml/opam-bulk-logs and continue to make the repository
build cleanly.  Again, there is some fledgling automation via regular
expressions (in David Sheets' ocamlot repo) that needs to be extracted
into a CLI to make it easier to triage.

I'm on the road in California right now, so will catch up properly
next week -- just wanted to note that I have no objection to more
mergers, and really appreciate you volunteering!

-anil


From ygrek at autistici.org  Fri Oct 17 16:30:44 2014
From: ygrek at autistici.org (ygrek)
Date: Fri, 17 Oct 2014 23:30:44 +0800
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>
Message-ID: <20141017233044.2f46c66f@kiwi.local.tld>

On Fri, 17 Oct 2014 08:14:37 -0700
Anil Madhavapeddy <anil at recoil.org> wrote:

> Thanks for offering!  I'd love to see more maintainers and mergers for
> the repository.  Since there's a rather undocumented process for 
> determining what to merge, Thomas kicked off a web page to describe it
> better: 
>  - https://github.com/ocaml/opam-repository/wiki/PR-checks

That's a nice idea to write down the list of requirements - will be useful for 
package maintainers as well. On the related note, what is the reason for
"The  opam  file should not list  oasis  as a dependency" ?

-- 

From thomas at gazagnaire.org  Sat Oct 18 08:59:14 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Sat, 18 Oct 2014 08:59:14 +0100
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <20141017233044.2f46c66f@kiwi.local.tld>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>
 <20141017233044.2f46c66f@kiwi.local.tld>
Message-ID: <567EE0FB-6F82-4FAD-9316-3165483A12B5@gazagnaire.org>

>> Thanks for offering!  I'd love to see more maintainers and mergers for
>> the repository.  Since there's a rather undocumented process for 
>> determining what to merge, Thomas kicked off a web page to describe it
>> better: 
>> - https://github.com/ocaml/opam-repository/wiki/PR-checks
> 
> That's a nice idea to write down the list of requirements - will be useful for 
> package maintainers as well. On the related note, what is the reason for
> "The  opam  file should not list  oasis  as a dependency" ?

That's fine if the dependency is explicitly wanted by the packager. But that's usually a (beginner) mistake, as  the auto-generated distribution files are most of the time included in the tarball.


From ygrek at autistici.org  Sat Oct 18 09:10:33 2014
From: ygrek at autistici.org (ygrek)
Date: Sat, 18 Oct 2014 16:10:33 +0800
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <567EE0FB-6F82-4FAD-9316-3165483A12B5@gazagnaire.org>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>
 <20141017233044.2f46c66f@kiwi.local.tld>
 <567EE0FB-6F82-4FAD-9316-3165483A12B5@gazagnaire.org>
Message-ID: <20141018161033.01acb2a4@kiwi.local.tld>

On Sat, 18 Oct 2014 08:59:14 +0100
Thomas Gazagnaire <thomas at gazagnaire.org> wrote:

> That's fine if the dependency is explicitly wanted by the packager. But that's usually a (beginner) mistake, as  the auto-generated distribution files are most of the time included in the tarball.

Got it. I sometimes use oasis in dynamic mode nowadays meaning that oasis dependency is required.

-- 

From sylvain+ocaml at le-gall.net  Sat Oct 18 12:50:43 2014
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Sat, 18 Oct 2014 13:50:43 +0200
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <20141018161033.01acb2a4@kiwi.local.tld>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>
 <20141017233044.2f46c66f@kiwi.local.tld>
 <567EE0FB-6F82-4FAD-9316-3165483A12B5@gazagnaire.org>
 <20141018161033.01acb2a4@kiwi.local.tld>
Message-ID: <CAOCAUGNjECTzsjNOES+i3_SFrNKxZZUJf6f+M4CErXz2g6m__A@mail.gmail.com>

2014-10-18 10:10 GMT+02:00 ygrek <ygrek at autistici.org>:
> On Sat, 18 Oct 2014 08:59:14 +0100
> Thomas Gazagnaire <thomas at gazagnaire.org> wrote:
>
>> That's fine if the dependency is explicitly wanted by the packager. But that's usually a (beginner) mistake, as  the auto-generated distribution files are most of the time included in the tarball.
>
> Got it. I sometimes use oasis in dynamic mode nowadays meaning that oasis dependency is required.
>

In this case, the oasis dependency is required.

Although, one open question:
- AFAIR, it is possible to checkout a version of a package from the
VCS (git and darcs field)
- most of the time the difference between VCS and released tarball
using _oasis is that the VCS uses dynamic mode and the release tarball
includes a standalone setup.ml
- how do you define dependencies for VCS package ?

(this is a quite common situation, in the C++/C world you would need
automake/autogen/m4 for the VCS and not for the tarball)

> --
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From louis.gesbert at ocamlpro.com  Mon Oct 20 01:58:28 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 20 Oct 2014 09:58:28 +0900
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <CAOCAUGNjECTzsjNOES+i3_SFrNKxZZUJf6f+M4CErXz2g6m__A@mail.gmail.com>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <20141018161033.01acb2a4@kiwi.local.tld>
 <CAOCAUGNjECTzsjNOES+i3_SFrNKxZZUJf6f+M4CErXz2g6m__A@mail.gmail.com>
Message-ID: <6703880.HflFBvtPc8@agaric>

> Although, one open question:
> - AFAIR, it is possible to checkout a version of a package from the
> VCS (git and darcs field)
> - most of the time the difference between VCS and released tarball
> using _oasis is that the VCS uses dynamic mode and the release tarball
> includes a standalone setup.ml
> - how do you define dependencies for VCS package ?
> 
> (this is a quite common situation, in the C++/C world you would need
> automake/autogen/m4 for the VCS and not for the tarball)

Normally the opam file from the repo is used for the release, and the one included in the source is used for when the package is pinned, so it's possible to specify the VCS dep only there. You'll need to remember to remove it when you release though.

When packages are specified with a VCS url in the repo, I guess the opam file in the repo should be consistent with it.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141020/f85bbe13/attachment.html>

From daniel.buenzli at erratique.ch  Mon Oct 20 10:28:25 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Mon, 20 Oct 2014 11:28:25 +0200
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <6703880.HflFBvtPc8@agaric>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <20141018161033.01acb2a4@kiwi.local.tld>
 <CAOCAUGNjECTzsjNOES+i3_SFrNKxZZUJf6f+M4CErXz2g6m__A@mail.gmail.com>
 <6703880.HflFBvtPc8@agaric>
Message-ID: <420611E0B0BE4C14BC94978EF98CC3C1@erratique.ch>



Le lundi, 20 octobre 2014 ? 02:58, Louis Gesbert a ?crit :

> Normally the opam file from the repo is used for the release, and the one included in the source is used for when the package is pinned, so it's possible to specify the VCS dep only there. You'll need to remember to remove it when you release though.

That's one more error to make on a release.  
  
> When packages are specified with a VCS url in the repo, I guess the opam file in the repo should be consistent with it.

What I don't like with that is that there's no information in the repo about which are dev dependencies and which are not. Couldn't we rather add a `dev` dependency flag in addition to `build`, `test`, `doc` ?

Daniel



From louis.gesbert at ocamlpro.com  Tue Oct 21 04:22:47 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Tue, 21 Oct 2014 12:22:47 +0900
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <420611E0B0BE4C14BC94978EF98CC3C1@erratique.ch>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <6703880.HflFBvtPc8@agaric> <420611E0B0BE4C14BC94978EF98CC3C1@erratique.ch>
Message-ID: <141389786.Znqeg3kMFp@agaric>

> Couldn't we rather add a `dev` dependency flag in addition to `build`, `test`, `doc` ?

Indeed, that should be fairly doable

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141021/b7e65fde/attachment.html>

From daniel.buenzli at erratique.ch  Tue Oct 21 15:42:38 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Tue, 21 Oct 2014 16:42:38 +0200
Subject: [opam-devel] Opam 1.2 breaks emacs on the mac sortof
In-Reply-To: <62762542131641FA9C6092EDCFB4D10E@erratique.ch>
References: <CACLX4jQrb7Ca58skNHsdipCcG711E1W6nYXvqVqTVnFujJACtw@mail.gmail.com>
 <CAN2Hq05G7yuF+DTjbLXV2=7uBoicfYkYhSkBMsBzCSizx9nnXg@mail.gmail.com>
 <CACLX4jQuOgEvUXUUAZiVy93mV6M=GxR9FaAZW+6sS0CNHMOU-g@mail.gmail.com>
 <0D33CC08C8964B989D8E4DF411794AAA@erratique.ch>
 <CADKNfh+2H1J9yg6YJ3j5z8XbTw2NnE90mct7aY6NeR8Gr9pysw@mail.gmail.com>
 <62762542131641FA9C6092EDCFB4D10E@erratique.ch>
Message-ID: <F917582EF1924CBAAEE45CD16C934E11@erratique.ch>



Le mardi, 9 septembre 2014 ? 17:18, Daniel B?nzli a ?crit :

> I confirm that M-x shell doesn't work me either, ocaml is not found at all.

It seems that by having this in your .emacs:

(setq explicit-bash-args '("--login" "-i"))

Makes the trick. I updated the info here:  

https://github.com/ocaml/opam/wiki/Setup-Emacs.app-on-macosx-for-opam-usage

Best,

Daniel



From louis.gesbert at ocamlpro.com  Wed Oct 22 08:31:00 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Wed, 22 Oct 2014 16:31 +0900
Subject: [opam-devel] Opam 1.2 release
Message-ID: <9245169.3sTXu04jBu@agaric>

After a very long time maturing, 1.2.0 should finally be going out !

Say it now if you encoutered any potentially blocking bugs.

So, unless there is any big surprise, expect RC4 at
  https://github.com/ocaml/opam/releases/tag/1.2.0-rc4
to be promoted to 1.2.0 tonight.

Cheers,
Louis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141022/008d241d/attachment.html>

From thomas at gazagnaire.org  Wed Oct 22 18:44:49 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Wed, 22 Oct 2014 18:44:49 +0100
Subject: [opam-devel] call for help: opam history
In-Reply-To: <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>
References: <837CF831-839A-48E8-A685-70C48381D483@gazagnaire.org>
 <CAHvkLrPatjXttkGhZpahw_xq+JTR=OxagDOFdugJimwfzTEjGQ@mail.gmail.com>
 <FFCF273B-994C-4F82-9E83-DF90867DA237@gazagnaire.org>
 <CAHvkLrO3Hq5Or0erxe1wrhk6WJ=V+wcQAA1n7XpT6sBvhnL86g@mail.gmail.com>
 <8F9585AA-3C82-4283-A50B-377F5DC65914@gazagnaire.org>
 <CAHvkLrPF-pK=dzWwbkgpDmTf27sYUK_3Du=EVUDE51dAdzG0xQ@mail.gmail.com>
 <EFCFEFB4-045D-4C10-922F-1A41DE272973@recoil.org>
 <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>
Message-ID: <05E1804E-454B-4708-894F-3FF0DDA8E761@gazagnaire.org>

Any update on this?

> Ok. Before modifying the document, I would like to suggest the
> following overview:
> 
> 1/ The Ancestors of OPAM (GODI and so on)
> 2/ The Foundations of OPAM (gathering several teams to work on OPAM)
> 3/ The Birth of OPAM (first implementations)
> 4/ The Rise of OPAM (first release and current situation)
> 
> Also, I would like to put some stress on the 4 main differences
> between GODI and OPAM, as I see them. The 4 short-comings of GODI I
> see that are fixed by OPAM are:
> - sub-optimal installation solutions => use of CUDF/Dose
> - complex user interface => simple "? la apt" interface
> - complex repository management => simple github-based workflow
> - no automatic Q/A on the repository => Travis + OWS
> 
> What do you think ?
> --Fabrice
> 
> 
> 
> 
> 
> 
> 
> 
> On Tue, Sep 30, 2014 at 7:11 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> On 30 Sep 2014, at 18:06, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:
>>> 
>>> @Anil: yes, I kind of remember that there was a tool to automatically
>>> extract the meta-data from GODI packages and to translate it to
>>> "descr" files. However, the work of filling OPAM files with build and
>>> install instructions was not automated, to the best of my knowledge,
>>> so Frederic had to build every package and check that it would work
>>> well in OPAM. But of course, GODI should be credited, both for
>>> providing an inspiration for OPAM (we built on the experience we had
>>> of GODI and sometimes, of the problems we had with it) and for forcing
>>> many developers to package nicely their programs and libraries, so
>>> that we work of packaging them again was much more easy.
>> 
>> Yes, I think that's right -- it was just the descriptions and metadata
>> that were borrowed from GODI, with the build instructions being manually
>> edited to add (e.g.) the prefix and make macros.  That was quite a bit of
>> work...
>> 
>> -anil
>> 
> 
> 
> 
> -- 
> Fabrice LE FESSANT
> Chercheur en Informatique
> INRIA Paris Rocquencourt -- OCamlPro
> Programming Languages and Distributed Systems


From thomas at gazagnaire.org  Wed Oct 22 18:46:36 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Wed, 22 Oct 2014 18:46:36 +0100
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>
Message-ID: <8AE7547F-E3B3-41A7-85AD-5F08FCE8E707@gazagnaire.org>

Anil, can you create an opam-repository team in the ocaml organisation? I have less and less time to look at the current breakages, so I'm very happy to have more fresh bloods helping us.

Thomas


On 17 Oct 2014, at 16:14, Anil Madhavapeddy <anil at recoil.org> wrote:

> On 17 Oct 2014, at 00:06, Peter Zotov <whitequark at whitequark.org> wrote:
> 
>> Hello,
>> 
>> I see opam-repository currently has a shortage of attention.
>> I would like to help out.
> 
> Thanks for offering!  I'd love to see more maintainers and mergers for
> the repository.  Since there's a rather undocumented process for 
> determining what to merge, Thomas kicked off a web page to describe it
> better: 
> - https://github.com/ocaml/opam-repository/wiki/PR-checks
> 
> It's a bit of a delicate time to be merging since we are in the
> 1.2 transition, so the delays have been partly due to that as well.
> In general, more automation to remove all the manual stuff from that
> checklist is the goal.  For instance, setting OPAMSTRICT and getting
> the repository clear of warnings would really help avoid a manual check.
> 
> Another very valuable contribution would be to look through the
> github.com/ocaml/opam-bulk-logs and continue to make the repository
> build cleanly.  Again, there is some fledgling automation via regular
> expressions (in David Sheets' ocamlot repo) that needs to be extracted
> into a CLI to make it easier to triage.
> 
> I'm on the road in California right now, so will catch up properly
> next week -- just wanted to note that I have no objection to more
> mergers, and really appreciate you volunteering!
> 
> -anil
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From Fabrice.Le_fessant at inria.fr  Wed Oct 22 18:52:44 2014
From: Fabrice.Le_fessant at inria.fr (Fabrice Le Fessant)
Date: Wed, 22 Oct 2014 19:52:44 +0200
Subject: [opam-devel] call for help: opam history
In-Reply-To: <05E1804E-454B-4708-894F-3FF0DDA8E761@gazagnaire.org>
References: <837CF831-839A-48E8-A685-70C48381D483@gazagnaire.org>
 <CAHvkLrPatjXttkGhZpahw_xq+JTR=OxagDOFdugJimwfzTEjGQ@mail.gmail.com>
 <FFCF273B-994C-4F82-9E83-DF90867DA237@gazagnaire.org>
 <CAHvkLrO3Hq5Or0erxe1wrhk6WJ=V+wcQAA1n7XpT6sBvhnL86g@mail.gmail.com>
 <8F9585AA-3C82-4283-A50B-377F5DC65914@gazagnaire.org>
 <CAHvkLrPF-pK=dzWwbkgpDmTf27sYUK_3Du=EVUDE51dAdzG0xQ@mail.gmail.com>
 <EFCFEFB4-045D-4C10-922F-1A41DE272973@recoil.org>
 <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>
 <05E1804E-454B-4708-894F-3FF0DDA8E761@gazagnaire.org>
Message-ID: <CAHvkLrOa2mQ+bwxEjK_WufU+Vr6309MFbnTzL7+FxdUtx-DM2Q@mail.gmail.com>

Unfortunately, I haven't found any time to work on it in the last weeks :-(

--Fabrice

On Wed, Oct 22, 2014 at 7:44 PM, Thomas Gazagnaire
<thomas at gazagnaire.org> wrote:
> Any update on this?
>
>> Ok. Before modifying the document, I would like to suggest the
>> following overview:
>>
>> 1/ The Ancestors of OPAM (GODI and so on)
>> 2/ The Foundations of OPAM (gathering several teams to work on OPAM)
>> 3/ The Birth of OPAM (first implementations)
>> 4/ The Rise of OPAM (first release and current situation)
>>
>> Also, I would like to put some stress on the 4 main differences
>> between GODI and OPAM, as I see them. The 4 short-comings of GODI I
>> see that are fixed by OPAM are:
>> - sub-optimal installation solutions => use of CUDF/Dose
>> - complex user interface => simple "? la apt" interface
>> - complex repository management => simple github-based workflow
>> - no automatic Q/A on the repository => Travis + OWS
>>
>> What do you think ?
>> --Fabrice
>>
>>
>>
>>
>>
>>
>>
>>
>> On Tue, Sep 30, 2014 at 7:11 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> On 30 Sep 2014, at 18:06, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:
>>>>
>>>> @Anil: yes, I kind of remember that there was a tool to automatically
>>>> extract the meta-data from GODI packages and to translate it to
>>>> "descr" files. However, the work of filling OPAM files with build and
>>>> install instructions was not automated, to the best of my knowledge,
>>>> so Frederic had to build every package and check that it would work
>>>> well in OPAM. But of course, GODI should be credited, both for
>>>> providing an inspiration for OPAM (we built on the experience we had
>>>> of GODI and sometimes, of the problems we had with it) and for forcing
>>>> many developers to package nicely their programs and libraries, so
>>>> that we work of packaging them again was much more easy.
>>>
>>> Yes, I think that's right -- it was just the descriptions and metadata
>>> that were borrowed from GODI, with the build instructions being manually
>>> edited to add (e.g.) the prefix and make macros.  That was quite a bit of
>>> work...
>>>
>>> -anil
>>>
>>
>>
>>
>> --
>> Fabrice LE FESSANT
>> Chercheur en Informatique
>> INRIA Paris Rocquencourt -- OCamlPro
>> Programming Languages and Distributed Systems
>



-- 
Fabrice LE FESSANT
Chercheur en Informatique
INRIA Paris Rocquencourt -- OCamlPro
Programming Languages and Distributed Systems

From anil at recoil.org  Thu Oct 23 01:15:11 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 23 Oct 2014 01:15:11 +0100
Subject: [opam-devel] Opam 1.2 release
In-Reply-To: <9245169.3sTXu04jBu@agaric>
References: <9245169.3sTXu04jBu@agaric>
Message-ID: <A492FC84-E0FB-47CE-94BD-28834C8E56DE@recoil.org>

Yay! I've uploaded the hopefully last set of 1.1.99 Launchpad snaps against the 1.2 branch.  If you tag the release, I'll promote the binary debs to 1.2.0 for the release announcement.

Remind me what the plan is for switching opam-repository over again? Will users be immediately be able to submit 1.2 packages and expect the rewrite scripts to be active?

-anil

On 22 Oct 2014, at 08:31, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:

> After a very long time maturing, 1.2.0 should finally be going out !
>  
> Say it now if you encoutered any potentially blocking bugs.
>  
> So, unless there is any big surprise, expect RC4 at
>   https://github.com/ocaml/opam/releases/tag/1.2.0-rc4
> to be promoted to 1.2.0 tonight.
>  
> Cheers,
> Louis
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141023/3ebb33d4/attachment.html>

From louis.gesbert at ocamlpro.com  Thu Oct 23 06:06:32 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Thu, 23 Oct 2014 14:06:32 +0900
Subject: [opam-devel] Opam 1.2 release
In-Reply-To: <A492FC84-E0FB-47CE-94BD-28834C8E56DE@recoil.org>
References: <9245169.3sTXu04jBu@agaric>
 <A492FC84-E0FB-47CE-94BD-28834C8E56DE@recoil.org>
Message-ID: <3057654.Css43hgL6T@agaric>

Le jeudi 23 octobre 2014, 01:15:11 Anil Madhavapeddy a ?crit :
> Yay! I've uploaded the hopefully last set of 1.1.99 Launchpad snaps against the 1.2 branch.  If you tag the release, I'll promote the binary debs to 1.2.0 for the release announcement.
> 
> Remind me what the plan is for switching opam-repository over again? Will users be immediately be able to submit 1.2 packages and expect the rewrite scripts to be active?

Yes, this is already in place: 1.1 users should have been redirected to http://opam.ocaml.org/1.1/ , which is dynamically rewritten from the main repo (for packages declared with opam-version >=1.2 only).

I also just merged https://github.com/ocaml/opam-repository/pull/2804 , which applies the travis tests on the submitted package as is on opam 1.2 and on the rewritten repo for opam 1.1, so that any 1.2 bugs, 1.1 incompatibilities OR failures in the rewrite script can be caught at that stage. This should make it quite safe to accept 1.2 packages once they pass the travis tests.

> 
> -anil
> 
> On 22 Oct 2014, at 08:31, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> 
> > After a very long time maturing, 1.2.0 should finally be going out !
> >  
> > Say it now if you encoutered any potentially blocking bugs.
> >  
> > So, unless there is any big surprise, expect RC4 at
> >   https://github.com/ocaml/opam/releases/tag/1.2.0-rc4
> > to be promoted to 1.2.0 tonight.
> >  
> > Cheers,
> > Louis
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
> 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141023/944deeea/attachment-0001.html>

From anil at recoil.org  Thu Oct 23 07:44:53 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 23 Oct 2014 07:44:53 +0100
Subject: [opam-devel] Opam 1.2 release
In-Reply-To: <3057654.Css43hgL6T@agaric>
References: <9245169.3sTXu04jBu@agaric>
 <A492FC84-E0FB-47CE-94BD-28834C8E56DE@recoil.org> <3057654.Css43hgL6T@agaric>
Message-ID: <BA9FA1A5-910B-47AD-9A2C-E75052092E08@recoil.org>


> On 23 Oct 2014, at 06:06, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> 
> Le jeudi 23 octobre 2014, 01:15:11 Anil Madhavapeddy a ?crit :
> > Yay! I've uploaded the hopefully last set of 1.1.99 Launchpad snaps against the 1.2 branch. If you tag the release, I'll promote the binary debs to 1.2.0 for the release announcement.
> >
> > Remind me what the plan is for switching opam-repository over again? Will users be immediately be able to submit 1.2 packages and expect the rewrite scripts to be active?
>  
> Yes, this is already in place: 1.1 users should have been redirected to http://opam.ocaml.org/1.1/ , which is dynamically rewritten from the main repo (for packages declared with opam-version >=1.2 only).
>  

And when they upgrade to 1.2 they are redirected again to the master branch?

Anil



> I also just merged https://github.com/ocaml/opam-repository/pull/2804 , which applies the travis tests on the submitted package as is on opam 1.2 and on the rewritten repo for opam 1.1, so that any 1.2 bugs, 1.1 incompatibilities OR failures in the rewrite script can be caught at that stage. This should make it quite safe to accept 1.2 packages once they pass the travis tests.
>  
> >
> > -anil
> >
> > On 22 Oct 2014, at 08:31, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> >
> > > After a very long time maturing, 1.2.0 should finally be going out !
> > >
> > > Say it now if you encoutered any potentially blocking bugs.
> > >
> > > So, unless there is any big surprise, expect RC4 at
> > > https://github.com/ocaml/opam/releases/tag/1.2.0-rc4
> > > to be promoted to 1.2.0 tonight.
> > >
> > > Cheers,
> > > Louis
> > > _______________________________________________
> > > opam-devel mailing list
> > > opam-devel at lists.ocaml.org
> > > http://lists.ocaml.org/listinfo/opam-devel
> >
>  

From louis.gesbert at ocamlpro.com  Thu Oct 23 07:57:10 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Thu, 23 Oct 2014 15:57:10 +0900
Subject: [opam-devel] Opam 1.2 release
In-Reply-To: <BA9FA1A5-910B-47AD-9A2C-E75052092E08@recoil.org>
References: <9245169.3sTXu04jBu@agaric> <3057654.Css43hgL6T@agaric>
 <BA9FA1A5-910B-47AD-9A2C-E75052092E08@recoil.org>
Message-ID: <1676999.UpMK3zi7gR@agaric>

Le jeudi 23 octobre 2014, 07:44:53 Anil Madhavapeddy a ?crit :
> 
> > On 23 Oct 2014, at 06:06, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> > 
> > Le jeudi 23 octobre 2014, 01:15:11 Anil Madhavapeddy a ?crit :
> > > Yay! I've uploaded the hopefully last set of 1.1.99 Launchpad snaps against the 1.2 branch. If you tag the release, I'll promote the binary debs to 1.2.0 for the release announcement.
> > >
> > > Remind me what the plan is for switching opam-repository over again? Will users be immediately be able to submit 1.2 packages and expect the rewrite scripts to be active?
> >  
> > Yes, this is already in place: 1.1 users should have been redirected to http://opam.ocaml.org/1.1/ , which is dynamically rewritten from the main repo (for packages declared with opam-version >=1.2 only).
> >  
> 
> And when they upgrade to 1.2 they are redirected again to the master branch?
> 
> Anil

Yes, I made sure of that :)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141023/e21cc18c/attachment.html>

From louis.gesbert at ocamlpro.com  Thu Oct 23 09:57:07 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Thu, 23 Oct 2014 17:57:07 +0900
Subject: [opam-devel] OPAM 1.2.0 Released !
Message-ID: <6580569.RHvFdnNWzn@agaric>

As an exclusivity to you, dear mailing-list reader, try out the brand new OPAM 1.2.0 Release !

It's already at https://github.com/ocaml/opam/releases/tag/1.2.0

I'll roll out the documentation page change on opam.ocaml.org now, and make an announcement on the platform blog by tomorrow. Then it should be announced on the caml-list with a link to that.

You can read the original announcement for the beta:
* http://opam.ocaml.org/blog/opam-1-2-0-beta4/
* Details on the new pinning workflow: http://opam.ocaml.org/blog/opam-1-2-pin/

And see the full CHANGELOG:
* https://raw.githubusercontent.com/ocaml/opam/1.2.0/CHANGES

Cheers,
Louis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141023/1246aa81/attachment.html>

From daniel.buenzli at erratique.ch  Thu Oct 23 10:13:32 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Thu, 23 Oct 2014 11:13:32 +0200
Subject: [opam-devel] OPAM 1.2.0 Released !
In-Reply-To: <6580569.RHvFdnNWzn@agaric>
References: <6580569.RHvFdnNWzn@agaric>
Message-ID: <7A8109DABDE0493F8A576B0EBAB0402E@erratique.ch>

It's been a long way, thanks and bravo for all your good and dedicated work.  

Daniel



From kosmo.zb at gmail.com  Thu Oct 23 11:07:36 2014
From: kosmo.zb at gmail.com (David Sheets)
Date: Thu, 23 Oct 2014 11:07:36 +0100
Subject: [opam-devel] OPAM 1.2.0 Released !
In-Reply-To: <7A8109DABDE0493F8A576B0EBAB0402E@erratique.ch>
References: <6580569.RHvFdnNWzn@agaric>
 <7A8109DABDE0493F8A576B0EBAB0402E@erratique.ch>
Message-ID: <CAAWM5TzOgkSO9P5Dx4uUAzaLTDLEVKVMw5Wet75rq3Hryry7RA@mail.gmail.com>

Hear, hear! Three cheers for Louis!

On Thu, Oct 23, 2014 at 10:13 AM, Daniel B?nzli
<daniel.buenzli at erratique.ch> wrote:
> It's been a long way, thanks and bravo for all your good and dedicated work.
>
> Daniel
>
>
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From amc79 at cam.ac.uk  Thu Oct 23 14:28:25 2014
From: amc79 at cam.ac.uk (Amir Chaudhry)
Date: Thu, 23 Oct 2014 14:28:25 +0100
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <8AE7547F-E3B3-41A7-85AD-5F08FCE8E707@gazagnaire.org>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>
 <8AE7547F-E3B3-41A7-85AD-5F08FCE8E707@gazagnaire.org>
Message-ID: <B79DC176-75A9-4519-B8F7-50BA94DFA99F@cam.ac.uk>

Anil, Thomas, I've made the team as requested and added you both (@avsm @samoht) but not sure who else to add.  I'm guessing @whitequark (Peter Z), but who else?

Please confirm,
Amir



On 22 Oct 2014, at 18:46, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:

> Anil, can you create an opam-repository team in the ocaml organisation? I have less and less time to look at the current breakages, so I'm very happy to have more fresh bloods helping us.
> 
> Thomas
> 
> 
> On 17 Oct 2014, at 16:14, Anil Madhavapeddy <anil at recoil.org> wrote:
> 
>> On 17 Oct 2014, at 00:06, Peter Zotov <whitequark at whitequark.org> wrote:
>> 
>>> Hello,
>>> 
>>> I see opam-repository currently has a shortage of attention.
>>> I would like to help out.
>> 
>> Thanks for offering!  I'd love to see more maintainers and mergers for
>> the repository.  Since there's a rather undocumented process for 
>> determining what to merge, Thomas kicked off a web page to describe it
>> better: 
>> - https://github.com/ocaml/opam-repository/wiki/PR-checks
>> 
>> It's a bit of a delicate time to be merging since we are in the
>> 1.2 transition, so the delays have been partly due to that as well.
>> In general, more automation to remove all the manual stuff from that
>> checklist is the goal.  For instance, setting OPAMSTRICT and getting
>> the repository clear of warnings would really help avoid a manual check.
>> 
>> Another very valuable contribution would be to look through the
>> github.com/ocaml/opam-bulk-logs and continue to make the repository
>> build cleanly.  Again, there is some fledgling automation via regular
>> expressions (in David Sheets' ocamlot repo) that needs to be extracted
>> into a CLI to make it easier to triage.
>> 
>> I'm on the road in California right now, so will catch up properly
>> next week -- just wanted to note that I have no objection to more
>> mergers, and really appreciate you volunteering!
>> 
>> -anil
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From amc79 at cam.ac.uk  Thu Oct 23 14:42:15 2014
From: amc79 at cam.ac.uk (Amir Chaudhry)
Date: Thu, 23 Oct 2014 14:42:15 +0100
Subject: [opam-devel] call for help: opam history
In-Reply-To: <32A068A31A594350923E819449570C05@erratique.ch>
References: <837CF831-839A-48E8-A685-70C48381D483@gazagnaire.org>
 <CAHvkLrPatjXttkGhZpahw_xq+JTR=OxagDOFdugJimwfzTEjGQ@mail.gmail.com>
 <FFCF273B-994C-4F82-9E83-DF90867DA237@gazagnaire.org>
 <CAHvkLrO3Hq5Or0erxe1wrhk6WJ=V+wcQAA1n7XpT6sBvhnL86g@mail.gmail.com>
 <8F9585AA-3C82-4283-A50B-377F5DC65914@gazagnaire.org>
 <CAHvkLrPF-pK=dzWwbkgpDmTf27sYUK_3Du=EVUDE51dAdzG0xQ@mail.gmail.com>
 <EFCFEFB4-045D-4C10-922F-1A41DE272973@recoil.org>
 <CAHvkLrOLk53Rcp8GK_cvOvyoX1CpGvCO146j96mRnUbPTYosLQ@mail.gmail.com>
 <073D5C65-3D5D-4937-B429-07CAD46AAA22@gazagnaire.org>
 <26819D7D-4ABB-4782-AA28-67C722F5E9A9@cam.ac.uk>
 <32A068A31A594350923E819449570C05@erratique.ch>
Message-ID: <275DF7C8-24AE-4ACF-9FD4-1C4F50DE1094@cam.ac.uk>


On 2 Oct 2014, at 12:39, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:

> Le jeudi, 2 octobre 2014 ? 12:40, Amir Chaudhry a ?crit :
>> Thanks for presenting the overview. I actually don't really agree with point 1 (the ancestors), nor do I think it's helpful to point out specific differences between OPAM and GODI (at least in this document).
>> 
>> As a relative newcomer to OCaml, I would find it a little odd if much time was spent on other tools that existed before.
> I think you are confusing things. This is not a sales brochure or "why you want to use opam". It's about where does opam come from a historical perspective. As such it is important to put opam's birth in context and what existed at the time.

I don't have the view that this is a sales brochure at all so apologies if it came across that way. Having thought about this some more -- and reframing the first section in my head as 'the history of OCaml package management' -- I quite like Fabrice's headings. 

Part of me does find it a little unfair to specifically call out GODI's problems, as it might come across as bashing the immediate predecessor. I'm sure GODI also solved many other problems when it was around and that the issues it created may not have existing in the beginning (github-based workflows have been a boon to many software projects).

In any case I look forward to reading this, when it's ready :)

AC


From anil at recoil.org  Thu Oct 23 18:30:16 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 23 Oct 2014 18:30:16 +0100
Subject: [opam-devel] OPAM 1.2.0 Released !
In-Reply-To: <CAAWM5TzOgkSO9P5Dx4uUAzaLTDLEVKVMw5Wet75rq3Hryry7RA@mail.gmail.com>
References: <6580569.RHvFdnNWzn@agaric>
 <7A8109DABDE0493F8A576B0EBAB0402E@erratique.ch>
 <CAAWM5TzOgkSO9P5Dx4uUAzaLTDLEVKVMw5Wet75rq3Hryry7RA@mail.gmail.com>
Message-ID: <C2C93F7D-52C8-4A29-94ED-4E959868BB81@recoil.org>

And here's the third cheer for Louis! :-)

Binary package status:

Launchpad now has OPAM 1.2.0 everywhere (ARM/x86) in
https://launchpad.net/~avsm

OpenSUSE build is churning through RPMs right now:
https://build.opensuse.org/project/show/home:ocaml

Homebrew pull:
https://github.com/Homebrew/homebrew/pull/33514

OpenBSD should have it soon (CCing Christopher Zimmermann)

-a

> On 23 Oct 2014, at 11:07, David Sheets <kosmo.zb at gmail.com> wrote:
> 
> Hear, hear! Three cheers for Louis!
> 
> On Thu, Oct 23, 2014 at 10:13 AM, Daniel B?nzli
> <daniel.buenzli at erratique.ch> wrote:
>> It's been a long way, thanks and bravo for all your good and dedicated work.
>> 
>> Daniel
>> 
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From vb at luminar.eu.org  Thu Oct 23 21:56:55 2014
From: vb at luminar.eu.org (Vincent Bernardoff)
Date: Thu, 23 Oct 2014 22:56:55 +0200
Subject: [opam-devel] OPAM 1.2.0 Released !
In-Reply-To: <C2C93F7D-52C8-4A29-94ED-4E959868BB81@recoil.org>
References: <6580569.RHvFdnNWzn@agaric>
 <7A8109DABDE0493F8A576B0EBAB0402E@erratique.ch>
 <CAAWM5TzOgkSO9P5Dx4uUAzaLTDLEVKVMw5Wet75rq3Hryry7RA@mail.gmail.com>
 <C2C93F7D-52C8-4A29-94ED-4E959868BB81@recoil.org>
Message-ID: <54496B97.9070003@luminar.eu.org>

Bravo ;)

-- 
Vincent

From whitequark at whitequark.org  Fri Oct 24 00:11:05 2014
From: whitequark at whitequark.org (Peter Zotov)
Date: Fri, 24 Oct 2014 03:11:05 +0400
Subject: [opam-devel] Travis is broken
Message-ID: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>

Hi,

I'll be brief: Travis can't keep up with load on opam-repository.
See 
https://github.com/ocaml/opam-repository/pull/2883#issuecomment-60322073
and https://github.com/ocaml/opam-repository/issues/2880
for more details.

I'll hack together a buildbot+bors config this weekend.
I can run it off my own infrastructure for some time, but in the long
run, of course, it's better if some "official" team owns (and guarantees
that it's up) the infra. I also don't have headless OS X, and
I don't want my laptop to be the buildslave for long :p

-- 
Peter Zotov

From daniel.buenzli at erratique.ch  Fri Oct 24 00:22:54 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Fri, 24 Oct 2014 01:22:54 +0200
Subject: [opam-devel] Travis is broken
In-Reply-To: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
Message-ID: <0C34CCDF5BEF4D80BC096F1CA2E6CA41@erratique.ch>

Isn't that maybe due to this http://status.travis-ci.com/incidents/y9pysslbxb79 ? 

Daniel



From daniel.buenzli at erratique.ch  Fri Oct 24 00:26:29 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Fri, 24 Oct 2014 01:26:29 +0200
Subject: [opam-devel] Travis is broken
In-Reply-To: <0C34CCDF5BEF4D80BC096F1CA2E6CA41@erratique.ch>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <0C34CCDF5BEF4D80BC096F1CA2E6CA41@erratique.ch>
Message-ID: <79B49F17A99640CB8F1DDBB62C1EC55B@erratique.ch>

Also maybe you want to wait for this before investing too much of your time:  

http://status.travis-ci.com/incidents/tr2lrjcjdn8z

Daniel



From whitequark at whitequark.org  Fri Oct 24 00:29:09 2014
From: whitequark at whitequark.org (Peter Zotov)
Date: Fri, 24 Oct 2014 03:29:09 +0400
Subject: [opam-devel] Travis is broken
In-Reply-To: <79B49F17A99640CB8F1DDBB62C1EC55B@erratique.ch>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <0C34CCDF5BEF4D80BC096F1CA2E6CA41@erratique.ch>
 <79B49F17A99640CB8F1DDBB62C1EC55B@erratique.ch>
Message-ID: <5fc69650a6272a839275d94d19955d0a@whitequark.org>

On 2014-10-24 03:26, Daniel B?nzli wrote:
> Also maybe you want to wait for this before investing too much of your 
> time:
> 
> http://status.travis-ci.com/incidents/tr2lrjcjdn8z
> 
> Daniel

There is still the fact that OS X builders are 1) awfully slow,
which isn't going to be fixed by Travis--OS X is just like that,
2) reinstall the whole system from scratch each time.
Really, I believe the builds should finish in minutes, not even
half an hour.

-- 
Peter Zotov

From thomas at gazagnaire.org  Fri Oct 24 01:07:32 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Fri, 24 Oct 2014 02:07:32 +0200
Subject: [opam-devel] Travis is broken
In-Reply-To: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
Message-ID: <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>

I agree this is a problem and I just sent a message to Travis CI support to tell them about the issue. If you come up with a nice solution I'm sure we can find a way to host it. Would be worth looking at docker images (see https://github.com/avsm/docker-opam).

Thomas

On 24 Oct 2014, at 01:11, Peter Zotov <whitequark at whitequark.org> wrote:

> Hi,
> 
> I'll be brief: Travis can't keep up with load on opam-repository.
> See https://github.com/ocaml/opam-repository/pull/2883#issuecomment-60322073
> and https://github.com/ocaml/opam-repository/issues/2880
> for more details.
> 
> I'll hack together a buildbot+bors config this weekend.
> I can run it off my own infrastructure for some time, but in the long
> run, of course, it's better if some "official" team owns (and guarantees
> that it's up) the infra. I also don't have headless OS X, and
> I don't want my laptop to be the buildslave for long :p
> 
> -- 
> Peter Zotov
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From louis.gesbert at ocamlpro.com  Fri Oct 24 02:54:09 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Fri, 24 Oct 2014 10:54:09 +0900
Subject: [opam-devel] OPAM 1.2.0 Released !
In-Reply-To: <C2C93F7D-52C8-4A29-94ED-4E959868BB81@recoil.org>
References: <6580569.RHvFdnNWzn@agaric>
 <CAAWM5TzOgkSO9P5Dx4uUAzaLTDLEVKVMw5Wet75rq3Hryry7RA@mail.gmail.com>
 <C2C93F7D-52C8-4A29-94ED-4E959868BB81@recoil.org>
Message-ID: <1697099.PUq4niZWWN@agaric>

Contributions from packagers to http://opam.ocaml.org/doc/Install.html would be very welcome,
as this will ensure it's up-to-date better than if I do it myself.

Please edit the source at doc/pages/Installing.md (from the opam git) and submit PRs.

I'd also be glad if someone on OSX can contribute a binary generated using `shell/release.sh binary -t 1.2.0`. Couldn't we actually use that binary to make OSX travis builds faster ?

Cheers,
Louis

Le jeudi 23 octobre 2014, 18:30:16 Anil Madhavapeddy a ?crit :
> And here's the third cheer for Louis! :-)
> 
> Binary package status:
> 
> Launchpad now has OPAM 1.2.0 everywhere (ARM/x86) in
> https://launchpad.net/~avsm
> 
> OpenSUSE build is churning through RPMs right now:
> https://build.opensuse.org/project/show/home:ocaml
> 
> Homebrew pull:
> https://github.com/Homebrew/homebrew/pull/33514
> 
> OpenBSD should have it soon (CCing Christopher Zimmermann)
> 
> -a
> 
> > On 23 Oct 2014, at 11:07, David Sheets <kosmo.zb at gmail.com> wrote:
> > 
> > Hear, hear! Three cheers for Louis!
> > 
> > On Thu, Oct 23, 2014 at 10:13 AM, Daniel B?nzli
> > <daniel.buenzli at erratique.ch> wrote:
> >> It's been a long way, thanks and bravo for all your good and dedicated work.
> >> 
> >> Daniel
> >> 
> >> 
> >> _______________________________________________
> >> opam-devel mailing list
> >> opam-devel at lists.ocaml.org
> >> http://lists.ocaml.org/listinfo/opam-devel
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From thomas at gazagnaire.org  Fri Oct 24 10:57:17 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Fri, 24 Oct 2014 11:57:17 +0200
Subject: [opam-devel] [ocl-platform]  OPAM 1.2.0 Released !
In-Reply-To: <1697099.PUq4niZWWN@agaric>
References: <6580569.RHvFdnNWzn@agaric>
 <CAAWM5TzOgkSO9P5Dx4uUAzaLTDLEVKVMw5Wet75rq3Hryry7RA@mail.gmail.com>
 <C2C93F7D-52C8-4A29-94ED-4E959868BB81@recoil.org> <1697099.PUq4niZWWN@agaric>
Message-ID: <3ADFDDFC-E586-4D33-8268-6E3035BD7F18@gazagnaire.org>

> I'd also be glad if someone on OSX can contribute a binary generated using `shell/release.sh binary -t 1.2.0`. Couldn't we actually use that binary to make OSX travis builds faster ?

I tried, `shell/release.sh binary publish -t 1.2.0` but I got:

Uploading opam-1.2.0-x86_64-Darwin, please be patient...
git-upload-release: internal error, uncaught exception:
                    Failure("HTTP Error 404 Not Found\naccess-control-allow-credentials: true\r\n\naccess-control-allow-origin: *\r\n\naccess-control-expose-headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\r\n\ncontent-length: 77\r\n\ncontent-security-policy: default-src 'none'\r\n\ncontent-type: application/json; charset=utf-8\r\n\ndate: Fri, 24 Oct 2014 09:51:10 GMT\r\n\nserver: GitHub.com\r\n\nstatus: 404 Not Found\r\n\nstrict-transport-security: max-age=31536000; includeSubdomains; preload\r\n\nx-accepted-oauth-scopes: repo\r\n\nx-content-type-options: nosniff\r\n\nx-frame-options: deny\r\n\nx-github-media-type: github.v3; format=json\r\n\nx-github-request-id: 539B6851:26CD:9D3655:544A210D\r\n\nx-oauth-scopes:  \r\n\nx-ratelimit-limit: 5000\r\n\nx-ratelimit-remaining: 4993\r\n\nx-ratelimit-reset: 1414145141\r\n\nx-xss-protection: 1; mode=block\r\n\n")

So I've updated the binary manually ...

Best,
Thomas

> 
> Cheers,
> Louis
> 
> Le jeudi 23 octobre 2014, 18:30:16 Anil Madhavapeddy a ?crit :
>> And here's the third cheer for Louis! :-)
>> 
>> Binary package status:
>> 
>> Launchpad now has OPAM 1.2.0 everywhere (ARM/x86) in
>> https://launchpad.net/~avsm
>> 
>> OpenSUSE build is churning through RPMs right now:
>> https://build.opensuse.org/project/show/home:ocaml
>> 
>> Homebrew pull:
>> https://github.com/Homebrew/homebrew/pull/33514
>> 
>> OpenBSD should have it soon (CCing Christopher Zimmermann)
>> 
>> -a
>> 
>>> On 23 Oct 2014, at 11:07, David Sheets <kosmo.zb at gmail.com> wrote:
>>> 
>>> Hear, hear! Three cheers for Louis!
>>> 
>>> On Thu, Oct 23, 2014 at 10:13 AM, Daniel B?nzli
>>> <daniel.buenzli at erratique.ch> wrote:
>>>> It's been a long way, thanks and bravo for all your good and dedicated work.
>>>> 
>>>> Daniel
>>>> 
>>>> 
>>>> _______________________________________________
>>>> opam-devel mailing list
>>>> opam-devel at lists.ocaml.org
>>>> http://lists.ocaml.org/listinfo/opam-devel
>>> _______________________________________________
>>> opam-devel mailing list
>>> opam-devel at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/opam-devel
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
>> 
> 
> 


From anil at recoil.org  Fri Oct 24 11:20:42 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 24 Oct 2014 11:20:42 +0100
Subject: [opam-devel] Travis is broken
In-Reply-To: <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
Message-ID: <6DB2A990-9C8F-4211-A788-4E17FB23A98D@recoil.org>

One reason I haven't spent too much time on buildbot and bors is that they
all need some level of customisation to the specific deployment.

The OCamlot work that David Sheets did last year is ripe for a refresh with
all the new infrastructure that's been built in the last year.  For example:

- opamLib is now much easier to use as a library than it was in opam 1.0
- the ocaml-git bindings work, so all the shelling out to the cmdline disappear
- David has almost finished GitHub webhooks integration to ease that callback process
- Irmin or Arakoon could be used as the k/v store for the logs now

Al in all, I'd be inclined to put time into putting together a self-hosted
one using this infrastructure.  The only real missing major piece is the web
UI.  I wonder if there is some js_of_ocaml-friendly UI layer that we could drop
in for log viewing purposes...

-anil

> On 24 Oct 2014, at 01:07, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:
> 
> I agree this is a problem and I just sent a message to Travis CI support to tell them about the issue. If you come up with a nice solution I'm sure we can find a way to host it. Would be worth looking at docker images (see https://github.com/avsm/docker-opam).
> 
> Thomas
> 
> On 24 Oct 2014, at 01:11, Peter Zotov <whitequark at whitequark.org> wrote:
> 
>> Hi,
>> 
>> I'll be brief: Travis can't keep up with load on opam-repository.
>> See https://github.com/ocaml/opam-repository/pull/2883#issuecomment-60322073
>> and https://github.com/ocaml/opam-repository/issues/2880
>> for more details.
>> 
>> I'll hack together a buildbot+bors config this weekend.
>> I can run it off my own infrastructure for some time, but in the long
>> run, of course, it's better if some "official" team owns (and guarantees
>> that it's up) the infra. I also don't have headless OS X, and
>> I don't want my laptop to be the buildslave for long :p
>> 
>> -- 
>> Peter Zotov
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From anil at recoil.org  Fri Oct 24 11:34:32 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 24 Oct 2014 11:34:32 +0100
Subject: [opam-devel] fixing the 1.1 branch for ocsigen
Message-ID: <97860FE8-618D-46F0-B888-B3FAFE46A7F6@recoil.org>

What's the procedure to commit to the 1.1 branch?  I think we need to manually fix these, or can we run the 1.1 rewriter on them?

[WARNING] dev-repo is an unknown field in /home/travis/.opam/repo/default/packages/eliom/eliom.4.1.0/opam: is your OPAM up-to-date ?
[ERROR] Your version of OPAM (1.1.1) is not recent enough to read ~/.opam/repo/default/packages/ocsigenserver/ocsigenserver.2.5/opam. Upgrade OPAM to a more recent version (at least 1.2) to read this file correctly.
[WARNING] Errors while parsing ocsigenserver.2.5 OPAM file, skipping.
[ERROR] Your version of OPAM (1.1.1) is not recent enough to read ~/.opam/repo/default/packages/utop/utop.1.16/opam. Upgrade OPAM to a more recent version (at least 1.2) to read this file correctly.
[WARNING] Errors while parsing utop.1.16 OPAM file, skipping.
[WARNING] dev-repo is an unknown field in /home/travis/.opam/repo/default/packages/eliom/eliom.4.1.0/opam: is your OPAM up-to-date ?
[ERROR] Your version of OPAM (1.1.1) is not recent enough to read ~/.opam/repo/default/packages/ocsigenserver/ocsigenserver.2.5/opam. Upgrade OPAM to a more recent version (at least 1.2) to read this file correctly.
[WARNING] Errors while parsing ocsigenserver.2.5 OPAM file, skipping.
[ERROR] Your version of OPAM (1.1.1) is not recent enough to read ~/.opam/repo/default/packages/utop/utop.1.16/opam. Upgrade OPAM to a more recent version (at least 1.2) to read this file correctly.
[WARNING] Errors while parsing utop.1.16 OPAM file, skipping.
Creating a cache of metadata in ~/.opam/state.cache ...

-anil

From whitequark at whitequark.org  Fri Oct 24 11:59:10 2014
From: whitequark at whitequark.org (Peter Zotov)
Date: Fri, 24 Oct 2014 14:59:10 +0400
Subject: [opam-devel] Travis is broken
In-Reply-To: <6DB2A990-9C8F-4211-A788-4E17FB23A98D@recoil.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
 <6DB2A990-9C8F-4211-A788-4E17FB23A98D@recoil.org>
Message-ID: <f4dd6df8ebfe0b57e7d1d6c171fd885b@whitequark.org>

On 2014-10-24 14:20, Anil Madhavapeddy wrote:
> One reason I haven't spent too much time on buildbot and bors is that 
> they
> all need some level of customisation to the specific deployment.

I'm actually almost done. (Bored, insomnia, etc.) The Buildbot 
configuration
is really simple in this case, it just runs a single Docker command, 
which
pulls from the repo and then runs a script derived from .travis-ci.sh:

https://github.com/whitequark/opam-repository/blob/master/.docker-ci.sh
https://gist.github.com/whitequark/516973336a55971e2507

A bigger problem is OS X workers, which don't have anything like Docker
for build isolation. But I think they have a sandboxing mechanism.

> 
> The OCamlot work that David Sheets did last year is ripe for a refresh 
> with
> all the new infrastructure that's been built in the last year.  For 
> example:
> 
> - opamLib is now much easier to use as a library than it was in opam 
> 1.0
> - the ocaml-git bindings work, so all the shelling out to the cmdline 
> disappear
> - David has almost finished GitHub webhooks integration to ease that
> callback process
> - Irmin or Arakoon could be used as the k/v store for the logs now
> 
> Al in all, I'd be inclined to put time into putting together a 
> self-hosted
> one using this infrastructure.  The only real missing major piece is 
> the web
> UI.  I wonder if there is some js_of_ocaml-friendly UI layer that we 
> could drop
> in for log viewing purposes...

This sounds like it could take months.

> 
> -anil
> 
>> On 24 Oct 2014, at 01:07, Thomas Gazagnaire <thomas at gazagnaire.org> 
>> wrote:
>> 
>> I agree this is a problem and I just sent a message to Travis CI 
>> support to tell them about the issue. If you come up with a nice 
>> solution I'm sure we can find a way to host it. Would be worth looking 
>> at docker images (see https://github.com/avsm/docker-opam).
>> 
>> Thomas
>> 
>> On 24 Oct 2014, at 01:11, Peter Zotov <whitequark at whitequark.org> 
>> wrote:
>> 
>>> Hi,
>>> 
>>> I'll be brief: Travis can't keep up with load on opam-repository.
>>> See 
>>> https://github.com/ocaml/opam-repository/pull/2883#issuecomment-60322073
>>> and https://github.com/ocaml/opam-repository/issues/2880
>>> for more details.
>>> 
>>> I'll hack together a buildbot+bors config this weekend.
>>> I can run it off my own infrastructure for some time, but in the long
>>> run, of course, it's better if some "official" team owns (and 
>>> guarantees
>>> that it's up) the infra. I also don't have headless OS X, and
>>> I don't want my laptop to be the buildslave for long :p
>>> 
>>> --
>>> Peter Zotov
>>> _______________________________________________
>>> opam-devel mailing list
>>> opam-devel at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/opam-devel
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
>> 

-- 
Peter Zotov

From louis.gesbert at ocamlpro.com  Fri Oct 24 13:39:03 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Fri, 24 Oct 2014 21:39:03 +0900
Subject: [opam-devel] fixing the 1.1 branch for ocsigen
In-Reply-To: <97860FE8-618D-46F0-B888-B3FAFE46A7F6@recoil.org>
References: <97860FE8-618D-46F0-B888-B3FAFE46A7F6@recoil.org>
Message-ID: <1482788.8kcgvVVWsl@agaric>

Le vendredi 24 octobre 2014, 11:34:32 Anil Madhavapeddy a ?crit :
> What's the procedure to commit to the 1.1 branch?  I think we need to manually fix these, or can we run the 1.1 rewriter on them?
> 

1.2 packages must be _declared_ with `opam-version: "1.2"` in order for the rewriting to take place, so I think that's just the issue here.

Also, unfortunately, repo redirection is partly broken in 1.1: it doesn't work on init. There's an easy workaround though, `opam update` right and you're done. We could advise initing on the new repo directly to avoid a big bunch of frightening warnings... (opam init https://opam.ocaml.org/1.1)

From thomas at gazagnaire.org  Fri Oct 24 14:58:27 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Fri, 24 Oct 2014 15:58:27 +0200
Subject: [opam-devel] Travis is broken
In-Reply-To: <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
Message-ID: <9B1A2AF6-7EDE-4880-93ED-88C4CB4313C0@gazagnaire.org>

They advised us to drop the OSX builds for now on ... so we should start by doing that. That's a bit unfortunate but that's better than the currently broken situation.

On 24 Oct 2014, at 02:07, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:

> I agree this is a problem and I just sent a message to Travis CI support to tell them about the issue. If you come up with a nice solution I'm sure we can find a way to host it. Would be worth looking at docker images (see https://github.com/avsm/docker-opam).
> 
> Thomas
> 
> On 24 Oct 2014, at 01:11, Peter Zotov <whitequark at whitequark.org> wrote:
> 
>> Hi,
>> 
>> I'll be brief: Travis can't keep up with load on opam-repository.
>> See https://github.com/ocaml/opam-repository/pull/2883#issuecomment-60322073
>> and https://github.com/ocaml/opam-repository/issues/2880
>> for more details.
>> 
>> I'll hack together a buildbot+bors config this weekend.
>> I can run it off my own infrastructure for some time, but in the long
>> run, of course, it's better if some "official" team owns (and guarantees
>> that it's up) the infra. I also don't have headless OS X, and
>> I don't want my laptop to be the buildslave for long :p
>> 
>> -- 
>> Peter Zotov
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> 


From thomas at gazagnaire.org  Sat Oct 25 10:51:28 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Sat, 25 Oct 2014 11:51:28 +0200
Subject: [opam-devel] Travis is broken
In-Reply-To: <9B1A2AF6-7EDE-4880-93ED-88C4CB4313C0@gazagnaire.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
 <9B1A2AF6-7EDE-4880-93ED-88C4CB4313C0@gazagnaire.org>
Message-ID: <F3D0374D-5FE6-42DC-868B-925F635DF34C@gazagnaire.org>

I've cleanup the build queue manually yesterday (by cancelling all the OSX builds when necessary). The remaining 16 PRs are all broken by themselves.

Best,
Thomas

On 24 Oct 2014, at 15:58, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:

> They advised us to drop the OSX builds for now on ... so we should start by doing that. That's a bit unfortunate but that's better than the currently broken situation.
> 
> On 24 Oct 2014, at 02:07, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:
> 
>> I agree this is a problem and I just sent a message to Travis CI support to tell them about the issue. If you come up with a nice solution I'm sure we can find a way to host it. Would be worth looking at docker images (see https://github.com/avsm/docker-opam).
>> 
>> Thomas
>> 
>> On 24 Oct 2014, at 01:11, Peter Zotov <whitequark at whitequark.org> wrote:
>> 
>>> Hi,
>>> 
>>> I'll be brief: Travis can't keep up with load on opam-repository.
>>> See https://github.com/ocaml/opam-repository/pull/2883#issuecomment-60322073
>>> and https://github.com/ocaml/opam-repository/issues/2880
>>> for more details.
>>> 
>>> I'll hack together a buildbot+bors config this weekend.
>>> I can run it off my own infrastructure for some time, but in the long
>>> run, of course, it's better if some "official" team owns (and guarantees
>>> that it's up) the infra. I also don't have headless OS X, and
>>> I don't want my laptop to be the buildslave for long :p
>>> 
>>> -- 
>>> Peter Zotov
>>> _______________________________________________
>>> opam-devel mailing list
>>> opam-devel at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/opam-devel
>> 
> 


From whitequark at whitequark.org  Sat Oct 25 11:27:44 2014
From: whitequark at whitequark.org (Peter Zotov)
Date: Sat, 25 Oct 2014 14:27:44 +0400
Subject: [opam-devel] Travis is broken
In-Reply-To: <F3D0374D-5FE6-42DC-868B-925F635DF34C@gazagnaire.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
 <9B1A2AF6-7EDE-4880-93ED-88C4CB4313C0@gazagnaire.org>
 <F3D0374D-5FE6-42DC-868B-925F635DF34C@gazagnaire.org>
Message-ID: <cfdb0da21a7c90528c121edc0002d7a9@whitequark.org>

On 2014-10-25 13:51, Thomas Gazagnaire wrote:
> I've cleanup the build queue manually yesterday (by cancelling all the
> OSX builds when necessary). The remaining 16 PRs are all broken by
> themselves.

FYI I have set up a buildbot+bors config and verified that it works.
(It's sitting there as a snapshot in DigitalOcean.)
However as I currently only have Linux workers, it seems to have
little benefit over the current Travis situation. Nevertheless,
if there is consensus that we should deploy buildbot+bors, I will
be happy to help.

> 
> Best,
> Thomas
> 
> On 24 Oct 2014, at 15:58, Thomas Gazagnaire <thomas at gazagnaire.org> 
> wrote:
> 
>> They advised us to drop the OSX builds for now on ... so we should 
>> start by doing that. That's a bit unfortunate but that's better than 
>> the currently broken situation.
>> 
>> On 24 Oct 2014, at 02:07, Thomas Gazagnaire <thomas at gazagnaire.org> 
>> wrote:
>> 
>>> I agree this is a problem and I just sent a message to Travis CI 
>>> support to tell them about the issue. If you come up with a nice 
>>> solution I'm sure we can find a way to host it. Would be worth 
>>> looking at docker images (see https://github.com/avsm/docker-opam).
>>> 
>>> Thomas
>>> 
>>> On 24 Oct 2014, at 01:11, Peter Zotov <whitequark at whitequark.org> 
>>> wrote:
>>> 
>>>> Hi,
>>>> 
>>>> I'll be brief: Travis can't keep up with load on opam-repository.
>>>> See 
>>>> https://github.com/ocaml/opam-repository/pull/2883#issuecomment-60322073
>>>> and https://github.com/ocaml/opam-repository/issues/2880
>>>> for more details.
>>>> 
>>>> I'll hack together a buildbot+bors config this weekend.
>>>> I can run it off my own infrastructure for some time, but in the 
>>>> long
>>>> run, of course, it's better if some "official" team owns (and 
>>>> guarantees
>>>> that it's up) the infra. I also don't have headless OS X, and
>>>> I don't want my laptop to be the buildslave for long :p
>>>> 
>>>> --
>>>> Peter Zotov
>>>> _______________________________________________
>>>> opam-devel mailing list
>>>> opam-devel at lists.ocaml.org
>>>> http://lists.ocaml.org/listinfo/opam-devel
>>> 
>> 

-- 
Peter Zotov

From anil at recoil.org  Sun Oct 26 11:55:21 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 26 Oct 2014 11:55:21 +0000
Subject: [opam-devel] Travis is broken
In-Reply-To: <f4dd6df8ebfe0b57e7d1d6c171fd885b@whitequark.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
 <6DB2A990-9C8F-4211-A788-4E17FB23A98D@recoil.org>
 <f4dd6df8ebfe0b57e7d1d6c171fd885b@whitequark.org>
Message-ID: <3E8CDBCB-38DA-4F13-8D13-78D8F84A5D68@recoil.org>

On 24 Oct 2014, at 11:59, Peter Zotov <whitequark at whitequark.org> wrote:
> 
> On 2014-10-24 14:20, Anil Madhavapeddy wrote:
>> One reason I haven't spent too much time on buildbot and bors is that they
>> all need some level of customisation to the specific deployment.
> 
> I'm actually almost done. (Bored, insomnia, etc.) The Buildbot configuration
> is really simple in this case, it just runs a single Docker command, which
> pulls from the repo and then runs a script derived from .travis-ci.sh:
> 
> https://github.com/whitequark/opam-repository/blob/master/.docker-ci.sh
> https://gist.github.com/whitequark/516973336a55971e2507
> 
> A bigger problem is OS X workers, which don't have anything like Docker
> for build isolation. But I think they have a sandboxing mechanism.

Thanks for setting this up!  It's good to see that it's a relatively simple
configuration setup.  I'm tempted to have something like this run on a staging
version of opam-repository, since we could eliminate the 50 minute limit for
build jobs (and hence rigorously test Core).

>> The OCamlot work that David Sheets did last year is ripe for a refresh with
>> all the new infrastructure that's been built in the last year.  For example:
>> - opamLib is now much easier to use as a library than it was in opam 1.0
>> - the ocaml-git bindings work, so all the shelling out to the cmdline disappear
>> - David has almost finished GitHub webhooks integration to ease that
>> callback process
>> - Irmin or Arakoon could be used as the k/v store for the logs now
>> Al in all, I'd be inclined to put time into putting together a self-hosted
>> one using this infrastructure.  The only real missing major piece is the web
>> UI.  I wonder if there is some js_of_ocaml-friendly UI layer that we could drop
>> in for log viewing purposes...
> 
> This sounds like it could take months.

More on the order of weeks if you discount the web UI (which could be CLI
driven).  The reason it's worth doing is the customisation that you pointed
out is hard to do on external platforms.  Some lessons learnt from the previous
deployment of OCamlot last year:

- having a single-OCaml-binary deployment makes multi-OS workers really
  straightforward compared to using (e.g.) Jenkins.  Getting the JVM working
  on a Raspberry Pi was no fun.

- OPAM-specific logic is required to stop overwhelming slower (ARM, PowerPC,
  MIPS) workers with unnecessary jobs.  We had a 'stage 1' gateway that would
  run only on x86_64 to quickly test for errors, and then spawn off tasks
  on increasingly obscure architectures, as well as on non-Linux operating
  systems.

- There are a number of custom regexps in the ocamlot repo that do autotriage
  on the build logs for common OCaml-specific errors, such as ocamlfind packages
  not being found, or warnings-as-errors.  I do miss these in Travis land...

- Supporting multiple operating systems requires treating workers as heavyweight
  VMs, with Docker and similar OS-specific mechanisms being a useful optimisation
  to build times.  We can run *some* workers on Rackspace Cloud where they have
  been ported, but others (such as OpenBSD) need to run on hosted infrastructure
  somewhere (such as the Cambridge Computer Lab, which is fine by me). 

  Specific operating systems:
  - Windows, we could use Azure, which is also what Appveyor uses
  - FreeBSD is supported on Rackspace Cloud
  - OpenBSD requires custom hosting, but has some stability issues under Xen 
    that are on my debugging list (page table crashes on x86_32).
  - MacOS X could use Vagrant with the VMWare Fusion provider.  Sandboxing is
    more of an app model there, and not suitable for whole-system snapshots.
  - Most common Linux variants can be handled via Docker.

It's interesting how there doesn't seem to be any out-of-the-box open source
solution for continuous integration on multiple operating systems and weird
architectures (where the JVM wont work too well).

-anil

From guillaume at claret.me  Mon Oct 27 09:24:12 2014
From: guillaume at claret.me (Guillaume Claret)
Date: Mon, 27 Oct 2014 10:24:12 +0100
Subject: [opam-devel] Using OPAM as the Coq packages manager
Message-ID: <544E0F3C.2050103@claret.me>

Hi,

   The Coq theorem prover is facing the same challenges as OCaml to 
distribute and share its contributions. OPAM is a successful initiative 
for OCaml, so we would be pleased to use it as well. Thanks for this 
software.

   Things are still in development and not publicly released, but here 
are what we have for Coq:
* a website: http://clarus.github.io/coq-eggs-test/
* a bench system: http://coq-bench.github.io/
* four repositories:
   * stable packages: https://github.com/coq/repo-stable.git
   * beta packages: https://github.com/coq/repo-testing.git
   * development packages: https://github.com/coq/repo-unstable.git
   * development versions of Coq: https://github.com/coq/repo-coqs.git

   Something we wonder is how to prevent name collisions with the OCaml 
packages. Some kind of namespace would be the solution. As a convention, 
we propose to use the ":" separator, like in Docker. So a package on the 
Coq repository would be of name: "coq:ssreflect" instead of just 
"ssreflect". We could go even further and use the 
"coq:big-project-name:small-part-of-it" scheme for big projects.

   Do you think it is a good practice and will the ":" symbol remain 
handled in names by OPAM? Could we reserve the "coq:" prefix on the 
OCaml repo to make sure no one is allowed to publish a package with this 
prefix?

Thanks,
Guillaume

From anil at recoil.org  Mon Oct 27 11:20:19 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 27 Oct 2014 11:20:19 +0000
Subject: [opam-devel] Using OPAM as the Coq packages manager
In-Reply-To: <544E0F3C.2050103@claret.me>
References: <544E0F3C.2050103@claret.me>
Message-ID: <AEF27CDC-B09E-4130-A076-54BDF9753C1F@recoil.org>

On 27 Oct 2014, at 09:24, Guillaume Claret <guillaume at claret.me> wrote:
> 
> Hi,
> 
>  The Coq theorem prover is facing the same challenges as OCaml to distribute and share its contributions. OPAM is a successful initiative for OCaml, so we would be pleased to use it as well. Thanks for this software.
> 
>  Things are still in development and not publicly released, but here are what we have for Coq:
> * a website: http://clarus.github.io/coq-eggs-test/
> * a bench system: http://coq-bench.github.io/
> * four repositories:
>  * stable packages: https://github.com/coq/repo-stable.git
>  * beta packages: https://github.com/coq/repo-testing.git
>  * development packages: https://github.com/coq/repo-unstable.git
>  * development versions of Coq: https://github.com/coq/repo-coqs.git

Nice!

>  Something we wonder is how to prevent name collisions with the OCaml packages. Some kind of namespace would be the solution. As a convention, we propose to use the ":" separator, like in Docker. So a package on the Coq repository would be of name: "coq:ssreflect" instead of just "ssreflect". We could go even further and use the "coq:big-project-name:small-part-of-it" scheme for big projects.

Sounds sensible to me.  I'd probably keep the : convention unambiguous though.  You can also use the 'tags' field mark Coq packages specifically.  This will let you merge remotes with OCaml and still filter to Coq-only packages.

 
>  Do you think it is a good practice and will the ":" symbol remain handled in names by OPAM? Could we reserve the "coq:" prefix on the OCaml repo to make sure no one is allowed to publish a package with this prefix?

Sure; by 'reserve', the repository mergers will flag up any Coq packages to you before taking any action.  Is there a mailing list for the Coq/OPAM effort?  You're welcome to continue to use this one from my perspective...

What sort of automated testing would be useful for you?  We have a growing amount of infrastructure that does automatic building, but triaging errors is the current bottleneck.

Louis had some prototype code for compilers-as-packages that may help improve this integration in the future.  For now though, OPAM 1.2 looks good for your needs with some careful metadata management, I think.

-anil

From anil at recoil.org  Tue Oct 28 10:06:47 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 28 Oct 2014 10:06:47 +0000
Subject: [opam-devel] ocaml 4.02.1 in homebrew now
Message-ID: <9022EAC1-66A6-4C9A-A3F0-29636DF9A7EF@recoil.org>

There was a bumpy update in Homebrew to OCaml 4.02.1, but it should all be there now.  I added camlp4 as a recommended dependency to OPAM so that most users should never notice the difference.

https://github.com/Homebrew/homebrew/pull/33645

Unfortunately, upgrades from OPAM 1.1 to 1.2 do seem to be rather fragile when the system compiler is upgraded for some reason.  I've filed https://github.com/ocaml/opam/issues/1833, but I've noticed several other people don't have base-* packages installed after upgrading.

-anil

From anil at recoil.org  Tue Oct 28 22:03:59 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 28 Oct 2014 22:03:59 +0000
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <B79DC176-75A9-4519-B8F7-50BA94DFA99F@cam.ac.uk>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>
 <8AE7547F-E3B3-41A7-85AD-5F08FCE8E707@gazagnaire.org>
 <B79DC176-75A9-4519-B8F7-50BA94DFA99F@cam.ac.uk>
Message-ID: <B815C0D7-653B-4CA7-9E11-0610C7225315@recoil.org>

I'd like to also propose the most prolific recent contributors of fixes from the bulk logs and incoming issues:

- David Sheets
- Damien Doligez
- Jeremy Yallop
- Peter Zotov

best,
Anil

> On 23 Oct 2014, at 14:28, Amir Chaudhry <amc79 at cam.ac.uk> wrote:
> 
> Anil, Thomas, I've made the team as requested and added you both (@avsm @samoht) but not sure who else to add.  I'm guessing @whitequark (Peter Z), but who else?
> 
> Please confirm,
> Amir
> 
> 
> 
> On 22 Oct 2014, at 18:46, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:
> 
>> Anil, can you create an opam-repository team in the ocaml organisation? I have less and less time to look at the current breakages, so I'm very happy to have more fresh bloods helping us.
>> 
>> Thomas
>> 
>> 
>> On 17 Oct 2014, at 16:14, Anil Madhavapeddy <anil at recoil.org> wrote:
>> 
>>> On 17 Oct 2014, at 00:06, Peter Zotov <whitequark at whitequark.org> wrote:
>>> 
>>>> Hello,
>>>> 
>>>> I see opam-repository currently has a shortage of attention.
>>>> I would like to help out.
>>> 
>>> Thanks for offering!  I'd love to see more maintainers and mergers for
>>> the repository.  Since there's a rather undocumented process for 
>>> determining what to merge, Thomas kicked off a web page to describe it
>>> better: 
>>> - https://github.com/ocaml/opam-repository/wiki/PR-checks
>>> 
>>> It's a bit of a delicate time to be merging since we are in the
>>> 1.2 transition, so the delays have been partly due to that as well.
>>> In general, more automation to remove all the manual stuff from that
>>> checklist is the goal.  For instance, setting OPAMSTRICT and getting
>>> the repository clear of warnings would really help avoid a manual check.
>>> 
>>> Another very valuable contribution would be to look through the
>>> github.com/ocaml/opam-bulk-logs and continue to make the repository
>>> build cleanly.  Again, there is some fledgling automation via regular
>>> expressions (in David Sheets' ocamlot repo) that needs to be extracted
>>> into a CLI to make it easier to triage.
>>> 
>>> I'm on the road in California right now, so will catch up properly
>>> next week -- just wanted to note that I have no objection to more
>>> mergers, and really appreciate you volunteering!
>>> 
>>> -anil
>>> 
>>> _______________________________________________
>>> opam-devel mailing list
>>> opam-devel at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/opam-devel
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> 


From anil at recoil.org  Tue Oct 28 22:31:34 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 28 Oct 2014 22:31:34 +0000
Subject: [opam-devel] [Caml-list] Thoughts on targeting windows
In-Reply-To: <E51C5B015DBD1348A1D85763337FB6D9E95EA577@Remus.metastack.local>
References: <CAFBkDVuNMgOcib5CdE7u5akySck7XUy3CvaG=bT0kxwn6Ow0Rw@mail.gmail.com>
 <E51C5B015DBD1348A1D85763337FB6D9E8F9A897@Remus.metastack.local>
 <A12DB78A-2604-4E64-B0FE-64EF6590A120@recoil.org>
 <E51C5B015DBD1348A1D85763337FB6D9E95EA577@Remus.metastack.local>
Message-ID: <5DC2F556-DC52-4FC7-9618-3E81B834073D@recoil.org>

(CCing opam-devel with David's permission)

This is a good question -- I also have the same problem of not being able to quickly check what's happening on OPAM and Windows, since it isn't my primary development platform.

I think that Appveyor looks very promising as a way to keep Windows tested, once it has initially passed. For example, see the Ctypes Windows patch stream: https://github.com/ocamllabs/ocaml-ctypes/pull/191

We could just keep extending the Appveyor config file that's in the OPAM repository right now and add known-good packages to the installations that it attempts.  Your Windows/bash shell scripts would be a good start, and we could get in touch with the WODI maintainer to find out if they are interested in merging some of those patches into the OPAM repository as well.

-anil

> On 6 Oct 2014, at 12:27, David Allsopp <dra-news at metastack.com> wrote:
> 
> I hope the off-list reply is OK: as a related aside, is there an easy way to monitor the status of OPAM on Windows (i.e. a particular user's fork, long running pull requests, etc.)?
> 
> I'm not blessed with a vast amount of time (who of us is!) but I'm thinking that next time I update my OCaml-on-Windows installation (which usually involves a lot of patching - but I'd really like to migrate from 4.01 to 4.02), the energy would be better poured into OPAM, but I don't want to duplicate others' efforts by mistake.
> 
> As far as I can tell, the infrastructure of OPAM should be perfect for Windows use because it provides a better way to maintain the local patches often required for Windows building - at the moment, I have a "clever" mix of a Windows/Bash shell script which maintains the patches, dependency resolution and build instructions for the 35 packages I use.
> 
> 
> David
> 
>> -----Original Message-----
>> From: Anil Madhavapeddy [mailto:anil at recoil.org]
>> Sent: 05 October 2014 23:15
>> To: David Allsopp
>> Cc: caml-list at inria.fr
>> Subject: Re: [Caml-list] Thoughts on targeting windows
>> 
>> On 9 Jun 2014, at 16:23, David Allsopp <dra-news at metastack.com> wrote:
>> 
>>> William wrote:
>>>> we are considering using OCaml for a rather large project, the bulk
>>>> of which will be networking and encryption. OCaml seems to meet our
>>>> needs with one exception: we'd like to target windows (as well as
>>>> linux & mac) and we got the impression that this would be complicated
>>>> -- we gathered that neither jane street's Core nor OPAM are windows
>>>> compatible.
>>> 
>>> It's more complicated than Linux (& Mac), but not overly so.
>>> 
>>>> Would still recommend using OCaml? Are there workarounds, or other
>>>> libraries that would replace Core?
>>> 
>>> I believe Core_kernel aims to be the platform-neutral parts of core?
>> There are other Jane Street libs which compile just fine on Windows.
>> Batteries, as others have noted, works out of the box. Usually, I find
>> that the biggest problem in third party libs is in build systems (becoming
>> less so with Oasis, OCamlbuild and so on) making na?ve decisions about
>> Windows but that doesn't usually take much patching.
>>> 
>>> Most of what I do is Windows-oriented, but some of what I've done is
>> Windows and Linux. My experience is that it's important to keep Windows in
>> the picture early on to avoid pain later - so ensure that daily builds are
>> working on Windows or perhaps that one of your developers is always
>> working on Windows or something... that should avoid accidentally
>> selecting a Unix-only library and only realising that a painfully long way
>> down the road (or that the library you thought was cross-platform contains
>> an assert false for the function you need when running on Windows!). If
>> you write something which works on Windows in OCaml it will probably
>> translate with little pain to Linux but the reverse isn't necessarily
>> true.
>> 
>> At a recent compiler hacking session in Cambridge, Don Syme pointed out a
>> great Travis-like service for running regular Windows builds called
>> Appveyor(.com).  In order to get more familiar with the Windows toolchain,
>> I ported some of Thomas Braibant's instructions for compiling OPAM on
>> Windows using it here:
>> 
>> Cygwin scripts: https://github.com/ocaml/opam/blob/master/appveyor.yml
>> Build output:   https://ci.appveyor.com/project/avsm/opam/build/1.0.38
>> 
>> Appveyor can be used much like Travis and build every Git checkin on
>> Windows, except that they unfortunately overwrite each other's status
>> flags (the green tick or red cross against each commit), so they cannot be
>> simultaneously used on one GitHub repository right now.  I contacted
>> GitHub support and they indicated that they are adding support for
>> multiple CI tools into the UI, but do not have a time estimate for when
>> that would be ready.
>> 
>> In the meanwhile though, I hope Appveyor comes in useful for anyone
>> wanting to automate Windows testing via a free hosted service.  Pull
>> requests to improve OPAM's Appveyor scripts in this regard (for MinGW or
>> Cygwin or ideally testing them both) would be welcome.
>> 
>> best,
>> Anil
> 


From whitequark at whitequark.org  Wed Oct 29 22:00:57 2014
From: whitequark at whitequark.org (Peter Zotov)
Date: Thu, 30 Oct 2014 01:00:57 +0300
Subject: [opam-devel] Travis is broken
In-Reply-To: <3E8CDBCB-38DA-4F13-8D13-78D8F84A5D68@recoil.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
 <6DB2A990-9C8F-4211-A788-4E17FB23A98D@recoil.org>
 <f4dd6df8ebfe0b57e7d1d6c171fd885b@whitequark.org>
 <3E8CDBCB-38DA-4F13-8D13-78D8F84A5D68@recoil.org>
Message-ID: <65561e00543b1b3d22ac2a2bdb88a167@whitequark.org>

On 2014-10-26 14:55, Anil Madhavapeddy wrote:
> On 24 Oct 2014, at 11:59, Peter Zotov <whitequark at whitequark.org> 
> wrote:
>> 
>> On 2014-10-24 14:20, Anil Madhavapeddy wrote:
>>> One reason I haven't spent too much time on buildbot and bors is that 
>>> they
>>> all need some level of customisation to the specific deployment.
>> 
>> I'm actually almost done. (Bored, insomnia, etc.) The Buildbot 
>> configuration
>> is really simple in this case, it just runs a single Docker command, 
>> which
>> pulls from the repo and then runs a script derived from .travis-ci.sh:
>> 
>> https://github.com/whitequark/opam-repository/blob/master/.docker-ci.sh
>> https://gist.github.com/whitequark/516973336a55971e2507
>> 
>> A bigger problem is OS X workers, which don't have anything like 
>> Docker
>> for build isolation. But I think they have a sandboxing mechanism.
> 
> Thanks for setting this up!  It's good to see that it's a relatively 
> simple
> configuration setup.  I'm tempted to have something like this run on a 
> staging
> version of opam-repository, since we could eliminate the 50 minute 
> limit for
> build jobs (and hence rigorously test Core).
> 
>>> The OCamlot work that David Sheets did last year is ripe for a 
>>> refresh with
>>> all the new infrastructure that's been built in the last year.  For 
>>> example:
>>> - opamLib is now much easier to use as a library than it was in opam 
>>> 1.0
>>> - the ocaml-git bindings work, so all the shelling out to the cmdline 
>>> disappear
>>> - David has almost finished GitHub webhooks integration to ease that
>>> callback process
>>> - Irmin or Arakoon could be used as the k/v store for the logs now
>>> Al in all, I'd be inclined to put time into putting together a 
>>> self-hosted
>>> one using this infrastructure.  The only real missing major piece is 
>>> the web
>>> UI.  I wonder if there is some js_of_ocaml-friendly UI layer that we 
>>> could drop
>>> in for log viewing purposes...
>> 
>> This sounds like it could take months.
> 
> More on the order of weeks if you discount the web UI (which could be 
> CLI
> driven).  The reason it's worth doing is the customisation that you 
> pointed
> out is hard to do on external platforms.  Some lessons learnt from the 
> previous
> deployment of OCamlot last year:
> 
> - having a single-OCaml-binary deployment makes multi-OS workers really
>   straightforward compared to using (e.g.) Jenkins.  Getting the JVM 
> working
>   on a Raspberry Pi was no fun.

Buildbot is not based on JVM. The buildslave is a tiny Python 
executable.
The LLVM project has a lot of buildbots running on weird architectures.

> 
> - OPAM-specific logic is required to stop overwhelming slower (ARM, 
> PowerPC,
>   MIPS) workers with unnecessary jobs.  We had a 'stage 1' gateway that 
> would
>   run only on x86_64 to quickly test for errors, and then spawn off 
> tasks
>   on increasingly obscure architectures, as well as on non-Linux 
> operating
>   systems.

Agreed; the current approach is suboptimal.

> 
> - There are a number of custom regexps in the ocamlot repo that do 
> autotriage
>   on the build logs for common OCaml-specific errors, such as ocamlfind 
> packages
>   not being found, or warnings-as-errors.  I do miss these in Travis 
> land...

This would be great!

> 
> - Supporting multiple operating systems requires treating workers as 
> heavyweight
>   VMs, with Docker and similar OS-specific mechanisms being a useful
> optimisation
>   to build times.  We can run *some* workers on Rackspace Cloud where 
> they have
>   been ported, but others (such as OpenBSD) need to run on hosted 
> infrastructure
>   somewhere (such as the Cambridge Computer Lab, which is fine by me).

Yes, but this is unrelated to the CI system used.

> 
>   Specific operating systems:
>   - Windows, we could use Azure, which is also what Appveyor uses
>   - FreeBSD is supported on Rackspace Cloud
>   - OpenBSD requires custom hosting, but has some stability issues 
> under Xen
>     that are on my debugging list (page table crashes on x86_32).
>   - MacOS X could use Vagrant with the VMWare Fusion provider.  
> Sandboxing is
>     more of an app model there, and not suitable for whole-system 
> snapshots.
>   - Most common Linux variants can be handled via Docker.
> 
> It's interesting how there doesn't seem to be any out-of-the-box open 
> source
> solution for continuous integration on multiple operating systems and 
> weird
> architectures (where the JVM wont work too well).

Buildbot works.

Overall, I think that the buildscript itself definitely should be 
rewritten
in OCaml and handle all the OCaml-specific details. However, rewriting
the web UI, buildmaster/buildslave communication and so on is a waste of
time. There is no practical benefit gained from doing so, and the result
will be certainly inferior even to Buildbot, which is not perfect, but
has had much more time to get polished than any homegrown solution.

> 
> -anil

-- 
Peter Zotov

From anil at recoil.org  Thu Oct 30 12:25:50 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 30 Oct 2014 12:25:50 +0000
Subject: [opam-devel] Travis is broken
In-Reply-To: <65561e00543b1b3d22ac2a2bdb88a167@whitequark.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
 <6DB2A990-9C8F-4211-A788-4E17FB23A98D@recoil.org>
 <f4dd6df8ebfe0b57e7d1d6c171fd885b@whitequark.org>
 <3E8CDBCB-38DA-4F13-8D13-78D8F84A5D68@recoil.org>
 <65561e00543b1b3d22ac2a2bdb88a167@whitequark.org>
Message-ID: <0A2E4174-2F63-4836-B7F6-7B624951294E@recoil.org>

On 29 Oct 2014, at 22:00, Peter Zotov <whitequark at whitequark.org> wrote:
> Buildbot works.
> 
> Overall, I think that the buildscript itself definitely should be rewritten
> in OCaml and handle all the OCaml-specific details. However, rewriting
> the web UI, buildmaster/buildslave communication and so on is a waste of
> time. There is no practical benefit gained from doing so, and the result
> will be certainly inferior even to Buildbot, which is not perfect, but
> has had much more time to get polished than any homegrown solution.

Agreed... certainly for the first cut.  As long as we can get the data
out in a way that's easy to manipulate then that's fine.  How about we
start to get familiar with buildbot by provisioning a Rackspace VM for it
and running it on a fork of opam-repository (so that all the commenting
noise doesn't drown out the main repo while we're experimenting).

-anil

From whitequark at whitequark.org  Fri Oct 31 10:06:55 2014
From: whitequark at whitequark.org (Peter Zotov)
Date: Fri, 31 Oct 2014 13:06:55 +0300
Subject: [opam-devel] Travis is broken
In-Reply-To: <0A2E4174-2F63-4836-B7F6-7B624951294E@recoil.org>
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
 <6DB2A990-9C8F-4211-A788-4E17FB23A98D@recoil.org>
 <f4dd6df8ebfe0b57e7d1d6c171fd885b@whitequark.org>
 <3E8CDBCB-38DA-4F13-8D13-78D8F84A5D68@recoil.org>
 <65561e00543b1b3d22ac2a2bdb88a167@whitequark.org>
 <0A2E4174-2F63-4836-B7F6-7B624951294E@recoil.org>
Message-ID: <33ceb5d1a77d3023fbc8a3b17ba3e474@whitequark.org>

On 2014-10-30 15:25, Anil Madhavapeddy wrote:
> On 29 Oct 2014, at 22:00, Peter Zotov <whitequark at whitequark.org> 
> wrote:
>> Buildbot works.
>> 
>> Overall, I think that the buildscript itself definitely should be 
>> rewritten
>> in OCaml and handle all the OCaml-specific details. However, rewriting
>> the web UI, buildmaster/buildslave communication and so on is a waste 
>> of
>> time. There is no practical benefit gained from doing so, and the 
>> result
>> will be certainly inferior even to Buildbot, which is not perfect, but
>> has had much more time to get polished than any homegrown solution.
> 
> Agreed... certainly for the first cut.  As long as we can get the data
> out in a way that's easy to manipulate then that's fine.  How about we
> start to get familiar with buildbot by provisioning a Rackspace VM for 
> it
> and running it on a fork of opam-repository (so that all the commenting
> noise doesn't drown out the main repo while we're experimenting).

Sure! Please set up the VM.

Do you intend use some configuration management tool? I've just 
configured
it manually (and updated two files in /etc/default).

-- 
Peter Zotov

From sylvain+ocaml at le-gall.net  Fri Oct 31 10:57:14 2014
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Fri, 31 Oct 2014 10:57:14 +0000
Subject: [opam-devel] Travis is broken
References: <1b56bd6d34db4af2ade2215320a4e75f@whitequark.org>
 <7601D588-48C9-4F7D-8DC3-7B10A1013699@gazagnaire.org>
 <6DB2A990-9C8F-4211-A788-4E17FB23A98D@recoil.org>
 <f4dd6df8ebfe0b57e7d1d6c171fd885b@whitequark.org>
 <3E8CDBCB-38DA-4F13-8D13-78D8F84A5D68@recoil.org>
 <65561e00543b1b3d22ac2a2bdb88a167@whitequark.org>
 <0A2E4174-2F63-4836-B7F6-7B624951294E@recoil.org>
 <33ceb5d1a77d3023fbc8a3b17ba3e474@whitequark.org>
Message-ID: <CAOCAUGNbxbXVD=xoFkNqM1Ru00tatBuZtSb3kkPwqnVhu_TKAg@mail.gmail.com>

configuration management tool -> I am setting up a puppet server that you
can use for this kind of thing. The server itself should be ready this
week-end and it is already used for the OCaml Forge (basic configuration).
I extend it to include user management (including SSH key management),
firewalls and setting up the new OCaml Forge.

The repository is actually private because it may contains passwords.

Anil, if you need help on puppet, just ping me. The puppet server and
Debian packages repository will be hosted on forge-ssh.ocaml.org.

A good thing to do, if you don't have time to learn puppet, is to document
what you do during the installation/configuration step. This is a good
starting point to create puppet classes for automatic setup in the future.

Regards
Sylvain

Le Fri Oct 31 2014 at 11:06:55 AM, Peter Zotov <whitequark at whitequark.org>
a ?crit :

> On 2014-10-30 15:25, Anil Madhavapeddy wrote:
> > On 29 Oct 2014, at 22:00, Peter Zotov <whitequark at whitequark.org>
> > wrote:
> >> Buildbot works.
> >>
> >> Overall, I think that the buildscript itself definitely should be
> >> rewritten
> >> in OCaml and handle all the OCaml-specific details. However, rewriting
> >> the web UI, buildmaster/buildslave communication and so on is a waste
> >> of
> >> time. There is no practical benefit gained from doing so, and the
> >> result
> >> will be certainly inferior even to Buildbot, which is not perfect, but
> >> has had much more time to get polished than any homegrown solution.
> >
> > Agreed... certainly for the first cut.  As long as we can get the data
> > out in a way that's easy to manipulate then that's fine.  How about we
> > start to get familiar with buildbot by provisioning a Rackspace VM for
> > it
> > and running it on a fork of opam-repository (so that all the commenting
> > noise doesn't drown out the main repo while we're experimenting).
>
> Sure! Please set up the VM.
>
> Do you intend use some configuration management tool? I've just
> configured
> it manually (and updated two files in /etc/default).
>
> --
> Peter Zotov
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20141031/ec1cd3ed/attachment.html>

From amc79 at cam.ac.uk  Fri Oct 31 13:12:22 2014
From: amc79 at cam.ac.uk (Amir Chaudhry)
Date: Fri, 31 Oct 2014 13:12:22 +0000
Subject: [opam-devel] Becoming an opam-repository merger
In-Reply-To: <B815C0D7-653B-4CA7-9E11-0610C7225315@recoil.org>
References: <c48fd4edf77590e7a5e1e619be1dd4fb@whitequark.org>
 <6621D6A3-13D3-4589-806F-34D333E97F32@recoil.org>
 <8AE7547F-E3B3-41A7-85AD-5F08FCE8E707@gazagnaire.org>
 <B79DC176-75A9-4519-B8F7-50BA94DFA99F@cam.ac.uk>
 <B815C0D7-653B-4CA7-9E11-0610C7225315@recoil.org>
Message-ID: <F460C721-A964-4001-B80A-6291158D4922@cam.ac.uk>

Thanks, I've added that list of people to the GitHub team.

Specifically: 

- dsheets (David)
- planar (Damien)
- yallop (Jeremy)
- whitequark (Peter)

AC

On 28 Oct 2014, at 22:03, Anil Madhavapeddy <anil at recoil.org> wrote:

> I'd like to also propose the most prolific recent contributors of fixes from the bulk logs and incoming issues:
> 
> - David Sheets
> - Damien Doligez
> - Jeremy Yallop
> - Peter Zotov
> 
> best,
> Anil
> 
>> On 23 Oct 2014, at 14:28, Amir Chaudhry <amc79 at cam.ac.uk> wrote:
>> 
>> Anil, Thomas, I've made the team as requested and added you both (@avsm @samoht) but not sure who else to add.  I'm guessing @whitequark (Peter Z), but who else?
>> 
>> Please confirm,
>> Amir
>> 
>> 
>> 
>> On 22 Oct 2014, at 18:46, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:
>> 
>>> Anil, can you create an opam-repository team in the ocaml organisation? I have less and less time to look at the current breakages, so I'm very happy to have more fresh bloods helping us.
>>> 
>>> Thomas
>>> 
>>> 
>>> On 17 Oct 2014, at 16:14, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> 
>>>> On 17 Oct 2014, at 00:06, Peter Zotov <whitequark at whitequark.org> wrote:
>>>> 
>>>>> Hello,
>>>>> 
>>>>> I see opam-repository currently has a shortage of attention.
>>>>> I would like to help out.
>>>> 
>>>> Thanks for offering!  I'd love to see more maintainers and mergers for
>>>> the repository.  Since there's a rather undocumented process for 
>>>> determining what to merge, Thomas kicked off a web page to describe it
>>>> better: 
>>>> - https://github.com/ocaml/opam-repository/wiki/PR-checks
>>>> 
>>>> It's a bit of a delicate time to be merging since we are in the
>>>> 1.2 transition, so the delays have been partly due to that as well.
>>>> In general, more automation to remove all the manual stuff from that
>>>> checklist is the goal.  For instance, setting OPAMSTRICT and getting
>>>> the repository clear of warnings would really help avoid a manual check.
>>>> 
>>>> Another very valuable contribution would be to look through the
>>>> github.com/ocaml/opam-bulk-logs and continue to make the repository
>>>> build cleanly.  Again, there is some fledgling automation via regular
>>>> expressions (in David Sheets' ocamlot repo) that needs to be extracted
>>>> into a CLI to make it easier to triage.
>>>> 
>>>> I'm on the road in California right now, so will catch up properly
>>>> next week -- just wanted to note that I have no objection to more
>>>> mergers, and really appreciate you volunteering!
>>>> 
>>>> -anil
>>>> 
>>>> _______________________________________________
>>>> opam-devel mailing list
>>>> opam-devel at lists.ocaml.org
>>>> http://lists.ocaml.org/listinfo/opam-devel
>>> 
>>> _______________________________________________
>>> opam-devel mailing list
>>> opam-devel at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/opam-devel
>> 
> 


