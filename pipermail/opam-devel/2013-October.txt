From anil at recoil.org  Thu Oct  3 10:35:02 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 3 Oct 2013 10:35:02 +0100
Subject: [opam-devel] OPAM PPA-unstable snaps updating
Message-ID: <C7A93C25-AF38-496C-BCD3-AE475893FDBF@recoil.org>

I'm refreshing avsm/ppa-unstable to the latest 1.1 trunk snaps, and then will move them over to avsm/ppa-testing (which is used by the TravisCI scripts) once they're built.  I'll do this regularly until we have a release candidate.

-anil

From thomas at gazagnaire.org  Thu Oct  3 10:43:03 2013
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Thu, 3 Oct 2013 11:43:03 +0200
Subject: [opam-devel] OPAM PPA-unstable snaps updating
In-Reply-To: <C7A93C25-AF38-496C-BCD3-AE475893FDBF@recoil.org>
References: <C7A93C25-AF38-496C-BCD3-AE475893FDBF@recoil.org>
Message-ID: <B4624E20-D6C8-4A03-B812-6766E4C02A30@gazagnaire.org>

> I'm refreshing avsm/ppa-unstable to the latest 1.1 trunk snaps, and then will move them over to avsm/ppa-testing (which is used by the TravisCI scripts) once they're built.  I'll do this regularly until we have a release candidate.

We are very close to release 1.1.  The checklist before the release:

- update CHANGES to be more accurate
- complete the migration to ocaml.org [Louis has almost done this]
- stress-test the repository migration [Need to double check that it works when OPAM cannot understand the metadata in the repository and when the format of the 'repo' file change]
- check why all build logs are not properly captured (#895) [I suspect this to be trivial to fix]

So far, everything is going fine, so I really hope we can announce the 1.1 release next monday!

Thomas


From sylvain+ocaml at le-gall.net  Thu Oct  3 10:53:31 2013
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Thu, 3 Oct 2013 11:53:31 +0200
Subject: [opam-devel] ocamlot + opam and download count
Message-ID: <CAOCAUGN6dRHMnRuNx00xkCTTRMbFAq8rH-fL4xYPWzJyELw=Dg@mail.gmail.com>

Hi all,

I was closely watching the number of downloads of OUnit which recently
launched v2.

I would like to understand better how the stats are working. I have
less download on the forge than install on the OPAM page. Is it normal
?

I would also like to filter-out automatic download done by ocamlot
(sorry Anil). This is not a real user and I would like to see how many
real user get this library installed. Is it possible ?

Regards
Sylvain

From anil at recoil.org  Thu Oct  3 11:01:33 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 3 Oct 2013 11:01:33 +0100
Subject: [opam-devel] ocamlot + opam and download count
In-Reply-To: <CAOCAUGN6dRHMnRuNx00xkCTTRMbFAq8rH-fL4xYPWzJyELw=Dg@mail.gmail.com>
References: <CAOCAUGN6dRHMnRuNx00xkCTTRMbFAq8rH-fL4xYPWzJyELw=Dg@mail.gmail.com>
Message-ID: <9591E978-FDDC-4AC5-BDDB-61193FB3C064@recoil.org>

On 3 Oct 2013, at 10:53, Sylvain Le Gall <sylvain+ocaml at le-gall.net> wrote:

> Hi all,
> 
> I was closely watching the number of downloads of OUnit which recently
> launched v2.
> 
> I would like to understand better how the stats are working. I have
> less download on the forge than install on the OPAM page. Is it normal
> ?
> 
> I would also like to filter-out automatic download done by ocamlot
> (sorry Anil). This is not a real user and I would like to see how many
> real user get this library installed. Is it possible ?

The downloads will be done from the Travis VMs now, so not really.
We could add a feature to OPAM to mark a CI build (and add an HTTP
header to the request which could be logged).

For OCamlot, we're going to switch it to a local repository, so you
won't see many hits from it for the ongoing tests.

-anil

From anil at recoil.org  Thu Oct  3 11:16:39 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 3 Oct 2013 11:16:39 +0100
Subject: [opam-devel] OPAM PPA-unstable snaps updating
In-Reply-To: <B4624E20-D6C8-4A03-B812-6766E4C02A30@gazagnaire.org>
References: <C7A93C25-AF38-496C-BCD3-AE475893FDBF@recoil.org>
 <B4624E20-D6C8-4A03-B812-6766E4C02A30@gazagnaire.org>
Message-ID: <87F3F4B5-7134-4D60-924C-21EF532C8949@recoil.org>

On 3 Oct 2013, at 10:43, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:

>> I'm refreshing avsm/ppa-unstable to the latest 1.1 trunk snaps, and then will move them over to avsm/ppa-testing (which is used by the TravisCI scripts) once they're built.  I'll do this regularly until we have a release candidate.
> 
> We are very close to release 1.1.  The checklist before the release:
> 
> - update CHANGES to be more accurate
> - complete the migration to ocaml.org [Louis has almost done this]

Great; I'm installing the SSL certificate now on the VM.

> - stress-test the repository migration [Need to double check that it works when OPAM cannot understand the metadata in the repository and when the format of the 'repo' file change]
> - check why all build logs are not properly captured (#895) [I suspect this to be trivial to fix]
> 
> So far, everything is going fine, so I really hope we can announce the 1.1 release next monday!

Exciting :-)

The only other thing on my list was to ensure that OPAM 1.2 upgrades will work from 1.1 -- I'd like to install a dummy package in opam-repository that has opam-version:1.2, but of course we can't quite do this until 1.1 is out and the repositories have forked.

-anil

From anil at recoil.org  Mon Oct  7 11:28:00 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 7 Oct 2013 11:28:00 +0100
Subject: [opam-devel] OPAM 1.0 now segfaulting on main repository
Message-ID: <F698DE99-AF63-48D3-B1E3-1D01F1B572FA@recoil.org>

I notice that the i386 OPAM 1.0 is now reliably segfaulting on the default library:

.travis-ci.sh: line 48:  5483 Segmentation fault      opam init .

This wouldn't ordinarily be a problem except that it's the default compiler in Debian/Ubuntu still, so does anyone feel like taking a look?  Note that it doesn't happen with OPAM 1.1 on any of the tests, and it only happens with OPAM 1.0 and OCaml 3.12.1 (4.x is fine).

-anil

From louis.gesbert at ocamlpro.com  Mon Oct  7 11:58:16 2013
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 07 Oct 2013 12:58:16 +0200
Subject: [opam-devel] OPAM 1.0 now segfaulting on main repository
In-Reply-To: <F698DE99-AF63-48D3-B1E3-1D01F1B572FA@recoil.org>
References: <F698DE99-AF63-48D3-B1E3-1D01F1B572FA@recoil.org>
Message-ID: <21926498.9F13jZiPTd@ocp-dell>

I couldn'nt reproduce yet by installing opam-1.0.0-1:i386 on my debian: seems to work fine.
Will try some more

On Monday 07 October 2013 11:28:00 Anil Madhavapeddy wrote:
> I notice that the i386 OPAM 1.0 is now reliably segfaulting on the default library:
> 
> .travis-ci.sh: line 48:  5483 Segmentation fault      opam init .
> 
> This wouldn't ordinarily be a problem except that it's the default compiler in Debian/Ubuntu still, so does anyone feel like taking a look?  Note that it doesn't happen with OPAM 1.1 on any of the tests, and it only happens with OPAM 1.0 and OCaml 3.12.1 (4.x is fine).
> 
> -anil
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From louis.gesbert at ocamlpro.com  Mon Oct  7 12:08:50 2013
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 07 Oct 2013 13:08:50 +0200
Subject: [opam-devel] OPAM 1.0 now segfaulting on main repository
In-Reply-To: <21926498.9F13jZiPTd@ocp-dell>
References: <F698DE99-AF63-48D3-B1E3-1D01F1B572FA@recoil.org>
 <21926498.9F13jZiPTd@ocp-dell>
Message-ID: <1872522.ToxXsrBaf4@ocp-dell>

This is probably due to an unmarshalling across different versions of ocaml (.opam/state.cache);
is it possible that some files are already present in ~/.opam when the travis script is run ?

On Monday 07 October 2013 12:58:16 Louis Gesbert wrote:
> I couldn'nt reproduce yet by installing opam-1.0.0-1:i386 on my debian: seems to work fine.
> Will try some more
> 
> On Monday 07 October 2013 11:28:00 Anil Madhavapeddy wrote:
> > I notice that the i386 OPAM 1.0 is now reliably segfaulting on the default library:
> > 
> > .travis-ci.sh: line 48:  5483 Segmentation fault      opam init .
> > 
> > This wouldn't ordinarily be a problem except that it's the default compiler in Debian/Ubuntu still, so does anyone feel like taking a look?  Note that it doesn't happen with OPAM 1.1 on any of the tests, and it only happens with OPAM 1.0 and OCaml 3.12.1 (4.x is fine).
> > 
> > -anil
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From anil at recoil.org  Mon Oct  7 12:10:15 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 7 Oct 2013 12:10:15 +0100
Subject: [opam-devel] OPAM 1.0 now segfaulting on main repository
In-Reply-To: <1872522.ToxXsrBaf4@ocp-dell>
References: <F698DE99-AF63-48D3-B1E3-1D01F1B572FA@recoil.org>
 <21926498.9F13jZiPTd@ocp-dell> <1872522.ToxXsrBaf4@ocp-dell>
Message-ID: <56267064-38CD-4F92-ABB4-AD43DADCCC29@recoil.org>

Nope -- it's always a fresh installation in every run, with no upgrades or anything.

-anil

On 7 Oct 2013, at 12:08, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:

> This is probably due to an unmarshalling across different versions of ocaml (.opam/state.cache);
> is it possible that some files are already present in ~/.opam when the travis script is run ?
> 
> On Monday 07 October 2013 12:58:16 Louis Gesbert wrote:
>> I couldn'nt reproduce yet by installing opam-1.0.0-1:i386 on my debian: seems to work fine.
>> Will try some more
>> 
>> On Monday 07 October 2013 11:28:00 Anil Madhavapeddy wrote:
>>> I notice that the i386 OPAM 1.0 is now reliably segfaulting on the default library:
>>> 
>>> .travis-ci.sh: line 48:  5483 Segmentation fault      opam init .
>>> 
>>> This wouldn't ordinarily be a problem except that it's the default compiler in Debian/Ubuntu still, so does anyone feel like taking a look?  Note that it doesn't happen with OPAM 1.1 on any of the tests, and it only happens with OPAM 1.0 and OCaml 3.12.1 (4.x is fine).
>>> 
>>> -anil
>>> _______________________________________________
>>> opam-devel mailing list
>>> opam-devel at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/opam-devel
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From nicolas at braud-santoni.eu  Wed Oct  9 22:24:22 2013
From: nicolas at braud-santoni.eu (Nicolas Braud-Santoni)
Date: Wed, 09 Oct 2013 23:24:22 +0200
Subject: [opam-devel] Repository format
Message-ID: <5255C986.5030806@braud-santoni.eu>

Hello,

I was wondering whether the developer's manual[1] is up-to-date, esp.
regarding the repository format.

Indeed, I endeavour to write a module for the Paludis[2] package
manager, in order to use directly the OPAM package descriptions.

This package manager is used in several Linux distributions, including:
- Exherbo;
- Gentoo (though it is not the default package manager).

The goal here isn't to replace OPAM, but to allow users that do not
directly use OCaml to easily install packages that depend on OCaml
libraries (and save me from packaging everything by hand).


Regards,

Nicolas Braud-Santoni

[1]
https://github.com/OCamlPro/opam/blob/master/doc/dev-manual/dev-manual.pdf?raw=true
[2] http://paludis.exherbo.org/

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: OpenPGP digital signature
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20131009/f6c1cceb/attachment.sig>

From thomas at gazagnaire.org  Thu Oct 10 08:37:32 2013
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Thu, 10 Oct 2013 09:37:32 +0200
Subject: [opam-devel] Repository format
In-Reply-To: <5255C986.5030806@braud-santoni.eu>
References: <5255C986.5030806@braud-santoni.eu>
Message-ID: <298B7CCD-1709-4DF5-A791-BE00138514CF@gazagnaire.org>

Hello,

> I was wondering whether the developer's manual[1] is up-to-date, esp.
> regarding the repository format.

Yes, it is supposed to be up-to-date.

> Indeed, I endeavour to write a module for the Paludis[2] package
> manager, in order to use directly the OPAM package descriptions.
> 
> This package manager is used in several Linux distributions, including:
> - Exherbo;
> - Gentoo (though it is not the default package manager).
> 
> The goal here isn't to replace OPAM, but to allow users that do not
> directly use OCaml to easily install packages that depend on OCaml
> libraries (and save me from packaging everything by hand).

Nice! Would be glad to hear your progress on that -- feel free to suggest ways we can help you or make your life easier, for instance if you plan to use the opam library to parse the files (ie. OpamFile.OPAM.read).

Best,
Thomas

> 
> 
> Regards,
> 
> Nicolas Braud-Santoni
> 
> [1]
> https://github.com/OCamlPro/opam/blob/master/doc/dev-manual/dev-manual.pdf?raw=true
> [2] http://paludis.exherbo.org/
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From nicolas at braud-santoni.eu  Thu Oct 10 09:33:28 2013
From: nicolas at braud-santoni.eu (Nicolas Braud-Santoni)
Date: Thu, 10 Oct 2013 10:33:28 +0200
Subject: [opam-devel] Repository format
In-Reply-To: <298B7CCD-1709-4DF5-A791-BE00138514CF@gazagnaire.org>
References: <5255C986.5030806@braud-santoni.eu>
 <298B7CCD-1709-4DF5-A791-BE00138514CF@gazagnaire.org>
Message-ID: <52566658.6000807@braud-santoni.eu>

On 10/10/2013 09:37, Thomas Gazagnaire wrote:
> Hello,
> 
>> I was wondering whether the developer's manual[1] is up-to-date, esp.
>> regarding the repository format.
> 
> Yes, it is supposed to be up-to-date.

Nice :)

>> Indeed, I endeavour to write a module for the Paludis[2] package
>> manager, in order to use directly the OPAM package descriptions.
>> [...]
> 
> Nice! Would be glad to hear your progress on that -- feel free to suggest ways we can help you or make your life easier, for instance if you plan to use the opam library to parse the files (ie. OpamFile.OPAM.read).

Unfortunately, various reasons[1] prevent me from directly leveraging
the OPAM library, so I will probably end up writing another
implementation ... in C++ :(

I would be happy to report whatever progress I do, however.


Regards,

Nicolas

[1] Mostly, Paludis makes concurrent calls to the repository-handling code.

From anil at recoil.org  Fri Oct 11 13:49:20 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 11 Oct 2013 13:49:20 +0100
Subject: [opam-devel] #opam on freenode is now open
Message-ID: <51132B14-ECD4-4EB6-8F71-3E80965DF1DB@recoil.org>

Louis, Thomas and I have started hanging out on #opam on FreeNode IRC.  Do come along and idle with us if you feel the urge...

-anil

From guillaume at claret.me  Fri Oct 11 15:43:37 2013
From: guillaume at claret.me (Guillaume Claret)
Date: Fri, 11 Oct 2013 16:43:37 +0200
Subject: [opam-devel] Ideas from Node.js
Message-ID: <52580E99.5040303@claret.me>

Hello,

   To see if there is room for improvement, I was comparing OPAM with 
npm (the packages manager of Node.js) which seems to me to be one of the 
most popular packaging system today.

   Instead of three files "descr", "opam" and "url" they have just one 
"package.json" file.

   They directly use the JSON syntax to describe the packages. The 
syntax is heavier than the one of "opam" files so the advantage is not 
clear, but this syntax is already known by most programmers / text 
editors, easily described with a JSON schema and can be parsed by any 
programming language.

   Finally, the "package.json" file is located at the root of the 
sources of a project. This is a more self-contained approach. Someone 
can even install a package giving the repository Git's url, without 
registering it on a repository.

   I wonder if these changes could be good ideas for OPAM,

Regards,
Guillaume Claret

From thomas at gazagnaire.org  Fri Oct 11 18:27:44 2013
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Fri, 11 Oct 2013 19:27:44 +0200
Subject: [opam-devel] Ideas from Node.js
In-Reply-To: <52580E99.5040303@claret.me>
References: <52580E99.5040303@claret.me>
Message-ID: <CABADE77-24B0-453E-A708-CFD33112C698@gazagnaire.org>

>  Instead of three files "descr", "opam" and "url" they have just one "package.json" file.
> 
>  They directly use the JSON syntax to describe the packages. The syntax is heavier than the one of "opam" files so the advantage is not clear, but this syntax is already known by most programmers / text editors, easily described with a JSON schema and can be parsed by any programming language.

I've already explained the current design in [1]. Again, the current design is not perfect but I am not really convinced by having a fully JSON-compliant format. However, I you think that's important, feel free to send us patches to add a new supported format and we can discuss how to integrate it properly.

>  Finally, the "package.json" file is located at the root of the sources of a project. This is a more self-contained approach. Someone can even install a package giving the repository Git's url, without registering it on a repository.

This is done on purpose: package metadata are supposed to change often (because you don't really control the release cycle of libraries a given package depends on) -- if you want to fix a version constraint or if you want to add missing configuration options -- so metadata are better stored in a different place than the package contents (otherwise you have to make a release for every metadata change). Moreover, it let you fix package descriptions when new metadata appear (the best example is the "new" 'depext' field that we will start to populate quite soon in all the already existing packages).

However, for packages being developed, I understand it is more flexible to have both metadata and contents in your package tree. This is not yet possible with OPAM, although you can add an 'opam' file at the root of any pinned package and it will be used instead of the one in the metadata repository. See for instance [2]. The way I would go with this would be to create a local repository with all your dev packages and do what you want with them, but I agree that what you ask could make the life of package developer easier. I'm opening [3] to keep track of that.

--
Thomas

[1] https://github.com/OCamlPro/opam/issues/884
[2] https://github.com/OCamlPro/opam/issues/671
https://github.com/OCamlPro/opam/issues/941


From mmatalka at gmail.com  Fri Oct 11 21:26:10 2013
From: mmatalka at gmail.com (Malcolm Matalka)
Date: Fri, 11 Oct 2013 20:26:10 +0000
Subject: [opam-devel] Ideas from Node.js
In-Reply-To: <52580E99.5040303@claret.me> (Guillaume Claret's message of "Fri, 
 11 Oct 2013 16:43:37 +0200")
References: <52580E99.5040303@claret.me>
Message-ID: <87a9ifv9jx.fsf@gmail.com>

Guillaume Claret <guillaume at claret.me> writes:

> Hello,
>
>   To see if there is room for improvement, I was comparing OPAM with npm (the packages manager of Node.js) which seems to me to be one of
> the most popular packaging system today.
>
>   Instead of three files "descr", "opam" and "url" they have just one "package.json" file.
>
>   They directly use the JSON syntax to describe the packages. The syntax is heavier than the one of "opam" files so the advantage is not
> clear, but this syntax is already known by most programmers / text editors, easily described with a JSON schema and can be parsed by any
> programming language.
>
>   Finally, the "package.json" file is located at the root of the sources of a project. This is a more self-contained approach. Someone can
> even install a package giving the repository Git's url, without registering it on a repository.
>

For a data point, as a heavy use of rebar in Erlang, which puts the package information
with the source, I can say that in my experience, this style does not
scale if you really care about which version of software you use.  We
often have to have a patchset on top of a thirdparty repository to fix
their dependencies.  If we had that information separate from code it
wouldn't be a problem.

While it might be really convenient, my request would be that if OPAM
adopts it, it be easy to override with a package repository.

>   I wonder if these changes could be good ideas for OPAM,
>
> Regards,
> Guillaume Claret
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From sylvain+ocaml at le-gall.net  Fri Oct 11 23:00:22 2013
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Sat, 12 Oct 2013 00:00:22 +0200
Subject: [opam-devel] Ideas from Node.js
In-Reply-To: <52580E99.5040303@claret.me>
References: <52580E99.5040303@claret.me>
Message-ID: <CAOCAUGPuopi1XcTvggzMKP3_e4+8Sre=z0E8S==MMHzj8Ry8Bg@mail.gmail.com>

Hello,

This is something already somehow do-able with OASIS: just embed an
_oasis (more rfc822 than JSON) and use oasis2opam to convert the
_oasis to OPAM required files.

http://oasis.forge.ocamlcore.org

If OPAM dev would integrate a little more with OASIS (i.e. get rid of
oasis2opam to directly read data from _oasis distributed with upstream
package) and allow override using classic OPAM files, it will be super
easy to release OASIS package directly in OPAM.

I think the current design of OPAM regarding location of files is fine
when you design a package manager. I wonder if it will make it even
more useful to cooperate with another system more dedicated to
upstream packages like OASIS.

Regards
Sylvain

p.s. sorry for the shameless ads plug for OASIS, I still think a step
forward to cooperate between OASIS and OPAM would be a huge gain for
everyone.


2013/10/11 Guillaume Claret <guillaume at claret.me>:
> Hello,
>
>   To see if there is room for improvement, I was comparing OPAM with npm
> (the packages manager of Node.js) which seems to me to be one of the most
> popular packaging system today.
>
>   Instead of three files "descr", "opam" and "url" they have just one
> "package.json" file.
>
>   They directly use the JSON syntax to describe the packages. The syntax is
> heavier than the one of "opam" files so the advantage is not clear, but this
> syntax is already known by most programmers / text editors, easily described
> with a JSON schema and can be parsed by any programming language.
>
>   Finally, the "package.json" file is located at the root of the sources of
> a project. This is a more self-contained approach. Someone can even install
> a package giving the repository Git's url, without registering it on a
> repository.
>
>   I wonder if these changes could be good ideas for OPAM,
>
> Regards,
> Guillaume Claret
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From anil at recoil.org  Sat Oct 12 09:14:00 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 12 Oct 2013 09:14:00 +0100
Subject: [opam-devel] Ideas from Node.js
In-Reply-To: <CAOCAUGPuopi1XcTvggzMKP3_e4+8Sre=z0E8S==MMHzj8Ry8Bg@mail.gmail.com>
References: <52580E99.5040303@claret.me>
 <CAOCAUGPuopi1XcTvggzMKP3_e4+8Sre=z0E8S==MMHzj8Ry8Bg@mail.gmail.com>
Message-ID: <409E3B16-F89C-461E-900A-12D3AF2DF8F0@recoil.org>


On 11 Oct 2013, at 23:00, Sylvain Le Gall <sylvain+ocaml at le-gall.net> wrote:

> Hello,
> 
> This is something already somehow do-able with OASIS: just embed an
> _oasis (more rfc822 than JSON) and use oasis2opam to convert the
> _oasis to OPAM required files.
> 
> http://oasis.forge.ocamlcore.org
> 
> If OPAM dev would integrate a little more with OASIS (i.e. get rid of
> oasis2opam to directly read data from _oasis distributed with upstream
> package) and allow override using classic OPAM files, it will be super
> easy to release OASIS package directly in OPAM.

This has the same problem that Malcolm just explained -- you tie the 
metadata to some file *inside* the package, which requires distribution
patches if you want to override it.

What's wrong with oasis2opam that can't be fixed with a shell script
wrapper `opam-mk-oasis-package` or something similar?

-anil


From anil at recoil.org  Sat Oct 12 09:48:37 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 12 Oct 2013 09:48:37 +0100
Subject: [opam-devel] Travis Ubuntu PPAs updated for 1.1.0RC1
Message-ID: <552CEDB5-8C49-480C-BDCA-0C53E22E3F74@recoil.org>

I've built a 1.1.0RC1 Ubuntu PPA and uploaded it to my PPA matrix, so that new Travis runs will pick up the RC.

As a reminder, the trees I have are:

Travis trees with fixed versions of OCaml+OPAM:
OCaml 3.12.1 + OPAM 1.0.0: https://launchpad.net/~avsm/+archive/ocaml312+opam10
OCaml 3.12.1 + OPAM 1.1.0: https://launchpad.net/~avsm/+archive/ocaml312+opam11
OCaml 4.00.1 + OPAM 1.0.0: https://launchpad.net/~avsm/+archive/ocaml40+opam10
OCaml 4.00.1 + OPAM 1.1.0: https://launchpad.net/~avsm/+archive/ocaml40+opam11
OCaml 4.01.0 + OPAM 1.0.0: https://launchpad.net/~avsm/+archive/ocaml41+opam10
OCaml 4.01.0 + OPAM 1.1.0: https://launchpad.net/~avsm/+archive/ocaml41+opam11
(The 1.1.0 versions above are all the RC1 candidate with the default roots shifted to https://opam.ocamlpro.com)

My 'user-facing' PPAs are:

OCaml 4.01.0 + OPAM 1.0.0 (to become 1.1.0 on release): https://launchpad.net/~avsm/+archive/ppa
OCaml 4.01.0 + OPAM 1.2.0dev (is currently snapshots of 1.1.0): https://launchpad.net/~avsm/+archive/ppa-opam-unstable

And my personal tree not designed for anyone else to subscribe to, with very bleeding edge PPAs:
https://launchpad.net/~avsm/+archive/ppa-opam-experimental

All of these should have Precise, Raring and Quantal PPAs, with amd64 and i386 variants.

cheers,
Anil

From sylvain+ocaml at le-gall.net  Sat Oct 12 11:01:02 2013
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Sat, 12 Oct 2013 12:01:02 +0200
Subject: [opam-devel] Ideas from Node.js
In-Reply-To: <409E3B16-F89C-461E-900A-12D3AF2DF8F0@recoil.org>
References: <52580E99.5040303@claret.me>
 <CAOCAUGPuopi1XcTvggzMKP3_e4+8Sre=z0E8S==MMHzj8Ry8Bg@mail.gmail.com>
 <409E3B16-F89C-461E-900A-12D3AF2DF8F0@recoil.org>
Message-ID: <CAOCAUGMwkPgQnmr=-zeNE278bBrXCoqnj01Rajijh+7sWW0hMw@mail.gmail.com>

2013/10/12 Anil Madhavapeddy <anil at recoil.org>:
>
> On 11 Oct 2013, at 23:00, Sylvain Le Gall <sylvain+ocaml at le-gall.net> wrote:
>
>> Hello,
>>
>> This is something already somehow do-able with OASIS: just embed an
>> _oasis (more rfc822 than JSON) and use oasis2opam to convert the
>> _oasis to OPAM required files.
>>
>> http://oasis.forge.ocamlcore.org
>>
>> If OPAM dev would integrate a little more with OASIS (i.e. get rid of
>> oasis2opam to directly read data from _oasis distributed with upstream
>> package) and allow override using classic OPAM files, it will be super
>> easy to release OASIS package directly in OPAM.
>
> This has the same problem that Malcolm just explained -- you tie the
> metadata to some file *inside* the package, which requires distribution
> patches if you want to override it.
>
> What's wrong with oasis2opam that can't be fixed with a shell script
> wrapper `opam-mk-oasis-package` or something similar?
>

I agree on the need of separation of package metadata (because they
often need patching for distribution) with the rest of the package. As
said, I think the current design is fine.

What would be nice is to have this opam-mk-oasis-package integrated
inside OPAM worflow. This would allow to remove one step when
publishing package on OPAM.

Here is the process I would like to see:
- enter a the URL of your tarball in a box on opam.ocamlpro.com
- download the tarball
- if the tarball/_oasis is fine, just create all required files using
oasis2opam and publish opam/packages/X.V/{opam,url,descr} (no install
of oasis2opam, no github fork, no pull request on client side, maybe
some on server side)
- if later you have to patch files, patch directly the generated
opam|url|descr (normal process)

Advantage:
- you can bootstrap package metadata from upstream description (thanks
to oasis2opam)
- the full process is very close to a normal OPAM publishing workflow,
changes needed to OPAM can be almost 0

The goal is to have just a single step to upload an OPAM package from
upstream sources in best case, if the _oasis coming along the upstream
package is fine.

Let say the issue is more about integration than design (I think we
have all piece to create this process and now the question is: does it
make sense to integrate it inside OPAM directly).

Are my explanation clear?

Side note, this process is inspired by the one I have on OASIS-DB (and
also by the missing feature I have there). If OPAM upstream agree on
this plan, I can do a demo on OASIS-DB before having it running on
http://opam.ocamlpro.com. It will take a little bit of time, because I
am an OPAM dev beginner.

Regards
Sylvain

From anil at recoil.org  Sat Oct 12 11:07:17 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 12 Oct 2013 11:07:17 +0100
Subject: [opam-devel] Ideas from Node.js
In-Reply-To: <CAOCAUGMwkPgQnmr=-zeNE278bBrXCoqnj01Rajijh+7sWW0hMw@mail.gmail.com>
References: <52580E99.5040303@claret.me>
 <CAOCAUGPuopi1XcTvggzMKP3_e4+8Sre=z0E8S==MMHzj8Ry8Bg@mail.gmail.com>
 <409E3B16-F89C-461E-900A-12D3AF2DF8F0@recoil.org>
 <CAOCAUGMwkPgQnmr=-zeNE278bBrXCoqnj01Rajijh+7sWW0hMw@mail.gmail.com>
Message-ID: <086FC91D-5056-4CC3-A7C4-E5FEF5E41FF7@recoil.org>

On 12 Oct 2013, at 11:01, Sylvain Le Gall <sylvain+ocaml at le-gall.net> wrote:
> 
> I agree on the need of separation of package metadata (because they
> often need patching for distribution) with the rest of the package. As
> said, I think the current design is fine.
> 
> What would be nice is to have this opam-mk-oasis-package integrated
> inside OPAM worflow. This would allow to remove one step when
> publishing package on OPAM.
> 
> Here is the process I would like to see:
> - enter a the URL of your tarball in a box on opam.ocamlpro.com
> - download the tarball
> - if the tarball/_oasis is fine, just create all required files using
> oasis2opam and publish opam/packages/X.V/{opam,url,descr} (no install
> of oasis2opam, no github fork, no pull request on client side, maybe
> some on server side)
> - if later you have to patch files, patch directly the generated
> opam|url|descr (normal process)
> 
> Advantage:
> - you can bootstrap package metadata from upstream description (thanks
> to oasis2opam)
> - the full process is very close to a normal OPAM publishing workflow,
> changes needed to OPAM can be almost 0
> 
> The goal is to have just a single step to upload an OPAM package from
> upstream sources in best case, if the _oasis coming along the upstream
> package is fine.
> 
> Let say the issue is more about integration than design (I think we
> have all piece to create this process and now the question is: does it
> make sense to integrate it inside OPAM directly).

To reiterate, none of this requires any changes in OPAM. You can just
create a wrapper script that does all this (including the GitHub workflow
you propose).  Note that the workflow will still require a clear client
pull request, since that's what triggers off the continuous integration
tests.  OPAM already has an extension mechanism similar to git's, where
it executes an `opam unknown` command by running the `opam-unknown` binary
with the subcommand stripped from argv.

> Side note, this process is inspired by the one I have on OASIS-DB (and
> also by the missing feature I have there). If OPAM upstream agree on
> this plan, I can do a demo on OASIS-DB before having it running on
> http://opam.ocamlpro.com. It will take a little bit of time, because I
> am an OPAM dev beginner.

I think that the web integration makes everything more complicated.  Just
a shell script is fine to start with, and then web integration.

-anil

From louis.gesbert at ocamlpro.com  Fri Oct 18 12:50:28 2013
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Fri, 18 Oct 2013 13:50:28 +0200
Subject: [opam-devel] broken stats on opam.ocaml.org
Message-ID: <17070123.ScRCY62EH8@agaric>

the stats are generated from the http log. Since monday, the hits are all logged by nginx as coming from 127.0.0.1, which obviously breaks the stats :/
Any idea on how the configuration (proxying etc.) may cause this and possible solutions ?

Cheers,
Louis
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20131018/7460c32b/attachment.html>

From anil at recoil.org  Fri Oct 18 12:57:48 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 18 Oct 2013 12:57:48 +0100
Subject: [opam-devel] broken stats on opam.ocaml.org
In-Reply-To: <17070123.ScRCY62EH8@agaric>
References: <17070123.ScRCY62EH8@agaric>
Message-ID: <20131018115748.GF25839@dark.recoil.org>

On Fri, Oct 18, 2013 at 01:50:28PM +0200, Louis Gesbert wrote:
> the stats are generated from the http log. Since monday, the hits are
> all logged by nginx as coming from 127.0.0.1, which obviously breaks the
> stats :/ Any idea on how the configuration (proxying etc.) may cause
> this and possible solutions ?

Good point -- we're using Stud:
https://github.com/bumptech/stud

It has support for something that solves our problem:
> stud will optionally write the client IP address as the first few octets
> (depending on IPv4 or IPv6) to the backend--or provide that information
> using HAProxy's PROXY protocol. When used with the PROXY protocol, stud
> can also transparently pass an existing PROXY header to the cleartext
> stream. This is especially useful if a TCP proxy is used in front of stud.
> Using either of these techniques, backends who care about the client IP
> can still access it even though stud itself appears to be the connected
> client.

But...what static web server is opam.ocaml.org using?  If it's nginx, then
it should already have support for this, or we could configure it to serve
SSL traffic directly...

-- 
Anil Madhavapeddy                                 http://anil.recoil.org

From louis.gesbert at ocamlpro.com  Fri Oct 18 18:10:21 2013
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Fri, 18 Oct 2013 19:10:21 +0200
Subject: [opam-devel] broken stats on opam.ocaml.org
In-Reply-To: <20131018115748.GF25839@dark.recoil.org>
References: <17070123.ScRCY62EH8@agaric>
 <20131018115748.GF25839@dark.recoil.org>
Message-ID: <4096298.R09DoZETao@agaric>

Ok, I've turned nginx https on, and disabled stud. The logs look ok now, and the stats should be good.

I also noticed that some client weren't redirected to the new repo yet, because the opam-admin on ocamlpro.com wasn'nt up to date (it wouldn't know about the repo file, and not notify to download it). That's fixed and everyone using 1.1 should be redirected now.

Le vendredi 18 octobre 2013 12:57:48 Anil Madhavapeddy a ?crit :
> On Fri, Oct 18, 2013 at 01:50:28PM +0200, Louis Gesbert wrote:
> > the stats are generated from the http log. Since monday, the hits are
> > all logged by nginx as coming from 127.0.0.1, which obviously breaks the
> > stats :/ Any idea on how the configuration (proxying etc.) may cause
> > this and possible solutions ?
> 
> Good point -- we're using Stud:
> https://github.com/bumptech/stud
> 
> It has support for something that solves our problem:
> > stud will optionally write the client IP address as the first few octets
> > (depending on IPv4 or IPv6) to the backend--or provide that information
> > using HAProxy's PROXY protocol. When used with the PROXY protocol, stud
> > can also transparently pass an existing PROXY header to the cleartext
> > stream. This is especially useful if a TCP proxy is used in front of stud.
> > Using either of these techniques, backends who care about the client IP
> > can still access it even though stud itself appears to be the connected
> > client.
> 
> But...what static web server is opam.ocaml.org using?  If it's nginx, then
> it should already have support for this, or we could configure it to serve
> SSL traffic directly...
> 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20131018/2e0fe41a/attachment.html>

From anil at recoil.org  Mon Oct 21 13:46:59 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 21 Oct 2013 13:46:59 +0100
Subject: [opam-devel] broken stats on opam.ocaml.org
In-Reply-To: <4096298.R09DoZETao@agaric>
References: <17070123.ScRCY62EH8@agaric>
 <20131018115748.GF25839@dark.recoil.org> <4096298.R09DoZETao@agaric>
Message-ID: <0EF79BD8-09EC-484A-AC60-0C19B138FF05@recoil.org>

Great!  The only other thing that would be nice is a redirect to some of the key pages on opam.ocamlpro.com  (such as the Quick_Install), since they are widely linked from elsewhere on the web.  If these could be served as a permanent redirect to the new site, that would ease migration, rather than giving users lots of 404s...

-anil

On 18 Oct 2013, at 18:10, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:

> Ok, I've turned nginx https on, and disabled stud. The logs look ok now, and the stats should be good.
>  
> I also noticed that some client weren't redirected to the new repo yet, because the opam-admin on ocamlpro.com wasn'nt up to date (it wouldn't know about the repo file, and not notify to download it). That's fixed and everyone using 1.1 should be redirected now.
>  
> Le vendredi 18 octobre 2013 12:57:48 Anil Madhavapeddy a ?crit :
> > On Fri, Oct 18, 2013 at 01:50:28PM +0200, Louis Gesbert wrote:
> > > the stats are generated from the http log. Since monday, the hits are
> > > all logged by nginx as coming from 127.0.0.1, which obviously breaks the
> > > stats :/ Any idea on how the configuration (proxying etc.) may cause
> > > this and possible solutions ?
> > 
> > Good point -- we're using Stud:
> > https://github.com/bumptech/stud
> > 
> > It has support for something that solves our problem:
> > > stud will optionally write the client IP address as the first few octets
> > > (depending on IPv4 or IPv6) to the backend--or provide that information
> > > using HAProxy's PROXY protocol. When used with the PROXY protocol, stud
> > > can also transparently pass an existing PROXY header to the cleartext
> > > stream. This is especially useful if a TCP proxy is used in front of stud.
> > > Using either of these techniques, backends who care about the client IP
> > > can still access it even though stud itself appears to be the connected
> > > client.
> > 
> > But...what static web server is opam.ocaml.org using?  If it's nginx, then
> > it should already have support for this, or we could configure it to serve
> > SSL traffic directly...
> > 
> > 

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20131021/12e0d484/attachment.html>

From louis.gesbert at ocamlpro.com  Mon Oct 21 14:29:01 2013
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 21 Oct 2013 15:29:01 +0200
Subject: [opam-devel] broken stats on opam.ocaml.org
In-Reply-To: <0EF79BD8-09EC-484A-AC60-0C19B138FF05@recoil.org>
References: <17070123.ScRCY62EH8@agaric> <4096298.R09DoZETao@agaric>
 <0EF79BD8-09EC-484A-AC60-0C19B138FF05@recoil.org>
Message-ID: <1809371.BumgE0O98p@agaric>

Good point. I've put a redirect of the whole doc/ directory

Le lundi 21 octobre 2013 13:46:59 Anil Madhavapeddy a ?crit :
> Great!  The only other thing that would be nice is a redirect to some of the key pages on opam.ocamlpro.com  (such as the Quick_Install), since they are widely linked from elsewhere on the web.  If these could be served as a permanent redirect to the new site, that would ease migration, rather than giving users lots of 404s...
> 
> -anil
> 
> On 18 Oct 2013, at 18:10, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> 
> > Ok, I've turned nginx https on, and disabled stud. The logs look ok now, and the stats should be good.
> >  
> > I also noticed that some client weren't redirected to the new repo yet, because the opam-admin on ocamlpro.com wasn'nt up to date (it wouldn't know about the repo file, and not notify to download it). That's fixed and everyone using 1.1 should be redirected now.
> >  
> > Le vendredi 18 octobre 2013 12:57:48 Anil Madhavapeddy a ?crit :
> > > On Fri, Oct 18, 2013 at 01:50:28PM +0200, Louis Gesbert wrote:
> > > > the stats are generated from the http log. Since monday, the hits are
> > > > all logged by nginx as coming from 127.0.0.1, which obviously breaks the
> > > > stats :/ Any idea on how the configuration (proxying etc.) may cause
> > > > this and possible solutions ?
> > > 
> > > Good point -- we're using Stud:
> > > https://github.com/bumptech/stud
> > > 
> > > It has support for something that solves our problem:
> > > > stud will optionally write the client IP address as the first few octets
> > > > (depending on IPv4 or IPv6) to the backend--or provide that information
> > > > using HAProxy's PROXY protocol. When used with the PROXY protocol, stud
> > > > can also transparently pass an existing PROXY header to the cleartext
> > > > stream. This is especially useful if a TCP proxy is used in front of stud.
> > > > Using either of these techniques, backends who care about the client IP
> > > > can still access it even though stud itself appears to be the connected
> > > > client.
> > > 
> > > But...what static web server is opam.ocaml.org using?  If it's nginx, then
> > > it should already have support for this, or we could configure it to serve
> > > SSL traffic directly...
> > > 
> > > 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20131021/abe3d7e8/attachment.html>

From louis.gesbert at ocamlpro.com  Tue Oct 22 10:08:36 2013
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Tue, 22 Oct 2013 11:08:36 +0200
Subject: [opam-devel] broken stats on opam.ocaml.org
In-Reply-To: <0EF79BD8-09EC-484A-AC60-0C19B138FF05@recoil.org>
References: <17070123.ScRCY62EH8@agaric> <4096298.R09DoZETao@agaric>
 <0EF79BD8-09EC-484A-AC60-0C19B138FF05@recoil.org>
Message-ID: <39505348.43aMuNka60@agaric>

Ok, there was another point going wrong, I synched the access log, but without restarting nginx ; since nginx keeps the log file open, it was writing new entries in the middle of the file...
Hopefully all sorted now

Le lundi 21 octobre 2013 13:46:59 Anil Madhavapeddy a ?crit :
> Great!  The only other thing that would be nice is a redirect to some of the key pages on opam.ocamlpro.com  (such as the Quick_Install), since they are widely linked from elsewhere on the web.  If these could be served as a permanent redirect to the new site, that would ease migration, rather than giving users lots of 404s...
> 
> -anil
> 
> On 18 Oct 2013, at 18:10, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> 
> > Ok, I've turned nginx https on, and disabled stud. The logs look ok now, and the stats should be good.
> >  
> > I also noticed that some client weren't redirected to the new repo yet, because the opam-admin on ocamlpro.com wasn'nt up to date (it wouldn't know about the repo file, and not notify to download it). That's fixed and everyone using 1.1 should be redirected now.
> >  
> > Le vendredi 18 octobre 2013 12:57:48 Anil Madhavapeddy a ?crit :
> > > On Fri, Oct 18, 2013 at 01:50:28PM +0200, Louis Gesbert wrote:
> > > > the stats are generated from the http log. Since monday, the hits are
> > > > all logged by nginx as coming from 127.0.0.1, which obviously breaks the
> > > > stats :/ Any idea on how the configuration (proxying etc.) may cause
> > > > this and possible solutions ?
> > > 
> > > Good point -- we're using Stud:
> > > https://github.com/bumptech/stud
> > > 
> > > It has support for something that solves our problem:
> > > > stud will optionally write the client IP address as the first few octets
> > > > (depending on IPv4 or IPv6) to the backend--or provide that information
> > > > using HAProxy's PROXY protocol. When used with the PROXY protocol, stud
> > > > can also transparently pass an existing PROXY header to the cleartext
> > > > stream. This is especially useful if a TCP proxy is used in front of stud.
> > > > Using either of these techniques, backends who care about the client IP
> > > > can still access it even though stud itself appears to be the connected
> > > > client.
> > > 
> > > But...what static web server is opam.ocaml.org using?  If it's nginx, then
> > > it should already have support for this, or we could configure it to serve
> > > SSL traffic directly...
> > > 
> > > 
> 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20131022/a6b1f44b/attachment-0001.html>

From louis.gesbert at ocamlpro.com  Tue Oct 22 15:33:40 2013
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Tue, 22 Oct 2013 16:33:40 +0200
Subject: [opam-devel] Packages specific to 1.1
Message-ID: <8756963.1Fd3Fz4KLT@agaric>

The master branch of github/ocaml/opam-repository is now served only on opam.ocaml.org, while the opam-1.0 branch continues to be served on opam.ocamlpro.com.

Since 1.1 clients are redirected to the new server and all 1.0 clients should still be on opam.ocamlpro.com (unless manually changed), it is now safe to accept 1.1 PRs.

Enjoy ! ;)
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20131022/eb37ff3d/attachment.html>

From thomas.gazagnaire at gmail.com  Tue Oct 22 15:44:29 2013
From: thomas.gazagnaire at gmail.com (Thomas Gazagnaire)
Date: Tue, 22 Oct 2013 16:44:29 +0200
Subject: [opam-devel] Packages specific to 1.1
In-Reply-To: <8756963.1Fd3Fz4KLT@agaric>
References: <8756963.1Fd3Fz4KLT@agaric>
Message-ID: <632C399D-ED3D-4DFF-9F94-13D0A3C9B8D8@gmail.com>

> The master branch of github/ocaml/opam-repository is now served only on opam.ocaml.org, while the opam-1.0 branch continues to be served on opam.ocamlpro.com.
>  
> Since 1.1 clients are redirected to the new server and all 1.0 clients should still be on opam.ocamlpro.com (unless manually changed), it is now safe to accept 1.1 PRs.
>  
> Enjoy ! ;)

Cool!

Now the next step is to make ocamlot/travis understand OPAM version constraints :-)



From louis.gesbert at ocamlpro.com  Tue Oct 22 15:50:39 2013
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Tue, 22 Oct 2013 16:50:39 +0200
Subject: [opam-devel] Packages specific to 1.1
In-Reply-To: <632C399D-ED3D-4DFF-9F94-13D0A3C9B8D8@gmail.com>
References: <8756963.1Fd3Fz4KLT@agaric>
 <632C399D-ED3D-4DFF-9F94-13D0A3C9B8D8@gmail.com>
Message-ID: <2147285.TCdiSWamWm@agaric>

Le mardi 22 octobre 2013 16:44:29 Thomas Gazagnaire a ?crit :
> > The master branch of github/ocaml/opam-repository is now served only on opam.ocaml.org, while the opam-1.0 branch continues to be served on opam.ocamlpro.com.
> >  
> > Since 1.1 clients are redirected to the new server and all 1.0 clients should still be on opam.ocamlpro.com (unless manually changed), it is now safe to accept 1.1 PRs.
> >  
> > Enjoy ! ;)
> 
> Cool!
> 
> Now the next step is to make ocamlot/travis understand OPAM version constraints :-)
> 
> 

Maybe a different return value for "impossible install due to constraints" versus "installation error" would be enough to help a bit ?
Or is this already the case ? -- a "RETURN VALUE" man section would be good then.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20131022/438e3afc/attachment.html>

From thomas at gazagnaire.org  Tue Oct 22 15:56:58 2013
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Tue, 22 Oct 2013 16:56:58 +0200
Subject: [opam-devel] Packages specific to 1.1
In-Reply-To: <8756963.1Fd3Fz4KLT@agaric>
References: <8756963.1Fd3Fz4KLT@agaric>
Message-ID: <A845B6BB-DA03-4F19-8C6B-CBC56A383E9F@gazagnaire.org>

> Since 1.1 clients are redirected to the new server and all 1.0 clients should still be on opam.ocamlpro.com (unless manually changed), it is now safe to accept 1.1 PRs.

Done, all PR which were queued have been pulled in.

--
Thomas

From louis.gesbert at ocamlpro.com  Thu Oct 24 20:00:16 2013
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Thu, 24 Oct 2013 21:00:16 +0200
Subject: [opam-devel] Official OPAM source repository moved
Message-ID: <15035838.WnUYDRg4y5@agaric>

We are glad to announce that, in an effort to make things more uniform under the ocaml.org portal, the OPAM source repository has been moved to github.com/ocaml/opam.git, alongside the package repository (opam-repository.git).

Github will continue automatically redirecting github.com/OCamlPro/opam.git, so you probably don't need to change much, but you may want to update your .git/config for the new remote on your local OPAM git clone.

Handling of issues and pull-request won't otherwise be changed.

Cheers,
Louis Gesbert -- OCamlPro

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20131024/327f398d/attachment.html>

From anil at recoil.org  Thu Oct 31 12:40:42 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 31 Oct 2013 12:40:42 +0000
Subject: [opam-devel] opam binary snapshot
In-Reply-To: <CANvDa5h6BVGGjRPyQHjG92pW_tf+TNkt9PxTQ2=JRD7JmgnuGQ@mail.gmail.com>
References: <CANvDa5h6BVGGjRPyQHjG92pW_tf+TNkt9PxTQ2=JRD7JmgnuGQ@mail.gmail.com>
Message-ID: <63CD3615-20DC-4109-BBFD-4CBE2259C4AD@recoil.org>

On 15 Oct 2013, at 00:36, Mika Illouz <mika at illouz.net> wrote:

> Our current system involves packaging up OCaml stuff as
> debian packages, and distributing them to ubuntu clients in binary
> form via a internal debian repo.  This gets the ocaml dependencies
> necessary to build stuff, even to those don't develop in ocaml, with
> minimal cognitive overload.  
> 
> Some of my colleagues think that distributing ocaml dependencies in
> binary form is ultimately more stable.  I am wondering whether I can
> satisfy them, with a solution that somehow exports as binary snapshot
> of everything under ~/.opam/4.01/  .  One idea is to define a debian
> package for a blessed ~/.opam/4.01/ , and export it via our internal
> debian repo.  Another idea is just export it to clients via rsync, or
> some other shared global storage. 

[Ccing opam-devel and also Citrix/Rackspace folk, as this came up
last week in XenSummit).

In general, I'd like to figure out how to use OPAM to build RPMs and
Debs just as easily as it can currently do ocamlfind installations.
In the short-term, I suspect that if you use a system compiler and
have enough external dependency information in the OPAM repository,
we could get away with quite a lot by tarring up the .opam directory.

This has also been a frequent request for teaching purposes, so I'd
like to experiment with version controlling .opam -- this would just
require hooks when adding/creating files in the subdirectory hierarchy,
although it would probably be too slow to shell out every time
(Thomas' cagit OCaml library may come in useful here).

Dave/Jon/John, any thoughts on this?

-anil

From sylvain+ocaml at le-gall.net  Thu Oct 31 13:36:32 2013
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Thu, 31 Oct 2013 14:36:32 +0100
Subject: [opam-devel] opam binary snapshot
In-Reply-To: <63CD3615-20DC-4109-BBFD-4CBE2259C4AD@recoil.org>
References: <CANvDa5h6BVGGjRPyQHjG92pW_tf+TNkt9PxTQ2=JRD7JmgnuGQ@mail.gmail.com>
 <63CD3615-20DC-4109-BBFD-4CBE2259C4AD@recoil.org>
Message-ID: <CAOCAUGOWXSFKjk18GHPHfUVg1TU2f6_iKP=BRashu3Ag2iEtBA@mail.gmail.com>

Hi,

2013/10/31 Anil Madhavapeddy <anil at recoil.org>:
> On 15 Oct 2013, at 00:36, Mika Illouz <mika at illouz.net> wrote:
>
>> Our current system involves packaging up OCaml stuff as
>> debian packages, and distributing them to ubuntu clients in binary
>> form via a internal debian repo.  This gets the ocaml dependencies
>> necessary to build stuff, even to those don't develop in ocaml, with
>> minimal cognitive overload.
>>

<as usual, shameless plug>Most of my libraries use _oasis and I use
oasis2debian to create and distribute Debian packages which really
look like what you get from standard Debian distribution (I am a
former Debian Developer). I think it is a great idea but it has some
shortcomings, including the need to rebuild everything if a deps in
the chain change... but we can discuss this elsewhere.</as usual,
shameless plug>

>> Some of my colleagues think that distributing ocaml dependencies in
>> binary form is ultimately more stable.  I am wondering whether I can
>> satisfy them, with a solution that somehow exports as binary snapshot
>> of everything under ~/.opam/4.01/  .  One idea is to define a debian
>> package for a blessed ~/.opam/4.01/ , and export it via our internal
>> debian repo.  Another idea is just export it to clients via rsync, or
>> some other shared global storage.
>
> [Ccing opam-devel and also Citrix/Rackspace folk, as this came up
> last week in XenSummit).
>
> In general, I'd like to figure out how to use OPAM to build RPMs and
> Debs just as easily as it can currently do ocamlfind installations.
> In the short-term, I suspect that if you use a system compiler and
> have enough external dependency information in the OPAM repository,
> we could get away with quite a lot by tarring up the .opam directory.
>

In fact, I also need a tool like this. I was planning to create an
opam2debian that given a set of packages build a big .deb containing
the compiled OCaml code. I am extremly interested to see if something
exists or to participate in coding it (well I'll do it at one point
but won't complain if someone else does it).

But rather than targeting ~/.opam/4.01 it should be installed in
/opt/opam/4.01, I think there is an OPAMROOT variable somewhere. This
way you can get stable filename in your target (because "~" will
expand differently and some OCaml packages use hardcoded path).

Another interesting challenge is to "fake" the filesystem to make OPAM
and the underlying build system install in
$CURDIR/debian/tmp/opt/opam/4.01, while it thinks it install in
/opt/opam/4.01 (system call diversion may work for most installer).
And also fake ACL for that (but we have fakeroot in this case).

Concerning just taring the .opam, you will have anyway problem with
"~" path expansion + missing deps...

If someone want this program, count me in.

> This has also been a frequent request for teaching purposes, so I'd
> like to experiment with version controlling .opam -- this would just
> require hooks when adding/creating files in the subdirectory hierarchy,
> although it would probably be too slow to shell out every time
> (Thomas' cagit OCaml library may come in useful here).
>
> Dave/Jon/John, any thoughts on this?
>


Cheers
Sylvain

From jonathan.ludlam at eu.citrix.com  Thu Oct 31 13:24:34 2013
From: jonathan.ludlam at eu.citrix.com (Jon Ludlam)
Date: Thu, 31 Oct 2013 13:24:34 +0000
Subject: [opam-devel] opam binary snapshot
In-Reply-To: <63CD3615-20DC-4109-BBFD-4CBE2259C4AD@recoil.org>
References: <CANvDa5h6BVGGjRPyQHjG92pW_tf+TNkt9PxTQ2=JRD7JmgnuGQ@mail.gmail.com>
 <63CD3615-20DC-4109-BBFD-4CBE2259C4AD@recoil.org>
Message-ID: <52725A12.4010202@eu.citrix.com>

On 31/10/13 12:40, Anil Madhavapeddy wrote:
> On 15 Oct 2013, at 00:36, Mika Illouz <mika at illouz.net> wrote:
>
>> Our current system involves packaging up OCaml stuff as
>> debian packages, and distributing them to ubuntu clients in binary
>> form via a internal debian repo.  This gets the ocaml dependencies
>> necessary to build stuff, even to those don't develop in ocaml, with
>> minimal cognitive overload.  
>>
>> Some of my colleagues think that distributing ocaml dependencies in
>> binary form is ultimately more stable.  I am wondering whether I can
>> satisfy them, with a solution that somehow exports as binary snapshot
>> of everything under ~/.opam/4.01/  .  One idea is to define a debian
>> package for a blessed ~/.opam/4.01/ , and export it via our internal
>> debian repo.  Another idea is just export it to clients via rsync, or
>> some other shared global storage. 
> [Ccing opam-devel and also Citrix/Rackspace folk, as this came up
> last week in XenSummit).
>
> In general, I'd like to figure out how to use OPAM to build RPMs and
> Debs just as easily as it can currently do ocamlfind installations.
> In the short-term, I suspect that if you use a system compiler and
> have enough external dependency information in the OPAM repository,
> we could get away with quite a lot by tarring up the .opam directory.
>
> This has also been a frequent request for teaching purposes, so I'd
> like to experiment with version controlling .opam -- this would just
> require hooks when adding/creating files in the subdirectory hierarchy,
> although it would probably be too slow to shell out every time
> (Thomas' cagit OCaml library may come in useful here).
>
> Dave/Jon/John, any thoughts on this?
>
> -anil

RPMs/debs would definitely be nice. There would be a problem doing this
right now as you'd have to do some sort of two pass thing to get the
list of files installed by the package, which is required for both RPMs
and debs.

One slightly odd thing about tarring up the .opam directory is that it's
usually something that lives in a user's home directory. I wonder if any
of the packages might have hard-coded paths in there which would mean
having to install it into exactly the same place - so requiring the same
user. I guess a quick grep through the .opam dir would tell you this.

Jon



From fabrice.le_fessant at ocamlpro.com  Thu Oct 31 14:01:49 2013
From: fabrice.le_fessant at ocamlpro.com (Fabrice Le Fessant)
Date: Thu, 31 Oct 2013 15:01:49 +0100
Subject: [opam-devel] opam binary snapshot
In-Reply-To: <63CD3615-20DC-4109-BBFD-4CBE2259C4AD@recoil.org>
References: <CANvDa5h6BVGGjRPyQHjG92pW_tf+TNkt9PxTQ2=JRD7JmgnuGQ@mail.gmail.com>
 <63CD3615-20DC-4109-BBFD-4CBE2259C4AD@recoil.org>
Message-ID: <CAHvkLrN1iEimXUEpM1O8rc8aM0EAd0BkbCMMZ_KyNq8KsvRTSQ@mail.gmail.com>

Is it important to target RPMs and DEBs, or would it be enough to have
binary packages _inside_ opam ? i.e. "opam install MYPACKAGE" would
install binary versions instead of source versions of MYPACKAGE and
all its dependencies ?

At OCamlPro, we have already been experimenting with this idea, so if
it is what you are looking for, and we can gather a set of sponsors to
fund turning the prototype into stable software, it would be a nice
addition to OPAM...
--Fabrice


On Thu, Oct 31, 2013 at 1:40 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> On 15 Oct 2013, at 00:36, Mika Illouz <mika at illouz.net> wrote:
>
>> Our current system involves packaging up OCaml stuff as
>> debian packages, and distributing them to ubuntu clients in binary
>> form via a internal debian repo.  This gets the ocaml dependencies
>> necessary to build stuff, even to those don't develop in ocaml, with
>> minimal cognitive overload.
>>
>> Some of my colleagues think that distributing ocaml dependencies in
>> binary form is ultimately more stable.  I am wondering whether I can
>> satisfy them, with a solution that somehow exports as binary snapshot
>> of everything under ~/.opam/4.01/  .  One idea is to define a debian
>> package for a blessed ~/.opam/4.01/ , and export it via our internal
>> debian repo.  Another idea is just export it to clients via rsync, or
>> some other shared global storage.
>
> [Ccing opam-devel and also Citrix/Rackspace folk, as this came up
> last week in XenSummit).
>
> In general, I'd like to figure out how to use OPAM to build RPMs and
> Debs just as easily as it can currently do ocamlfind installations.
> In the short-term, I suspect that if you use a system compiler and
> have enough external dependency information in the OPAM repository,
> we could get away with quite a lot by tarring up the .opam directory.
>
> This has also been a frequent request for teaching purposes, so I'd
> like to experiment with version controlling .opam -- this would just
> require hooks when adding/creating files in the subdirectory hierarchy,
> although it would probably be too slow to shell out every time
> (Thomas' cagit OCaml library may come in useful here).
>
> Dave/Jon/John, any thoughts on this?
>
> -anil
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel



-- 
Fabrice LE FESSANT
Scientific Advisor, OCamlPro SAS

From sylvain+ocaml at le-gall.net  Thu Oct 31 15:35:46 2013
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Thu, 31 Oct 2013 16:35:46 +0100
Subject: [opam-devel] opam binary snapshot
In-Reply-To: <52725A12.4010202@eu.citrix.com>
References: <CANvDa5h6BVGGjRPyQHjG92pW_tf+TNkt9PxTQ2=JRD7JmgnuGQ@mail.gmail.com>
 <63CD3615-20DC-4109-BBFD-4CBE2259C4AD@recoil.org>
 <52725A12.4010202@eu.citrix.com>
Message-ID: <CAOCAUGMdE3fKhJahjmEcReh674MyvWUmuC1OxBZVPMjffgfLdw@mail.gmail.com>

2013/10/31 Jon Ludlam <jonathan.ludlam at eu.citrix.com>:
> On 31/10/13 12:40, Anil Madhavapeddy wrote:
>> On 15 Oct 2013, at 00:36, Mika Illouz <mika at illouz.net> wrote:
>>
>>> Our current system involves packaging up OCaml stuff as
>>> debian packages, and distributing them to ubuntu clients in binary
>>> form via a internal debian repo.  This gets the ocaml dependencies
>>> necessary to build stuff, even to those don't develop in ocaml, with
>>> minimal cognitive overload.
>>>
>>> Some of my colleagues think that distributing ocaml dependencies in
>>> binary form is ultimately more stable.  I am wondering whether I can
>>> satisfy them, with a solution that somehow exports as binary snapshot
>>> of everything under ~/.opam/4.01/  .  One idea is to define a debian
>>> package for a blessed ~/.opam/4.01/ , and export it via our internal
>>> debian repo.  Another idea is just export it to clients via rsync, or
>>> some other shared global storage.
>> [Ccing opam-devel and also Citrix/Rackspace folk, as this came up
>> last week in XenSummit).
>>
>> In general, I'd like to figure out how to use OPAM to build RPMs and
>> Debs just as easily as it can currently do ocamlfind installations.
>> In the short-term, I suspect that if you use a system compiler and
>> have enough external dependency information in the OPAM repository,
>> we could get away with quite a lot by tarring up the .opam directory.
>>
>> This has also been a frequent request for teaching purposes, so I'd
>> like to experiment with version controlling .opam -- this would just
>> require hooks when adding/creating files in the subdirectory hierarchy,
>> although it would probably be too slow to shell out every time
>> (Thomas' cagit OCaml library may come in useful here).
>>
>> Dave/Jon/John, any thoughts on this?
>>
>> -anil
>
> RPMs/debs would definitely be nice. There would be a problem doing this
> right now as you'd have to do some sort of two pass thing to get the
> list of files installed by the package, which is required for both RPMs
> and debs.
>

You don't need the list of files for a Debian package.... You don't
even need the dependencies, since it is auto-computed (except for
depending on executable, but this is a minor annoyance, lib deps are
computed).

Maybe you are talking about directly generating a binary .deb ? (like
directly an ar archive, but that is super tricky to do)

> One slightly odd thing about tarring up the .opam directory is that it's
> usually something that lives in a user's home directory. I wonder if any
> of the packages might have hard-coded paths in there which would mean
> having to install it into exactly the same place - so requiring the same
> user. I guess a quick grep through the .opam dir would tell you this.
>

Packages use hard coded paths. Most of the things that loads data in
fact (just an example: camomile). When the software has already gone
through a Debian packaging process, you should have a reliable
DESTDIR, but that is not 100% sure.

Regards
Sylvain

From sylvain+ocaml at le-gall.net  Thu Oct 31 22:07:21 2013
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Thu, 31 Oct 2013 23:07:21 +0100
Subject: [opam-devel] opam binary snapshot
In-Reply-To: <CAOCAUGOWXSFKjk18GHPHfUVg1TU2f6_iKP=BRashu3Ag2iEtBA@mail.gmail.com>
References: <CANvDa5h6BVGGjRPyQHjG92pW_tf+TNkt9PxTQ2=JRD7JmgnuGQ@mail.gmail.com>
 <63CD3615-20DC-4109-BBFD-4CBE2259C4AD@recoil.org>
 <CAOCAUGOWXSFKjk18GHPHfUVg1TU2f6_iKP=BRashu3Ag2iEtBA@mail.gmail.com>
Message-ID: <CAOCAUGMD-fShc0QKdObqEbB6BZTDgRE99NxZJtvjfK8EpZGD3A@mail.gmail.com>

I could not resist the temptation to start the project:
https://github.com/gildor478/opam2debian

I have the answer to all my question and a way to create a debian
archive with an opam installation that use a constant path (no "~" in
path, I use proot to simulate a bind mount in the user space).

Expect some announcement when I will have a first release.

Cheers
Sylvain



2013/10/31 Sylvain Le Gall <sylvain+ocaml at le-gall.net>:
> Hi,
>
> 2013/10/31 Anil Madhavapeddy <anil at recoil.org>:
>> On 15 Oct 2013, at 00:36, Mika Illouz <mika at illouz.net> wrote:
>>
>>> Our current system involves packaging up OCaml stuff as
>>> debian packages, and distributing them to ubuntu clients in binary
>>> form via a internal debian repo.  This gets the ocaml dependencies
>>> necessary to build stuff, even to those don't develop in ocaml, with
>>> minimal cognitive overload.
>>>
>
> <as usual, shameless plug>Most of my libraries use _oasis and I use
> oasis2debian to create and distribute Debian packages which really
> look like what you get from standard Debian distribution (I am a
> former Debian Developer). I think it is a great idea but it has some
> shortcomings, including the need to rebuild everything if a deps in
> the chain change... but we can discuss this elsewhere.</as usual,
> shameless plug>
>
>>> Some of my colleagues think that distributing ocaml dependencies in
>>> binary form is ultimately more stable.  I am wondering whether I can
>>> satisfy them, with a solution that somehow exports as binary snapshot
>>> of everything under ~/.opam/4.01/  .  One idea is to define a debian
>>> package for a blessed ~/.opam/4.01/ , and export it via our internal
>>> debian repo.  Another idea is just export it to clients via rsync, or
>>> some other shared global storage.
>>
>> [Ccing opam-devel and also Citrix/Rackspace folk, as this came up
>> last week in XenSummit).
>>
>> In general, I'd like to figure out how to use OPAM to build RPMs and
>> Debs just as easily as it can currently do ocamlfind installations.
>> In the short-term, I suspect that if you use a system compiler and
>> have enough external dependency information in the OPAM repository,
>> we could get away with quite a lot by tarring up the .opam directory.
>>
>
> In fact, I also need a tool like this. I was planning to create an
> opam2debian that given a set of packages build a big .deb containing
> the compiled OCaml code. I am extremly interested to see if something
> exists or to participate in coding it (well I'll do it at one point
> but won't complain if someone else does it).
>
> But rather than targeting ~/.opam/4.01 it should be installed in
> /opt/opam/4.01, I think there is an OPAMROOT variable somewhere. This
> way you can get stable filename in your target (because "~" will
> expand differently and some OCaml packages use hardcoded path).
>
> Another interesting challenge is to "fake" the filesystem to make OPAM
> and the underlying build system install in
> $CURDIR/debian/tmp/opt/opam/4.01, while it thinks it install in
> /opt/opam/4.01 (system call diversion may work for most installer).
> And also fake ACL for that (but we have fakeroot in this case).
>
> Concerning just taring the .opam, you will have anyway problem with
> "~" path expansion + missing deps...
>
> If someone want this program, count me in.
>
>> This has also been a frequent request for teaching purposes, so I'd
>> like to experiment with version controlling .opam -- this would just
>> require hooks when adding/creating files in the subdirectory hierarchy,
>> although it would probably be too slow to shell out every time
>> (Thomas' cagit OCaml library may come in useful here).
>>
>> Dave/Jon/John, any thoughts on this?
>>
>
>
> Cheers
> Sylvain

