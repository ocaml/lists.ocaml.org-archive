From anil at recoil.org  Fri May 10 15:49:39 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 10 May 2013 10:49:39 -0400
Subject: [opam-devel] Fwd: About installing OPAM on Fedora Linux
References: <CAPMXOOyCg_QZKtg3wUCyo=ohf_5HrqzgWjROp1dcZ-95JB9eEw@mail.gmail.com>
Message-ID: <43C47D2E-138F-44C9-99A0-F449EE0F3F0E@recoil.org>

Redirecting to the correct e-mail list.

Begin forwarded message:

> From: George Thomas <gmt.gthomas at gmail.com>
> Subject: About installing OPAM on Fedora Linux
> Date: 7 May 2013 20:26:16 EDT
> To: opam-devel-owner at lists.ocaml.org
> 
> I searched for this information an this was the best I could find:
> 
> http://wiki.xen.org/wiki/XCP_Building_Instructions
> 
> This link is obviously targeted for CentOS 6.3 and steps along these lines fails for Fedora.
> 
> Can you please point me to the steps for installing OPAM on a Fedora Linux system?
> 
> Thanks,
> George

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130510/a7ad823e/attachment.html>

From thomas at ocamlpro.com  Mon May 13 08:31:29 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Mon, 13 May 2013 09:31:29 +0200
Subject: [opam-devel] Fwd: About installing OPAM on Fedora Linux
In-Reply-To: <43C47D2E-138F-44C9-99A0-F449EE0F3F0E@recoil.org>
References: <CAPMXOOyCg_QZKtg3wUCyo=ohf_5HrqzgWjROp1dcZ-95JB9eEw@mail.gmail.com>
 <43C47D2E-138F-44C9-99A0-F449EE0F3F0E@recoil.org>
Message-ID: <D8ED94BC-D7CB-4D3B-8307-BAB3F8D61F28@ocamlpro.com>

I guess the easiest way is to install from sources.

git clone git://github.com/OCamlPro/opam.git
cd opam
./configure && make && make install


On May 10, 2013, at 4:49 PM, Anil Madhavapeddy wrote:

> Redirecting to the correct e-mail list.
> 
> Begin forwarded message:
> 
>> From: George Thomas <gmt.gthomas at gmail.com>
>> Subject: About installing OPAM on Fedora Linux
>> Date: 7 May 2013 20:26:16 EDT
>> To: opam-devel-owner at lists.ocaml.org
>> 
>> I searched for this information an this was the best I could find:
>> 
>> http://wiki.xen.org/wiki/XCP_Building_Instructions
>> 
>> This link is obviously targeted for CentOS 6.3 and steps along these lines fails for Fedora.
>> 
>> Can you please point me to the steps for installing OPAM on a Fedora Linux system?
>> 
>> Thanks,
>> George
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From thomas at ocamlpro.com  Mon May 13 10:37:05 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Mon, 13 May 2013 11:37:05 +0200
Subject: [opam-devel] license update
Message-ID: <589B40C5-9696-4DEC-A3DA-020FE636DD9B@ocamlpro.com>

Hi,

I've updated the license of OPAM from GPL to LGPL+linking exception.

https://github.com/OCamlPro/opam/issues/612

The goal is to have more third-party libraries using the OPAM API directly, instead of calling the command-line, the first one of these being the automated test system for the OCaml plateform (https://github.com/ocamllabs/ocamlot).

Best,
Thomas 

From anil at recoil.org  Mon May 13 10:44:03 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 13 May 2013 10:44:03 +0100
Subject: [opam-devel] license update
In-Reply-To: <589B40C5-9696-4DEC-A3DA-020FE636DD9B@ocamlpro.com>
References: <589B40C5-9696-4DEC-A3DA-020FE636DD9B@ocamlpro.com>
Message-ID: <98CF2D97-5B3A-435C-9808-031CE0D01127@recoil.org>

On 13 May 2013, at 10:37, Thomas Gazagnaire <thomas at ocamlpro.com> wrote:

> Hi,
> 
> I've updated the license of OPAM from GPL to LGPL+linking exception.
> 
> https://github.com/OCamlPro/opam/issues/612
> 
> The goal is to have more third-party libraries using the OPAM API directly, instead of calling the command-line, the first one of these being the automated test system for the OCaml plateform (https://github.com/ocamllabs/ocamlot).

Thanks for this switch Thomas, it makes 3rd party development much easier.

David Sheets has been hacking away at bringing OCamlot live, and now has a command-line tool that can merge pull requests and try them locally.  He'll have more details after a little more work, but you can see the first message from the buildbot in this Core pull request:

https://github.com/OCamlPro/opam-repository/pull/693

-anil

From agarwal1975 at gmail.com  Mon May 13 15:03:56 2013
From: agarwal1975 at gmail.com (Ashish Agarwal)
Date: Mon, 13 May 2013 10:03:56 -0400
Subject: [opam-devel] license update
In-Reply-To: <589B40C5-9696-4DEC-A3DA-020FE636DD9B@ocamlpro.com>
References: <589B40C5-9696-4DEC-A3DA-020FE636DD9B@ocamlpro.com>
Message-ID: <CAMu2m2LKXm1M4icjVkW-=1sCWkYNhK_S6H1jFgHuhrJ6ROEDtA@mail.gmail.com>

Thanks! I think this is quite important.

On Mon, May 13, 2013 at 5:37 AM, Thomas Gazagnaire <thomas at ocamlpro.com>wrote:

> Hi,
>
> I've updated the license of OPAM from GPL to LGPL+linking exception.
>
> https://github.com/OCamlPro/opam/issues/612
>
> The goal is to have more third-party libraries using the OPAM API
> directly, instead of calling the command-line, the first one of these being
> the automated test system for the OCaml plateform (
> https://github.com/ocamllabs/ocamlot).
>
> Best,
> Thomas
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20130513/b32ceb42/attachment.html>

From thomas at ocamlpro.com  Fri May 17 14:10:29 2013
From: thomas at ocamlpro.com (Thomas Gazagnaire)
Date: Fri, 17 May 2013 15:10:29 +0200
Subject: [opam-devel] new branch merged
Message-ID: <CE9BBAE3-C8C2-4E85-A415-0CC299573187@ocamlpro.com>

Hi,

I've just merged a new branch in the main OPAM tree, which should greatly improve 'opam update' speed. Normally everything should work fine (unit-tests are passing and I'm using regularly on my machine without getting problems), but if you see some weirdness which seems related to these patches, please do not hesitate to report them on https://github.com/OCamlPro/opam/issues.

This branch also contains a new opamVCS functor [1] which should help creating new repository backends based on VCS. 

That was the last big change I wanted to make in 1.0.1. So now, I'll look and fix the last minor issues reported on the bug tracker (the ones with the 1.0.* milestone)  and try to make a release in the next couple of weeks.

Best,
Thomas

[1] https://github.com/OCamlPro/opam/blob/master/src/repositories/opamVCS.mli

From daniel.buenzli at erratique.ch  Thu May 30 13:01:43 2013
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Thu, 30 May 2013 13:01:43 +0100
Subject: [opam-devel] Does pin git:// really make sense ?
Message-ID: <B453B22B585A4C8086BABF63C8DE632D@erratique.ch>

If I understand correctly if I pin a package on a git url, it uses the last known description of the corresponding package to try to build the package. If that's the correct I think it doesn't make sense in general. Concrete example at the end of this email.

Shouldn't there be some mechanism so that it can get the opam file from the git repo itself ?  

But then at that point the distinction between git repo and package becomes quite small and they could be merged as this could drastically simplify the distribution process (versions would just point to a specific git  commit, and things like ocamlpro's opam repository would reference them). I mean in my world a distribution is just a checkout + transformation applied on the result [1]. I wouldn't mind stopping distributing tarballs and have all the info in the git repository.

Also another issue about pin is that the version mentioned in `opam list` lies it should really try to use `git describe`. In my opam unstable repo which has only git packages and specific build instructions for building directly from the git checkout I use repo for the version name, this implies that `opam list` tells `repo` and I use `git describe` in the build instruction so that `ocamlfind list` tells me precisely which version is installed.  

Note that with the time this two-headed structure opam/ocamlfind seems stranger and stranger and I wonder if the tools should not merge at a certain point.  

Daniel

[1] This could however be a little bit more problematic for distributions that contain generated data that's a little bit painful to generate on each client (like uunf http://erratique.ch/software/uunf who needs to extract data from the unicode character database and substitute it in the source code before making a distribution, though that could be checked in another "derived" repo)


> opam pin ocp-indent git://github.com/OCamlPro/ocp-indent.git
> opam install ocp-indent
The following actions will be performed:
- install ocp-indent.1.2.0
1 to install | 0 to reinstall | 0 to upgrade | 0 to downgrade | 0 to remove
? Installing ocp-indent.1.2.0  
Synchronizing ~/.opam/4.00.1/pinned.cache/ocp-indent with git://github.com/OCamlPro/ocp-indent.git.
Applying warnings.patch.
The compilation of ocp-indent.1.2.0 failed.
Uninstalling ocp-indent.1.2.0:
./configure --prefix /Users/dbuenzli/.opam/4.00.1
make uninstall
==== ERROR [while installing ocp-indent.1.2.0] ====
Internal error:
Cannot find /Users/dbuenzli/.opam/4.00.1/build/ocp-indent.1.2.0/warnings.patch.
'opam install ocp-indent' failed.




From daniel.buenzli at erratique.ch  Thu May 30 13:40:59 2013
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Thu, 30 May 2013 13:40:59 +0100
Subject: [opam-devel] Does pin git:// really make sense ?
In-Reply-To: <B453B22B585A4C8086BABF63C8DE632D@erratique.ch>
References: <B453B22B585A4C8086BABF63C8DE632D@erratique.ch>
Message-ID: <AAC703C409414B1D900DE5F3580384AA@erratique.ch>

Le jeudi, 30 mai 2013 ? 13:01, Daniel B?nzli a ?crit :
> Shouldn't there be some mechanism so that it can get the opam file from the git repo itself ?

Specifically what I mean by that is that in the git repo of we have  

opam/versions # maps versions git commits/tags
opam/descr     # descr file for the specific checkout  
opam/opam     # opam file for the specific checkout


This means that when you want to release you tag or lookup a specific commit and add it to opam/versions and make a new commit -m 'Publishing vX.X.X' so that HEAD has all the versions and let opam or whatever workflow in place do the rest. Et voil?. Yes I'm very lazy.

Best,

Daniel

From anil at recoil.org  Thu May 30 13:59:54 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 30 May 2013 13:59:54 +0100
Subject: [opam-devel] Does pin git:// really make sense ?
In-Reply-To: <B453B22B585A4C8086BABF63C8DE632D@erratique.ch>
References: <B453B22B585A4C8086BABF63C8DE632D@erratique.ch>
Message-ID: <36FD71F1-B5E8-4E17-9708-295098BC28AB@recoil.org>

The purpose of separating the source (from git) from the version number (in the package description or pin command) is to let the developer control constraints better.

Pinning a newer version can result in recompilations due to dependent package constraints changing, so it's useful to be able to specify the version number during the pin.

Merging ocamlfind/OPAM/oasis in the long-term makes sense, but OPAM in its current incarnation is very much a wrapper for all these other build and packaging systems.  This will improve in time...

-anil

On 30 May 2013, at 13:01, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:

> If I understand correctly if I pin a package on a git url, it uses the last known description of the corresponding package to try to build the package. If that's the correct I think it doesn't make sense in general. Concrete example at the end of this email.
> 
> Shouldn't there be some mechanism so that it can get the opam file from the git repo itself ?  
> 
> But then at that point the distinction between git repo and package becomes quite small and they could be merged as this could drastically simplify the distribution process (versions would just point to a specific git  commit, and things like ocamlpro's opam repository would reference them). I mean in my world a distribution is just a checkout + transformation applied on the result [1]. I wouldn't mind stopping distributing tarballs and have all the info in the git repository.
> 
> Also another issue about pin is that the version mentioned in `opam list` lies it should really try to use `git describe`. In my opam unstable repo which has only git packages and specific build instructions for building directly from the git checkout I use repo for the version name, this implies that `opam list` tells `repo` and I use `git describe` in the build instruction so that `ocamlfind list` tells me precisely which version is installed.  
> 
> Note that with the time this two-headed structure opam/ocamlfind seems stranger and stranger and I wonder if the tools should not merge at a certain point.  
> 
> Daniel
> 
> [1] This could however be a little bit more problematic for distributions that contain generated data that's a little bit painful to generate on each client (like uunf http://erratique.ch/software/uunf who needs to extract data from the unicode character database and substitute it in the source code before making a distribution, though that could be checked in another "derived" repo)
> 
> 
>> opam pin ocp-indent git://github.com/OCamlPro/ocp-indent.git
>> opam install ocp-indent
> The following actions will be performed:
> - install ocp-indent.1.2.0
> 1 to install | 0 to reinstall | 0 to upgrade | 0 to downgrade | 0 to remove
> ? Installing ocp-indent.1.2.0  
> Synchronizing ~/.opam/4.00.1/pinned.cache/ocp-indent with git://github.com/OCamlPro/ocp-indent.git.
> Applying warnings.patch.
> The compilation of ocp-indent.1.2.0 failed.
> Uninstalling ocp-indent.1.2.0:
> ./configure --prefix /Users/dbuenzli/.opam/4.00.1
> make uninstall
> ==== ERROR [while installing ocp-indent.1.2.0] ====
> Internal error:
> Cannot find /Users/dbuenzli/.opam/4.00.1/build/ocp-indent.1.2.0/warnings.patch.
> 'opam install ocp-indent' failed.
> 
> 
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From daniel.buenzli at erratique.ch  Thu May 30 14:24:07 2013
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Thu, 30 May 2013 14:24:07 +0100
Subject: [opam-devel] Does pin git:// really make sense ?
In-Reply-To: <36FD71F1-B5E8-4E17-9708-295098BC28AB@recoil.org>
References: <B453B22B585A4C8086BABF63C8DE632D@erratique.ch>
 <36FD71F1-B5E8-4E17-9708-295098BC28AB@recoil.org>
Message-ID: <C9C2BFCD7CC147F2818578A547AF33CB@erratique.ch>


> The purpose of separating the source (from git) from the version number (in the package description or pin command) is to let the developer control constraints better.

I'm not sure I understand what you mean here. Basically the only thing I propose is to version the package descriptions in the source themselves and allow a checkout of HEAD to be able to figure out (from the file opam/versions) how to get to a specific version of the sources (and corresponding package descriptions).
 
> Pinning a newer version can result in recompilations due to dependent package constraints changing, so it's useful to be able to specify the version number during the pin.

 
Here again I don't see how this is related to what I say, I didn't say "I don't want to be able to pin a package to a specific version" I said that in the current state of opam using pin with a git url is a fundamentally broken idea as it assumes that the checkout should be built the same way as the last package version opam has. 

Daniel

From anil at recoil.org  Thu May 30 14:45:00 2013
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 30 May 2013 14:45:00 +0100
Subject: [opam-devel] Does pin git:// really make sense ?
In-Reply-To: <C9C2BFCD7CC147F2818578A547AF33CB@erratique.ch>
References: <B453B22B585A4C8086BABF63C8DE632D@erratique.ch>
 <36FD71F1-B5E8-4E17-9708-295098BC28AB@recoil.org>
 <C9C2BFCD7CC147F2818578A547AF33CB@erratique.ch>
Message-ID: <15D319DA-87B0-4312-AB26-8743524FB2C6@recoil.org>

On 30 May 2013, at 14:24, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:

> 
>> The purpose of separating the source (from git) from the version number (in the package description or pin command) is to let the developer control constraints better.
> 
> I'm not sure I understand what you mean here. Basically the only thing I propose is to version the package descriptions in the source themselves and allow a checkout of HEAD to be able to figure out (from the file opam/versions) how to get to a specific version of the sources (and corresponding package descriptions).
> 
>> Pinning a newer version can result in recompilations due to dependent package constraints changing, so it's useful to be able to specify the version number during the pin.
> 
> 
> Here again I don't see how this is related to what I say, I didn't say "I don't want to be able to pin a package to a specific version" I said that in the current state of opam using pin with a git url is a fundamentally broken idea as it assumes that the checkout should be built the same way as the last package version opam has. 
> 

That's precisely what it's intended to do. It's easy to extend the pin to add version numbers too (which may already be in trunk).  i.e.

$ opam pin atdgen.1.2.3 git://github.com/mjambon/atdgen

which would ensure that the 1.2.3 constraints are used with the source from the git remote.

What you want sounds like the job for an OPAM remote such as:
https://github.com/xen-org/opam-repo-dev

...where there a high-versioned packages with the latest constraints and dependencies for the master branch.  When a release is cut, the directory is transplanted into the main OPAM repository.

E.g.: https://github.com/OCamlPro/opam-repository/pull/762 (which came from Xen's opam-repo-dev).

Why not just use the existing OPAM facility for multiple package repositories (including local ones) instead of complicating the core?

-anil

From daniel.buenzli at erratique.ch  Thu May 30 14:50:10 2013
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Thu, 30 May 2013 14:50:10 +0100
Subject: [opam-devel] Does pin git:// really make sense ?
In-Reply-To: <C9C2BFCD7CC147F2818578A547AF33CB@erratique.ch>
References: <B453B22B585A4C8086BABF63C8DE632D@erratique.ch>
 <36FD71F1-B5E8-4E17-9708-295098BC28AB@recoil.org>
 <C9C2BFCD7CC147F2818578A547AF33CB@erratique.ch>
Message-ID: <A3375F5BBEC44201BBEB57D692B1C1F1@erratique.ch>

Le jeudi, 30 mai 2013 ? 14:24, Daniel B?nzli a ?crit :
> Here again I don't see how this is related to what I say, I didn't say "I don't want to be able to pin a package to a specific version" I said that in the current state of opam using pin with a git url is a fundamentally broken idea as it assumes that the checkout should be built the same way as the last package version opam has.

Btw. the same could be said about packages that have git urls instead of tarballs. The `opam` file to build the package could get out of sync w.r.t. to how the checkout expects to be build.

My proposal was about a way to automatically keep these things synchronized at a single source (the git repo itself).  

Best,

Daniel



From daniel.buenzli at erratique.ch  Thu May 30 15:35:24 2013
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Thu, 30 May 2013 15:35:24 +0100
Subject: [opam-devel] Does pin git:// really make sense ?
In-Reply-To: <15D319DA-87B0-4312-AB26-8743524FB2C6@recoil.org>
References: <B453B22B585A4C8086BABF63C8DE632D@erratique.ch>
 <36FD71F1-B5E8-4E17-9708-295098BC28AB@recoil.org>
 <C9C2BFCD7CC147F2818578A547AF33CB@erratique.ch>
 <15D319DA-87B0-4312-AB26-8743524FB2C6@recoil.org>
Message-ID: <33FC631BC6DA4434972E0ADC9652117F@erratique.ch>

Le jeudi, 30 mai 2013 ? 14:45, Anil Madhavapeddy a ?crit :
> That's precisely what it's intended to do. It's easy to extend the pin to add version numbers too (which may already be in trunk). i.e.
>  
> $ opam pin atdgen.1.2.3 git://github.com/mjambon/atdgen (http://github.com/mjambon/atdgen)
>  
> which would ensure that the 1.2.3 constraints are used with the source from the git remote.

If that's what its intended to do why not. I still think that it is quite confusing since the whole system will tell you that you installed 1.2.3 while it's not and as witnessed in my first email, it doesn't seem to work well in practice.  
   
> What you want sounds like the job for an OPAM remote such as:
> https://github.com/xen-org/opam-repo-dev

Actually what I want at the moment is an easy way to install the repo version of ocp-indent. I guess since it doesn't install at the moment with pin the package description will have to be updated anyway. The idea is to avoid these things of becoming desynchronized.

  
> Why not just use the existing OPAM facility for multiple package repositories (including local ones) instead of complicating the core?

Because it's overkill for what I want to do now. And in fact I think these ideas could have lead to simpler workflows (to distribute your software just tell people to `opam add-pkg url-to-git-repo`) and a simpler design for opam (suppress the notion of opam repository, leaving only the notion of package and if your package descriptions differ from what upstream provides you fork the package with an automatic rebase on pull).  

Daniel

