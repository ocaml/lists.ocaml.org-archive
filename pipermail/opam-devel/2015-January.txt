From anil at recoil.org  Fri Jan  2 19:24:07 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 2 Jan 2015 19:24:07 +0000
Subject: [opam-devel] opam installext packaged up
In-Reply-To: <6074971C-4BD4-4537-A5E6-4E07354E5B95@ocamlpro.com>
References: <B7505806-AA3B-4699-BFF2-4900C650825C@recoil.org>
 <12bd36a5834798f320a765f5e939eb48@whitequark.org>
 <DBC4EABA-2B89-4048-8D06-279536CDAAF6@recoil.org>
 <6c4ccd733a1df4c819228a4f6fcc852c@whitequark.org>
 <6074971C-4BD4-4537-A5E6-4E07354E5B95@ocamlpro.com>
Message-ID: <4BAC6913-7029-495D-9C71-CA71148D79A8@recoil.org>

Awesome!  I've just cut an installext.1.0.1 with some fixes for Debian and CentOS detection (thanks to Dave Scott for the latter).
https://github.com/ocaml/opam-repository/pull/3309

I think we should maintain both a shell script and an OCaml-based distro detection, since they are both of use in different contexts (installation vs programmatic use in OPAM).

How about turning the distro detection logic into a separate library called os-identify, and then opam-installext can just become a thin shell on top of that?  For now though, if you have no objection I'll move avsm/opam-installext under the ocaml/ org since it's used by a lot of the bulk build scripts already.

I'm CCing xen-api at lists.xen.org, as the Citrix folk may be interested in having the OCaml library as well...

-anil

> On 28 Dec 2014, at 03:10, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> 
> Let's synchronize our efforts! I've been doing the same but in OCaml recently; not handling as many archs though.
> 
> https://github.com/AltGr/opam-installext
> 
> Le 28 d?cembre 2014 06:06:50 UTC+09:00, Peter Zotov <whitequark at whitequark.org> a ?crit :
>> On 2014-12-28 00:01, Anil Madhavapeddy wrote:
>>> On 27 Dec 2014, at 19:36, Peter Zotov <whitequark at whitequark.org> 
>>> wrote:
>>>> 
>>>> On 2014-12-27 22:20, Anil Madhavapeddy wrote:
>>>>> Hi,
>>>>> I've been cleaning up some of the bulk building infrastructure, and
>> 
>>>>> so
>>>>> have packaged up opam-installext into an OPAM package as Thomas
>>>>> Gazagnaire suggested a while back:
>>>>> https://github.com/ocaml/opam-repository/pull/3296
>>>> 
>>>> Nice! The next step is tighter integration with OPAM...
>>> 
>>> Yep -- I just wanted to get all the hacky shell script and OS distro
>>> detection stuff into a package first, since that will really benefit
>>> from a wider contribution base.  I couldn't find anything out there
>>> for doing distro detection from shell scripts -- does anyone know of
>>> an existing tool to replace the `configure` script in
>> opam-installext?
>> 
>> To my knowledge, the mechanism you're using is about the best you can 
>> do.
> 


From whitequark at whitequark.org  Fri Jan  2 19:28:32 2015
From: whitequark at whitequark.org (Peter Zotov)
Date: Fri, 02 Jan 2015 22:28:32 +0300
Subject: [opam-devel] opam installext packaged up
In-Reply-To: <4BAC6913-7029-495D-9C71-CA71148D79A8@recoil.org>
References: <B7505806-AA3B-4699-BFF2-4900C650825C@recoil.org>
 <12bd36a5834798f320a765f5e939eb48@whitequark.org>
 <DBC4EABA-2B89-4048-8D06-279536CDAAF6@recoil.org>
 <6c4ccd733a1df4c819228a4f6fcc852c@whitequark.org>
 <6074971C-4BD4-4537-A5E6-4E07354E5B95@ocamlpro.com>
 <4BAC6913-7029-495D-9C71-CA71148D79A8@recoil.org>
Message-ID: <58ab63e3c7d9498bea1efec9e6247e92@whitequark.org>

On 2015-01-02 22:24, Anil Madhavapeddy wrote:
> Awesome!  I've just cut an installext.1.0.1 with some fixes for Debian
> and CentOS detection (thanks to Dave Scott for the latter).
> https://github.com/ocaml/opam-repository/pull/3309
> 
> I think we should maintain both a shell script and an OCaml-based
> distro detection, since they are both of use in different contexts
> (installation vs programmatic use in OPAM).
> 
> How about turning the distro detection logic into a separate library
> called os-identify, and then opam-installext can just become a thin
> shell on top of that?  For now though, if you have no objection I'll
> move avsm/opam-installext under the ocaml/ org since it's used by a
> lot of the bulk build scripts already.

In my view installext should become an integral component of OPAM 
itself.

-- 
Peter Zotov

From anil at recoil.org  Fri Jan  2 19:39:24 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 2 Jan 2015 19:39:24 +0000
Subject: [opam-devel] opam installext packaged up
In-Reply-To: <58ab63e3c7d9498bea1efec9e6247e92@whitequark.org>
References: <B7505806-AA3B-4699-BFF2-4900C650825C@recoil.org>
 <12bd36a5834798f320a765f5e939eb48@whitequark.org>
 <DBC4EABA-2B89-4048-8D06-279536CDAAF6@recoil.org>
 <6c4ccd733a1df4c819228a4f6fcc852c@whitequark.org>
 <6074971C-4BD4-4537-A5E6-4E07354E5B95@ocamlpro.com>
 <4BAC6913-7029-495D-9C71-CA71148D79A8@recoil.org>
 <58ab63e3c7d9498bea1efec9e6247e92@whitequark.org>
Message-ID: <F1888E2C-DAD9-4295-A2E8-F2F56DBCECC7@recoil.org>

On 2 Jan 2015, at 19:28, Peter Zotov <whitequark at whitequark.org> wrote:
> 
> On 2015-01-02 22:24, Anil Madhavapeddy wrote:
>> Awesome!  I've just cut an installext.1.0.1 with some fixes for Debian
>> and CentOS detection (thanks to Dave Scott for the latter).
>> https://github.com/ocaml/opam-repository/pull/3309
>> I think we should maintain both a shell script and an OCaml-based
>> distro detection, since they are both of use in different contexts
>> (installation vs programmatic use in OPAM).
>> How about turning the distro detection logic into a separate library
>> called os-identify, and then opam-installext can just become a thin
>> shell on top of that?  For now though, if you have no objection I'll
>> move avsm/opam-installext under the ocaml/ org since it's used by a
>> lot of the bulk build scripts already.
> 
> In my view installext should become an integral component of OPAM itself.

This doesn't preclude all the OS detection logic becoming a separate
library (that also happens to be bundled with OPAM).

-anil

From louis.gesbert at ocamlpro.com  Mon Jan  5 08:36:38 2015
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 05 Jan 2015 17:36:38 +0900
Subject: [opam-devel] 'provides' field design proposal
Message-ID: <2734976.AqEKh5MclU@agaric>

Hi all, and happy new year !

I just added to opam a design proposal to open discussion on the implementation of the 'provides' field and its use-cases.

It's at https://github.com/ocaml/opam/blob/master/doc/design/provides.md

Cheers,
Louis

From anil at recoil.org  Tue Jan  6 15:39:18 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 6 Jan 2015 15:39:18 +0000
Subject: [opam-devel] 'provides' field design proposal
In-Reply-To: <2734976.AqEKh5MclU@agaric>
References: <2734976.AqEKh5MclU@agaric>
Message-ID: <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org>

Looks great, Louis!  My immediate thoughts:

- This does have the potential to complicating pinning quite a lot, which
 needs to be balanced against the better upgrade messages.  Do you think 
 this will need a package selection priority the way that apt-pinning in
 Debian works (e.g. so that ocaml-tls can be selected ahead of openssl-tls
 for the TLS package).

- The forking and providing replacements would be really useful for Mirage,
 where we're having an active discussion about how to provide Xen-specific
 versions of certain packages such as Zarith.  Thomas (with any surname),
 opinions on this?

- How much damage will this do to the internal solver heuristics?

-anil

> On 5 Jan 2015, at 08:36, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> 
> Hi all, and happy new year !
> 
> I just added to opam a design proposal to open discussion on the implementation of the 'provides' field and its use-cases.
> 
> It's at https://github.com/ocaml/opam/blob/master/doc/design/provides.md
> 
> Cheers,
> Louis
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From thomas at gazagnaire.org  Tue Jan  6 15:49:58 2015
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Tue, 6 Jan 2015 15:49:58 +0000
Subject: [opam-devel] [MirageOS-devel] 'provides' field design proposal
In-Reply-To: <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org>
References: <2734976.AqEKh5MclU@agaric>
 <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org>
Message-ID: <CC62F49D-6C2E-412B-BD2C-15C06634F880@gazagnaire.org>

Thanks Louis for the great summary!

> - The forking and providing replacements would be really useful for Mirage,
> where we're having an active discussion about how to provide Xen-specific
> versions of certain packages such as Zarith.  Thomas (with any surname),
> opinions on this? 

My opinion: I was very keen to have this feature on the bug tracker, but with all the designs details in mind I'm much less keen now. It introduces a lot of complexity with pinning so would be nice to see what we can simplify. For instance, maybe we could forbid virtual packages - and pin only to real packages. Need to think a bit more about that.

a more meta comments: if we put design files in the repo (I'm not very fond of that, but why not), could we have a header specifying the status of the document (ie. draft, partially implemented, deprecated, etc...) and the target opam versions. And keep that up-to-date please.

Thanks,
Thomas 


> 
> - How much damage will this do to the internal solver heuristics?
> 
> -anil
> 
>> On 5 Jan 2015, at 08:36, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
>> 
>> Hi all, and happy new year !
>> 
>> I just added to opam a design proposal to open discussion on the implementation of the 'provides' field and its use-cases.
>> 
>> It's at https://github.com/ocaml/opam/blob/master/doc/design/provides.md
>> 
>> Cheers,
>> Louis
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
>> 
> 
> 
> _______________________________________________
> MirageOS-devel mailing list
> MirageOS-devel at lists.xenproject.org
> http://lists.xenproject.org/cgi-bin/mailman/listinfo/mirageos-devel


From roberto at dicosmo.org  Tue Jan  6 16:06:44 2015
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Tue, 6 Jan 2015 17:06:44 +0100
Subject: [opam-devel] 'provides' field design proposal
In-Reply-To: <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org>
References: <2734976.AqEKh5MclU@agaric>
 <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org>
Message-ID: <20150106160644.GB30821@traveler>

Dear Louis,
     best whishes for a happy new 2015!

Thanks for sharing this proposal: it's quite well argumented,
and allows to discuss the new issues nicely.

Here is some info that will be useful in evolving the proposal:

 - CUDF already supports provides, so the mechanics inside Dose to
   handle them are all in place already. 

 - Notice that Debian did not have versioned provides, so when
   a versioned dependency was present, only real packages needed
   to be considered https://www.debian.org/doc/debian-policy/ch-relationships.html#s-virtual
   Encoding this policy in CUDF required some nonobvious gymnastics
   that is implemented in the Dose code for handling Debian packages.

   Implementing directly versioned provides as you suggest will make
   the encoding in CUDF straightforward, even if we might stumble upon some
   little tested code here, but well, we'll be quick at fixing
   any issues that may emerge

 - I do not see a real semantic confusion between "provides" and "features", but
   I am not against using "traits" (or "variants") if it seems clearer

 - To address Anil's concerns: provides are just a very convenient way for
   expressing disjunctions in a modular way, and they are actually expanded
   as disjunctions for the solvers, so I do not foresee any performance issue,
   unless we heavily abuse this features

--
Roberto


On Tue, Jan 06, 2015 at 03:39:18PM +0000, Anil Madhavapeddy wrote:
> Looks great, Louis!  My immediate thoughts:
> 
> - This does have the potential to complicating pinning quite a lot, which
>  needs to be balanced against the better upgrade messages.  Do you think 
>  this will need a package selection priority the way that apt-pinning in
>  Debian works (e.g. so that ocaml-tls can be selected ahead of openssl-tls
>  for the TLS package).
> 
> - The forking and providing replacements would be really useful for Mirage,
>  where we're having an active discussion about how to provide Xen-specific
>  versions of certain packages such as Zarith.  Thomas (with any surname),
>  opinions on this?
> 
> - How much damage will this do to the internal solver heuristics?
> 
> -anil
> 
> > On 5 Jan 2015, at 08:36, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> > 
> > Hi all, and happy new year !
> > 
> > I just added to opam a design proposal to open discussion on the implementation of the 'provides' field and its use-cases.
> > 
> > It's at https://github.com/ocaml/opam/blob/master/doc/design/provides.md
> > 
> > Cheers,
> > Louis
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
> > 
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 3020 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        

From anil at recoil.org  Tue Jan  6 16:21:00 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 6 Jan 2015 16:21:00 +0000
Subject: [opam-devel] 'provides' field design proposal
In-Reply-To: <20150106160644.GB30821@traveler>
References: <2734976.AqEKh5MclU@agaric>
 <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org>
 <20150106160644.GB30821@traveler>
Message-ID: <C78BA840-288E-42B4-A0FB-184241A454ED@recoil.org>

On 6 Jan 2015, at 16:06, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
> 
> Dear Louis,
>     best whishes for a happy new 2015!
> 
> Thanks for sharing this proposal: it's quite well argumented,
> and allows to discuss the new issues nicely.
> 
> Here is some info that will be useful in evolving the proposal:
> 
> - CUDF already supports provides, so the mechanics inside Dose to
>   handle them are all in place already. 
> 
> - Notice that Debian did not have versioned provides, so when
>   a versioned dependency was present, only real packages needed
>   to be considered https://www.debian.org/doc/debian-policy/ch-relationships.html#s-virtual
>   Encoding this policy in CUDF required some nonobvious gymnastics
>   that is implemented in the Dose code for handling Debian packages.
> 
>   Implementing directly versioned provides as you suggest will make
>   the encoding in CUDF straightforward, even if we might stumble upon some
>   little tested code here, but well, we'll be quick at fixing
>   any issues that may emerge
> 
> - I do not see a real semantic confusion between "provides" and "features", but
>   I am not against using "traits" (or "variants") if it seems clearer
> 
> - To address Anil's concerns: provides are just a very convenient way for
>   expressing disjunctions in a modular way, and they are actually expanded
>   as disjunctions for the solvers, so I do not foresee any performance issue,
>   unless we heavily abuse this features

Thanks -- any guidance on not abusing this feature is most welcome or it
will inevitably happen ;-)

In general, we have a growing number of virtual packages in Mirage that
make depopts concrete dependencies.  For example, 'mirage-types-lwt', and
I'm considering adding a 'cohttp-lwt' and 'cohttp-async' package to make
those easier to depend on as well.

Provides would potentially invert a lot of this logic, since we could have
some virtual packages instead of lots of depopts.  Still not really sure if
this would work without more thought/experiments though...

Anil

From Dave.Scott at citrix.com  Tue Jan  6 18:27:14 2015
From: Dave.Scott at citrix.com (Dave Scott)
Date: Tue, 6 Jan 2015 18:27:14 +0000
Subject: [opam-devel] [MirageOS-devel] 'provides' field design proposal
In-Reply-To: <CC62F49D-6C2E-412B-BD2C-15C06634F880@gazagnaire.org>
References: <2734976.AqEKh5MclU@agaric>
 <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org>
 <CC62F49D-6C2E-412B-BD2C-15C06634F880@gazagnaire.org>
Message-ID: <B45FC0B5-9110-4D07-9870-6B069AB699E7@citrix.com>


> On 6 Jan 2015, at 15:49, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:
> 
> Thanks Louis for the great summary!
> 
>> - The forking and providing replacements would be really useful for Mirage,
>> where we're having an active discussion about how to provide Xen-specific
>> versions of certain packages such as Zarith.  Thomas (with any surname),
>> opinions on this? 
> 
> My opinion: I was very keen to have this feature on the bug tracker, but with all the designs details in mind I'm much less keen now. It introduces a lot of complexity with pinning so would be nice to see what we can simplify. For instance, maybe we could forbid virtual packages - and pin only to real packages. Need to think a bit more about that.
> 
> a more meta comments: if we put design files in the repo (I'm not very fond of that, but why not), could we have a header specifying the status of the document (ie. draft, partially implemented, deprecated, etc...) and the target opam versions. And keep that up-to-date please.

FYI over in the xapi-project we?ve been experimenting with putting design docs in a central github repo and having github render them nicely e.g.

http://xapi-project.github.io/design-docs/index.html

We stick a header on top like

---
title: thin LVHD storage
layout: default
design_doc: true
revision: 1
status: proposed
?

and have a design doc index template

https://github.com/xapi-project/xapi-project.github.io/blob/master/_layouts/design_docs_list.html

So far it?s working quite well for us.

Cheers,
Dave

> 
> Thanks,
> Thomas 
> 
> 
>> 
>> - How much damage will this do to the internal solver heuristics?
>> 
>> -anil
>> 
>>> On 5 Jan 2015, at 08:36, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
>>> 
>>> Hi all, and happy new year !
>>> 
>>> I just added to opam a design proposal to open discussion on the implementation of the 'provides' field and its use-cases.
>>> 
>>> It's at https://github.com/ocaml/opam/blob/master/doc/design/provides.md
>>> 
>>> Cheers,
>>> Louis
>>> _______________________________________________
>>> opam-devel mailing list
>>> opam-devel at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/opam-devel
>>> 
>> 
>> 
>> _______________________________________________
>> MirageOS-devel mailing list
>> MirageOS-devel at lists.xenproject.org
>> http://lists.xenproject.org/cgi-bin/mailman/listinfo/mirageos-devel
> 
> 
> _______________________________________________
> MirageOS-devel mailing list
> MirageOS-devel at lists.xenproject.org
> http://lists.xenproject.org/cgi-bin/mailman/listinfo/mirageos-devel


From anil at recoil.org  Tue Jan  6 18:32:13 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 6 Jan 2015 18:32:13 +0000
Subject: [opam-devel] [MirageOS-devel] 'provides' field design proposal
In-Reply-To: <B45FC0B5-9110-4D07-9870-6B069AB699E7@citrix.com>
References: <2734976.AqEKh5MclU@agaric>
 <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org>
 <CC62F49D-6C2E-412B-BD2C-15C06634F880@gazagnaire.org>
 <B45FC0B5-9110-4D07-9870-6B069AB699E7@citrix.com>
Message-ID: <54A81F49-F15E-4E21-8B98-0C76B960DFB0@recoil.org>

On 6 Jan 2015, at 18:27, Dave Scott <Dave.Scott at citrix.com> wrote:
> 
> 
>> On 6 Jan 2015, at 15:49, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:
>> 
>> Thanks Louis for the great summary!
>> 
>>> - The forking and providing replacements would be really useful for Mirage,
>>> where we're having an active discussion about how to provide Xen-specific
>>> versions of certain packages such as Zarith.  Thomas (with any surname),
>>> opinions on this? 
>> 
>> My opinion: I was very keen to have this feature on the bug tracker, but with all the designs details in mind I'm much less keen now. It introduces a lot of complexity with pinning so would be nice to see what we can simplify. For instance, maybe we could forbid virtual packages - and pin only to real packages. Need to think a bit more about that.
>> 
>> a more meta comments: if we put design files in the repo (I'm not very fond of that, but why not), could we have a header specifying the status of the document (ie. draft, partially implemented, deprecated, etc...) and the target opam versions. And keep that up-to-date please.
> 
> FYI over in the xapi-project we?ve been experimenting with putting design docs in a central github repo and having github render them nicely e.g.
> 
> http://xapi-project.github.io/design-docs/index.html
> 
> We stick a header on top like
> 
> ---
> title: thin LVHD storage
> layout: default
> design_doc: true
> revision: 1
> status: proposed
> ?
> 
> and have a design doc index template
> 
> https://github.com/xapi-project/xapi-project.github.io/blob/master/_layouts/design_docs_list.html
> 
> So far it?s working quite well for us.

Oh wow, that's a lovely design!  I'm just doing a mini overhaul of the Real World OCaml commenting system that created GitHub issues from paragraphs -- I could imagine that fitting in quite well to let people leave comments and do spec review more easily.

-anil

From louis.gesbert at ocamlpro.com  Wed Jan  7 08:26:18 2015
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Wed, 07 Jan 2015 17:26:18 +0900
Subject: [opam-devel] 'provides' field design proposal
In-Reply-To: <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org>
References: <2734976.AqEKh5MclU@agaric>
 <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org>
Message-ID: <1571602.vAFOe9gNh3@agaric>

Some follow-ups, before updating the design document:

* On pinning: pinning a source clearly implies this is a concrete package (or becomes one); on the other hand, pinning a version should only be allowed for concrete packages. With this limitations I think we can sort it out without too much trouble. Since any virtual package has to be provided by some concrete package, you can always pin those, or create your own package with the same "provides" and pin it.

* internal heuristics: as Roberto pointed out, this his handled by Dose, so shouldn't be too much trouble either (but given the nature of this code, it's impossible to be sure at the moment). A rewrite to ORed depends is possible in the worst case, but adding a layer at that stage would probably mess up user messages ; it should really not be needed.

* checking concrete dependencies: not sure how that would be covered by 'provides', as it is the conjunction of several packages that provides the new one (cohttp + lwt => cohttp-lwt). It seems closer to the 'features' stuff, but you can't _depend_ on a feature with the current design (restricting features definitions to package formulas may make it possible though; I'll think about it)...
  Another possibility, maybe (but interaction with cudf would need to be carefully studied, because we are getting out of what is supported), would be to have additional formulas on 'provides':
  cohttp/ provides: [ "cohttp-lwt" { lwt } ]
  In terms of rewriting it doesn't seem much more difficult, virtual package cohttp-lwt would include ("cohttp" & "lwt") in its depends disjunction instead of just "cohttp". Anyway, we can easily leave that part for later.

* new question: if I have several packages providing Foo, should I recompile a package depending on Foo whenever one of them changes ? I'd say yes...

* Location of design documents: not sure at all this is best, because versionning of the design document (at least during the design phase) doesn't need to be synchronized with the source, but it has its advantages, and I don't like github's wikis much. Seemed more practical for something in-depth than just an issue. Do you suggest another option ? Adding headers is a good idea.

Cheers!
Louis

> - Anil Madhavapeddy, 06/01/2015 15:39 -
> Looks great, Louis!  My immediate thoughts:
> 
> - This does have the potential to complicating pinning quite a lot, which
>  needs to be balanced against the better upgrade messages.  Do you think 
>  this will need a package selection priority the way that apt-pinning in
>  Debian works (e.g. so that ocaml-tls can be selected ahead of openssl-tls
>  for the TLS package).
> 
> - The forking and providing replacements would be really useful for Mirage,
>  where we're having an active discussion about how to provide Xen-specific
>  versions of certain packages such as Zarith.  Thomas (with any surname),
>  opinions on this?
> 
> - How much damage will this do to the internal solver heuristics?
> 
> -anil
> 
> > On 5 Jan 2015, at 08:36, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> > 
> > Hi all, and happy new year !
> > 
> > I just added to opam a design proposal to open discussion on the implementation of the 'provides' field and its use-cases.
> > 
> > It's at https://github.com/ocaml/opam/blob/master/doc/design/provides.md
> > 
> > Cheers,
> > Louis
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
> > 

From thomas at gazagnaire.org  Wed Jan  7 09:09:10 2015
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Wed, 7 Jan 2015 09:09:10 +0000
Subject: [opam-devel] 'provides' field design proposal
In-Reply-To: <1571602.vAFOe9gNh3@agaric>
References: <2734976.AqEKh5MclU@agaric>
 <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org> <1571602.vAFOe9gNh3@agaric>
Message-ID: <D42DF089-AF41-42C0-A502-A83A4A7BF205@gazagnaire.org>

> * checking concrete dependencies: not sure how that would be covered by 'provides', as it is the conjunction of several packages that provides the new one (cohttp + lwt => cohttp-lwt). It seems closer to the 'features' stuff, but you can't _depend_ on a feature with the current design (restricting features definitions to package formulas may make it possible though; I'll think about it)...
>  Another possibility, maybe (but interaction with cudf would need to be carefully studied, because we are getting out of what is supported), would be to have additional formulas on 'provides':
>  cohttp/ provides: [ "cohttp-lwt" { lwt } ]
>  In terms of rewriting it doesn't seem much more difficult, virtual package cohttp-lwt would include ("cohttp" & "lwt") in its depends disjunction instead of just "cohttp". Anyway, we can easily leave that part for later.

Not sure I understand that part. Would it be simpler to always require that "provides" contains the name(s) of concrete package(s)? Supporting "virtual packages" means that we have 2 ways to do the same things: depots and provides. Which means it is harder to explain to the user what to use when.

I think the goal of "provides" should be "just" a simple way to provide slightly patched opam packages without requiring hackish pining, not a way to expose in the "provides" all the modules/implementations provided by an opam package (although it could be a good idea too, but I think should be kept out of the scope of that proposal).

Thomas

> 
> * new question: if I have several packages providing Foo, should I recompile a package depending on Foo whenever one of them changes ? I'd say yes...
> 
> * Location of design documents: not sure at all this is best, because versionning of the design document (at least during the design phase) doesn't need to be synchronized with the source, but it has its advantages, and I don't like github's wikis much. Seemed more practical for something in-depth than just an issue. Do you suggest another option ? Adding headers is a good idea.
> 
> Cheers!
> Louis
> 
>> - Anil Madhavapeddy, 06/01/2015 15:39 -
>> Looks great, Louis!  My immediate thoughts:
>> 
>> - This does have the potential to complicating pinning quite a lot, which
>> needs to be balanced against the better upgrade messages.  Do you think 
>> this will need a package selection priority the way that apt-pinning in
>> Debian works (e.g. so that ocaml-tls can be selected ahead of openssl-tls
>> for the TLS package).
>> 
>> - The forking and providing replacements would be really useful for Mirage,
>> where we're having an active discussion about how to provide Xen-specific
>> versions of certain packages such as Zarith.  Thomas (with any surname),
>> opinions on this?
>> 
>> - How much damage will this do to the internal solver heuristics?
>> 
>> -anil
>> 
>>> On 5 Jan 2015, at 08:36, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
>>> 
>>> Hi all, and happy new year !
>>> 
>>> I just added to opam a design proposal to open discussion on the implementation of the 'provides' field and its use-cases.
>>> 
>>> It's at https://github.com/ocaml/opam/blob/master/doc/design/provides.md
>>> 
>>> Cheers,
>>> Louis
>>> _______________________________________________
>>> opam-devel mailing list
>>> opam-devel at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/opam-devel
>>> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From thomas at gazagnaire.org  Wed Jan  7 09:11:14 2015
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Wed, 7 Jan 2015 09:11:14 +0000
Subject: [opam-devel] 'provides' field design proposal
In-Reply-To: <1571602.vAFOe9gNh3@agaric>
References: <2734976.AqEKh5MclU@agaric>
 <D077B74E-E55D-40A3-B047-893210721CA4@recoil.org> <1571602.vAFOe9gNh3@agaric>
Message-ID: <78512125-5781-46AB-9A70-D4489973430B@gazagnaire.org>

> * Location of design documents: not sure at all this is best, because versionning of the design document (at least during the design phase) doesn't need to be synchronized with the source, but it has its advantages, and I don't like github's wikis much. Seemed more practical for something in-depth than just an issue. Do you suggest another option ? Adding headers is a good idea.

repo + up-to-date headers is fine (and adding the right headers to other design spec as well)

Thomas


>> - Anil Madhavapeddy, 06/01/2015 15:39 -
>> Looks great, Louis!  My immediate thoughts:
>> 
>> - This does have the potential to complicating pinning quite a lot, which
>> needs to be balanced against the better upgrade messages.  Do you think 
>> this will need a package selection priority the way that apt-pinning in
>> Debian works (e.g. so that ocaml-tls can be selected ahead of openssl-tls
>> for the TLS package).
>> 
>> - The forking and providing replacements would be really useful for Mirage,
>> where we're having an active discussion about how to provide Xen-specific
>> versions of certain packages such as Zarith.  Thomas (with any surname),
>> opinions on this?
>> 
>> - How much damage will this do to the internal solver heuristics?
>> 
>> -anil
>> 
>>> On 5 Jan 2015, at 08:36, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
>>> 
>>> Hi all, and happy new year !
>>> 
>>> I just added to opam a design proposal to open discussion on the implementation of the 'provides' field and its use-cases.
>>> 
>>> It's at https://github.com/ocaml/opam/blob/master/doc/design/provides.md
>>> 
>>> Cheers,
>>> Louis
>>> _______________________________________________
>>> opam-devel mailing list
>>> opam-devel at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/opam-devel
>>> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From anil at recoil.org  Thu Jan  8 18:52:15 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 8 Jan 2015 18:52:15 +0000
Subject: [opam-devel] regular bulk builds: now with HTML output!
Message-ID: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>

Greetings! I've been cleaning up the bulk build infrastructure for OPAM and will have a blog post about it in a few days, but in the meanwhile I thought you might like to see the output:

http://www.recoil.org/~avsm/opam-bulk/ (temporary URL)

I intend to leave this building in a loop and put it online on http://ocamlot.ocaml.org so that we have a convenient reference for the overall build status.

It is also easy to deploy these build scripts for a particular package set (i.e. Mirage or Core) to test particular changes against, as well as resurrect David Sheets' triage scripts to automate the identification of why something went wrong.

-anil

From amc79 at cam.ac.uk  Thu Jan  8 19:49:27 2015
From: amc79 at cam.ac.uk (Amir Chaudhry)
Date: Thu, 8 Jan 2015 20:49:27 +0100
Subject: [opam-devel] [MirageOS-devel] regular bulk builds: now with
	HTML output!
In-Reply-To: <CAN2Hq04pX0JgfoqR17hhCLYMbrmsD8FvkgwefeawZgwPkszvCQ@mail.gmail.com>
References: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
 <CAN2Hq04pX0JgfoqR17hhCLYMbrmsD8FvkgwefeawZgwPkszvCQ@mail.gmail.com>
Message-ID: <7DA00B6F-F1A6-4EEA-AC9C-994BE2B15E07@cam.ac.uk>


On 8 Jan 2015, at 20:36, Richard Mortier <richard.mortier at cl.cam.ac.uk> wrote:

> On 8 January 2015 at 18:52, Anil Madhavapeddy <anil at recoil.org> wrote:
>> Greetings! I've been cleaning up the bulk build infrastructure for OPAM and will have a blog post about it in a few days, but in the meanwhile I thought you might like to see the output:
>> 
>> http://www.recoil.org/~avsm/opam-bulk/ (temporary URL)
>> 
>> I intend to leave this building in a loop and put it online on http://ocamlot.ocaml.org so that we have a convenient reference for the overall build status.
>> 
> 
> cool. making the package names links to their (github?) repo would be
> nice. might make it easier to investigate issues.

Links would be useful but I'm curious about your choice of URL for the final output.  Wouldn't it make more sense to keep it under the opam.ocaml.org domain?  Something like http://opam.ocaml.org/repo-status.  

Amir

From thomas at gazagnaire.org  Thu Jan  8 21:33:41 2015
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Thu, 8 Jan 2015 21:33:41 +0000
Subject: [opam-devel] regular bulk builds: now with HTML output!
In-Reply-To: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
References: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
Message-ID: <83D6C32B-608B-4918-80A6-D6BF60E534E8@gazagnaire.org>

That's great!!!

Now I want to hack on the CSS of http://www.recoil.org/~avsm/opam-bulk/logs/local-centos-7-ocaml-4.02.1/raw/git.html to make it look like more the Travis CI output :p
about the url: same as amir, not sure having an other domain name is necessary.

Thomas

> On 8 Jan 2015, at 18:52, Anil Madhavapeddy <anil at recoil.org> wrote:
> 
> Greetings! I've been cleaning up the bulk build infrastructure for OPAM and will have a blog post about it in a few days, but in the meanwhile I thought you might like to see the output:
> 
> http://www.recoil.org/~avsm/opam-bulk/ (temporary URL)
> 
> I intend to leave this building in a loop and put it online on http://ocamlot.ocaml.org so that we have a convenient reference for the overall build status.
> 
> It is also easy to deploy these build scripts for a particular package set (i.e. Mirage or Core) to test particular changes against, as well as resurrect David Sheets' triage scripts to automate the identification of why something went wrong.
> 
> -anil
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From anil at recoil.org  Thu Jan  8 23:12:14 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Thu, 8 Jan 2015 23:12:14 +0000
Subject: [opam-devel] [MirageOS-devel] regular bulk builds: now with
	HTML output!
In-Reply-To: <7DA00B6F-F1A6-4EEA-AC9C-994BE2B15E07@cam.ac.uk>
References: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
 <CAN2Hq04pX0JgfoqR17hhCLYMbrmsD8FvkgwefeawZgwPkszvCQ@mail.gmail.com>
 <7DA00B6F-F1A6-4EEA-AC9C-994BE2B15E07@cam.ac.uk>
Message-ID: <F42C2DB7-10BB-4AAD-8AA2-DF7070DEA00B@recoil.org>

On 8 Jan 2015, at 19:49, Amir Chaudhry <amc79 at cam.ac.uk> wrote:
> 
> 
> On 8 Jan 2015, at 20:36, Richard Mortier <richard.mortier at cl.cam.ac.uk> wrote:
> 
>> On 8 January 2015 at 18:52, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> Greetings! I've been cleaning up the bulk build infrastructure for OPAM and will have a blog post about it in a few days, but in the meanwhile I thought you might like to see the output:
>>> 
>>> http://www.recoil.org/~avsm/opam-bulk/ (temporary URL)
>>> 
>>> I intend to leave this building in a loop and put it online on http://ocamlot.ocaml.org so that we have a convenient reference for the overall build status.
>>> 
>> 
>> cool. making the package names links to their (github?) repo would be
>> nice. might make it easier to investigate issues.
> 
> Links would be useful but I'm curious about your choice of URL for the final output.  Wouldn't it make more sense to keep it under the opam.ocaml.org domain?  Something like http://opam.ocaml.org/repo-status.  

Good suggestions -- I've updated it to add the links where available now.  The logs are quite large, so I'm not sure that loading them into the opam.ocaml.org is a good idea -- but I'm sure we can make it fit with some VM resizing if necessary.

-anil


From richard.mortier at cl.cam.ac.uk  Thu Jan  8 19:36:30 2015
From: richard.mortier at cl.cam.ac.uk (Richard Mortier)
Date: Thu, 8 Jan 2015 19:36:30 +0000
Subject: [opam-devel] regular bulk builds: now with HTML output!
In-Reply-To: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
References: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
Message-ID: <CAN2Hq04pX0JgfoqR17hhCLYMbrmsD8FvkgwefeawZgwPkszvCQ@mail.gmail.com>

On 8 January 2015 at 18:52, Anil Madhavapeddy <anil at recoil.org> wrote:
> Greetings! I've been cleaning up the bulk build infrastructure for OPAM and will have a blog post about it in a few days, but in the meanwhile I thought you might like to see the output:
>
> http://www.recoil.org/~avsm/opam-bulk/ (temporary URL)
>
> I intend to leave this building in a loop and put it online on http://ocamlot.ocaml.org so that we have a convenient reference for the overall build status.
>

cool. making the package names links to their (github?) repo would be
nice. might make it easier to investigate issues.

-- 
Richard Mortier
richard.mortier at cl.cam.ac.uk

From yallop at gmail.com  Thu Jan  8 23:30:00 2015
From: yallop at gmail.com (Jeremy Yallop)
Date: Thu, 8 Jan 2015 23:30:00 +0000
Subject: [opam-devel] regular bulk builds: now with HTML output!
In-Reply-To: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
References: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
Message-ID: <CAAxsn=GV4yP=4kUtoyfMHqwF0=dVKR6ti+SdPqiO1L1WU1CDJg@mail.gmail.com>

On 8 January 2015 at 18:52, Anil Madhavapeddy <anil at recoil.org> wrote:
> Greetings! I've been cleaning up the bulk build infrastructure for OPAM and will have a blog post about it in a few days, but in the meanwhile I thought you might like to see the output:
>
> http://www.recoil.org/~avsm/opam-bulk/ (temporary URL)

Very nice indeed!  It's quite a leap in usability from the raw logs.

A few thoughts:

* displaying the "Sort by OS" / "Sort by Version" as tabs rather than
columns if possible would avoid showing everything twice.

* occasionally there's a failure due to what look like infrastructure
errors, e.g.
      http://www.recoil.org/~avsm/opam-bulk/logs/local-ubuntu-14.04-ocaml-4.01.0/raw/blahcaml.html
      http://www.recoil.org/~avsm/opam-bulk/logs/local-ubuntu-14.04-ocaml-4.01.0/raw/cmdliner.html
  it'd be good to distinguish these from actual build failures if possible.

* it might be useful to display the revision (perhaps the repository
commit id) somewhere --  perhaps in the URL, If there's a possibility
of keeping multiple log sets around.

From anil at recoil.org  Fri Jan  9 14:11:21 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 9 Jan 2015 14:11:21 +0000
Subject: [opam-devel] [MirageOS-devel] regular bulk builds: now with
	HTML output!
In-Reply-To: <CAAxsn=GV4yP=4kUtoyfMHqwF0=dVKR6ti+SdPqiO1L1WU1CDJg@mail.gmail.com>
References: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
 <CAAxsn=GV4yP=4kUtoyfMHqwF0=dVKR6ti+SdPqiO1L1WU1CDJg@mail.gmail.com>
Message-ID: <6969DEA9-E36E-4A98-9982-5AF808DCE54C@recoil.org>

On 8 Jan 2015, at 23:30, Jeremy Yallop <yallop at gmail.com> wrote:
> 
> On 8 January 2015 at 18:52, Anil Madhavapeddy <anil at recoil.org> wrote:
>> Greetings! I've been cleaning up the bulk build infrastructure for OPAM and will have a blog post about it in a few days, but in the meanwhile I thought you might like to see the output:
>> 
>> http://www.recoil.org/~avsm/opam-bulk/ (temporary URL)
> 
> Very nice indeed!  It's quite a leap in usability from the raw logs.
> 
> A few thoughts:
> 
> * displaying the "Sort by OS" / "Sort by Version" as tabs rather than
> columns if possible would avoid showing everything twice.

Absolutely.  Rather than continue to hack on this "rapidly put together"
HTML page, the next iteration will be based on the Zurb Foundation framework
and so use all the UI components from there (including tabs, pagination
and filtering by tags).  Volunteers for this are very welcome -- I can
document how the (rather simple) filesystem metadata works if anyone wants
to pull together a nicer frontend.

> 
> * occasionally there's a failure due to what look like infrastructure
> errors, e.g.
>      http://www.recoil.org/~avsm/opam-bulk/logs/local-ubuntu-14.04-ocaml-4.01.0/raw/blahcaml.html
>      http://www.recoil.org/~avsm/opam-bulk/logs/local-ubuntu-14.04-ocaml-4.01.0/raw/cmdliner.html
>  it'd be good to distinguish these from actual build failures if possible.

Getting Docker to work reliably has been challenging, even on a 
single host :-(  There doesn't seem to be a predictable error code from these
invocations, retrying is tricky.  I'm switching the scripts to BTRFS in case
that works out better.

> * it might be useful to display the revision (perhaps the repository
> commit id) somewhere --  perhaps in the URL, If there's a possibility
> of keeping multiple log sets around.

Yes agreed.  I'll put that into the next round of builds.  I also notice that
sometimes on Debian older revisions of packages are installed (and this happened
on the TLS stack a few times on is-mirage-broken as well).  Recording which
concrete versions got installed per OS would be a good step.

-anil

From andy.ray at ujamjar.com  Sat Jan 10 00:57:16 2015
From: andy.ray at ujamjar.com (Andy Ray)
Date: Sat, 10 Jan 2015 00:57:16 +0000
Subject: [opam-devel] [MirageOS-devel] regular bulk builds: now with
	HTML output!
In-Reply-To: <6969DEA9-E36E-4A98-9982-5AF808DCE54C@recoil.org>
References: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
 <CAAxsn=GV4yP=4kUtoyfMHqwF0=dVKR6ti+SdPqiO1L1WU1CDJg@mail.gmail.com>
 <6969DEA9-E36E-4A98-9982-5AF808DCE54C@recoil.org>
Message-ID: <CAHYOizHHJJH-DT1NXQGk2WyoTf612Rew3Fg+kuzsPio2GYeY2w@mail.gmail.com>

>
> Absolutely.  Rather than continue to hack on this "rapidly put together"
> HTML page, the next iteration will be based on the Zurb Foundation framework
> and so use all the UI components from there (including tabs, pagination
> and filtering by tags).  Volunteers for this are very welcome -- I can
> document how the (rather simple) filesystem metadata works if anyone wants
> to pull together a nicer frontend.
>


How about a (potentially dynamic) js_of_ocaml built interface?

-Andy

From anil at recoil.org  Sat Jan 10 10:41:38 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 10 Jan 2015 10:41:38 +0000
Subject: [opam-devel] [MirageOS-devel] regular bulk builds: now with
	HTML output!
In-Reply-To: <CAHYOizHHJJH-DT1NXQGk2WyoTf612Rew3Fg+kuzsPio2GYeY2w@mail.gmail.com>
References: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
 <CAAxsn=GV4yP=4kUtoyfMHqwF0=dVKR6ti+SdPqiO1L1WU1CDJg@mail.gmail.com>
 <6969DEA9-E36E-4A98-9982-5AF808DCE54C@recoil.org>
 <CAHYOizHHJJH-DT1NXQGk2WyoTf612Rew3Fg+kuzsPio2GYeY2w@mail.gmail.com>
Message-ID: <1E2DAE32-ED01-405B-A311-A150BDE47234@recoil.org>

On 10 Jan 2015, at 00:57, Andy Ray <andy.ray at ujamjar.com> wrote:
> 
>> 
>> Absolutely.  Rather than continue to hack on this "rapidly put together"
>> HTML page, the next iteration will be based on the Zurb Foundation framework
>> and so use all the UI components from there (including tabs, pagination
>> and filtering by tags).  Volunteers for this are very welcome -- I can
>> document how the (rather simple) filesystem metadata works if anyone wants
>> to pull together a nicer frontend.
> 
> How about a (potentially dynamic) js_of_ocaml built interface?

Yep, that would certainly be easy enough since most of the content are
already just static endpoints and so wouldn't be nearly as complex as the
URI rewriting required in the IOCaml server for IOCamlJS.

Any suggestions for js_of_ocaml-friendly HTML5 frameworks?  I really want
to try out React.js, so I might just take a shot at Semantic-UI and bind
js_of_ocaml/React to that. 

-anil

From andy.ray at ujamjar.com  Sat Jan 10 12:20:28 2015
From: andy.ray at ujamjar.com (Andy Ray)
Date: Sat, 10 Jan 2015 12:20:28 +0000
Subject: [opam-devel] [MirageOS-devel] regular bulk builds: now with
	HTML output!
In-Reply-To: <1E2DAE32-ED01-405B-A311-A150BDE47234@recoil.org>
References: <243EC830-6304-46FB-BEC7-117FD33D9E67@recoil.org>
 <CAAxsn=GV4yP=4kUtoyfMHqwF0=dVKR6ti+SdPqiO1L1WU1CDJg@mail.gmail.com>
 <6969DEA9-E36E-4A98-9982-5AF808DCE54C@recoil.org>
 <CAHYOizHHJJH-DT1NXQGk2WyoTf612Rew3Fg+kuzsPio2GYeY2w@mail.gmail.com>
 <1E2DAE32-ED01-405B-A311-A150BDE47234@recoil.org>
Message-ID: <CAHYOizH5vdGnhMaD1686J5bjkC6jWSppp-LKWp37UC-hDXUXPw@mail.gmail.com>

>> How about a (potentially dynamic) js_of_ocaml built interface?
>
> Yep, that would certainly be easy enough since most of the content are
> already just static endpoints and so wouldn't be nearly as complex as the
> URI rewriting required in the IOCaml server for IOCamlJS.


Yeah, I can't imagine you'd need any server side support, but a bit of
xmlHttpRequest client side may possibly make sense (ie loading a
tooltip with specific package version info or somesuch).  The logs
could also be displayed in page rather than on a link if you wanted.


> Any suggestions for js_of_ocaml-friendly HTML5 frameworks?  I really want
> to try out React.js, so I might just take a shot at Semantic-UI and bind
> js_of_ocaml/React to that.
>


I've only really played with bootstrap before - it was OK and did help
make the page mobile friendly.  Plus it's really only a layer of css
so fairly easy to use.

Semantic-UI looks like a big job to bind to, but maybe that's OK if
you are wanting to learn it as well.

-Andy

From anil at recoil.org  Sun Jan 18 21:11:23 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 18 Jan 2015 21:11:23 +0000
Subject: [opam-devel] [ocaml-platform] Secure OPAM?
In-Reply-To: <CAPFanBHVJvKwGOsy8zzrJc6QySiXqvQTwKoZurvOYkKJP5sBmg@mail.gmail.com>
References: <CAPFanBHVJvKwGOsy8zzrJc6QySiXqvQTwKoZurvOYkKJP5sBmg@mail.gmail.com>
Message-ID: <8E4BC1E0-8354-439D-A17B-93F3EB81D7D2@recoil.org>

[+opam-devel to CC]

On 17 Jan 2015, at 15:19, Gabriel Scherer <gabriel.scherer at gmail.com> wrote:
> 
> There is an excellent piece at LWN.net (do consider subscribing to
> this source of quality technical news) about a recent discussion in
> the Python community on how to "secure" their package manager
>  http://lwn.net/SubscriberLink/629426/bf933f7acea8466c/
> 
> The article discusses in particular a library called TUF (The Update
> Framework) that aims to help solve the problem in a
> package-manager-agnostic way.
>  http://theupdateframework.com/
> (this page has some other interesting links, eg. to a similar
> discussion in the Ruby community about RubyGems)
> 
> Is there a reference point to a discussion of the security aspects of
> the OPAM package manager? What I found so far is this 2013 issue by
> Edwin T?r?k on signing packages:
>  https://github.com/ocaml/opam/issues/423
> 
> As far as I know, the current status is that OPAM checks downloaded
> packages against the checksum in opam-repository, so it protects
> against an attacker changing upstream releases, assuming the
> opam-repository remains trusted and there is no man-in-the-middle
> (MITM) attack when the user downloads the metadata -- afaik it uses
> only HTTP currently.

This is certainly something that needs to go on the roadmap sooner
rather than later, and issue #423 is still the place to record
your opinions.

Having a signify-like model to let an OPAM mirroring script sign
distfiles would be a good first step, since the complexities of
managing a per-contributor signing infrastructure would be quite
significantly more work.

Note that the OPAM remote is HTTPS by default since OPAM 1.1.

-anil


From louis.gesbert at ocamlpro.com  Mon Jan 19 02:07:05 2015
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 19 Jan 2015 11:07:05 +0900
Subject: [opam-devel] [ocaml-platform] Secure OPAM?
In-Reply-To: <8E4BC1E0-8354-439D-A17B-93F3EB81D7D2@recoil.org>
References: <CAPFanBHVJvKwGOsy8zzrJc6QySiXqvQTwKoZurvOYkKJP5sBmg@mail.gmail.com>
 <8E4BC1E0-8354-439D-A17B-93F3EB81D7D2@recoil.org>
Message-ID: <67700007.i8AoPAFe9Q@agaric>

Indeed, we'd better get some security concerns before it becomes an issue ;

Let me point what feels like weak areas at the moment:
* No restriction on what the package scripts can do (other than running as user). Not writing outside of the switch prefix would be a good start, but that's more a concern of preventing mistakes than real security since you install executable code there anyway.
* No repo or package signing. What we have at the moment is only:
  - metadata downloaded through HTTPS (no specific certificate constraint)
  - checksums on client-downloaded metadata (MD5, generated on the server by opam-admin)
  - (non-mandatory) MD5 checksums on downloaded archives (verified by the client, OR by the mirroring server, which will then happily put a valid MD5 on the repackaged archive -- to be checked)
  - no extra checks done on the other available repository or package upstream kinds (rsync, git, etc.)
This was originally designed as a way to check the integrity of downloads and detect changes, not as a security mesure.
* Handling of external dependencies: a bit out of the scope here, but we need to push on the discussion on the design of this, it's at the moment underspecified ; of concern here, there is a feature that allows to specify a URL in the "depexts" field that will be downloaded and executed by opam-depext (mine or Anil's) without any check. Not sure what to do with that.

So yes, signing of packages would be a good start, but there are many possibilities ; assuming the Github repo is trusted (as well as the link between that and opam.ocaml.org), having opam-admin add some signatures and the OPAM client check those would certainly go in the right direction while remaining somewhat light. Asking contributors to sign their pull-requests, as mentionned in the LWN article forwarded by Gabriel, is another story (we could be using 'git tag --sign' and integrating that into opam-publish, for example).

Cheers,
Louis

> - Anil Madhavapeddy, 18/01/2015 21:11 -
> [+opam-devel to CC]
> 
> On 17 Jan 2015, at 15:19, Gabriel Scherer <gabriel.scherer at gmail.com> wrote:
> > 
> > There is an excellent piece at LWN.net (do consider subscribing to
> > this source of quality technical news) about a recent discussion in
> > the Python community on how to "secure" their package manager
> >  http://lwn.net/SubscriberLink/629426/bf933f7acea8466c/
> > 
> > The article discusses in particular a library called TUF (The Update
> > Framework) that aims to help solve the problem in a
> > package-manager-agnostic way.
> >  http://theupdateframework.com/
> > (this page has some other interesting links, eg. to a similar
> > discussion in the Ruby community about RubyGems)
> > 
> > Is there a reference point to a discussion of the security aspects of
> > the OPAM package manager? What I found so far is this 2013 issue by
> > Edwin T?r?k on signing packages:
> >  https://github.com/ocaml/opam/issues/423
> > 
> > As far as I know, the current status is that OPAM checks downloaded
> > packages against the checksum in opam-repository, so it protects
> > against an attacker changing upstream releases, assuming the
> > opam-repository remains trusted and there is no man-in-the-middle
> > (MITM) attack when the user downloads the metadata -- afaik it uses
> > only HTTP currently.
> 
> This is certainly something that needs to go on the roadmap sooner
> rather than later, and issue #423 is still the place to record
> your opinions.
> 
> Having a signify-like model to let an OPAM mirroring script sign
> distfiles would be a good first step, since the complexities of
> managing a per-contributor signing infrastructure would be quite
> significantly more work.
> 
> Note that the OPAM remote is HTTPS by default since OPAM 1.1.
> 
> -anil
> 
> _______________________________________________
> Platform mailing list
> Platform at lists.ocaml.org
> http://lists.ocaml.org/listinfo/platform
> 

From louis.gesbert at ocamlpro.com  Mon Jan 19 04:41:10 2015
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 19 Jan 2015 13:41:10 +0900
Subject: [opam-devel] OPAM 1.1 backwards-compatibility
Message-ID: <33064639.6mOX9L7SVN@agaric>

Hi all,

A note on the continued compatibility of the main package repository with OPAM 1.1, following the github issue at [1]. Sorry for the length; there's a tl;dr at the start of each paragraph.



## Current situation of OPAM 1.1 support

  [TL;DR] it works for existing installations, but newcomers are greeted by lots of scary warnings and
          required to `opam update`.

* The base idea was to redirect OPAM 1.1 clients to a repo at https://opam.ocaml.org/1.1/ , which is automatically rewritten from the main (1.2) repo still hosted at https://opam.ocaml.org/ . This parts works quite well.

* Sadly, a bug in OPAM 1.1 prevents redirection on `opam init`. So OPAM 1.1 will try to load the default repository, in 1.2 format, until you run `opam update` the first time.

* The current consequence of this is frightening screens full of errors at `opam init` with OPAM 1.1, but mostly harmless. This is documented in the FAQ [2], but is likely to turn away new 1.1 users, e.g. on Ubuntu.

* Another OPAM 1.1 bug causes a _fatal_ parsing error on the `!=` comparator in package version constraints. The consequence is that, were we to start using it in the (1.2) repo, OPAM 1.1 will fail to `init` before getting the chance to be redirected, unless you explicitely direct it to the new repo with `opam init https://opam.ocaml.org/1.1`, as documented in the FAQ.

* A completely different issue, the OPAM package in Ubuntu "utopic" has a broken solver interface [3], it'll seem to work at first, until you try to upgrade.



## Where we want to go, and consequences

  [TL;DR] some 1.2 enhancements to the repo are blocked unless we accept to turn the scary warnings
          into a fatal error. Specific init command (workaround) and existing setups would be
          unaffected.

* The `!=` limitation is annoying because it forces ugly workarounds in the current, main repository (detailed reasons in [1])

* It doesn't look like much but it actually blocks widespread usage of the new OPAM 1.2 features (new fields like `dev-repo`, etc.) that go through PR #3143 [1] for some sanitization prerequisites. In short, I could change #3143 not to use `!=` but that would become an issue on the longer term.

* If we accept `!=` in the repo, OPAM 1.1 will _fail_ to initialize rather than output lots of errors that get fixed by `opam update`. Existing installations, or `opam init https://opam.ocaml.org/1.1` will still work without problem.

* At some point we'll want to freeze 1.1 support anyway ; but stopping updates to opam.ocaml.org/1.1 won't solve this specific issue



## Remarks

  [TL;DR] some other solutions possible, but mostly: how important is OPAM 1.1 support at the moment ?

* An unpleasant, but reliable workaround could be to redirect the main repository to opam.ocaml.org/1.2 and serve a compatible repository at opam.ocaml.org/ . This may get misleading for users, and on the website.

* On a plus note, the "scary warnings" do mention upgrading OPAM.

* This raises the main question: how important is OPAM 1.1 support, how many users will encounter these issues, and when can we safely drop it ? I haven't heard many complaints, but the users hit by this aren't the most likely to give feedback (but maybe to turn around).


Sorry for this sad state of affairs, remarks welcome !
Louis

 


[1] https://github.com/ocaml/opam-repository/pull/3143
[2] http://opam.ocaml.org/doc/FAQ.html#Gaspopaminitgivesmescreensfullsoferrorsaboutupgrading
[3] http://opam.ocaml.org/doc/FAQ.html#OPAMfailstryingtoreinstallalreadyinstalledpackagesatfirstupgrade

From thomas at gazagnaire.org  Mon Jan 19 11:52:39 2015
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Mon, 19 Jan 2015 11:52:39 +0000
Subject: [opam-devel] OPAM 1.1 backwards-compatibility
In-Reply-To: <33064639.6mOX9L7SVN@agaric>
References: <33064639.6mOX9L7SVN@agaric>
Message-ID: <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>

> * This raises the main question: how important is OPAM 1.1 support, how many users will encounter these issues, and when can we safely drop it ? I haven't heard many complaints, but the users hit by this aren't the most likely to give feedback (but maybe to turn around).

I think the priority is to update https://github.com/ocaml/opam/wiki/Distributions

If really all the distributions are still using 1.1.1 (and even 1.1.0) we cannot drop support for 1.1. If most of the distributions have updated to 1.2, would maybe make more sense to see what we can do to help upstream maintainer to update to 1.2 instead of bandaging 1.1 damages.

Thomas

From anil at recoil.org  Mon Jan 19 15:33:16 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 19 Jan 2015 15:33:16 +0000
Subject: [opam-devel] OPAM 1.1 backwards-compatibility
In-Reply-To: <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>
References: <33064639.6mOX9L7SVN@agaric>
 <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>
Message-ID: <11F7566D-22FB-4715-B0F5-75E7F40FC892@recoil.org>

On 19 Jan 2015, at 11:52, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:
> 
>> * This raises the main question: how important is OPAM 1.1 support, how many users will encounter these issues, and when can we safely drop it ? I haven't heard many complaints, but the users hit by this aren't the most likely to give feedback (but maybe to turn around).
> 
> I think the priority is to update https://github.com/ocaml/opam/wiki/Distributions
> 
> If really all the distributions are still using 1.1.1 (and even 1.1.0) we cannot drop support for 1.1. If most of the distributions have updated to 1.2, would maybe make more sense to see what we can do to help upstream maintainer to update to 1.2 instead of bandaging 1.1 damages.

Prodding Ubuntu to upgrade to OPAM 1.2 would be extremely helpful.  Jon, Dave, would you have any contacts there that might be interested?   The Launchpad bug pickup seems to be a little hit and miss...

Also, I know it never seems like the right time to do this, but testing that OPAM 1.3dev does *not* have this problem is extremely important.  It would be nice if the trunk branch of OPAM had a deliberate syntax mismatch and was doing this redirection/rewrite dance as a matter of course.

-anil

From thomas at gazagnaire.org  Mon Jan 19 16:11:03 2015
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Mon, 19 Jan 2015 16:11:03 +0000
Subject: [opam-devel] OPAM 1.1 backwards-compatibility
In-Reply-To: <11F7566D-22FB-4715-B0F5-75E7F40FC892@recoil.org>
References: <33064639.6mOX9L7SVN@agaric>
 <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>
 <11F7566D-22FB-4715-B0F5-75E7F40FC892@recoil.org>
Message-ID: <962FA4E4-0450-4DEE-A405-6506CB18E646@gazagnaire.org>

>>> * This raises the main question: how important is OPAM 1.1 support, how many users will encounter these issues, and when can we safely drop it ? I haven't heard many complaints, but the users hit by this aren't the most likely to give feedback (but maybe to turn around).
>> 
>> I think the priority is to update https://github.com/ocaml/opam/wiki/Distributions
>> 
>> If really all the distributions are still using 1.1.1 (and even 1.1.0) we cannot drop support for 1.1. If most of the distributions have updated to 1.2, would maybe make more sense to see what we can do to help upstream maintainer to update to 1.2 instead of bandaging 1.1 damages.
> 
> Prodding Ubuntu to upgrade to OPAM 1.2 would be extremely helpful.  Jon, Dave, would you have any contacts there that might be interested?   The Launchpad bug pickup seems to be a little hit and miss...
> 
> Also, I know it never seems like the right time to do this, but testing that OPAM 1.3dev does *not* have this problem is extremely important.  It would be nice if the trunk branch of OPAM had a deliberate syntax mismatch and was doing this redirection/rewrite dance as a matter of course.
> 

Anil can you update the distribution your are maintaining in the list? homebrew has 1.2 I think :p


From louis.gesbert at ocamlpro.com  Tue Jan 20 00:47:29 2015
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Tue, 20 Jan 2015 09:47:29 +0900
Subject: [opam-devel] OPAM 1.1 backwards-compatibility
In-Reply-To: <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>
References: <33064639.6mOX9L7SVN@agaric>
 <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>
Message-ID: <2144244.3KogYr9aJ3@agaric>

Thanks for the follow-ups. What I'm advocating is _not_ dropping 1.1 support at the moment, but switching from a state where 'opam init' outputs tens of errors, later fixed by 'opam update', to one where it fails. I think most users would get scared enough in any case to either look up the issue or run away, and in either case there is a very simple workaround: `opam init https://opam.ocaml.org/1.1`. There is no known issue if initialisation is already done.

On the other hand, if this is deemed critical, it's still possible to make the errors go away by swapping the repos. I'm a bit short on feedback to reliably judge how important it may be.

> I think the priority is to update https://github.com/ocaml/opam/wiki/Distributions

Indeed, it's largely outdated. I'll take care of it / ping the maintainers.

> Also, I know it never seems like the right time to do this, but testing that
> OPAM 1.3dev does *not* have this problem is extremely important.  It would
> be nice if the trunk branch of OPAM had a deliberate syntax mismatch and
> was doing this redirection/rewrite dance as a matter of course.

I second, we can never be careful enough in these matters. The 'init' bug is fixed in 1.2, it has a better parser, and it attempts to be tolerant on files declared with a newer version... but all that gives no guarantee that things won't go wrong. Without that bug, though, OPAM 1.1 should never have had to read 1.2 opam files.

I'll setup a https://opam.ocaml.org/1.3 mirror, without changes at the moment, for the dev version to point to. The version I'm working on at the moment is still 1.2.1 beta though, with no difference in file format. Let's take this chance to ensure the 1.2.1->1.3 migration with be smooth.

Cheers,
Louis




From louis.gesbert at ocamlpro.com  Tue Jan 20 01:33:14 2015
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Tue, 20 Jan 2015 10:33:14 +0900
Subject: [opam-devel] OPAM 1.1 backwards-compatibility
In-Reply-To: <11F7566D-22FB-4715-B0F5-75E7F40FC892@recoil.org>
References: <33064639.6mOX9L7SVN@agaric>
 <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>
 <11F7566D-22FB-4715-B0F5-75E7F40FC892@recoil.org>
Message-ID: <2322386.x0OVqNIWa3@agaric>

> 
> Prodding Ubuntu to upgrade to OPAM 1.2 would be extremely helpful.  Jon, Dave, would you have any contacts there that might be interested?   The Launchpad bug pickup seems to be a little hit and miss...
>

The package page mentions ubuntu-motu at lists.ubuntu.com as maintainer address, we could try that, if not already done?

From louis.gesbert at ocamlpro.com  Tue Jan 20 03:27:36 2015
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Tue, 20 Jan 2015 12:27:36 +0900
Subject: [opam-devel] OPAM 1.1 backwards-compatibility
In-Reply-To: <11F7566D-22FB-4715-B0F5-75E7F40FC892@recoil.org>
References: <33064639.6mOX9L7SVN@agaric>
 <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>
 <11F7566D-22FB-4715-B0F5-75E7F40FC892@recoil.org>
Message-ID: <5806064.tbGhUCrX59@agaric>

Just updated https://github.com/ocaml/opam/wiki/Distributions with latest information.

Most distributions have 1.2.0 already!

Of course I found about http://pkgs.org/search/opam once I was finished :p

From anil at recoil.org  Tue Jan 20 09:51:53 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 20 Jan 2015 09:51:53 +0000
Subject: [opam-devel] OPAM 1.1 backwards-compatibility
In-Reply-To: <2322386.x0OVqNIWa3@agaric>
References: <33064639.6mOX9L7SVN@agaric>
 <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>
 <11F7566D-22FB-4715-B0F5-75E7F40FC892@recoil.org> <2322386.x0OVqNIWa3@agaric>
Message-ID: <42AF5216-E3EA-45B7-A636-AA29987FBE98@recoil.org>

On 20 Jan 2015, at 01:33, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
> 
>> 
>> Prodding Ubuntu to upgrade to OPAM 1.2 would be extremely helpful.  Jon, Dave, would you have any contacts there that might be interested?   The Launchpad bug pickup seems to be a little hit and miss...
>> 
> 
> The package page mentions ubuntu-motu at lists.ubuntu.com as maintainer address, we could try that, if not already done?

Go for it -- this seems like a busy list, so making it clear the entire package is broken on 14.10 would be great.  It might be that we just need to wait for vivid to be released, but that's some months away.

-a

From mmatalka at gmail.com  Tue Jan 20 10:07:10 2015
From: mmatalka at gmail.com (Malcolm Matalka)
Date: Tue, 20 Jan 2015 10:07:10 +0000
Subject: [opam-devel] OPAM 1.1 backwards-compatibility
In-Reply-To: <42AF5216-E3EA-45B7-A636-AA29987FBE98@recoil.org> (Anil
 Madhavapeddy's message of "Tue, 20 Jan 2015 09:51:53 +0000")
References: <33064639.6mOX9L7SVN@agaric>
 <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>
 <11F7566D-22FB-4715-B0F5-75E7F40FC892@recoil.org>
 <2322386.x0OVqNIWa3@agaric>
 <42AF5216-E3EA-45B7-A636-AA29987FBE98@recoil.org>
Message-ID: <87zj9du5o1.fsf@gmail.com>

Is anyone updating FreeBSD's pkg?  It is on opam 1.1.x.  If not, I am
already planning on doing that this weekend (once I figure out how).

/Malcolm

Anil Madhavapeddy <anil at recoil.org> writes:

> On 20 Jan 2015, at 01:33, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
>> 
>>> 
>>> Prodding Ubuntu to upgrade to OPAM 1.2 would be extremely helpful.  Jon, Dave, would you have any contacts there that might be
>>> interested?  The Launchpad bug pickup seems to be a little hit and miss...
>>> 
>> 
>> The package page mentions ubuntu-motu at lists.ubuntu.com as maintainer address, we could try that, if not already done?
>
> Go for it -- this seems like a busy list, so making it clear the entire package is broken on 14.10 would be great.  It might be that we just
> need to wait for vivid to be released, but that's some months away.
>
> -a
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From anil at recoil.org  Tue Jan 20 10:10:01 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 20 Jan 2015 10:10:01 +0000
Subject: [opam-devel] OPAM 1.1 backwards-compatibility
In-Reply-To: <87zj9du5o1.fsf@gmail.com>
References: <33064639.6mOX9L7SVN@agaric>
 <8EDF6349-1A93-46DA-A32C-7B8CFB8C5F39@gazagnaire.org>
 <11F7566D-22FB-4715-B0F5-75E7F40FC892@recoil.org> <2322386.x0OVqNIWa3@agaric>
 <42AF5216-E3EA-45B7-A636-AA29987FBE98@recoil.org> <87zj9du5o1.fsf@gmail.com>
Message-ID: <B2F8D850-CA0E-47C6-A300-EC1E0E51EC6E@recoil.org>

Not that I know -- CCing Vsevolod who created it originally I think.

-a

> On 20 Jan 2015, at 10:07, Malcolm Matalka <mmatalka at gmail.com> wrote:
> 
> Is anyone updating FreeBSD's pkg?  It is on opam 1.1.x.  If not, I am
> already planning on doing that this weekend (once I figure out how).
> 
> /Malcolm
> 
> Anil Madhavapeddy <anil at recoil.org> writes:
> 
>> On 20 Jan 2015, at 01:33, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
>>> 
>>>> 
>>>> Prodding Ubuntu to upgrade to OPAM 1.2 would be extremely helpful.  Jon, Dave, would you have any contacts there that might be
>>>> interested?  The Launchpad bug pickup seems to be a little hit and miss...
>>>> 
>>> 
>>> The package page mentions ubuntu-motu at lists.ubuntu.com as maintainer address, we could try that, if not already done?
>> 
>> Go for it -- this seems like a busy list, so making it clear the entire package is broken on 14.10 would be great.  It might be that we just
>> need to wait for vivid to be released, but that's some months away.
>> 
>> -a
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> 


From anil at recoil.org  Fri Jan 23 13:52:36 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 23 Jan 2015 14:52:36 +0100
Subject: [opam-devel] adding OPAM pkg-config path to env
Message-ID: <170FABB1-E320-44A5-A956-1BAB8BFC6B4C@recoil.org>

Do we have an open bug in OPAM about some mechanism to extend the environment exported by `opam config env`?

It would be really convenient if it also exported PKG_CONFIG_PATH to point to `opam config show prefix`/lib/pkgconfig, and it would be even nicer if this could be done without modifying OPAM for every new environment variable.

-a


From sebastien.mondet at gmail.com  Fri Jan 23 14:44:05 2015
From: sebastien.mondet at gmail.com (Sebastien Mondet)
Date: Fri, 23 Jan 2015 09:44:05 -0500
Subject: [opam-devel] adding OPAM pkg-config path to env
In-Reply-To: <170FABB1-E320-44A5-A956-1BAB8BFC6B4C@recoil.org>
References: <170FABB1-E320-44A5-A956-1BAB8BFC6B4C@recoil.org>
Message-ID: <CALScVY=tHcSORFPcNAB0+8qaU8DNAVFzk--1pcjd_3GoEzFNaw@mail.gmail.com>

Just quoting Louis from a previous email (I haven't tried yet):

and, still in the ".comp" file, you should be able to add:
>
> env: [ "LD_LIBRARY_PATH" += "%{lib}%" ]
>

cheers
Seb




On Fri, Jan 23, 2015 at 8:52 AM, Anil Madhavapeddy <anil at recoil.org> wrote:

> Do we have an open bug in OPAM about some mechanism to extend the
> environment exported by `opam config env`?
>
> It would be really convenient if it also exported PKG_CONFIG_PATH to point
> to `opam config show prefix`/lib/pkgconfig, and it would be even nicer if
> this could be done without modifying OPAM for every new environment
> variable.
>
> -a
>
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20150123/b7a2828f/attachment.html>

From jonathan.ludlam at citrix.com  Mon Jan 26 14:16:08 2015
From: jonathan.ludlam at citrix.com (Jon Ludlam)
Date: Mon, 26 Jan 2015 14:16:08 +0000
Subject: [opam-devel] Fedora RPMs
Message-ID: <20150126141608.GA20366@humongous>

Hi all,

I'd like to ask for help with testing the RPMs I've built for opam 
for Fedora.

I've submitted a some review requests to get opam into Fedora. This has
involved getting 6 other packages into RPMs as there was pushback on
using the bundled libraries as part of the RPM
(https://bugzilla.redhat.com/show_bug.cgi?id=1060436). These are going
through the usual process of being reviewed, but I thought it would be
useful to test them from a functional perspective too. The top-level
review request is here:

https://bugzilla.redhat.com/show_bug.cgi?id=1185099

For ease of testing, I have built them using copr, Fedora's build
service, and the RPMs can be installed directly from there. There
are instructions on how to do that on the project page:

https://copr.fedoraproject.org/coprs/jonludlam/opam/

I'd be really grateful if anyone had a few minutes to look and see if
there's anything obviously wrong with them. 

Thanks a lot!

Jon


From anil at recoil.org  Mon Jan 26 14:18:26 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 26 Jan 2015 14:18:26 +0000
Subject: [opam-devel] Fwd: OPAM on fedora
References: <6A55C2CE-9707-407A-B7D9-85FAEDE27A26@citrix.com>
Message-ID: <659D2972-7A2C-485C-B0A7-3590D49E76DE@recoil.org>

See below for Gabriel's message to the Fedora list.  Gabriel: thanks for kicking this off! I would appreciate being CCed in on this (or better, opam-devel if cross posting is ok), as I maintain the semi-official OPAM Fedora packages right now that point people to the OBS service.

In the interests of sanity, I'd rather not have two divergent sets of instructions for Coq users and the general OPAM population, so if we switch to Copr, then the official OPAM instructions should also switch.  In the longer term, the packages will get into Fedora and everything will be fine, but don't forget that in the medium term that the Yum remotes will remain on people's computers for some time, and there's significant confusion in mixing up OBS and Copr packages.

For Coq users right now, I think it's wiser to point them to the OPAM web pages which in turn point to my OBS repositories, rather than pointing them to Jon's.  The reason is that mine are better tested, but they also use the bundled OCaml packages, whereas Jon's are upstream-friendly and break out the OPAM dependencies.  There have been bugs from doing this in the past (e.g. with a libdose3 mismatch), so it's best to let this settle down upstream before pointing a large user base at a Copr remote that may still be a moving target.

-Anil

> 
>> From: Gabriel Scherer <gabriel.scherer at gmail.com <mailto:gabriel.scherer at gmail.com>>
>> Date: 24 January 2015 11:14:39 GMT
>> To: <jonathan.ludlam at citrix.com <mailto:jonathan.ludlam at citrix.com>>, Scott Logan <logans at cottsay.net <mailto:logans at cottsay.net>>, <ocaml-devel at lists.fedoraproject.org <mailto:ocaml-devel at lists.fedoraproject.org>>
>> Subject: OPAM on fedora
>> 
>> Hi all,
>> 
>> I would like to update the page listing the state of OPAM packaging on Unix distributions
>>   https://github.com/ocaml/opam/wiki/Distributions <https://github.com/ocaml/opam/wiki/Distributions>
>> with information for Fedora -- which is the distribution I'm using right now.
>> 
>> As far as I understand:
>>   - neither opam nor aspcud are currently available as Fedora packages
>>   - there are separate copr repositories that work well in practice:
>>     opam: https://copr.fedoraproject.org/coprs/jonludlam/opam/builds/ <https://copr.fedoraproject.org/coprs/jonludlam/opam/builds/>
>>     aspcud: https://copr.fedoraproject.org/coprs/cottsay/gringo/builds/ <https://copr.fedoraproject.org/coprs/cottsay/gringo/builds/>
>> 
>> (In previous discussion with Scott Logan I installed aspcud (which is needed in practice to have a functional opam) through his packages and that worked well.)
>> 
>> Is it reasonable to advise end-users to install through the copr repositories? It seems easier than compiling from source, but the "Installation instructions" advise not to do this ( "Everybody else should avoid this repo." ). My instructions would be roughly as follows:
>>   yum copr enable jonludlam/opam
>>   yum copr enable cottsay/gringo
>>   yum install aspcud opam
>> 
>> (OPAM is the de-facto standard package managers for OCaml libraries nowadays, and should also become the package manager for the Coq proof assistant. Coq will have a new version released in the following days/weeks (8.5beta1), so I'm reviewing the installation procedure.)

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20150126/a2afbade/attachment.html>

From gabriel.scherer at gmail.com  Mon Jan 26 14:28:51 2015
From: gabriel.scherer at gmail.com (Gabriel Scherer)
Date: Mon, 26 Jan 2015 15:28:51 +0100
Subject: [opam-devel] OPAM on fedora
In-Reply-To: <659D2972-7A2C-485C-B0A7-3590D49E76DE@recoil.org>
References: <6A55C2CE-9707-407A-B7D9-85FAEDE27A26@citrix.com>
 <659D2972-7A2C-485C-B0A7-3590D49E76DE@recoil.org>
Message-ID: <CAPFanBFesJ93ONOfdBD-=uFWLpJUCAUG7cMsUAEG_WTpEeUc0A@mail.gmail.com>

Of course we won't give Fedora-specific instruction to Coq users; I hoped
to improve the common OPAM wiki/documentation with Fedora-specific
information when applicable, and just point Coq users to the general OPAM
documentation. We are preparing a Coq-specific description for newcomers
(I'll send a link to opam-devel or on the github issue where we discussed
pinning), but it won't have anything distro-specific.

Anil, thanks for the mention of your Fedora packages. I didn't know about
them -- in fact when I setup my Fedora I just looked at the default repos,
found nothing, then compiled OPAM from source (that is from the OCaml
compiler installed from the excellent Fedora packages).

On Mon, Jan 26, 2015 at 3:18 PM, Anil Madhavapeddy <anil at recoil.org> wrote:

> See below for Gabriel's message to the Fedora list.  Gabriel: thanks for
> kicking this off! I would appreciate being CCed in on this (or better,
> opam-devel if cross posting is ok), as I maintain the semi-official OPAM
> Fedora packages right now that point people to the OBS service.
>
> In the interests of sanity, I'd rather not have two divergent sets of
> instructions for Coq users and the general OPAM population, so if we switch
> to Copr, then the official OPAM instructions should also switch.  In the
> longer term, the packages will get into Fedora and everything will be fine,
> but don't forget that in the medium term that the Yum remotes will remain
> on people's computers for some time, and there's significant confusion in
> mixing up OBS and Copr packages.
>
> For Coq users right now, I think it's wiser to point them to the OPAM web
> pages which in turn point to my OBS repositories, rather than pointing them
> to Jon's.  The reason is that mine are better tested, but they also use the
> bundled OCaml packages, whereas Jon's are upstream-friendly and break out
> the OPAM dependencies.  There have been bugs from doing this in the past
> (e.g. with a libdose3 mismatch), so it's best to let this settle down
> upstream before pointing a large user base at a Copr remote that may still
> be a moving target.
>
> -Anil
>
>
>  *From:* Gabriel Scherer <gabriel.scherer at gmail.com>
> *Date:* 24 January 2015 11:14:39 GMT
> *To:* <jonathan.ludlam at citrix.com>, Scott Logan <logans at cottsay.net>, <
> ocaml-devel at lists.fedoraproject.org>
> *Subject:* *OPAM on fedora*
>
>       Hi all,
>
>  I would like to update the page listing the state of OPAM packaging on
> Unix distributions
>   https://github.com/ocaml/opam/wiki/Distributions
>  with information for Fedora -- which is the distribution I'm using right
> now.
>
>  As far as I understand:
>    - neither opam nor aspcud are currently available as Fedora packages
>    - there are separate copr repositories that work well in practice:
>     opam: https://copr.fedoraproject.org/coprs/jonludlam/opam/builds/
>     aspcud: https://copr.fedoraproject.org/coprs/cottsay/gringo/builds/
>
>  (In previous discussion with Scott Logan I installed aspcud (which is
> needed in practice to have a functional opam) through his packages and that
> worked well.)
>
>  Is it reasonable to advise end-users to install through the copr
> repositories? It seems easier than compiling from source, but the
> "Installation instructions" advise not to do this ( "Everybody else should
> avoid this repo." ). My instructions would be roughly as follows:
>    yum copr enable jonludlam/opam
>    yum copr enable cottsay/gringo
>    yum install aspcud opam
>
>  (OPAM is the de-facto standard package managers for OCaml libraries
> nowadays, and should also become the package manager for the Coq proof
> assistant. Coq will have a new version released in the following days/weeks
> (8.5beta1), so I'm reviewing the installation procedure.)
>
>
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20150126/eda80bf3/attachment.html>

From gabriel.scherer at gmail.com  Mon Jan 26 14:49:46 2015
From: gabriel.scherer at gmail.com (Gabriel Scherer)
Date: Mon, 26 Jan 2015 15:49:46 +0100
Subject: [opam-devel] Fedora RPMs
In-Reply-To: <20150126141608.GA20366@humongous>
References: <20150126141608.GA20366@humongous>
Message-ID: <CAPFanBH3N8KEptPo6xjb0PZHKi4Rs_=A1_jadLpiKig0D_ir2A@mail.gmail.com>

opam-devel, is there a recommended fool-proof way to save an opam root
before installing another OPAM version to experiment with it, and be able
to come back to one's usual environment?

I'd like to test Jon's packages, but I'm a bit wary of losing/corrupting
the dozen of switches I have already. I'm thinking of basically
  mv ~/.opam ~/.opam.bak
  <uninstall my opam>
  <try the packages then uninstall them>
  mv ~/.opam.bak ~/.opam
  <reinstall my opam>

If there is nothing wrong with this approach, it might be useful to
document it somewhere -- it's not in the developer manual for example. This
could be useful when asking users to test beta-releases of OPAM as well (I
know I was unhappy when I tested 1.2 and my repository format was silently
updated to 1.2, making it harder to go back).

On Mon, Jan 26, 2015 at 3:16 PM, Jon Ludlam <jonathan.ludlam at citrix.com>
wrote:

> Hi all,
>
> I'd like to ask for help with testing the RPMs I've built for opam
> for Fedora.
>
> I've submitted a some review requests to get opam into Fedora. This has
> involved getting 6 other packages into RPMs as there was pushback on
> using the bundled libraries as part of the RPM
> (https://bugzilla.redhat.com/show_bug.cgi?id=1060436). These are going
> through the usual process of being reviewed, but I thought it would be
> useful to test them from a functional perspective too. The top-level
> review request is here:
>
> https://bugzilla.redhat.com/show_bug.cgi?id=1185099
>
> For ease of testing, I have built them using copr, Fedora's build
> service, and the RPMs can be installed directly from there. There
> are instructions on how to do that on the project page:
>
> https://copr.fedoraproject.org/coprs/jonludlam/opam/
>
> I'd be really grateful if anyone had a few minutes to look and see if
> there's anything obviously wrong with them.
>
> Thanks a lot!
>
> Jon
>
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20150126/06491ace/attachment-0001.html>

From anil at recoil.org  Mon Jan 26 14:51:36 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 26 Jan 2015 14:51:36 +0000
Subject: [opam-devel] Fedora RPMs
In-Reply-To: <CAPFanBH3N8KEptPo6xjb0PZHKi4Rs_=A1_jadLpiKig0D_ir2A@mail.gmail.com>
References: <20150126141608.GA20366@humongous>
 <CAPFanBH3N8KEptPo6xjb0PZHKi4Rs_=A1_jadLpiKig0D_ir2A@mail.gmail.com>
Message-ID: <16478DA2-7421-46B2-B7AC-3FCD2A1E078A@recoil.org>

I normally export a custom OPAMROOT environment variable rather than move files around.

-anil

> On 26 Jan 2015, at 14:49, Gabriel Scherer <gabriel.scherer at gmail.com> wrote:
> 
> opam-devel, is there a recommended fool-proof way to save an opam root before installing another OPAM version to experiment with it, and be able to come back to one's usual environment?
> 
> I'd like to test Jon's packages, but I'm a bit wary of losing/corrupting the dozen of switches I have already. I'm thinking of basically
>   mv ~/.opam ~/.opam.bak
>   <uninstall my opam>
>   <try the packages then uninstall them>
>   mv ~/.opam.bak ~/.opam
>   <reinstall my opam>
> 
> If there is nothing wrong with this approach, it might be useful to document it somewhere -- it's not in the developer manual for example. This could be useful when asking users to test beta-releases of OPAM as well (I know I was unhappy when I tested 1.2 and my repository format was silently updated to 1.2, making it harder to go back).
> 
> On Mon, Jan 26, 2015 at 3:16 PM, Jon Ludlam <jonathan.ludlam at citrix.com <mailto:jonathan.ludlam at citrix.com>> wrote:
> Hi all,
> 
> I'd like to ask for help with testing the RPMs I've built for opam
> for Fedora.
> 
> I've submitted a some review requests to get opam into Fedora. This has
> involved getting 6 other packages into RPMs as there was pushback on
> using the bundled libraries as part of the RPM
> (https://bugzilla.redhat.com/show_bug.cgi?id=1060436 <https://bugzilla.redhat.com/show_bug.cgi?id=1060436>). These are going
> through the usual process of being reviewed, but I thought it would be
> useful to test them from a functional perspective too. The top-level
> review request is here:
> 
> https://bugzilla.redhat.com/show_bug.cgi?id=1185099 <https://bugzilla.redhat.com/show_bug.cgi?id=1185099>
> 
> For ease of testing, I have built them using copr, Fedora's build
> service, and the RPMs can be installed directly from there. There
> are instructions on how to do that on the project page:
> 
> https://copr.fedoraproject.org/coprs/jonludlam/opam/ <https://copr.fedoraproject.org/coprs/jonludlam/opam/>
> 
> I'd be really grateful if anyone had a few minutes to look and see if
> there's anything obviously wrong with them.
> 
> Thanks a lot!
> 
> Jon
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org <mailto:opam-devel at lists.ocaml.org>
> http://lists.ocaml.org/listinfo/opam-devel <http://lists.ocaml.org/listinfo/opam-devel>
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20150126/6f29d109/attachment.html>

From jonathan.ludlam at citrix.com  Mon Jan 26 15:31:01 2015
From: jonathan.ludlam at citrix.com (Jon Ludlam)
Date: Mon, 26 Jan 2015 15:31:01 +0000
Subject: [opam-devel] Fwd: OPAM on fedora
In-Reply-To: <659D2972-7A2C-485C-B0A7-3590D49E76DE@recoil.org>
References: <6A55C2CE-9707-407A-B7D9-85FAEDE27A26@citrix.com>
 <659D2972-7A2C-485C-B0A7-3590D49E76DE@recoil.org>
Message-ID: <20150126153101.GC20366@humongous>

On Mon, Jan 26, 2015 at 02:18:26PM +0000, Anil Madhavapeddy wrote:
> See below for Gabriel's message to the Fedora list.  Gabriel: thanks for kicking this off! I would appreciate being CCed in on this (or better, opam-devel if cross posting is ok), as I maintain the semi-official OPAM Fedora packages right now that point people to the OBS service.
> 
> In the interests of sanity, I'd rather not have two divergent sets of instructions for Coq users and the general OPAM population, so if we switch to Copr, then the official OPAM instructions should also switch.  In the longer term, the packages will get into Fedora and everything will be fine, but don't forget that in the medium term that the Yum remotes will remain on people's computers for some time, and there's significant confusion in mixing up OBS and Copr packages.
> 
> For Coq users right now, I think it's wiser to point them to the OPAM web pages which in turn point to my OBS repositories, rather than pointing them to Jon's.  The reason is that mine are better tested, but they also use the bundled OCaml packages, whereas Jon's are upstream-friendly and break out the OPAM dependencies.  There have been bugs from doing this in the past (e.g. with a libdose3 mismatch), so it's best to let this settle down upstream before pointing a large user base at a Copr remote that may still be a moving target.
>

Totally agreed. There's probably still be an argument for pointing out the aspcud copr remote though - should that go onto the main opam page?

Jon


From thomas at gazagnaire.org  Mon Jan 26 16:17:10 2015
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Mon, 26 Jan 2015 16:17:10 +0000
Subject: [opam-devel] Fedora RPMs
In-Reply-To: <16478DA2-7421-46B2-B7AC-3FCD2A1E078A@recoil.org>
References: <20150126141608.GA20366@humongous>
 <CAPFanBH3N8KEptPo6xjb0PZHKi4Rs_=A1_jadLpiKig0D_ir2A@mail.gmail.com>
 <16478DA2-7421-46B2-B7AC-3FCD2A1E078A@recoil.org>
Message-ID: <4115B84F-29D1-4A49-9F68-3FC26881F236@gazagnaire.org>

> I normally export a custom OPAMROOT environment variable rather than move files around.

Both exportring OPAMROOT and renaming~/.opam should work fine (I think it's cleaner to export OPAMROOT, though).

Thomas

> 
> -anil
> 
>> On 26 Jan 2015, at 14:49, Gabriel Scherer <gabriel.scherer at gmail.com <mailto:gabriel.scherer at gmail.com>> wrote:
>> 
>> opam-devel, is there a recommended fool-proof way to save an opam root before installing another OPAM version to experiment with it, and be able to come back to one's usual environment?
>> 
>> I'd like to test Jon's packages, but I'm a bit wary of losing/corrupting the dozen of switches I have already. I'm thinking of basically
>>   mv ~/.opam ~/.opam.bak
>>   <uninstall my opam>
>>   <try the packages then uninstall them>
>>   mv ~/.opam.bak ~/.opam
>>   <reinstall my opam>
>> 
>> If there is nothing wrong with this approach, it might be useful to document it somewhere -- it's not in the developer manual for example. This could be useful when asking users to test beta-releases of OPAM as well (I know I was unhappy when I tested 1.2 and my repository format was silently updated to 1.2, making it harder to go back).
>> 
>> On Mon, Jan 26, 2015 at 3:16 PM, Jon Ludlam <jonathan.ludlam at citrix.com <mailto:jonathan.ludlam at citrix.com>> wrote:
>> Hi all,
>> 
>> I'd like to ask for help with testing the RPMs I've built for opam
>> for Fedora.
>> 
>> I've submitted a some review requests to get opam into Fedora. This has
>> involved getting 6 other packages into RPMs as there was pushback on
>> using the bundled libraries as part of the RPM
>> (https://bugzilla.redhat.com/show_bug.cgi?id=1060436 <https://bugzilla.redhat.com/show_bug.cgi?id=1060436>). These are going
>> through the usual process of being reviewed, but I thought it would be
>> useful to test them from a functional perspective too. The top-level
>> review request is here:
>> 
>> https://bugzilla.redhat.com/show_bug.cgi?id=1185099 <https://bugzilla.redhat.com/show_bug.cgi?id=1185099>
>> 
>> For ease of testing, I have built them using copr, Fedora's build
>> service, and the RPMs can be installed directly from there. There
>> are instructions on how to do that on the project page:
>> 
>> https://copr.fedoraproject.org/coprs/jonludlam/opam/ <https://copr.fedoraproject.org/coprs/jonludlam/opam/>
>> 
>> I'd be really grateful if anyone had a few minutes to look and see if
>> there's anything obviously wrong with them.
>> 
>> Thanks a lot!
>> 
>> Jon
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org <mailto:opam-devel at lists.ocaml.org>
>> http://lists.ocaml.org/listinfo/opam-devel <http://lists.ocaml.org/listinfo/opam-devel>
>> 
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org <mailto:opam-devel at lists.ocaml.org>
>> http://lists.ocaml.org/listinfo/opam-devel
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20150126/3c3cfe03/attachment.html>

From anil at recoil.org  Mon Jan 26 16:34:02 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 26 Jan 2015 16:34:02 +0000
Subject: [opam-devel] OPAM on fedora
In-Reply-To: <20150126153101.GC20366@humongous>
References: <6A55C2CE-9707-407A-B7D9-85FAEDE27A26@citrix.com>
 <659D2972-7A2C-485C-B0A7-3590D49E76DE@recoil.org>
 <20150126153101.GC20366@humongous>
Message-ID: <61E010A9-46FB-4F16-B062-7392FB13256C@recoil.org>

On 26 Jan 2015, at 15:31, Jon Ludlam <jonathan.ludlam at citrix.com> wrote:
> 
> On Mon, Jan 26, 2015 at 02:18:26PM +0000, Anil Madhavapeddy wrote:
>> See below for Gabriel's message to the Fedora list.  Gabriel: thanks for kicking this off! I would appreciate being CCed in on this (or better, opam-devel if cross posting is ok), as I maintain the semi-official OPAM Fedora packages right now that point people to the OBS service.
>> 
>> In the interests of sanity, I'd rather not have two divergent sets of instructions for Coq users and the general OPAM population, so if we switch to Copr, then the official OPAM instructions should also switch.  In the longer term, the packages will get into Fedora and everything will be fine, but don't forget that in the medium term that the Yum remotes will remain on people's computers for some time, and there's significant confusion in mixing up OBS and Copr packages.
>> 
>> For Coq users right now, I think it's wiser to point them to the OPAM web pages which in turn point to my OBS repositories, rather than pointing them to Jon's.  The reason is that mine are better tested, but they also use the bundled OCaml packages, whereas Jon's are upstream-friendly and break out the OPAM dependencies.  There have been bugs from doing this in the past (e.g. with a libdose3 mismatch), so it's best to let this settle down upstream before pointing a large user base at a Copr remote that may still be a moving target.
>> 
> 
> Totally agreed. There's probably still be an argument for pointing out the aspcud copr remote though - should that go onto the main opam page?

Sounds good -- although can we perhaps abstract it to an 'ocaml' account and share the details?  Since the repo names stick around, it's quite stifling to have your personal branch be used by people.

Finally having aspcud is very very nice.  I'll try to get it on OBS soon as well from your RPMs.

-anil

From gabriel.scherer at gmail.com  Mon Jan 26 20:58:29 2015
From: gabriel.scherer at gmail.com (Gabriel Scherer)
Date: Mon, 26 Jan 2015 21:58:29 +0100
Subject: [opam-devel] One (or more) opam root per projet?
Message-ID: <CAPFanBGDJ4GWRiEtMVjS+=yiRFEGkTDxwEAW-fWZuQfDskoNpQ@mail.gmail.com>

Dear opam-devel,

Guillaume Claret (one of the Coq developpers) has been experimenting with
using one OPAM root for each of his software projects, instead of using
global switches.

  http://coq-blog.clarus.me/use-opam-for-coq.html

I have a personal preference for keeping using switches that I'm familiar
with and seem more idiomatic in OCaml usage (and also compiling Coq in each
project would remind me too much of my Gentoo years), but Guillaume points
out that it has evolved to be standard usage in the Node/npm community (and
with Python/virtualenv I think), and that it can solve incompatible-version
headaches by having a finer granularity. More generally the rationale seems
to be "local is better than global", which sounds reasonable.

(Besides compilation time and duplication of efforts -- that could be
partially solved if/when binary packages where to see the light -- a good
argument in favor of switches would be the ability to install programs
across multiple switches in the same root, eg. opam compiler-conf and
similiar scripts.)

Do you know of other users having converged towards that per-project
scheme? Is there tool support, or interest in eventually supporting, for
this mode of use in upstream OPAM?
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20150126/4a10daed/attachment.html>

From anil at recoil.org  Mon Jan 26 21:14:44 2015
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 26 Jan 2015 21:14:44 +0000
Subject: [opam-devel] One (or more) opam root per projet?
In-Reply-To: <CAPFanBGDJ4GWRiEtMVjS+=yiRFEGkTDxwEAW-fWZuQfDskoNpQ@mail.gmail.com>
References: <CAPFanBGDJ4GWRiEtMVjS+=yiRFEGkTDxwEAW-fWZuQfDskoNpQ@mail.gmail.com>
Message-ID: <54910709-7D28-445C-9158-53302BFEB941@recoil.org>

The major difference between switch and roots is that remotes are shared across switches. Pins are already per-switch.

There's a good case to be made for a per-project OPAM installation, especially for OCaml applications that just want to build a binary with the minimum hassle (such as Facebook's Flow static analyser).  See here for a discussion on the topic:
https://github.com/ocaml/opam/issues/1372 <https://github.com/ocaml/opam/issues/1372>

I'd quite like to see an `opam-local` script as discussed in that issue.  It should be a lot easier now that OPAM 1.2 has been released.

-anil

> On 26 Jan 2015, at 20:58, Gabriel Scherer <gabriel.scherer at gmail.com> wrote:
> 
> Dear opam-devel,
> 
> Guillaume Claret (one of the Coq developpers) has been experimenting with using one OPAM root for each of his software projects, instead of using global switches.
> 
>   http://coq-blog.clarus.me/use-opam-for-coq.html <http://coq-blog.clarus.me/use-opam-for-coq.html>
> 
> I have a personal preference for keeping using switches that I'm familiar with and seem more idiomatic in OCaml usage (and also compiling Coq in each project would remind me too much of my Gentoo years), but Guillaume points out that it has evolved to be standard usage in the Node/npm community (and with Python/virtualenv I think), and that it can solve incompatible-version headaches by having a finer granularity. More generally the rationale seems to be "local is better than global", which sounds reasonable.
> 
> (Besides compilation time and duplication of efforts -- that could be partially solved if/when binary packages where to see the light -- a good argument in favor of switches would be the ability to install programs across multiple switches in the same root, eg. opam compiler-conf and similiar scripts.)
> 
> Do you know of other users having converged towards that per-project scheme? Is there tool support, or interest in eventually supporting, for this mode of use in upstream OPAM?
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20150126/ca544b3d/attachment.html>

From daniel.buenzli at erratique.ch  Mon Jan 26 21:26:53 2015
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Mon, 26 Jan 2015 22:26:53 +0100
Subject: [opam-devel] One (or more) opam root per projet?
In-Reply-To: <CAPFanBGDJ4GWRiEtMVjS+=yiRFEGkTDxwEAW-fWZuQfDskoNpQ@mail.gmail.com>
References: <CAPFanBGDJ4GWRiEtMVjS+=yiRFEGkTDxwEAW-fWZuQfDskoNpQ@mail.gmail.com>
Message-ID: <1540DC15EFF04023B9EC4033DEDDC16C@erratique.ch>

Le lundi, 26 janvier 2015 ? 21:58, Gabriel Scherer a ?crit :
> (Besides compilation time and duplication of efforts -- that could be partially solved if/when binary packages where to see the light

For that I'd rather like to have the ability to install multiple version of a package in opam. Locally installed packages could then just be hard links to packages installed in ~/.opam.  

In general, I would also be interested in managing the free variables of my projects locally.  

Daniel



From louis.gesbert at ocamlpro.com  Tue Jan 27 01:39:36 2015
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Tue, 27 Jan 2015 10:39:36 +0900
Subject: [opam-devel] Fedora RPMs
In-Reply-To: <20150126141608.GA20366@humongous>
References: <20150126141608.GA20366@humongous>
Message-ID: <40640886.je8m4Hlhze@agaric>

Wow, thanks a lot for going through this effort, despite the rather cold welcome from the Fedora maintainers !

Not tested yet, and I am not used to Fedora, but some comments on the spec file:
* opam requires "patch" at runtime, too (it'll complain and fail to init if absent)
* "make", "m4" and "cc" are not strictly required (opam doesn't use them directly, packages do) but you won't go far without them (at least on the standard repo).

Then it'd also be cool if they had aspcud (or packup)...

Thanks again!
Louis

> - Jon Ludlam, 26/01/2015 14:16 -
> Hi all,
> 
> I'd like to ask for help with testing the RPMs I've built for opam 
> for Fedora.
> 
> I've submitted a some review requests to get opam into Fedora. This has
> involved getting 6 other packages into RPMs as there was pushback on
> using the bundled libraries as part of the RPM
> (https://bugzilla.redhat.com/show_bug.cgi?id=1060436). These are going
> through the usual process of being reviewed, but I thought it would be
> useful to test them from a functional perspective too. The top-level
> review request is here:
> 
> https://bugzilla.redhat.com/show_bug.cgi?id=1185099
> 
> For ease of testing, I have built them using copr, Fedora's build
> service, and the RPMs can be installed directly from there. There
> are instructions on how to do that on the project page:
> 
> https://copr.fedoraproject.org/coprs/jonludlam/opam/
> 
> I'd be really grateful if anyone had a few minutes to look and see if
> there's anything obviously wrong with them. 
> 
> Thanks a lot!
> 
> Jon
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From louis.gesbert at ocamlpro.com  Tue Jan 27 01:49:01 2015
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Tue, 27 Jan 2015 10:49:01 +0900
Subject: [opam-devel] Fedora RPMs
In-Reply-To: <CAPFanBH3N8KEptPo6xjb0PZHKi4Rs_=A1_jadLpiKig0D_ir2A@mail.gmail.com>
References: <20150126141608.GA20366@humongous>
 <CAPFanBH3N8KEptPo6xjb0PZHKi4Rs_=A1_jadLpiKig0D_ir2A@mail.gmail.com>
Message-ID: <7223008.aP2huEVpjO@agaric>

Indeed, here is how a go for most of my tests:

```
<get to a fresh terminal>
export OPAMROOT=/tmp/temp-opamroot
opam init
eval $(opam config env)
play with it
```
This has the big advantage of being temporary and local to that terminal. A single command is enough if you want to use it in another terminal: `eval $(opam config env --root=/tmp/temp-opamroot)`


If you want to experiment on your current state, though, copying `~/.opam` to /tmp could cause problems because of OCaml relocation issues. So in that case, you'd be safe copying `~/.opam` to a backup before doing dangerous stuff, and restoring it afterwards. 

Adding this to the Tricks page [1] is probably a good idea, indeed

> I know I was unhappy when I tested 1.2 and my repository format was silently
> updated to 1.2, making it harder to go back

Sorry about that... the release announce warned about it, but you can't be sure everyone will see the message.

Cheers,
Louis


[1] http://opam.ocaml.org/doc/Tricks.html

> - Gabriel Scherer, 26/01/2015 15:49 -
> opam-devel, is there a recommended fool-proof way to save an opam root
> before installing another OPAM version to experiment with it, and be able
> to come back to one's usual environment?
> 
> I'd like to test Jon's packages, but I'm a bit wary of losing/corrupting
> the dozen of switches I have already. I'm thinking of basically
>   mv ~/.opam ~/.opam.bak
>   <uninstall my opam>
>   <try the packages then uninstall them>
>   mv ~/.opam.bak ~/.opam
>   <reinstall my opam>
> 
> If there is nothing wrong with this approach, it might be useful to
> document it somewhere -- it's not in the developer manual for example. This
> could be useful when asking users to test beta-releases of OPAM as well (I
> know I was unhappy when I tested 1.2 and my repository format was silently
> updated to 1.2, making it harder to go back).
> 
> On Mon, Jan 26, 2015 at 3:16 PM, Jon Ludlam <jonathan.ludlam at citrix.com>
> wrote:
> 
> > Hi all,
> >
> > I'd like to ask for help with testing the RPMs I've built for opam
> > for Fedora.
> >
> > I've submitted a some review requests to get opam into Fedora. This has
> > involved getting 6 other packages into RPMs as there was pushback on
> > using the bundled libraries as part of the RPM
> > (https://bugzilla.redhat.com/show_bug.cgi?id=1060436). These are going
> > through the usual process of being reviewed, but I thought it would be
> > useful to test them from a functional perspective too. The top-level
> > review request is here:
> >
> > https://bugzilla.redhat.com/show_bug.cgi?id=1185099
> >
> > For ease of testing, I have built them using copr, Fedora's build
> > service, and the RPMs can be installed directly from there. There
> > are instructions on how to do that on the project page:
> >
> > https://copr.fedoraproject.org/coprs/jonludlam/opam/
> >
> > I'd be really grateful if anyone had a few minutes to look and see if
> > there's anything obviously wrong with them.
> >
> > Thanks a lot!
> >
> > Jon
> >
> > _______________________________________________
> > opam-devel mailing list
> > opam-devel at lists.ocaml.org
> > http://lists.ocaml.org/listinfo/opam-devel
> >

From louis.gesbert at ocamlpro.com  Wed Jan 28 01:33:43 2015
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Wed, 28 Jan 2015 10:33:43 +0900
Subject: [opam-devel] One (or more) opam root per projet?
In-Reply-To: <1540DC15EFF04023B9EC4033DEDDC16C@erratique.ch>
References: <CAPFanBGDJ4GWRiEtMVjS+=yiRFEGkTDxwEAW-fWZuQfDskoNpQ@mail.gmail.com>
 <1540DC15EFF04023B9EC4033DEDDC16C@erratique.ch>
Message-ID: <3889466.0yNLLFqpuz@agaric>

An important prerequisite for this kind of feature would be tracking of a package's files by OPAM, so let's put first things first: if this is indeed important, let's try to give OPAM more control over what is done at installation/removal of packages in the next version.

On the locality of OPAM installations, the more I think about it, the more it seems to me that the best would be to simply allow specifying a custom prefix at switch creation time. All archives, caches and configuration files of OPAM stay in .opam, but packages' installed files, on the other hand, are allowed at a global location, or locally in a subdir of your project. You get the best of both worlds, don't have as much overhead (space, time, network and maintainance wise) as with multiple roots, and npm users aren't too disoriented.

We could imagine that, some day in the future, it'll be possible to detect that a package has already been installed in another switch, with the exact same dependencies, and link it rather than rebuild it. That would also make a very cheap "clone switch" feature available.

> - Daniel B?nzli, 26/01/2015 22:26 -
> Le lundi, 26 janvier 2015 ? 21:58, Gabriel Scherer a ?crit :
> > (Besides compilation time and duplication of efforts -- that could be partially solved if/when binary packages where to see the light
> 
> For that I'd rather like to have the ability to install multiple version of a package in opam. Locally installed packages could then just be hard links to packages installed in ~/.opam.  
> 
> In general, I would also be interested in managing the free variables of my projects locally.  
> 
> Daniel
> 
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 

