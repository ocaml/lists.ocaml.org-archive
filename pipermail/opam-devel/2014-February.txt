From roberto at dicosmo.org  Sat Feb  1 10:48:10 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Sat, 1 Feb 2014 11:48:10 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
Message-ID: <20140201104810.GB30007@voyager>

On Fri, Jan 31, 2014 at 07:54:20PM +0000, Anil Madhavapeddy wrote:
> On 31 Jan 2014, at 17:28, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
> 
> >     I am a bit unhappy with the current state of affairs, where new
> >     versions of opam appear with incompatible changes in the repository format,
> >     hence different versions of the repositories: people using old versions
> >     of opam get lost in a limbo-like repository with non updated packages
> >     until they realise they need to recompile a new version of opam
> >     to see the light again.
> 
> To be clear, the reason for OPAM 1.0 to 1.1 being incompatible was "unplanned".  The original release was too strict with it's parsing, and OPAM 1.1 is now far more lax.
> 

Sure Anil, nobody is implying here that this was deliberately planned :-)
Simply, this kind of things just happen, and especially so when a piece
of software is under heavy development.

That's why one needs a clear, and simple, mechanism to ensure a smooth
transition when incompatibilities arrive (and there will be more, and
unexpected ones, you can bet on it). 

The one I outlined has no pretense of originality, it's just good practice.

-- 
Roberto
 

From roberto at dicosmo.org  Sat Feb  1 10:50:07 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Sat, 1 Feb 2014 11:50:07 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <CAMu2m2K0Rg-Hg7afA6rxqKB+MK3T4KS9rW1Wf4HKVq3WKW_0pA@mail.gmail.com>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <CAMu2m2K0Rg-Hg7afA6rxqKB+MK3T4KS9rW1Wf4HKVq3WKW_0pA@mail.gmail.com>
Message-ID: <20140201105007.GC30007@voyager>

Hi Ashish, sure, having the repo format information clearly available will
surely help, that's a good idea.

But the real good solution is to make sure the proper upgrade trail can be
automatically followed from whatever original state you are in, and that
is not difficult to do :-)

On Fri, Jan 31, 2014 at 01:14:45PM -0500, Ashish Agarwal wrote:
> Another possible solution is to have the repository format include its version
> number somewhere. Then make opam always check the version number and give a
> useful message if it doesn't know how to deal with the repo version. The
> message is "sorry, if you want to use opam.ocaml.org (or whichever repo it is),
> then you have to upgrade opam".
> 
> This doesn't provide as smooth of an upgrade path as your proposal, but it
> seems easier to implement. Automatically updating opam and updating the repos a
> user has configured is likely to be buggy. Also, it is possible that a single
> version of opam can work with multiple repo versions.
> 
> In all cases, it should be considered that https://opam.ocaml.org must remain
> the main repo URL. It is the nice URL and we don't want to have the next repo
> be at https://opam2.ocaml.org.
> 
> 
> 
> 
> On Fri, Jan 31, 2014 at 12:28 PM, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
> 
>     [I am moving this discussion away from the BTS and into
>     ?the mailing list, as the issues raised here are of
>     ?general relevance for the future of Opam, and must
>     ?not be lost in the middle of other comments; see
>     ?https://github.com/ocaml/opam/pull/1149 for the original
>     ?discussion
>     --
>     Roberto
>     ]
> 
>     The original issue: what build system should we use to build opam?
>     Should we cook up an ad-hoc Makefile, use a patched ocamlbuild,
>     or use OCamlMakefile, or use ocp-build? Is it evil to embark
>     a build system in the package manager source code?
> 
>     My quick view of these issues:
> 
>     ?1) choice of the build system
> 
>     ? ? ?we are already plagued with multiple build systems, and one of the
>     reason
>     ? ? ?of opam's success is that it allows every package author the freedom
>     to use
>     ? ? ?the one he/she prefers/ is more comfortable with.
>     ? ? ?Opam is no exception, and opam developers must be able to pick the
>     build system
>     ? ? ?they prefer, so I would say, it's their decision to make
> 
>     ?2) embarking a full build system into the source tree of a package
> 
>     ? ? ?in general I would find this a very bad idea: one should have a
>     separate
>     ? ? ?package for the build system, and have it installed before building
>     anything else.
> 
>     ? ? ?Now, what sets opam apart from other OCaml components is the fact that
>     it is
>     ? ? ?the *basic* building block for all the other packages in the
>     repository, and
>     ? ? ?without a running opam, there is no way to install any other package;
>     this
>     ? ? ?is a bootstrap issue, and that's why, for example, opam embarks in
>     src_ext
>     ? ? ?the full source of the dose and libcudf libraries, instead of linking
>     to
>     ? ? ?the packages for dose and libcudf (that do exist in the repository);
>     so
>     ? ? ?in this particular case *only* I personally would not be shocked to
>     see
>     ? ? ?some extra stuff in the src_ext directory (especially considering that
>     ? ? ?all this will need to work on multiple platforms)
> 
>     ? 3) how do we update opam?
> 
>     ? ? ?Now, for another important issue, related to the special status of
>     opam
>     ? ? ?as *the* package manager, and how we should manage it (hence the title
>     ? ? ?of this message).
> 
>     ? ? ?I am a bit unhappy with the current state of affairs, where new
>     ? ? ?versions of opam appear with incompatible changes in the repository
>     format,
>     ? ? ?hence different versions of the repositories: people using old
>     versions
>     ? ? ?of opam get lost in a limbo-like repository with non updated packages
>     ? ? ?until they realise they need to recompile a new version of opam
>     ? ? ?to see the light again.
> 
>     ? ? ?We need to find a way to have opam become a package like the others
>     ? ? ?(with the exception of the embarked code for bootstrapping reasons),
>     ? ? ?and have it become part of opam-repository... the main difficulty
>     ? ? ?lies in the fact that its binaries need to go in special places,
>     ? ? ?and not in the 4.00/3.12 etc. dirs (correct if I'm wrong)
> 
>     ? ? ?Once this is done, a sensible upgrade path would be:
> 
>     ? ? ?Time T : I have opam version n installed, accessing repo version n
> 
>     ? ? ?Time T+delta: some major changes make the old opam unable to use the
>     new
>     ? ? ? ? ? ? ? ? repository format, and the repository migrates to a new
>     place;
>     ? ? ? ? ? ? ? ? a new version n+1 of opam is released, embedding logic to
>     access
>     ? ? ? ? ? ? ? ? the new repository;
>     ? ? ? ? ? ? ? ? opam version n+1 is added also to repo version n
> 
>     ? ? ?Sometimes later: the user of opam n runs an update, sees that a new
>     ? ? ? ? ? ? ? ? ? ? ? version of opam is available, and upgrades it...
>     ? ? ? ? ? ? ? ? ? ? ? he now has the new opam, that updates the references
>     ? ? ? ? ? ? ? ? ? ? ? to the new repository, and keeps following the
>     evolution
>     ? ? ? ? ? ? ? ? ? ? ? of the repository, with no pain
> 
>     ? ? ? I know that maybe at some point the repo format will stabilise, but
>     this
>     ? ? ? simple process will make sure that the lambda-users (private joke:
>     that's
>     ? ? ? equivalent to "jow of the street" in french, but also hints at
>     functional
>     ? ? ? programmers :-)) will not get lost, no matter the changes.
> 
>     ? ? ? Any chances to see this happen soon? A starting point would be to
>     summarize
>     ? ? ? on this list the difficulties that prevent opam from being a "normal"
>     ? ? ? package
> 
>     Cheers
> 
>     --
>     Roberto
>     _______________________________________________
>     opam-devel mailing list
>     opam-devel at lists.ocaml.org
>     http://lists.ocaml.org/listinfo/opam-devel
> 
> 

-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 3020 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        

From anil at recoil.org  Sat Feb  1 11:19:34 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 1 Feb 2014 12:19:34 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <20140201104810.GB30007@voyager>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
Message-ID: <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>

On 1 Feb 2014, at 11:48, Roberto Di Cosmo <roberto at dicosmo.org> wrote:

> On Fri, Jan 31, 2014 at 07:54:20PM +0000, Anil Madhavapeddy wrote:
>> On 31 Jan 2014, at 17:28, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
>> 
>>>    I am a bit unhappy with the current state of affairs, where new
>>>    versions of opam appear with incompatible changes in the repository format,
>>>    hence different versions of the repositories: people using old versions
>>>    of opam get lost in a limbo-like repository with non updated packages
>>>    until they realise they need to recompile a new version of opam
>>>    to see the light again.
>> 
>> To be clear, the reason for OPAM 1.0 to 1.1 being incompatible was "unplanned".  The original release was too strict with it's parsing, and OPAM 1.1 is now far more lax.
>> 
> 
> Sure Anil, nobody is implying here that this was deliberately planned :-)
> Simply, this kind of things just happen, and especially so when a piece
> of software is under heavy development.
> 
> That's why one needs a clear, and simple, mechanism to ensure a smooth
> transition when incompatibilities arrive (and there will be more, and
> unexpected ones, you can bet on it). 
> 
> The one I outlined has no pretense of originality, it's just good practice.

My point (perhaps not made clearly enough) is that we already followed your
practice with OPAM 1.0 -> 1.1.  The `repo` file performs the redirection to
the new repository (from http://opam.ocamlpro.com containing the OPAM 1.0
format repository, to the new one at https://opam.ocaml.org containing the
1.1 format).  Since only OPAM 1.1 looked for the `repo` file, older clients
would continue to work fine, albeit with outdated packages.

Was there some specific change you were proposing for future upgrades of
OPAM?  It's important to know those now, since some of the logic has to be
baked into the current 1.1 client in a point release.

-anil


From roberto at dicosmo.org  Sat Feb  1 13:10:44 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Sat, 1 Feb 2014 14:10:44 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
Message-ID: <20140201131044.GA26719@voyager>

On Sat, Feb 01, 2014 at 12:19:34PM +0100, Anil Madhavapeddy wrote:
> 
> My point (perhaps not made clearly enough) is that we already followed your
> practice with OPAM 1.0 -> 1.1.  

I see your point: good practice says that when moving from repo n to repo n+1
one needs to leave on repo n a trail leading to repo n+1, and your repo file
is a *partial* way of implementing this trail, as recent enough versions of opam
will find the lead and follow it. I say partial because you need to manually
upgrade opam to find out that something changed... and this will not scale when
OCaml will have conquered the world :-)

Now let me make my point clearer: the only way to make sure that, no matter
what changes will happen (and there will be...), nobody is left behind, is
to leave on every repository a version of opam recent enough to perform a
smooth transition. Quoting myself, the important missing part today is the one 
pointed at by the arrow below

     Time T : I have opam version n installed, accessing repo version n

     Time T+delta: some major changes make the old opam unable to use the new
                repository format, and the repository migrates to a new place;
                a new version n+1 of opam is released, embedding logic to access
                the new repository;
 ===>           opam version n+1 is added also to repo version n
 ===>
 ===> Sometimes later: the user of opam n runs an update, sees that a new
 ===>                 version of opam is available, and upgrades it...
                      he now has the new opam, that updates the references
                      to the new repository, and keeps following the evolution
                      of the repository, with no pain

So, basically, my big feature whish is to see opam *packaged* as an opam
package. 

I remember that in the past that was the case, but there were issues
that forced opam to stop being an opam package. 

I wonder what these issues were, and whether they can now easily be solved...
one is the location where the binary opam should be installed: as I said in my
previous mail, it cannot go under the 4.00/3.12/whatever directories, as it is
supposed to be the package manager, maybe there are other?

@samoth : even an approximate brain dump would be very useful here...
I have opened an issue for this purpose https://github.com/ocaml/opam/issues/1150

--
Roberto

From anil at recoil.org  Sat Feb  1 13:18:03 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 1 Feb 2014 14:18:03 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <20140201131044.GA26719@voyager>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
Message-ID: <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>

On 1 Feb 2014, at 14:10, Roberto Di Cosmo <roberto at dicosmo.org> wrote:

> ===>           opam version n+1 is added also to repo version n
> ===>
> ===> Sometimes later: the user of opam n runs an update, sees that a new
> ===>                 version of opam is available, and upgrades it...
>                      he now has the new opam, that updates the references
>                      to the new repository, and keeps following the evolution
>                      of the repository, with no pain
> 
> So, basically, my big feature whish is to see opam *packaged* as an opam
> package. 
> 
> I remember that in the past that was the case, but there were issues
> that forced opam to stop being an opam package. 
> 
> I wonder what these issues were, and whether they can now easily be solved...
> one is the location where the binary opam should be installed: as I said in my
> previous mail, it cannot go under the 4.00/3.12/whatever directories, as it is
> supposed to be the package manager, maybe there are other?

This is a very tricky interaction to get right, and the opportunity cost is
that of focussing on better upstream integration of OPAM itself.

My view is that we should focus on getting the OPAM packages upstreamed more
widely, and (possibly) provide package manager hooks to trigger an OPAM update
along with an OS update.

Getting the recursive dependency sorted for a rolling upgrade is a lot of
work, hard to test, and of questionable utility (since the original OPAM will
be obtained via the OS package manager, and the new one will disappear if the
~/.opam is destroyed by the user, therefore downgrading their version of OPAM).

-anil

From roberto at dicosmo.org  Sat Feb  1 13:40:20 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Sat, 1 Feb 2014 14:40:20 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
Message-ID: <20140201134020.GA6822@voyager>

On Sat, Feb 01, 2014 at 02:18:03PM +0100, Anil Madhavapeddy wrote:
> On 1 Feb 2014, at 14:10, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
> 
> > ===>           opam version n+1 is added also to repo version n
> > ===>
> > ===> Sometimes later: the user of opam n runs an update, sees that a new
> > ===>                 version of opam is available, and upgrades it...
> >                      he now has the new opam, that updates the references
> >                      to the new repository, and keeps following the evolution
> >                      of the repository, with no pain
> > 
> > So, basically, my big feature whish is to see opam *packaged* as an opam
> > package. 
> > 
> > I remember that in the past that was the case, but there were issues
> > that forced opam to stop being an opam package. 
> > 
> > I wonder what these issues were, and whether they can now easily be solved...
> > one is the location where the binary opam should be installed: as I said in my
> > previous mail, it cannot go under the 4.00/3.12/whatever directories, as it is
> > supposed to be the package manager, maybe there are other?
> 

> This is a very tricky interaction to get right, 

Really? I would like to know more about this; please add the factual elements
to #1150

> and the opportunity cost is that of focussing on better upstream integration of OPAM itself.
> 
> My view is that we should focus on getting the OPAM packages upstreamed more
> widely, and (possibly) provide package manager hooks to trigger an OPAM update
> along with an OS update.

Now, that's a tricky issue: with dozens of platforms to support, getting the
opam platform-specific package rolled out in a timely manner, and without
too much skew is definitely far from easy.

> 
> Getting the recursive dependency sorted for a rolling upgrade is a lot of
> work, hard to test, 

Again, I'd like to see more precise arguments about this: I'm surely too
optimistic, but it might just be a matter of adding some specific metadata
for the opam package.

> and of questionable utility (since the original OPAM will be obtained via
> the OS package manager, 

See above

> and the new one will disappear if the
> ~/.opam is destroyed by the user, therefore downgrading their version of OPAM).

Sure, but if I shoot myself in the foot and destroy ~/.opam, that's my proble, right?


> -anil

-- 
Roberto

From amc79 at cam.ac.uk  Sat Feb  1 13:47:55 2014
From: amc79 at cam.ac.uk (Amir Chaudhry)
Date: Sat, 1 Feb 2014 14:47:55 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <20140201134020.GA6822@voyager>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
Message-ID: <637F557C-AEB7-464A-A99C-B4A46E42F505@cam.ac.uk>



Best wishes,
Amir

--
sent via mobile

> On 1 Feb 2014, at 14:40, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
> 
> Sure, but if I shoot myself in the foot and destroy ~/.opam, that's my proble, right?

I wouldn't call this shooting myself in the foot. It's pretty much my default option when I've had issues with the solver (I'm not on mavericks). 

As a user, I've been pretty pleased that I can blow away .opam if I have problems and just get packages again. This is less painful than it used to be as my system compiler is now 4.01.0 so I can make switches easily. 


AC

From anil at recoil.org  Sat Feb  1 13:53:06 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 1 Feb 2014 14:53:06 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <20140201134020.GA6822@voyager>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
Message-ID: <F14122E4-9346-48EC-8620-D21379419199@recoil.org>

On 1 Feb 2014, at 14:40, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
> 
>> This is a very tricky interaction to get right, 
> 
> Really? I would like to know more about this; please add the factual elements
> to #1150

I think the overall problem element is obvious: the opam binary within the
opam installation will be picked up very suddenly during package installation
and upgrades.

Rather than me listing why every single feature of OPAM would potentially break
(consider the 'repo upgrade' step that OPAM 1.0 -> 1.1 does), I would again
suggest that you provide a strong motivation for why you want the feature in the
first place.

> 
> Now, that's a tricky issue: with dozens of platforms to support, getting the
> opam platform-specific package rolled out in a timely manner, and without
> too much skew is definitely far from easy.

Yes, which is why we should focus on getting it done smoothly, rather than
worry about updating OPAM from within OPAM. I've already started on Launchpad,
and have investigated the excellent SUSE open build farm.  My efforts there
have stalled due to the complexity of packaging the existing OPAM tree with
ocp-build, and also because we now essentially depend on aspcud (which is
also rather challenging to package on non-Linux, non-x86, although that is
improving).

> 
> Again, I'd like to see more precise arguments about this: I'm surely too
> optimistic, but it might just be a matter of adding some specific metadata
> for the opam package.

"some specific metadata"?  That's a very long way from a patch :-)

> 
>> and the new one will disappear if the
>> ~/.opam is destroyed by the user, therefore downgrading their version of OPAM).
> 
> Sure, but if I shoot myself in the foot and destroy ~/.opam, that's my proble, right?

No, it'll turn out to be our problem when the user sends us bug reports.
There were a number of these going from the OPAM beta to 1.0, which you should
be able to find against the relevant closed milestones on the bug tracker.
OPAM upgrading OPAM is very confusing behaviour without an explicit 'dist-upgrade'
step.

-anil

From roberto at dicosmo.org  Sat Feb  1 14:12:22 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Sat, 1 Feb 2014 15:12:22 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
Message-ID: <20140201141222.GA8321@voyager>

On Sat, Feb 01, 2014 at 02:53:06PM +0100, Anil Madhavapeddy wrote:
> On 1 Feb 2014, at 14:40, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
> > 
> >> This is a very tricky interaction to get right, 
> > 
> > Really? I would like to know more about this; please add the factual elements
> > to #1150
> 
> I think the overall problem element is obvious: the opam binary within the
> opam installation will be picked up very suddenly during package installation
> and upgrades.
> 
> Rather than me listing why every single feature of OPAM would potentially break
> (consider the 'repo upgrade' step that OPAM 1.0 -> 1.1 does), I would again
> suggest that you provide a strong motivation for why you want the feature in the
> first place.

Sorry, I really do not understand what you mean. On my side, I do believe I made
my point clear enough, and I see no point in continuing this exchange.

Have a nice week-end

--
Roberto


From anil at recoil.org  Sat Feb  1 14:30:47 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 1 Feb 2014 15:30:47 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <20140201141222.GA8321@voyager>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
Message-ID: <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>


On 1 Feb 2014, at 15:12, Roberto Di Cosmo <roberto at dicosmo.org> wrote:

> On Sat, Feb 01, 2014 at 02:53:06PM +0100, Anil Madhavapeddy wrote:
>> On 1 Feb 2014, at 14:40, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
>>> 
>>>> This is a very tricky interaction to get right, 
>>> 
>>> Really? I would like to know more about this; please add the factual elements
>>> to #1150
>> 
>> I think the overall problem element is obvious: the opam binary within the
>> opam installation will be picked up very suddenly during package installation
>> and upgrades.
>> 
>> Rather than me listing why every single feature of OPAM would potentially break
>> (consider the 'repo upgrade' step that OPAM 1.0 -> 1.1 does), I would again
>> suggest that you provide a strong motivation for why you want the feature in the
>> first place.
> 
> Sorry, I really do not understand what you mean. On my side, I do believe I made
> my point clear enough, and I see no point in continuing this exchange.

Let me go back to your original point, which I agree with:

> That's why one needs a clear, and simple, mechanism to ensure a smooth
> transition when incompatibilities arrive (and there will be more, and
> unexpected ones, you can bet on it). 

My point is that the user originally obtains their version of OPAM via their
OS package manager (Homebrew, apt, BSD ports, Yum, etc).  All of these managers
provide a mechanism to warn the user of any upgrade steps that need to happen
when upgrading their distribution, and so is an ideal way to update OPAM
itself in the event of incompatible future changes.

In contrast, `opam update` is part of a *development* workflow, not a system
upgrade path.  I do that when I want to recompile some part of my working
trees to a new package set, and often follow it up with an upgrade (via -u).

If you mix these things up, then it violates a lot of expectations from the
user side, and can lead to the annoying situation where you are forced to deal
with a distribution upgrade when you were expecting to just alter some local
code.  Furthermore, it is quite common to destroy and reinitialize ~/.opam
or set a new OPAMROOT to test for a clean install, and this would subsequently
downgrade OPAM (or worse, cause an error if your shell path cache becomes
invalidated).

We've already seen this problem in action with a number of tools such as
Merlin or ocp-index that really ought to be installed system-wide and not
within OPAM (since a code update could result in the editor tool being
recompiled or downgraded).  Another example is the Mirage command-line tool,
which uses libraries shared with development code.

To summarise, this feature continues to blur the divide between a system tool
(OPAM, Merlin, ocp-index) from a development tool, and should not be
encouraged. I would like to see better support for managing system tools
within OPAM, but I think prioritising upstream integration of them should
be encouraged first.  OPAM is a developer supplement to make source-based
development easier, not a complete replacement for an existing OS package
manager.

I hope that's clearer.  There are many negative reasons for upgrading OPAM
using OPAM, and I've still not seen a good reason for not focussing on
better upstream package manager (and hence external dependency) integration
before anything else.

-anil

From daniel.buenzli at erratique.ch  Sat Feb  1 14:45:40 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Sat, 1 Feb 2014 15:45:40 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
Message-ID: <0D4CF12C6EF849FBA79D689FEE91D3C3@erratique.ch>



Le samedi, 1 f?vrier 2014 ? 15:30, Anil Madhavapeddy a ?crit :

> We've already seen this problem in action with a number of tools such as
> Merlin or ocp-index that really ought to be installed system-wide and not
> within OPAM  

I agree with what is being said regarding OPAM, but I just want to point out that this may not be the case for ocp-index. ocp-index depends on the compiler version, so you rather want ocp-index in each of our switches.  

Best,

Daniel



From anil at recoil.org  Sat Feb  1 15:25:50 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 1 Feb 2014 16:25:50 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <0D4CF12C6EF849FBA79D689FEE91D3C3@erratique.ch>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
 <0D4CF12C6EF849FBA79D689FEE91D3C3@erratique.ch>
Message-ID: <0923B17E-BB98-46EF-A4A3-5B4BE46896DF@recoil.org>

On 1 Feb 2014, at 15:45, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:

> 
> Le samedi, 1 f?vrier 2014 ? 15:30, Anil Madhavapeddy a ?crit :
> 
>> We've already seen this problem in action with a number of tools such as
>> Merlin or ocp-index that really ought to be installed system-wide and not
>> within OPAM  
> 
> I agree with what is being said regarding OPAM, but I just want to point out that this may not be the case for ocp-index. ocp-index depends on the compiler version, so you rather want ocp-index in each of our switches.  

That's a good point.  The same is true for Merlin as well.

-anil

From Fabrice.Le_fessant at inria.fr  Sat Feb  1 18:27:40 2014
From: Fabrice.Le_fessant at inria.fr (Fabrice Le Fessant)
Date: Sat, 1 Feb 2014 19:27:40 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
Message-ID: <CAHvkLrMzpHDNW-_j-tLLz5q71DMoKQSgTX0kB75Ez--0dy5Cmw@mail.gmail.com>

Hi,

  Anil, I am worried that your workflow is not the typical workflow of
OCaml developers. You are an expert in OPAM, having several OPAM
repositories and so on. The typical user I imagine has little
knowledge of OPAM, and expect upgrades of both the repository and of
OPAM to be as simple as possible. I remember using Cabal to install
some Haskell software: I would do it once per year, at most, and
everytime, I was very annoyed to discover some incompatibility that
would require an update of Cabal itself. Now, I fear to see the same
problem with OPAM.

  Let's dream a little: in my ideal world, there would be an OPAM
_bytecode_ binary in the opam-repository, always the lattest stable
version, and able to upgrade whatever version I have of the
opam-repository to the lattest version. Everytime I would do "opam
update", OPAM would first check that binary, download it if needed and
run it instead of itself (using the same trick as done by ocp-build
bytecode to be run on any system), upgrading the repo if needed, and
then do the update. The update would be almost completely transparent
(maybe OPAM would ask the user to authorize the update, since the user
has to trust a binary).

  Even if it's not easy to achieve, because of the risk of breaking
other OPAM features, I think "transparent update" is definitively
something the typical user of OPAM would like and find very cool with
OPAM, and worth adding the feature to the roadmap !
--Fabrice









On Sat, Feb 1, 2014 at 3:32 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
>
> On 1 Feb 2014, at 15:12, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
>
>> On Sat, Feb 01, 2014 at 02:53:06PM +0100, Anil Madhavapeddy wrote:
>>> On 1 Feb 2014, at 14:40, Roberto Di Cosmo <roberto at dicosmo.org> wrote:
>>>>
>>>>> This is a very tricky interaction to get right,
>>>>
>>>> Really? I would like to know more about this; please add the factual elements
>>>> to #1150
>>>
>>> I think the overall problem element is obvious: the opam binary within the
>>> opam installation will be picked up very suddenly during package installation
>>> and upgrades.
>>>
>>> Rather than me listing why every single feature of OPAM would potentially break
>>> (consider the 'repo upgrade' step that OPAM 1.0 -> 1.1 does), I would again
>>> suggest that you provide a strong motivation for why you want the feature in the
>>> first place.
>>
>> Sorry, I really do not understand what you mean. On my side, I do believe I made
>> my point clear enough, and I see no point in continuing this exchange.
>
> Let me go back to your original point, which I agree with:
>
>> That's why one needs a clear, and simple, mechanism to ensure a smooth
>> transition when incompatibilities arrive (and there will be more, and
>> unexpected ones, you can bet on it).
>
> My point is that the user originally obtains their version of OPAM via their
> OS package manager (Homebrew, apt, BSD ports, Yum, etc).  All of these managers
> provide a mechanism to warn the user of any upgrade steps that need to happen
> when upgrading their distribution, and so is an ideal way to update OPAM
> itself in the event of incompatible future changes.
>
> In contrast, `opam update` is part of a *development* workflow, not a system
> upgrade path.  I do that when I want to recompile some part of my working
> trees to a new package set, and often follow it up with an upgrade (via -u).
>
> If you mix these things up, then it violates a lot of expectations from the
> user side, and can lead to the annoying situation where you are forced to deal
> with a distribution upgrade when you were expecting to just alter some local
> code.  Furthermore, it is quite common to destroy and reinitialize ~/.opam
> or set a new OPAMROOT to test for a clean install, and this would subsequently
> downgrade OPAM (or worse, cause an error if your shell path cache becomes
> invalidated).
>
> We've already seen this problem in action with a number of tools such as
> Merlin or ocp-index that really ought to be installed system-wide and not
> within OPAM (since a code update could result in the editor tool being
> recompiled or downgraded).  Another example is the Mirage command-line tool,
> which uses libraries shared with development code.
>
> To summarise, this feature continues to blur the divide between a system tool
> (OPAM, Merlin, ocp-index) from a development tool, and should not be
> encouraged. I would like to see better support for managing system tools
> within OPAM, but I think prioritising upstream integration of them should
> be encouraged first.  OPAM is a developer supplement to make source-based
> development easier, not a complete replacement for an existing OS package
> manager.
>
> I hope that's clearer.  There are many negative reasons for upgrading OPAM
> using OPAM, and I've still not seen a good reason for not focussing on
> better upstream package manager (and hence external dependency) integration
> before anything else.
>
> -anil
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel



-- 
Fabrice LE FESSANT
Chercheur en Informatique
INRIA Paris Rocquencourt -- OCamlPro
Programming Languages and Distributed Systems

From fabien.dagnat at telecom-bretagne.eu  Sat Feb  1 22:19:27 2014
From: fabien.dagnat at telecom-bretagne.eu (Dagnat Fabien)
Date: Sat, 1 Feb 2014 23:19:27 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
Message-ID: <64AAE585-7B96-414B-9F6D-6B1B698E9640@telecom-bretagne.eu>

Hi,

Le 1 f?vr. 2014 ? 15:30, Anil Madhavapeddy <anil at recoil.org> a ?crit :

> My point is that the user originally obtains their version of OPAM via their
> OS package manager (Homebrew, apt, BSD ports, Yum, etc).  All of these managers
> provide a mechanism to warn the user of any upgrade steps that need to happen
> when upgrading their distribution, and so is an ideal way to update OPAM
> itself in the event of incompatible future changes.
> 
> In contrast, `opam update` is part of a *development* workflow, not a system
> upgrade path.  I do that when I want to recompile some part of my working
> trees to a new package set, and often follow it up with an upgrade (via -u).

Sorry, but I disagree here. I'm a regular user of tlmgr the package manager of tex-live and I appreciate the fact that it informs me of upgrade of itself and allows me to upgrade itself. (I'm not plainly satisfied that it forces me to do so...)

We are, more and more, evolving in a jungle of package managers (all using specific workflows for good reasons), I dream that one day, we will be able to simplify this landscape...

Personally, I use the os x system for updates + homebrew + tlmgr + opam + cabal + cpan + rubyGems + easy_install or pip +  firefox update system + emacs package system + eclipse + maven... Hard to even build the list of all the package manager one's use...

Fabien

	Fabien DAGNAT
Ma?tre de conf?rences au d?partement informatique
Responsable de la fili?re Syst?mes Logiciels et R?seaux
T?l. : (0 | 33) 2 29 00 14 09 Technop?le Brest-Iroise, CS 83818
29238 Brest Cedex 3, France 

Une ?cole de l'Institut Mines-T?l?com     

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20140201/3f5644ac/attachment.html>

From daniel.buenzli at erratique.ch  Sat Feb  1 22:31:31 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Sat, 1 Feb 2014 23:31:31 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <CAHvkLrMzpHDNW-_j-tLLz5q71DMoKQSgTX0kB75Ez--0dy5Cmw@mail.gmail.com>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
 <CAHvkLrMzpHDNW-_j-tLLz5q71DMoKQSgTX0kB75Ez--0dy5Cmw@mail.gmail.com>
Message-ID: <3409FFCE3E4B44EB80B085DE7414FA31@erratique.ch>

Le samedi, 1 f?vrier 2014 ? 19:27, Fabrice Le Fessant a ?crit :
> Let's dream a little: in my ideal world, there would be an OPAM
> _bytecode_ binary in the opam-repository, always the lattest stable
> version, and able to upgrade whatever version I have of the
> opam-repository to the lattest version. Everytime I would do "opam
> update", OPAM would first check that binary, download it if needed and
> run it instead of itself (using the same trick as done by ocp-build
> bytecode to be run on any system), upgrading the repo if needed, and
> then do the update. The update would be almost completely transparent
> (maybe OPAM would ask the user to authorize the update, since the user
> has to trust a binary).

That seems a little bit overkill no ? And I don't like these binaries.  

Here's what my naivety says. Why not just have the latest version written in a text file you can GET e.g. at http://opam.ocaml.org/latest-version and on `opam update` check that url too. If there's a mismatch between the user's version and the one in http://opam.ocaml.org/latest-version propose to automatically upgrade by downloading the latest tarball in /tmp configure build and install (at the same previous location opam used to be).

That's actually exactly what I do manually these days, except I get the latest version announce from a mailing list rather than from http://opam.ocaml.org/latest-version.  

Best,

Daniel



From daniel.buenzli at erratique.ch  Sat Feb  1 22:45:46 2014
From: daniel.buenzli at erratique.ch (=?utf-8?Q?Daniel_B=C3=BCnzli?=)
Date: Sat, 1 Feb 2014 23:45:46 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <3409FFCE3E4B44EB80B085DE7414FA31@erratique.ch>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
 <CAHvkLrMzpHDNW-_j-tLLz5q71DMoKQSgTX0kB75Ez--0dy5Cmw@mail.gmail.com>
 <3409FFCE3E4B44EB80B085DE7414FA31@erratique.ch>
Message-ID: <788EE56816C94441ABE4ECF5A6EB6F52@erratique.ch>



Le samedi, 1 f?vrier 2014 ? 23:31, Daniel B?nzli a ?crit :

> Here's what my naivety says. Why not just have the latest version written in a text file you can GET e.g. at http://opam.ocaml.org/latest-version and on `opam update` check that url too. If there's a mismatch between the user's version and the one in http://opam.ocaml.org/latest-version propose to automatically upgrade by downloading the latest tarball in /tmp configure build and install (at the same previous location opam used to be).

Well of course this should be done if you installed it manually in the first place I guess OS package manager would not be that happy with auto updating binaries.  

Daniel



From anil at recoil.org  Sun Feb  2 15:49:01 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 2 Feb 2014 16:49:01 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <CAHvkLrMzpHDNW-_j-tLLz5q71DMoKQSgTX0kB75Ez--0dy5Cmw@mail.gmail.com>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
 <CAHvkLrMzpHDNW-_j-tLLz5q71DMoKQSgTX0kB75Ez--0dy5Cmw@mail.gmail.com>
Message-ID: <CBED70C4-1720-42D4-8A22-2AB352CFE1E7@recoil.org>

On 1 Feb 2014, at 19:27, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:

> Hi,
> 
>  Anil, I am worried that your workflow is not the typical workflow of
> OCaml developers. You are an expert in OPAM, having several OPAM
> repositories and so on. The typical user I imagine has little
> knowledge of OPAM, and expect upgrades of both the repository and of
> OPAM to be as simple as possible. I remember using Cabal to install
> some Haskell software: I would do it once per year, at most, and
> everytime, I was very annoyed to discover some incompatibility that
> would require an update of Cabal itself. Now, I fear to see the same
> problem with OPAM.

Hi Fabrice,

I do agree with you here of course.  I'm just noting from my experience
with running quite a few OPAM-based tutorials in the last year (starting
with the public beta release in ICFP 2012 with Thomas and Yaron, and
subsequently from helping a number of non-OCaml users get started with
Mirage and Real World OCaml, both of which require OPAM), that users
are primarily confused by two things:

- Getting started with OPAM: including utop, their ocamlinit, and all
the other bits and bobs (especially editor integration).

- Broken packages.  Part of the reason for Cabal's irritation are
incorrect package constraints. Now, if you were leave an OPAM install
for a few months and upgrade, then you are using a very untested path
in the solver.  A lot of things have to work *perfectly* to have a
successful package upgrade: the solver has to find a solution, the
uninstall targets have to be correct (or else ocamlfind complains
on the subsequent installation, and the installation must work including
depexts).  If anything goes wrong here, then the user's left to debug
the mess themselves.

I prioritise improving these above anything else to do with OPAM for
my own hacking time.  We've made very significant progress (thanks to
Roberto and the aspcud team) in OPAM 1.1.1, but there is always more to
improve.

For the second point, I must admit I'm a little disappointed by the
lack of feedback to my various posts about doing OPAM bulk builds to
improve the package repository quality.  After the Docker post [1]
(which works on any modern Linux), I also published the logfiles from
the build [2] and triaged a number of bugs [3], but not many other
people have contributed fixes.  I would very much like to get to a 
100% package installation rate, which we can then keep at 100% due to
the ongoing package testing for new pull requests.

[1] http://anil.recoil.org/2013/11/15/docker-and-opam.html
[2] https://github.com/avsm/opam-bulk-logs
[3] https://github.com/ocaml/opam-repository/issues/1304

The question of upgrading OPAM itself has never come up with anyone,
since most users simply used their OS-installed tool to upgrade from
OPAM 1.0 to 1.1.  The only major bug with this approach was because
the release of OCaml 4.01 coincided with OPAM 1.1, and a lot of Mac
users ended up upgrading their system compiler *and* OPAM simultaneously,
which led to complete meltdown of their ~/.opam (see [4])

[4] https://github.com/Homebrew/homebrew/issues/24315

This nasty bug should tell us that upgrades are just very complicated
and need a lot of testing (we tested system compiler updates, and OPAM
version updates, but never together!). I would expect any auto-update
procedure to  at least consider these issues:

- What happens during an upgrade if a newly installed OPAM binary
  inside a ~/.opam requires an upgrade of the OPAM metadata?

- If you do an opam update using the OPAM binary installed within
  the ~/.opam space, how do you avoid a 'text file busy' error
  due to being unable to replace the currently executing binary?
  We see this a lot on Mirage [5] due to the command line tool
  and the libraries being mixed up, as mentioned earlier.

- If the user invokes OPAM without first calling `opam config env`,
  they will use the *old* OPAM with a *new* repository.  This
  is currently a non-issue since there is only one OPAM binary,
  and all sub-commands spawned by it apply the correct env variables.
  The autoupdate scheme proposed will absolutely require that the
  user has correctly set up their `opam config env`, which is
  something that I've observed many users not do (including myself).
  This will thus require support and testing of downgrade.

[5] https://travis-ci.org/mirage/mirage-www/jobs/17859382

>  Even if it's not easy to achieve, because of the risk of breaking
> other OPAM features, I think "transparent update" is definitively
> something the typical user of OPAM would like and find very cool with
> OPAM, and worth adding the feature to the roadmap !

I'm obviously not against adding magical auto-updating, but I hope
that any such proposal will consider the issues i raise above.
Personally, I'm going to spend my limited time working on what
I've observed are the real (but admittedly more boring) problems
with day-to-day OPAM use that I listed above, such as upstream
packaging and improving the repository quality.

More broadly, I do not believe that we should get too dependent on
OPAM and ignore upstream binary packaging. In Xen for example,
the Debian and Fedora packages require binary OCaml packages to
link against, and telling everyone to use OPAM is not an acceptable
answer.  


-anil

From anil at recoil.org  Sun Feb  2 15:53:19 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sun, 2 Feb 2014 16:53:19 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <3409FFCE3E4B44EB80B085DE7414FA31@erratique.ch>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
 <CAHvkLrMzpHDNW-_j-tLLz5q71DMoKQSgTX0kB75Ez--0dy5Cmw@mail.gmail.com>
 <3409FFCE3E4B44EB80B085DE7414FA31@erratique.ch>
Message-ID: <3ABB157F-7343-4D17-AAC3-011CDAC5FC86@recoil.org>

On 1 Feb 2014, at 23:31, Daniel B?nzli <daniel.buenzli at erratique.ch> wrote:

> Le samedi, 1 f?vrier 2014 ? 19:27, Fabrice Le Fessant a ?crit :
>> Let's dream a little: in my ideal world, there would be an OPAM
>> _bytecode_ binary in the opam-repository, always the lattest stable
>> version, and able to upgrade whatever version I have of the
>> opam-repository to the lattest version. Everytime I would do "opam
>> update", OPAM would first check that binary, download it if needed and
>> run it instead of itself (using the same trick as done by ocp-build
>> bytecode to be run on any system), upgrading the repo if needed, and
>> then do the update. The update would be almost completely transparent
>> (maybe OPAM would ask the user to authorize the update, since the user
>> has to trust a binary).
> 
> That seems a little bit overkill no ? And I don't like these binaries.  
> 
> Here's what my naivety says. Why not just have the latest version written in a text file you can GET e.g. at http://opam.ocaml.org/latest-version and on `opam update` check that url too. If there's a mismatch between the user's version and the one in http://opam.ocaml.org/latest-version propose to automatically upgrade by downloading the latest tarball in /tmp configure build and install (at the same previous location opam used to be).
> 
> That's actually exactly what I do manually these days, except I get the latest version announce from a mailing list rather than from http://opam.ocaml.org/latest-version.  

We actually have fledgling support for just this, via the `repo` file
in the root of any OPAM remote:

https://github.com/ocaml/opam-repository/blob/master/repo

What we could do is just add a 'latest-opam-version' field to this
repo file, which would be a hint to the OPAM client to prompt the user
that a newer version is available.

Automating this process would be trickier, since it would corrupt the
checksums that package managers usually maintain if it was initially
installed by that source.  Just seeing the notification would be very
useful, however.

Dangat's point about the multiplicity of package managers reminds me
of a chat I had with the Macports developers a year ago about giving
OPAM a hook into Macports where it could add a hook to run `opam update`
when `ports update` is run.  If someone could investigate if that is
possible on modern package managers, that would be interesting...

-anil

From yminsky at gmail.com  Sun Feb  2 18:34:51 2014
From: yminsky at gmail.com (Yaron Minsky)
Date: Sun, 2 Feb 2014 13:34:51 -0500
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <CBED70C4-1720-42D4-8A22-2AB352CFE1E7@recoil.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
 <CAHvkLrMzpHDNW-_j-tLLz5q71DMoKQSgTX0kB75Ez--0dy5Cmw@mail.gmail.com>
 <CBED70C4-1720-42D4-8A22-2AB352CFE1E7@recoil.org>
Message-ID: <CADKNfhKQ52V5qxUbGpky18qzgg5aR35kETUfCGQSh6vyLq5dwQ@mail.gmail.com>

I broadly agree with Anil's point about priorities.  opam-in-opam
seems tricky, and to me relatively low value.  Making packages and
installation and uninstallation more reliable seems more boring, but
way more important.

In terms of improving package quality, I wonder if we need better
tools to highlight to package owners when their packages fail.  One
approach would be for each package to have a set of owners, and for
each owner to have a status page that alerts them to problems with
their packages.  I think there would be a lot of value in alerting
people when their packages are broken, and it would be even better to
reject their pull requests automatically if it appears that they're
breaking the world.

A useful concept here is blame.  When something is broken, it's nice
if you can (sometimes artificially) choose someone to "blame" for the
problem, i.e., someone who is in some way involved in what has gone
wrong, and can be the responsible person to ensure it gets fixed, or
gets assigned to the right person to fix it.  I wonder if ocamlot (or
whatever triaging system we end upwith) can have some notion of blame
built into it.

y

On Sun, Feb 2, 2014 at 10:49 AM, Anil Madhavapeddy <anil at recoil.org> wrote:
> On 1 Feb 2014, at 19:27, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:
>
>> Hi,
>>
>>  Anil, I am worried that your workflow is not the typical workflow of
>> OCaml developers. You are an expert in OPAM, having several OPAM
>> repositories and so on. The typical user I imagine has little
>> knowledge of OPAM, and expect upgrades of both the repository and of
>> OPAM to be as simple as possible. I remember using Cabal to install
>> some Haskell software: I would do it once per year, at most, and
>> everytime, I was very annoyed to discover some incompatibility that
>> would require an update of Cabal itself. Now, I fear to see the same
>> problem with OPAM.
>
> Hi Fabrice,
>
> I do agree with you here of course.  I'm just noting from my experience
> with running quite a few OPAM-based tutorials in the last year (starting
> with the public beta release in ICFP 2012 with Thomas and Yaron, and
> subsequently from helping a number of non-OCaml users get started with
> Mirage and Real World OCaml, both of which require OPAM), that users
> are primarily confused by two things:
>
> - Getting started with OPAM: including utop, their ocamlinit, and all
> the other bits and bobs (especially editor integration).
>
> - Broken packages.  Part of the reason for Cabal's irritation are
> incorrect package constraints. Now, if you were leave an OPAM install
> for a few months and upgrade, then you are using a very untested path
> in the solver.  A lot of things have to work *perfectly* to have a
> successful package upgrade: the solver has to find a solution, the
> uninstall targets have to be correct (or else ocamlfind complains
> on the subsequent installation, and the installation must work including
> depexts).  If anything goes wrong here, then the user's left to debug
> the mess themselves.
>
> I prioritise improving these above anything else to do with OPAM for
> my own hacking time.  We've made very significant progress (thanks to
> Roberto and the aspcud team) in OPAM 1.1.1, but there is always more to
> improve.
>
> For the second point, I must admit I'm a little disappointed by the
> lack of feedback to my various posts about doing OPAM bulk builds to
> improve the package repository quality.  After the Docker post [1]
> (which works on any modern Linux), I also published the logfiles from
> the build [2] and triaged a number of bugs [3], but not many other
> people have contributed fixes.  I would very much like to get to a
> 100% package installation rate, which we can then keep at 100% due to
> the ongoing package testing for new pull requests.
>
> [1] http://anil.recoil.org/2013/11/15/docker-and-opam.html
> [2] https://github.com/avsm/opam-bulk-logs
> [3] https://github.com/ocaml/opam-repository/issues/1304
>
> The question of upgrading OPAM itself has never come up with anyone,
> since most users simply used their OS-installed tool to upgrade from
> OPAM 1.0 to 1.1.  The only major bug with this approach was because
> the release of OCaml 4.01 coincided with OPAM 1.1, and a lot of Mac
> users ended up upgrading their system compiler *and* OPAM simultaneously,
> which led to complete meltdown of their ~/.opam (see [4])
>
> [4] https://github.com/Homebrew/homebrew/issues/24315
>
> This nasty bug should tell us that upgrades are just very complicated
> and need a lot of testing (we tested system compiler updates, and OPAM
> version updates, but never together!). I would expect any auto-update
> procedure to  at least consider these issues:
>
> - What happens during an upgrade if a newly installed OPAM binary
>   inside a ~/.opam requires an upgrade of the OPAM metadata?
>
> - If you do an opam update using the OPAM binary installed within
>   the ~/.opam space, how do you avoid a 'text file busy' error
>   due to being unable to replace the currently executing binary?
>   We see this a lot on Mirage [5] due to the command line tool
>   and the libraries being mixed up, as mentioned earlier.
>
> - If the user invokes OPAM without first calling `opam config env`,
>   they will use the *old* OPAM with a *new* repository.  This
>   is currently a non-issue since there is only one OPAM binary,
>   and all sub-commands spawned by it apply the correct env variables.
>   The autoupdate scheme proposed will absolutely require that the
>   user has correctly set up their `opam config env`, which is
>   something that I've observed many users not do (including myself).
>   This will thus require support and testing of downgrade.
>
> [5] https://travis-ci.org/mirage/mirage-www/jobs/17859382
>
>>  Even if it's not easy to achieve, because of the risk of breaking
>> other OPAM features, I think "transparent update" is definitively
>> something the typical user of OPAM would like and find very cool with
>> OPAM, and worth adding the feature to the roadmap !
>
> I'm obviously not against adding magical auto-updating, but I hope
> that any such proposal will consider the issues i raise above.
> Personally, I'm going to spend my limited time working on what
> I've observed are the real (but admittedly more boring) problems
> with day-to-day OPAM use that I listed above, such as upstream
> packaging and improving the repository quality.
>
> More broadly, I do not believe that we should get too dependent on
> OPAM and ignore upstream binary packaging. In Xen for example,
> the Debian and Fedora packages require binary OCaml packages to
> link against, and telling everyone to use OPAM is not an acceptable
> answer.
>
>
> -anil
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From mmatalka at gmail.com  Sun Feb  2 18:38:24 2014
From: mmatalka at gmail.com (Malcolm Matalka)
Date: Sun, 02 Feb 2014 18:38:24 +0000
Subject: [opam-devel] How to manage a package manager
In-Reply-To: <CADKNfhKQ52V5qxUbGpky18qzgg5aR35kETUfCGQSh6vyLq5dwQ@mail.gmail.com>
 (Yaron Minsky's message of "Sun, 2 Feb 2014 13:34:51 -0500")
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <DD74C1C0-69F0-49AE-BD43-AA51ACCEF8E2@recoil.org>
 <20140201134020.GA6822@voyager>
 <F14122E4-9346-48EC-8620-D21379419199@recoil.org>
 <20140201141222.GA8321@voyager>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
 <CAHvkLrMzpHDNW-_j-tLLz5q71DMoKQSgTX0kB75Ez--0dy5Cmw@mail.gmail.com>
 <CBED70C4-1720-42D4-8A22-2AB352CFE1E7@recoil.org>
 <CADKNfhKQ52V5qxUbGpky18qzgg5aR35kETUfCGQSh6vyLq5dwQ@mail.gmail.com>
Message-ID: <8738k1bbrz.fsf@gmail.com>

The Nix community is going through a similar discussion about package
ownership.  One suggestion is simply to delete all packages that do not
have an owner.  It's somewhat extreme but does guarantee packages at
least have a contact point that should keep the package up-to-date.

http://lists.science.uu.nl/pipermail/nix-dev/2014-January/012444.html

/M

Yaron Minsky <yminsky at gmail.com> writes:

> I broadly agree with Anil's point about priorities.  opam-in-opam
> seems tricky, and to me relatively low value.  Making packages and
> installation and uninstallation more reliable seems more boring, but
> way more important.
>
> In terms of improving package quality, I wonder if we need better
> tools to highlight to package owners when their packages fail.  One
> approach would be for each package to have a set of owners, and for
> each owner to have a status page that alerts them to problems with
> their packages.  I think there would be a lot of value in alerting
> people when their packages are broken, and it would be even better to
> reject their pull requests automatically if it appears that they're
> breaking the world.
>
> A useful concept here is blame.  When something is broken, it's nice
> if you can (sometimes artificially) choose someone to "blame" for the
> problem, i.e., someone who is in some way involved in what has gone
> wrong, and can be the responsible person to ensure it gets fixed, or
> gets assigned to the right person to fix it.  I wonder if ocamlot (or
> whatever triaging system we end upwith) can have some notion of blame
> built into it.
>
> y
>
> On Sun, Feb 2, 2014 at 10:49 AM, Anil Madhavapeddy <anil at recoil.org> wrote:
>> On 1 Feb 2014, at 19:27, Fabrice Le Fessant <Fabrice.Le_fessant at inria.fr> wrote:
>>
>>> Hi,
>>>
>>>  Anil, I am worried that your workflow is not the typical workflow of
>>> OCaml developers. You are an expert in OPAM, having several OPAM
>>> repositories and so on. The typical user I imagine has little
>>> knowledge of OPAM, and expect upgrades of both the repository and of
>>> OPAM to be as simple as possible. I remember using Cabal to install
>>> some Haskell software: I would do it once per year, at most, and
>>> everytime, I was very annoyed to discover some incompatibility that
>>> would require an update of Cabal itself. Now, I fear to see the same
>>> problem with OPAM.
>>
>> Hi Fabrice,
>>
>> I do agree with you here of course.  I'm just noting from my experience
>> with running quite a few OPAM-based tutorials in the last year (starting
>> with the public beta release in ICFP 2012 with Thomas and Yaron, and
>> subsequently from helping a number of non-OCaml users get started with
>> Mirage and Real World OCaml, both of which require OPAM), that users
>> are primarily confused by two things:
>>
>> - Getting started with OPAM: including utop, their ocamlinit, and all
>> the other bits and bobs (especially editor integration).
>>
>> - Broken packages.  Part of the reason for Cabal's irritation are
>> incorrect package constraints. Now, if you were leave an OPAM install
>> for a few months and upgrade, then you are using a very untested path
>> in the solver.  A lot of things have to work *perfectly* to have a
>> successful package upgrade: the solver has to find a solution, the
>> uninstall targets have to be correct (or else ocamlfind complains
>> on the subsequent installation, and the installation must work including
>> depexts).  If anything goes wrong here, then the user's left to debug
>> the mess themselves.
>>
>> I prioritise improving these above anything else to do with OPAM for
>> my own hacking time.  We've made very significant progress (thanks to
>> Roberto and the aspcud team) in OPAM 1.1.1, but there is always more to
>> improve.
>>
>> For the second point, I must admit I'm a little disappointed by the
>> lack of feedback to my various posts about doing OPAM bulk builds to
>> improve the package repository quality.  After the Docker post [1]
>> (which works on any modern Linux), I also published the logfiles from
>> the build [2] and triaged a number of bugs [3], but not many other
>> people have contributed fixes.  I would very much like to get to a
>> 100% package installation rate, which we can then keep at 100% due to
>> the ongoing package testing for new pull requests.
>>
>> [1] http://anil.recoil.org/2013/11/15/docker-and-opam.html
>> [2] https://github.com/avsm/opam-bulk-logs
>> [3] https://github.com/ocaml/opam-repository/issues/1304
>>
>> The question of upgrading OPAM itself has never come up with anyone,
>> since most users simply used their OS-installed tool to upgrade from
>> OPAM 1.0 to 1.1.  The only major bug with this approach was because
>> the release of OCaml 4.01 coincided with OPAM 1.1, and a lot of Mac
>> users ended up upgrading their system compiler *and* OPAM simultaneously,
>> which led to complete meltdown of their ~/.opam (see [4])
>>
>> [4] https://github.com/Homebrew/homebrew/issues/24315
>>
>> This nasty bug should tell us that upgrades are just very complicated
>> and need a lot of testing (we tested system compiler updates, and OPAM
>> version updates, but never together!). I would expect any auto-update
>> procedure to  at least consider these issues:
>>
>> - What happens during an upgrade if a newly installed OPAM binary
>>   inside a ~/.opam requires an upgrade of the OPAM metadata?
>>
>> - If you do an opam update using the OPAM binary installed within
>>   the ~/.opam space, how do you avoid a 'text file busy' error
>>   due to being unable to replace the currently executing binary?
>>   We see this a lot on Mirage [5] due to the command line tool
>>   and the libraries being mixed up, as mentioned earlier.
>>
>> - If the user invokes OPAM without first calling `opam config env`,
>>   they will use the *old* OPAM with a *new* repository.  This
>>   is currently a non-issue since there is only one OPAM binary,
>>   and all sub-commands spawned by it apply the correct env variables.
>>   The autoupdate scheme proposed will absolutely require that the
>>   user has correctly set up their `opam config env`, which is
>>   something that I've observed many users not do (including myself).
>>   This will thus require support and testing of downgrade.
>>
>> [5] https://travis-ci.org/mirage/mirage-www/jobs/17859382
>>
>>>  Even if it's not easy to achieve, because of the risk of breaking
>>> other OPAM features, I think "transparent update" is definitively
>>> something the typical user of OPAM would like and find very cool with
>>> OPAM, and worth adding the feature to the roadmap !
>>
>> I'm obviously not against adding magical auto-updating, but I hope
>> that any such proposal will consider the issues i raise above.
>> Personally, I'm going to spend my limited time working on what
>> I've observed are the real (but admittedly more boring) problems
>> with day-to-day OPAM use that I listed above, such as upstream
>> packaging and improving the repository quality.
>>
>> More broadly, I do not believe that we should get too dependent on
>> OPAM and ignore upstream binary packaging. In Xen for example,
>> the Debian and Fedora packages require binary OCaml packages to
>> link against, and telling everyone to use OPAM is not an acceptable
>> answer.
>>
>>
>> -anil
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From mehdi at dogguy.org  Sun Feb  2 10:37:04 2014
From: mehdi at dogguy.org (Mehdi Dogguy)
Date: Sun, 2 Feb 2014 11:37:04 +0100
Subject: [opam-devel] [ocaml-platform] OPAM 1.1.1 Released !
In-Reply-To: <16AD65D7-9B29-41F2-A6A4-A3F4B7256F9E@recoil.org>
References: <2402300.iHojb7qSok@agaric>
 <16AD65D7-9B29-41F2-A6A4-A3F4B7256F9E@recoil.org>
Message-ID: <20140202103703.GA6646@dogguy.org>

Anil Madhavapeddy <anil at recoil.org> wrote:
> CCing Mehdi so he can upload a proper 1.1.1 to Debian when he gets a chance.
> 

Just uploaded to Debian/Unstable. I'll monitor its build status, visible on this
interface :

        https://buildd.debian.org/opam

Best,

-- 
Mehdi

From louis.gesbert at ocamlpro.com  Mon Feb  3 10:42:16 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 03 Feb 2014 11:42:16 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <64AAE585-7B96-414B-9F6D-6B1B698E9640@telecom-bretagne.eu>
References: <ocaml/opam/pull/1149@github.com>
 <59E2A1E2-2C41-4DCA-A628-9DE417D7B610@recoil.org>
 <64AAE585-7B96-414B-9F6D-6B1B698E9640@telecom-bretagne.eu>
Message-ID: <2346189.0o7WSxDHeG@ocp-dell>

Hi all,

As much as I would like the upgrade of the binary OPAM to be easy and smooth (and arriving quickly everywhere), this is really a problem of bootstrapping. The real big issue that I see there, as Daniel mentionned, is that there is a multiplicity of ways in which OPAM may have been installed, which makes upgrading it cleanly in the general case impossible. The solution that has been mentionned most would be to have two OPAMs on the system, a local and a global one -- on this point I tend to agree with Anil that this is very likely to cause more problems than it solves, whether we do it with a specific OPAM package or with a dedicated mechanism.

The only clean solution for that would be to get rid of any global package managers, and provide one single, official, cross-platform way of installing OPAM. Then only could we reliably control its original installation and reliably upgrade it. Upstream packages of OPAM would be replaced by packages containing our OPAM installer.

That would require some additional work, though, and I am not sure that would be our best move.

Last, it may be different for OPAM because it itself is a package manager, but when there is a proper system-wide package management system, I generally dislike having individual updaters get in the way and complicate things, ? la MS-Windows.

A note on the repo file: we have room for supporting nice notifications when OPAM has been updated, and the redirection can be done on the older version rather than the new (redirection can be triggered with conditions having the full power of OPAM filters): having an automatically backported mirror for older OPAMs is an option worth considering.

Cheers,
Louis

From thomas at gazagnaire.org  Mon Feb  3 10:54:40 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Mon, 3 Feb 2014 11:54:40 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <20140201131044.GA26719@voyager>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
Message-ID: <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>

> @samoth : even an approximate brain dump would be very useful here...
> I have opened an issue for this purpose https://github.com/ocaml/opam/issues/1150

Regarding the upgrade issues discussed there.

- you can info OPAM clients which minimal version is needed for a given repo (add `opam-version: "1.1.1"` in `opam-repository/repo` . This information will be read by OPAM 1.0 but it will do nothing useful, behaviour which has been fixed by OPAM 1.1.0 to show a nice error message. 

- as we though this was not enough flexible, we instead rely on an other mechanism to ensure forward compatibility: the individual opam files contains an (optional) `opam-version` field which is the minimal version of the client needed to read them. From OPAM 1.1.0, the client starts to skip these instead of failing (as it was the case in 1.0.0). Also, OPAM 1.1.0 will skip the fields it doesn't know about (you can still tell it to fail on error using --strict).

- to help upgrading, we also added a `redirect` field in `opam-repository/repo`, which can be enabled depending on the version of the OPAM client reading it. This will let us having different repo for different versions. The goal was to keep the most up-to-date description compatible with the latest version, and back port automatically new additions to previous repository versions. There is a `--compat-mode-1.0` command-line option which starts to do that, but this is clearly not the most urgent need so this didn't go very far (and won't go very far, unless someone proposes a patch).

- the latest version of OPAM is always available at the same url: https://github.com/ocaml/opam/archive/latest.tar.gz

- why OPAM is not packaged in OPAM ? See for instance https://github.com/ocaml/opam/issues/373 The issue comes up when you mix your system OPAM and the one installed by OPAM itself: for instance, when you initialise your environment (using "eval `opam config env`" in your .bashrc, as some people do). The good solution might be to have a command to install binary globally (`opam install foo --global`) or using some tricks with env variable overrides (see https://github.com/ocaml/opam/pull/1153).

To summarise, I don't see the upgrade between version of OPAM as a real concern from now on (we have just enough machinery needed in OPAM for our needs I think).

Best,
Thomas


From mort at cantab.net  Mon Feb  3 12:32:36 2014
From: mort at cantab.net (Richard Mortier)
Date: Mon, 3 Feb 2014 12:32:36 +0000
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
Message-ID: <CAN2Hq07Uw4eTezbpaUNtN=io=crTdM+ZSaExejSNDC3WCwkc-g@mail.gmail.com>

all;

On 3 February 2014 10:54, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:
>> @samoth : even an approximate brain dump would be very useful here...
>> I have opened an issue for this purpose https://github.com/ocaml/opam/issues/1150
>
> Regarding the upgrade issues discussed there.
>
> ...To summarise, I don't see the upgrade between version of OPAM as a real concern from now on (we have just enough machinery needed in OPAM for our needs I think).
>

coming in a bit late to this thread but fwiw: i agree with thomas
above (and most of the points anil and yaron have made). it does sound
like most of the mechanism needed to handle triggering upgrade of opam
versions is there -- i'd also tend toward thinking that, given the
importance of opam, it would generally be best to inform the user that
there's a new version and (eg) that their packages cannot be upgraded
further until they upgrade opam, but not to force them to do this.

opam-in-opam upgrading is really not a concern for me, as a relatively
simple-minded user of opam, really for two reasons:

1. i install opam via my system package manager (apt or homebrew); i
expect to upgrade it via that too, so that someone else has tested
that it works with the other system library and tool versions i have.
unless opam becomes completely self-contained, it seems better to
distribute to the different distributions dealing with the enormous
test matrix of systems it might be installed on.

2. my impression is that self-updating like this is a tricky thing to
get robust (cf. the very short list of potential issues that anil
raised). i'd probably not trust opam-in-opam upgrading enough to use
it until it had been through at least a few upgrade rounds so someone
else could find the bugs (sorry).

from my point of view, i think there are other aspects of opam that
are more important to fix first. for example, i spent 5-6 hours on
trains on saturday trying to get a fresh install of opam so i could
prep the mirage demos for fosdem. (perhaps a rather harsh network
environment to try something like this, but still...) as i result i
was using a range of intermittent and poorly performing wifi networks
(east midlands trains, st pancras, android hotspot with a giffgaff
SIM) and so i found:

+ i hit timeouts that stopped package installs partway through so had
to be restarted, sometimes after having removed earlier versions of
the packages;

+ i had port blocking prevent some packages being installed which
would then stall a sequence of dependency installations (suggestion:
could we replace all "git://github.com" urls in opam-repository with
"-k git https://github.com" urls?);

+ as i was getting very little feedback on progress (even with
`--verbose --debug`, package installation would frequently stall at
"git remote set-url ...", often for minutes), i found myself assuming
yet another network issue had occurred and killing the process, which
probably didn't help leave things in a consistent state. more
fine-grained levels feedback would also be nice (eg., i often want to
see that packages are downloading ok but i don't usually need to see
all the build output).

+ by about the 3rd go, i found myself removing the default remote
(https://opam.ocaml.org/urls.txt) and adding the direct github url
with -k git as the first thing i did, as the sync `opam update` does
with the https://opam.ocaml.org/urls.txt default seemed extremely slow
in comparison. (i haven't looked, but does it do any checking to see
whether that file changed before trying to pull it?)

+ opam install of a pinned package is a bit brittle if you're in the
middle of editing the contents -- emacs appears to create symlinks
which can end up dangling, which breaks the rsync (possibly the -L
switch would help?) usually with several pages of output to trawl
through to notice what happened.

apologies if that comes across as a rant -- it's not meant to be! if
it would help, i'm happy to add issues to github; i wasn't sure how to
carve them up though.

cheers,

-- 
Richard Mortier
mort at cantab.net

From anil at recoil.org  Mon Feb  3 13:22:10 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 3 Feb 2014 13:22:10 +0000
Subject: [opam-devel] [ocaml-platform] OPAM 1.1.1 Released !
In-Reply-To: <20140202103703.GA6646@dogguy.org>
References: <2402300.iHojb7qSok@agaric>
 <16AD65D7-9B29-41F2-A6A4-A3F4B7256F9E@recoil.org>
 <20140202103703.GA6646@dogguy.org>
Message-ID: <28A95AB0-08FF-473E-B18C-CAE6E6EB9C5A@recoil.org>

On 2 Feb 2014, at 10:37, Mehdi Dogguy <mehdi at dogguy.org> wrote:

> Anil Madhavapeddy <anil at recoil.org> wrote:
>> CCing Mehdi so he can upload a proper 1.1.1 to Debian when he gets a chance.
>> 
> 
> Just uploaded to Debian/Unstable. I'll monitor its build status, visible on this
> interface :
> 
>        https://buildd.debian.org/opam
> 

Thanks!  Just wanted to check one thing: I added aspcud to the "Recommend" dependencies in the Ubuntu PPA.  Could we do the same for Debian?  This will give users the best solver by default.

cheers,
Anil


From mehdi at dogguy.org  Mon Feb  3 13:26:22 2014
From: mehdi at dogguy.org (Mehdi Dogguy)
Date: Mon, 3 Feb 2014 14:26:22 +0100
Subject: [opam-devel] [ocaml-platform] OPAM 1.1.1 Released !
In-Reply-To: <28A95AB0-08FF-473E-B18C-CAE6E6EB9C5A@recoil.org>
References: <2402300.iHojb7qSok@agaric>
 <16AD65D7-9B29-41F2-A6A4-A3F4B7256F9E@recoil.org>
 <20140202103703.GA6646@dogguy.org>
 <28A95AB0-08FF-473E-B18C-CAE6E6EB9C5A@recoil.org>
Message-ID: <20140203132622.GA4360@dogguy.org>

On Mon, Feb 03, 2014 at 01:22:10PM +0000, Anil Madhavapeddy <anil at recoil.org> wrote:
> Thanks!  Just wanted to check one thing: I added aspcud to the
> "Recommend" dependencies in the Ubuntu PPA.  Could we do the same
> for Debian?  This will give users the best solver by default.

Sure. I'll do that as soon as 1.1.1 migrates to testing.

Best,

-- 
Mehdi Dogguy

From roberto at dicosmo.org  Mon Feb  3 14:29:35 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Mon, 3 Feb 2014 15:29:35 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
Message-ID: <20140203142935.GA19573@voyager>

Thanks Thomas,
       this is the kind of information that I was looking for
in the first place. I'll look at it in detail.

As for the sources of potential confusion between the "global" and "local"
installation of an opam client, I do suspect they are still present today as
soon as one mixes up two opam installations (for example, a version distributed
as a distribution-specific package, and a version installed "by hand"), so
this is basically a problem orthogonal to having opam as an opam package.

--
Roberto

On Mon, Feb 03, 2014 at 11:54:40AM +0100, Thomas Gazagnaire wrote:
> > @samoth : even an approximate brain dump would be very useful here...
> > I have opened an issue for this purpose https://github.com/ocaml/opam/issues/1150
> 
> Regarding the upgrade issues discussed there.
> 
> - you can info OPAM clients which minimal version is needed for a given repo (add `opam-version: "1.1.1"` in `opam-repository/repo` . This information will be read by OPAM 1.0 but it will do nothing useful, behaviour which has been fixed by OPAM 1.1.0 to show a nice error message. 
> 
> - as we though this was not enough flexible, we instead rely on an other mechanism to ensure forward compatibility: the individual opam files contains an (optional) `opam-version` field which is the minimal version of the client needed to read them. From OPAM 1.1.0, the client starts to skip these instead of failing (as it was the case in 1.0.0). Also, OPAM 1.1.0 will skip the fields it doesn't know about (you can still tell it to fail on error using --strict).
> 
> - to help upgrading, we also added a `redirect` field in `opam-repository/repo`, which can be enabled depending on the version of the OPAM client reading it. This will let us having different repo for different versions. The goal was to keep the most up-to-date description compatible with the latest version, and back port automatically new additions to previous repository versions. There is a `--compat-mode-1.0` command-line option which starts to do that, but this is clearly not the most urgent need so this didn't go very far (and won't go very far, unless someone proposes a patch).
> 
> - the latest version of OPAM is always available at the same url: https://github.com/ocaml/opam/archive/latest.tar.gz
> 
> - why OPAM is not packaged in OPAM ? See for instance https://github.com/ocaml/opam/issues/373 The issue comes up when you mix your system OPAM and the one installed by OPAM itself: for instance, when you initialise your environment (using "eval `opam config env`" in your .bashrc, as some people do). The good solution might be to have a command to install binary globally (`opam install foo --global`) or using some tricks with env variable overrides (see https://github.com/ocaml/opam/pull/1153).
> 
> To summarise, I don't see the upgrade between version of OPAM as a real concern from now on (we have just enough machinery needed in OPAM for our needs I think).
> 
> Best,
> Thomas
> 

-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 3020 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        

From anil at recoil.org  Mon Feb  3 15:27:30 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 3 Feb 2014 15:27:30 +0000
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
Message-ID: <CE52426C-3022-4491-B152-327E0526EA43@recoil.org>


On 3 Feb 2014, at 10:54, Thomas Gazagnaire <thomas at gazagnaire.org> wrote:

>> @samoth : even an approximate brain dump would be very useful here...
>> I have opened an issue for this purpose https://github.com/ocaml/opam/issues/1150
> 
> Regarding the upgrade issues discussed there.
> 
> - you can info OPAM clients which minimal version is needed for a given repo (add `opam-version: "1.1.1"` in `opam-repository/repo` . This information will be read by OPAM 1.0 but it will do nothing useful, behaviour which has been fixed by OPAM 1.1.0 to show a nice error message. 
> 
> - as we though this was not enough flexible, we instead rely on an other mechanism to ensure forward compatibility: the individual opam files contains an (optional) `opam-version` field which is the minimal version of the client needed to read them. From OPAM 1.1.0, the client starts to skip these instead of failing (as it was the case in 1.0.0). Also, OPAM 1.1.0 will skip the fields it doesn't know about (you can still tell it to fail on error using --strict).
> 
> - to help upgrading, we also added a `redirect` field in `opam-repository/repo`, which can be enabled depending on the version of the OPAM client reading it. This will let us having different repo for different versions. The goal was to keep the most up-to-date description compatible with the latest version, and back port automatically new additions to previous repository versions. There is a `--compat-mode-1.0` command-line option which starts to do that, but this is clearly not the most urgent need so this didn't go very far (and won't go very far, unless someone proposes a patch).
> 
> - the latest version of OPAM is always available at the same url: https://github.com/ocaml/opam/archive/latest.tar.gz
> 

There's one missing bit of machinery in all this -- how to notify an old client that a new client is available.  The options above allow us to reject a client, but not to notify the client that an upgrade is possible.

Hence my suggestion to add a 'latest-client: <url>' field.  This URL could be cached by the client and the contents displayed when it changes (e.g. a changelog).  David Sheets pointed out that we need to consider what to do if multiple remotes have different URLs, for instance.  

Incidentally, I just got a mail from Jacques Garrigue complaining that he couldn't build ocaml.org, and it was because (please, noone laugh) his version of OPAM was still 1.0.  The problem here is that there is no error message in this case -- the user is simply stuck with older package revisions.

Should we declare OPAM 1.0 "end of life" at some point soon, and push something to the OCamlPro/opam-repository repo to reflect this (perhaps delete all the packages and add one saying "upgrade_to_opam_1_1")?  Louis, perhaps we could check the ocamlpro apache logs to determine how many people are still hitting that server?

-anil

From anil at recoil.org  Mon Feb  3 15:33:37 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 3 Feb 2014 15:33:37 +0000
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <20140203142935.GA19573@voyager>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
 <20140203142935.GA19573@voyager>
Message-ID: <4411A9DB-A263-47C2-8EED-309C6EC65837@recoil.org>

On 3 Feb 2014, at 14:29, Roberto Di Cosmo <roberto at dicosmo.org> wrote:

> As for the sources of potential confusion between the "global" and "local"
> installation of an opam client, I do suspect they are still present today as
> soon as one mixes up two opam installations (for example, a version distributed
> as a distribution-specific package, and a version installed "by hand"), so
> this is basically a problem orthogonal to having opam as an opam package.

This isn't quite the same as having opam-as-an-opam package.  If you manually
install clashing OPAM versions, you probably have a stable PATH pointing to
just one copy, and it won't change.

We cannot make the same guarantee of `opam config env` being executed due to
the vagaries of interactive-vs-non-interactive shells.  I'm pretty sure that
our behaviour for some shells such as Fish or Ksh is currently incorrect, but
I've not had a chance to test them personally.

One defensive feature to add in this case is to stamp the required OPAM client
version in ~/.opam and refuse to run if it's too low.  Thomas, Louis, this
check is only per-remote at the moment and not enforced globally within the
OPAM state is it?

-anil

From anil at recoil.org  Mon Feb  3 15:43:44 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 3 Feb 2014 15:43:44 +0000
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <CAN2Hq07Uw4eTezbpaUNtN=io=crTdM+ZSaExejSNDC3WCwkc-g@mail.gmail.com>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
 <CAN2Hq07Uw4eTezbpaUNtN=io=crTdM+ZSaExejSNDC3WCwkc-g@mail.gmail.com>
Message-ID: <94095B25-0B41-47A6-83F5-E0EC3356A45F@recoil.org>

On 3 Feb 2014, at 12:32, Richard Mortier <mort at cantab.net> wrote:

> 
> + opam install of a pinned package is a bit brittle if you're in the
> middle of editing the contents -- emacs appears to create symlinks
> which can end up dangling, which breaks the rsync (possibly the -L
> switch would help?) usually with several pages of output to trawl
> through to notice what happened.
> 
> apologies if that comes across as a rant -- it's not meant to be! if
> it would help, i'm happy to add issues to github; i wasn't sure how to
> carve them up though.

These are all extremely useful comments (and I've hit the rsync bug
myself on several occasions).  Please do file bug reports for them.

I've got a helper script to locally clone and pin git remotes for
exactly the 'offline work' reason, so I could clean that up.  Also,
we could improve the documentation of how to create a local package
archive, as I don't see that on the OPAM wiki.

-anil

From anil at recoil.org  Mon Feb  3 17:03:27 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 3 Feb 2014 17:03:27 +0000
Subject: [opam-devel] caching large Travis runs
Message-ID: <2AD6B956-6F62-4D1A-A64F-2D11822F817D@recoil.org>

Just wanted to point out this useful script that the Frenetic folks have put together to improve build times for testing projects using Core.

https://github.com/seliopou/opam-street/blob/master/.travis-ci.sh

I'll see if we can put together something based on package hashes on an ongoing basis if anyone's interested.  I'd prefer to run clean builds for most of our tests, but this is a really nice speedup for projects that depend explicitly on Core/Async and want faster response times from their CI.

Jeremie: we could put together a mega Core/Async PPA on Ubuntu Launchpad to make this even easier.  Jon Ludlam at Citrix had a similar solution (pickling up ~/.opam) for Xen a while back, so Ccing him to see if that script's available anywhere.

-anil

From thomas at gazagnaire.org  Mon Feb  3 18:00:24 2014
From: thomas at gazagnaire.org (Thomas Gazagnaire)
Date: Mon, 3 Feb 2014 19:00:24 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <4411A9DB-A263-47C2-8EED-309C6EC65837@recoil.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com> <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
 <20140203142935.GA19573@voyager>
 <4411A9DB-A263-47C2-8EED-309C6EC65837@recoil.org>
Message-ID: <C5536157-B40E-4472-95B2-6EAB31994A33@gazagnaire.org>

> One defensive feature to add in this case is to stamp the required OPAM client
> version in ~/.opam and refuse to run if it's too low.  Thomas, Louis, this
> check is only per-remote at the moment and not enforced globally within the
> OPAM state is it?

Yup, simply edit your ~/.opam/config and replace `opam-version: "1.1.1"` by "1.1.2". If you run 'opam list` you get:

$ opam list
[ERROR] Your version of OPAM (1.1.1) is not recent enough to read ~/.opam/config. Upgrade OPAM to a more recent version (at least 1.1.2) to read this file correctly.

--
Thomas

From roberto at dicosmo.org  Mon Feb  3 19:26:43 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Mon, 3 Feb 2014 20:26:43 +0100
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <C5536157-B40E-4472-95B2-6EAB31994A33@gazagnaire.org>
References: <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
 <20140203142935.GA19573@voyager>
 <4411A9DB-A263-47C2-8EED-309C6EC65837@recoil.org>
 <C5536157-B40E-4472-95B2-6EAB31994A33@gazagnaire.org>
Message-ID: <20140203192643.GA29042@voyager>

On Mon, Feb 03, 2014 at 07:00:24PM +0100, Thomas Gazagnaire wrote:
> > One defensive feature to add in this case is to stamp the required OPAM client
> > version in ~/.opam and refuse to run if it's too low.  Thomas, Louis, this
> > check is only per-remote at the moment and not enforced globally within the
> > OPAM state is it?
> 
> Yup, simply edit your ~/.opam/config and replace `opam-version: "1.1.1"` by "1.1.2". If you run 'opam list` you get:
> 
> $ opam list
> [ERROR] Your version of OPAM (1.1.1) is not recent enough to read ~/.opam/config. Upgrade OPAM to a more recent version (at least 1.1.2) to read this file correctly.
> 
> --
> Thomas

Nice!

-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 3020 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        

From mort at cantab.net  Mon Feb  3 19:33:20 2014
From: mort at cantab.net (Richard Mortier)
Date: Mon, 3 Feb 2014 19:33:20 +0000
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
 Build clarification (#1149))
In-Reply-To: <94095B25-0B41-47A6-83F5-E0EC3356A45F@recoil.org>
References: <ocaml/opam/pull/1149@github.com>
 <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
 <CAN2Hq07Uw4eTezbpaUNtN=io=crTdM+ZSaExejSNDC3WCwkc-g@mail.gmail.com>
 <94095B25-0B41-47A6-83F5-E0EC3356A45F@recoil.org>
Message-ID: <CAN2Hq05873wUT5wYTBAQcHvbnFJwgrPefjxwY94bkD8hRUU9vA@mail.gmail.com>

On 3 February 2014 15:43, Anil Madhavapeddy <anil at recoil.org> wrote:
> On 3 Feb 2014, at 12:32, Richard Mortier <mort at cantab.net> wrote:
>
>> apologies if that comes across as a rant -- it's not meant to be! if
>> it would help, i'm happy to add issues to github; i wasn't sure how to
>> carve them up though.
>
> These are all extremely useful comments (and I've hit the rsync bug
> myself on several occasions).  Please do file bug reports for them.

done!

> I've got a helper script to locally clone and pin git remotes for
> exactly the 'offline work' reason, so I could clean that up.  Also,
> we could improve the documentation of how to create a local package
> archive, as I don't see that on the OPAM wiki.

...that sounds useful, particularly if there's an easy one-shot way to
get that package archive up-to-date, and to potentially have multiple
instances of a package archive locally -- so that, eg., i could have a
bunch of the "stable" mirage repos, and a bunch of the "devel" or "rc"
repos or something.

-- 
Richard Mortier
mort at cantab.net

From anil at recoil.org  Mon Feb  3 20:36:52 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 3 Feb 2014 20:36:52 +0000
Subject: [opam-devel] How to manage a package manager (Was: Re: [opam]
	Build clarification (#1149))
In-Reply-To: <20140203192643.GA29042@voyager>
References: <ocaml/opam/pull/1149/c33806879@github.com>
 <20140131172811.GA32459@voyager>
 <75F62E44-264B-45E3-B806-58638B6045C1@recoil.org>
 <20140201104810.GB30007@voyager>
 <53ACE2C4-28A6-4D2B-B3F1-D29BA94ABDBC@recoil.org>
 <20140201131044.GA26719@voyager>
 <4145D0F8-69D6-41C7-A157-C25E4C940E3C@gazagnaire.org>
 <20140203142935.GA19573@voyager>
 <4411A9DB-A263-47C2-8EED-309C6EC65837@recoil.org>
 <C5536157-B40E-4472-95B2-6EAB31994A33@gazagnaire.org>
 <20140203192643.GA29042@voyager>
Message-ID: <5780153A-EBDC-4536-8779-3B21E6249EBA@recoil.org>

On 3 Feb 2014, at 19:26, Roberto Di Cosmo <roberto at dicosmo.org> wrote:

> On Mon, Feb 03, 2014 at 07:00:24PM +0100, Thomas Gazagnaire wrote:
>>> One defensive feature to add in this case is to stamp the required OPAM client
>>> version in ~/.opam and refuse to run if it's too low.  Thomas, Louis, this
>>> check is only per-remote at the moment and not enforced globally within the
>>> OPAM state is it?
>> 
>> Yup, simply edit your ~/.opam/config and replace `opam-version: "1.1.1"` by "1.1.2". If you run 'opam list` you get:
>> 
>> $ opam list
>> [ERROR] Your version of OPAM (1.1.1) is not recent enough to read ~/.opam/config. Upgrade OPAM to a more recent version (at least 1.1.2) to read this file correctly.
>> 
>> --
>> Thomas
> 
> Nice!

Yep, that's very handy!

-anil

From anil at recoil.org  Tue Feb  4 13:37:52 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 4 Feb 2014 13:37:52 +0000
Subject: [opam-devel] [ocaml-platform] OPAM 1.1.1 Released !
In-Reply-To: <20140203132622.GA4360@dogguy.org>
References: <2402300.iHojb7qSok@agaric>
 <16AD65D7-9B29-41F2-A6A4-A3F4B7256F9E@recoil.org>
 <20140202103703.GA6646@dogguy.org>
 <28A95AB0-08FF-473E-B18C-CAE6E6EB9C5A@recoil.org>
 <20140203132622.GA4360@dogguy.org>
Message-ID: <A226F28F-FF53-4EB7-8341-9F5CC4E6FF4B@recoil.org>

On 3 Feb 2014, at 13:26, Mehdi Dogguy <mehdi at dogguy.org> wrote:

> On Mon, Feb 03, 2014 at 01:22:10PM +0000, Anil Madhavapeddy <anil at recoil.org> wrote:
>> Thanks!  Just wanted to check one thing: I added aspcud to the
>> "Recommend" dependencies in the Ubuntu PPA.  Could we do the same
>> for Debian?  This will give users the best solver by default.
> 
> Sure. I'll do that as soon as 1.1.1 migrates to testing.

I took a quick look at the overall state of packaging and added it to the OPAM
wiki page here:

https://github.com/ocaml/opam/wiki/Distributions

Have I missed any?  I'll e-mail the OCaml list once the Ubuntu PPA copies
finish.  I think it's important to have a consistent story for Aspcud ports
on various platforms, since it's quite confusing to have it on by default
on some platforms but not others.

-anil

From roberto at dicosmo.org  Tue Feb  4 13:55:38 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Tue, 4 Feb 2014 14:55:38 +0100
Subject: [opam-devel] [ocaml-platform] OPAM 1.1.1 Released !
In-Reply-To: <A226F28F-FF53-4EB7-8341-9F5CC4E6FF4B@recoil.org>
References: <2402300.iHojb7qSok@agaric>
 <16AD65D7-9B29-41F2-A6A4-A3F4B7256F9E@recoil.org>
 <20140202103703.GA6646@dogguy.org>
 <28A95AB0-08FF-473E-B18C-CAE6E6EB9C5A@recoil.org>
 <20140203132622.GA4360@dogguy.org>
 <A226F28F-FF53-4EB7-8341-9F5CC4E6FF4B@recoil.org>
Message-ID: <20140204135538.GA13792@voyager>

Cool! Nice summary

On Tue, Feb 04, 2014 at 01:37:52PM +0000, Anil Madhavapeddy wrote:
> On 3 Feb 2014, at 13:26, Mehdi Dogguy <mehdi at dogguy.org> wrote:
> 
> > On Mon, Feb 03, 2014 at 01:22:10PM +0000, Anil Madhavapeddy <anil at recoil.org> wrote:
> >> Thanks!  Just wanted to check one thing: I added aspcud to the
> >> "Recommend" dependencies in the Ubuntu PPA.  Could we do the same
> >> for Debian?  This will give users the best solver by default.
> > 
> > Sure. I'll do that as soon as 1.1.1 migrates to testing.
> 
> I took a quick look at the overall state of packaging and added it to the OPAM
> wiki page here:
> 
> https://github.com/ocaml/opam/wiki/Distributions
> 
> Have I missed any?  I'll e-mail the OCaml list once the Ubuntu PPA copies
> finish.  I think it's important to have a consistent story for Aspcud ports
> on various platforms, since it's quite confusing to have it on by default
> on some platforms but not others.
> 
> -anil
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 3020 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        

From fabien.dagnat at telecom-bretagne.eu  Wed Feb  5 09:44:44 2014
From: fabien.dagnat at telecom-bretagne.eu (Dagnat Fabien)
Date: Wed, 5 Feb 2014 10:44:44 +0100
Subject: [opam-devel] [ocaml-platform] OPAM 1.1.1 Released !
In-Reply-To: <A226F28F-FF53-4EB7-8341-9F5CC4E6FF4B@recoil.org>
References: <2402300.iHojb7qSok@agaric>
 <16AD65D7-9B29-41F2-A6A4-A3F4B7256F9E@recoil.org>
 <20140202103703.GA6646@dogguy.org>
 <28A95AB0-08FF-473E-B18C-CAE6E6EB9C5A@recoil.org>
 <20140203132622.GA4360@dogguy.org>
 <A226F28F-FF53-4EB7-8341-9F5CC4E6FF4B@recoil.org>
Message-ID: <751808C0-1757-4AFC-BCCF-B4738073505F@telecom-bretagne.eu>

Hello,

Just a simple message to thank you all for your investment in opam, a really great tool. Indeed, the upgrade to the new version today has worked smoothly (using brew on a mac).

Fabien, a happy user of opam
Le 4 f?vr. 2014 ? 14:37, Anil Madhavapeddy <anil at recoil.org> a ?crit :

> On 3 Feb 2014, at 13:26, Mehdi Dogguy <mehdi at dogguy.org> wrote:
> 
>> On Mon, Feb 03, 2014 at 01:22:10PM +0000, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> Thanks!  Just wanted to check one thing: I added aspcud to the
>>> "Recommend" dependencies in the Ubuntu PPA.  Could we do the same
>>> for Debian?  This will give users the best solver by default.
>> 
>> Sure. I'll do that as soon as 1.1.1 migrates to testing.
> 
> I took a quick look at the overall state of packaging and added it to the OPAM
> wiki page here:
> 
> https://github.com/ocaml/opam/wiki/Distributions
> 
> Have I missed any?  I'll e-mail the OCaml list once the Ubuntu PPA copies
> finish.  I think it's important to have a consistent story for Aspcud ports
> on various platforms, since it's quite confusing to have it on by default
> on some platforms but not others.
> 
> -anil
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

	Fabien DAGNAT
Ma?tre de conf?rences au d?partement informatique
Responsable de la fili?re Syst?mes Logiciels et R?seaux
T?l. : (0 | 33) 2 29 00 14 09 Technop?le Brest-Iroise, CS 83818
29238 Brest Cedex 3, France 

Une ?cole de l'Institut Mines-T?l?com     

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20140205/9025f0d4/attachment.html>

From amirmc at gmail.com  Wed Feb  5 16:07:58 2014
From: amirmc at gmail.com (Amir Chaudhry)
Date: Wed, 5 Feb 2014 16:07:58 +0000
Subject: [opam-devel] Adding `--without-aspcud` to OPAM quick install
Message-ID: <89DC894E-F8E2-4E6E-9C85-CAFD5B3C60E6@gmail.com>

Folks,

This is just an FYI and so it's documented somewhere.

I'm on OSX Mountain Lion and just tried a `brew reinstall opam`.  It 'unexpectedly' failed for me as aspcud is a recommended dependency and one of its dependencies (gringo) requires Mavericks.  I say 'unexpected' as I'd assumed homebrew would detect the failure and proceed without that dependency. However, I just learned that's not how it works [1].  

To install opam via homebrew on Mountain Lion, the incantation is now `brew install opam --without-aspcud'.  To avoid other users coming across this, I've edited the opam wiki [2] to add this line and also the RWO install wiki [3].

Note: I'm not intending to move to Mavericks in the immediate future so if there are Mountain Lion specific things people need/want to try, please let me know.  

AC

[1] https://github.com/Homebrew/homebrew/wiki/Formula-Cookbook
[2] https://github.com/ocaml/opam/wiki/Quick_Install
[3] http://realworldocaml.org/install

From anil at recoil.org  Wed Feb  5 16:18:00 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Wed, 5 Feb 2014 16:18:00 +0000
Subject: [opam-devel] Adding `--without-aspcud` to OPAM quick install
In-Reply-To: <89DC894E-F8E2-4E6E-9C85-CAFD5B3C60E6@gmail.com>
References: <89DC894E-F8E2-4E6E-9C85-CAFD5B3C60E6@gmail.com>
Message-ID: <522ADEDD-7977-42A0-82DC-BECD3109FE32@recoil.org>

On 5 Feb 2014, at 16:07, Amir Chaudhry <amirmc at gmail.com> wrote:

> Folks,
> 
> This is just an FYI and so it's documented somewhere.
> 
> I'm on OSX Mountain Lion and just tried a `brew reinstall opam`.  It 'unexpectedly' failed for me as aspcud is a recommended dependency and one of its dependencies (gringo) requires Mavericks.  I say 'unexpected' as I'd assumed homebrew would detect the failure and proceed without that dependency. However, I just learned that's not how it works [1].  
> 
> To install opam via homebrew on Mountain Lion, the incantation is now `brew install opam --without-aspcud'.  To avoid other users coming across this, I've edited the opam wiki [2] to add this line and also the RWO install wiki [3].
> 
> Note: I'm not intending to move to Mavericks in the immediate future so if there are Mountain Lion specific things people need/want to try, please let me know.  

I'd like to fix Gringo on Mountain Lion.  The only slight hitch is that it may be somewhat destructive to your existing setup, since we'll need to go through several permutations of gcc/g++ versions to determine what works for the C++ dialect that Gringo needs.

Can you set up a VMWare Fusion copy of Mountain Lion on your laptop perhaps?

-anil

From amirmc at gmail.com  Wed Feb  5 16:29:07 2014
From: amirmc at gmail.com (Amir Chaudhry)
Date: Wed, 5 Feb 2014 16:29:07 +0000
Subject: [opam-devel] Adding `--without-aspcud` to OPAM quick install
In-Reply-To: <522ADEDD-7977-42A0-82DC-BECD3109FE32@recoil.org>
References: <89DC894E-F8E2-4E6E-9C85-CAFD5B3C60E6@gmail.com>
 <522ADEDD-7977-42A0-82DC-BECD3109FE32@recoil.org>
Message-ID: <C23A54A0-C9A3-4930-8530-C12A6C3681AB@gmail.com>


On 5 Feb 2014, at 16:18, Anil Madhavapeddy <anil at recoil.org> wrote:

> On 5 Feb 2014, at 16:07, Amir Chaudhry <amirmc at gmail.com> wrote:
> 
>> Folks,
>> 
>> This is just an FYI and so it's documented somewhere.
>> 
>> I'm on OSX Mountain Lion and just tried a `brew reinstall opam`.  It 'unexpectedly' failed for me as aspcud is a recommended dependency and one of its dependencies (gringo) requires Mavericks.  I say 'unexpected' as I'd assumed homebrew would detect the failure and proceed without that dependency. However, I just learned that's not how it works [1].  
>> 
>> To install opam via homebrew on Mountain Lion, the incantation is now `brew install opam --without-aspcud'.  To avoid other users coming across this, I've edited the opam wiki [2] to add this line and also the RWO install wiki [3].
>> 
>> Note: I'm not intending to move to Mavericks in the immediate future so if there are Mountain Lion specific things people need/want to try, please let me know.  
> 
> I'd like to fix Gringo on Mountain Lion.  The only slight hitch is that it may be somewhat destructive to your existing setup, since we'll need to go through several permutations of gcc/g++ versions to determine what works for the C++ dialect that Gringo needs.
> 
> Can you set up a VMWare Fusion copy of Mountain Lion on your laptop perhaps?

Happy to try this.  I don't have a copy of Fusion so once I've got it I'll let you know.


From sirinath at sakrio.com  Thu Feb  6 06:31:45 2014
From: sirinath at sakrio.com (Suminda Dharmasena)
Date: Thu, 6 Feb 2014 12:01:45 +0530
Subject: [opam-devel] Windows Support
Message-ID: <CAAfFNYH8MYfOWCvVpxPyAA3pyF6b5bcKsbgEyd2vTttTF15NAA@mail.gmail.com>

Hi,

Is it possible to have better Windows support for OPAM and OCaml in general?

Suminda
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20140206/b29cefa5/attachment.html>

From anil at recoil.org  Fri Feb  7 14:17:35 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 7 Feb 2014 14:17:35 +0000
Subject: [opam-devel] Automatically synching GitHub pulls to OPAM
Message-ID: <BCCE4DF0-6B43-4372-8320-D145DF5F4369@recoil.org>

I've created a small script here that generates compiler entries for each GitHub PR.  This makes it exceedingly easy to play around with new pull requests.

https://github.com/avsm/opam-sync-github-prs

I can publish this regularly as a custom remote, but it occurs to me that during the 6-month GitHub experiment, we may as well merge this directly into OPAM stable.  Most users will not see all the extra repositories due to requiring the --all script.

Any thoughts, objections or improvements?  I decided not to include closed pull requests in the generation, but that can easily be tweaked.

-anil

From gabriel.scherer at gmail.com  Fri Feb  7 16:17:20 2014
From: gabriel.scherer at gmail.com (Gabriel Scherer)
Date: Fri, 7 Feb 2014 17:17:20 +0100
Subject: [opam-devel] [ocaml-infra] Automatically synching GitHub pulls
	to OPAM
In-Reply-To: <BCCE4DF0-6B43-4372-8320-D145DF5F4369@recoil.org>
References: <BCCE4DF0-6B43-4372-8320-D145DF5F4369@recoil.org>
Message-ID: <CAPFanBH1g7k9VEKC3Tpxh7smopf8yfz1V5aU3-Wx_K5b69CdKw@mail.gmail.com>

I have a small (shell) script myself that I use on top of OPAM,
  https://github.com/gasche/opam-compiler-conf

As an alternative to merging yours upstream, would it make sense to
think of a way to centralize those shell scripts and make them more
easily available to the user, a bit like "git contribs"?

On Fri, Feb 7, 2014 at 3:17 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> I've created a small script here that generates compiler entries for each GitHub PR.  This makes it exceedingly easy to play around with new pull requests.
>
> https://github.com/avsm/opam-sync-github-prs
>
> I can publish this regularly as a custom remote, but it occurs to me that during the 6-month GitHub experiment, we may as well merge this directly into OPAM stable.  Most users will not see all the extra repositories due to requiring the --all script.
>
> Any thoughts, objections or improvements?  I decided not to include closed pull requests in the generation, but that can easily be tweaked.
>
> -anil
> _______________________________________________
> Infrastructure mailing list
> Infrastructure at lists.ocaml.org
> http://lists.ocaml.org/listinfo/infrastructure

From anil at recoil.org  Fri Feb  7 16:22:15 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 7 Feb 2014 16:22:15 +0000
Subject: [opam-devel] [ocaml-infra] Automatically synching GitHub pulls
	to OPAM
In-Reply-To: <CAPFanBH1g7k9VEKC3Tpxh7smopf8yfz1V5aU3-Wx_K5b69CdKw@mail.gmail.com>
References: <BCCE4DF0-6B43-4372-8320-D145DF5F4369@recoil.org>
 <CAPFanBH1g7k9VEKC3Tpxh7smopf8yfz1V5aU3-Wx_K5b69CdKw@mail.gmail.com>
Message-ID: <4DFEC5EB-B8AB-488C-B847-89E951BD5962@recoil.org>

On 7 Feb 2014, at 16:17, Gabriel Scherer <gabriel.scherer at gmail.com> wrote:

> I have a small (shell) script myself that I use on top of OPAM,
>  https://github.com/gasche/opam-compiler-conf
> 
> As an alternative to merging yours upstream, would it make sense to
> think of a way to centralize those shell scripts and make them more
> easily available to the user, a bit like "git contribs"?

Why don't you just submit the script as an OPAM package?  Then
"opam install compiler-conf" would give access to the
"opam compiler-conf" subcommand.

This seems orthogonal to regularly merging in switches based on
PRs, as those will be available via "opam update" very easily for
any interested user.

-anil


From thomas.gazagnaire at gmail.com  Fri Feb  7 16:37:15 2014
From: thomas.gazagnaire at gmail.com (Thomas Gazagnaire)
Date: Fri, 7 Feb 2014 16:37:15 +0000
Subject: [opam-devel] Automatically synching GitHub pulls to OPAM
In-Reply-To: <BCCE4DF0-6B43-4372-8320-D145DF5F4369@recoil.org>
References: <BCCE4DF0-6B43-4372-8320-D145DF5F4369@recoil.org>
Message-ID: <1672D36F-95F9-4224-BBFD-37C132699DB8@gmail.com>

That's awesome!!!

> I can publish this regularly as a custom remote, but it occurs to me that during the 6-month GitHub experiment, we may as well merge this directly into OPAM stable.  Most users will not see all the extra repositories due to requiring the --all script.

I think that's a great idea, but would be nice to automatically remove closed PRs though if we do this.

Also, not sure how to handle the PR which adds / modifies the configure options, but we could fix that later.

--
Thomas




From amc79 at cam.ac.uk  Fri Feb  7 16:46:38 2014
From: amc79 at cam.ac.uk (Amir Chaudhry)
Date: Fri, 7 Feb 2014 16:46:38 +0000
Subject: [opam-devel] [ocaml-infra] Automatically synching GitHub pulls
	to OPAM
In-Reply-To: <1672D36F-95F9-4224-BBFD-37C132699DB8@gmail.com>
References: <BCCE4DF0-6B43-4372-8320-D145DF5F4369@recoil.org>
 <1672D36F-95F9-4224-BBFD-37C132699DB8@gmail.com>
Message-ID: <50C07C6A-3F50-490E-A01B-4A1573074B4D@cam.ac.uk>

Does seem very useful and an easy way for package maintainers to see how proposed patches might affect them..

Naiive question (since I haven't tried this myself): Does the switch grab the latest trunk version and apply the patch or does it take 4.01.0 and apply it?  I notice that the PRs are all for trunk.

I guess what I'm curious about is whether different people will end up with different things depending on when they do the switch.  i.e if trunk has advanced in the meantime.

Best wishes,
Amir




On 7 Feb 2014, at 16:37, Thomas Gazagnaire <thomas.gazagnaire at gmail.com> wrote:

> That's awesome!!!
> 
>> I can publish this regularly as a custom remote, but it occurs to me that during the 6-month GitHub experiment, we may as well merge this directly into OPAM stable.  Most users will not see all the extra repositories due to requiring the --all script.
> 
> I think that's a great idea, but would be nice to automatically remove closed PRs though if we do this.
> 
> Also, not sure how to handle the PR which adds / modifies the configure options, but we could fix that later.
> 
> --
> Thomas
> 
> 
> 
> _______________________________________________
> Infrastructure mailing list
> Infrastructure at lists.ocaml.org
> http://lists.ocaml.org/listinfo/infrastructure


From yallop at gmail.com  Fri Feb  7 17:02:50 2014
From: yallop at gmail.com (Jeremy Yallop)
Date: Fri, 7 Feb 2014 17:02:50 +0000
Subject: [opam-devel] [ocaml-infra] Automatically synching GitHub pulls
	to OPAM
In-Reply-To: <50C07C6A-3F50-490E-A01B-4A1573074B4D@cam.ac.uk>
References: <BCCE4DF0-6B43-4372-8320-D145DF5F4369@recoil.org>
 <1672D36F-95F9-4224-BBFD-37C132699DB8@gmail.com>
 <50C07C6A-3F50-490E-A01B-4A1573074B4D@cam.ac.uk>
Message-ID: <CAAxsn=GpZLV=qvGeT5GLDi3RK9X96ohagRzeV8U2ShFYK3ph+g@mail.gmail.com>

On 7 February 2014 16:46, Amir Chaudhry <amc79 at cam.ac.uk> wrote:
> Does seem very useful and an easy way for package maintainers to see how proposed patches might affect them..
>
> Naiive question (since I haven't tried this myself): Does the switch grab the latest trunk version and apply the patch or does it take 4.01.0 and apply it?  I notice that the PRs are all for trunk.

The compiler version is a command-line option:

   https://github.com/avsm/opam-sync-github-prs/blob/88a403eb8/generate.ml#L63

I wonder whether it'd be more reliable to use the source branch in the
pull request as the 'src' for the switch.  For example, for #6,
instead of generating

    src: https://github.com/ocaml/ocaml/archive/4.0.2.tar.gz
    patches: https://github.com/ocaml/ocaml/pull/6.diff

we might simply have

   src: https://github.com/hnrgrgr/ocaml/archive/type_constraint_warning.tar.gz

From anil at recoil.org  Fri Feb  7 18:29:31 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 7 Feb 2014 18:29:31 +0000
Subject: [opam-devel] [ocaml-infra] Automatically synching GitHub pulls
	to OPAM
In-Reply-To: <CAAxsn=GpZLV=qvGeT5GLDi3RK9X96ohagRzeV8U2ShFYK3ph+g@mail.gmail.com>
References: <BCCE4DF0-6B43-4372-8320-D145DF5F4369@recoil.org>
 <1672D36F-95F9-4224-BBFD-37C132699DB8@gmail.com>
 <50C07C6A-3F50-490E-A01B-4A1573074B4D@cam.ac.uk>
 <CAAxsn=GpZLV=qvGeT5GLDi3RK9X96ohagRzeV8U2ShFYK3ph+g@mail.gmail.com>
Message-ID: <EFBA5934-945E-4FF2-8B12-72E43875E1C3@recoil.org>

On 7 Feb 2014, at 17:02, Jeremy Yallop <yallop at gmail.com> wrote:

> On 7 February 2014 16:46, Amir Chaudhry <amc79 at cam.ac.uk> wrote:
>> Does seem very useful and an easy way for package maintainers to see how proposed patches might affect them..
>> 
>> Naiive question (since I haven't tried this myself): Does the switch grab the latest trunk version and apply the patch or does it take 4.01.0 and apply it?  I notice that the PRs are all for trunk.
> 
> The compiler version is a command-line option:
> 
>   https://github.com/avsm/opam-sync-github-prs/blob/88a403eb8/generate.ml#L63

Right. Also note that you can refresh against the branch by running

$ opam switch reinstall 4.02.0dev+pr7

> 
> I wonder whether it'd be more reliable to use the source branch in the
> pull request as the 'src' for the switch.  For example, for #6,
> instead of generating
> 
>    src: https://github.com/ocaml/ocaml/archive/4.0.2.tar.gz
>    patches: https://github.com/ocaml/ocaml/pull/6.diff
> 
> we might simply have
> 
>   src: https://github.com/hnrgrgr/ocaml/archive/type_constraint_warning.tar.gz

I did consider this, but there is a difference between the two.  With
the "fetch base branch + apply patch diff" approach, every installation
is rebasing against the current base branch (usually trunk).  With the
alternative you propose, it would be against the revision that the pull
request was opened against (as I believe that GitHub only includes the
fake merge commit upon merging, not upon fetching the archives).

Overall, I prefer the rebasing approach since it makes it obvious when
a PR fails against the latest branch it's intended for, and we don't want
to encourage un-rebased patches against trunk that don't merge anyway.

It could easily be made an option, but I'd prefer that we just pick one
approach for the regular cron-driven merges to the stable OPAM repo.

-anil

From anil at recoil.org  Fri Feb 14 09:57:59 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 14 Feb 2014 09:57:59 +0000
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
Message-ID: <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>

This is great! (CCing opam-devel)

I'd like to resolve the zmq situation, since the current "ocaml-zmq" package in opam-stable has no maintainer, and is pointing to an unstable tarball.

We could add a new zmq package to OPAM that does not clash with "ocaml-zmq" , based off the Issuu branch which appears maintained.  I'm CCing Anders Fugmann for his opinion on this.  After a while, we could remove the ocaml-zmq package if the upstream cannot be contacted.

That should hopefully unblock getting iocaml into OPAM mainline too...

-anil

On 14 Feb 2014, at 00:34, Andy Ray <andy.ray at ujamjar.com> wrote:

> *** I announced this to the list through google groups a few days ago but I don't think it worked properly so hopefully this time ... ***
> 
> https://github.com/andrewray/iocaml
> 
> IOCaml is an OCaml kernel for the IPython notebook (http://ipython.org/notebook.html).  This provides a REPL within a web browser with a nice user interface including markdown based comments/documentation, mathjax formula and the possibility of generating all manner of HTML based output media from your code.  Here are a few features I think are particularly interesting;
> 
> * Uses ocp-index.lib to provide code completion and types (includes documentation if .cmt files exist).  Only works with installed libraries at the moment.  Very new, a wee bit buggy, but I love it.
> 
> * I copy/pasted the OCaml core language documentation page into a notebook.  Now you can learn interactively! [1]
> 
> * Play with TyXML in the notebook and render typed HTML interactively.
> 
> Installation is reasonably painless through opam, though you currently need to add my remote repository [2] and require a >=4.00.1 compiler.  Installation of IPython is a touch more involved as you will have to update (using 'pip') some python components [3].  Instructions for Ubuntu 13.10 are on the github page and I have also tested Fedora 20 which was, apart from some slightly different package names, very similar.
> 
> Cheers,
> Andy
> 
> 
> [1] I am not sure if, according to the license terms, I should be providing this.  The documentation has not been changed in any way apart from one inserted paragraph at the start explaining the difference between a normal toplevel and the notebook interface.  I hope it's OK to provide this.
> 
> [2] I'd love to push this to opam proper but require ocaml-zmq >=3.2.  There was a recent discussion on the list about this (indeed reading about ZeroMQ led me to IPython) so hopefully this will happen before too long.
> 
> [3] I haven't tested this release with 0.13.2 which the distros provide.  Maybe it works anyway.


From anil at recoil.org  Fri Feb 14 10:05:53 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 14 Feb 2014 10:05:53 +0000
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
Message-ID: <1520E05E-DA7A-48C9-93E9-44E13148BB63@recoil.org>

Having said that, the Issuu branch seems to fail on MacOS X 10.9 (which uses clang).  Needs more investigation...

--
        Store_field(result, 0, caml_copy_string(event.data.connected.addr));
                                                ~~~~~ ^
/usr/local/lib/ocaml/caml/memory.h:235:27: note: expanded from macro 'Store_field'
  value caml__temp_val = (val); \
                          ^
src/caml_zmq_stubs.c:538:45: error: no member named 'data' in 'zmq_event_t'
        Store_field(result, 1, Val_fd(event.data.connected.fd));
                                      ~~~~~ ^
src/caml_zmq_stubs.c:27:29: note: expanded from macro 'Val_fd'
#  define Val_fd(x) Val_int(x)
                            ^
/usr/local/lib/ocaml/caml/mlvalues.h:75:29: note: expanded from macro 'Val_int'
#define Val_int(x) Val_long(x)
                            ^
/usr/local/lib/ocaml/caml/mlvalues.h:71:36: note: expanded from macro 'Val_long'
#define Val_long(x)     (((intnat)(x) << 1) + 1)
                                   ^
/usr/local/lib/ocaml/caml/memory.h:235:27: note: expanded from macro 'Store_field'
  value caml__temp_val = (val); \
                          ^
src/caml_zmq_stubs.c:542:55: error: no member named 'data' in 'zmq_event_t'
        Store_field(result, 0, caml_copy_string(event.data.connect_delayed.addr));
                                                ~~~~~ ^
/usr/local/lib/ocaml/caml/memory.h:235:27: note: expanded from macro 'Store_field'
  value caml__temp_val = (val); \
                          ^
src/caml_zmq_stubs.c:543:46: error: no member named 'data' in 'zmq_event_t'
        Store_field(result, 1, Val_int(event.data.connect_delayed.err));
                                       ~~~~~ ^

-anil

On 14 Feb 2014, at 09:57, Anil Madhavapeddy <anil at recoil.org> wrote:

> This is great! (CCing opam-devel)
> 
> I'd like to resolve the zmq situation, since the current "ocaml-zmq" package in opam-stable has no maintainer, and is pointing to an unstable tarball.
> 
> We could add a new zmq package to OPAM that does not clash with "ocaml-zmq" , based off the Issuu branch which appears maintained.  I'm CCing Anders Fugmann for his opinion on this.  After a while, we could remove the ocaml-zmq package if the upstream cannot be contacted.
> 
> That should hopefully unblock getting iocaml into OPAM mainline too...
> 
> -anil
> 
> On 14 Feb 2014, at 00:34, Andy Ray <andy.ray at ujamjar.com> wrote:
> 
>> *** I announced this to the list through google groups a few days ago but I don't think it worked properly so hopefully this time ... ***
>> 
>> https://github.com/andrewray/iocaml
>> 
>> IOCaml is an OCaml kernel for the IPython notebook (http://ipython.org/notebook.html).  This provides a REPL within a web browser with a nice user interface including markdown based comments/documentation, mathjax formula and the possibility of generating all manner of HTML based output media from your code.  Here are a few features I think are particularly interesting;
>> 
>> * Uses ocp-index.lib to provide code completion and types (includes documentation if .cmt files exist).  Only works with installed libraries at the moment.  Very new, a wee bit buggy, but I love it.
>> 
>> * I copy/pasted the OCaml core language documentation page into a notebook.  Now you can learn interactively! [1]
>> 
>> * Play with TyXML in the notebook and render typed HTML interactively.
>> 
>> Installation is reasonably painless through opam, though you currently need to add my remote repository [2] and require a >=4.00.1 compiler.  Installation of IPython is a touch more involved as you will have to update (using 'pip') some python components [3].  Instructions for Ubuntu 13.10 are on the github page and I have also tested Fedora 20 which was, apart from some slightly different package names, very similar.
>> 
>> Cheers,
>> Andy
>> 
>> 
>> [1] I am not sure if, according to the license terms, I should be providing this.  The documentation has not been changed in any way apart from one inserted paragraph at the start explaining the difference between a normal toplevel and the notebook interface.  I hope it's OK to provide this.
>> 
>> [2] I'd love to push this to opam proper but require ocaml-zmq >=3.2.  There was a recent discussion on the list about this (indeed reading about ZeroMQ led me to IPython) so hopefully this will happen before too long.
>> 
>> [3] I haven't tested this release with 0.13.2 which the distros provide.  Maybe it works anyway.
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel
> 


From anil at recoil.org  Fri Feb 14 10:49:34 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 14 Feb 2014 10:49:34 +0000
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <52FDF2A2.5050605@fugmann.net>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <1520E05E-DA7A-48C9-93E9-44E13148BB63@recoil.org>
 <52FDF2A2.5050605@fugmann.net>
Message-ID: <1FB58787-B3B3-424B-992B-F108B012F596@recoil.org>

The too-new library is almost certainly the case -- although unfortunately I don't have the 3.2.4 version in my Homebrew anymore and so the switch doesn't work (they don't keep older versions around like OPAM does, I believe).

$ brew switch zmq 3.2.4
Error: zmq does not have a version "3.2.4" in the Cellar.
Versions available: 4.0.3

Are the interfaces very different between the versions to support both, or does this require a big rev to your bindings?

-anil

On 14 Feb 2014, at 10:40, Anders Fugmann <anders at fugmann.net> wrote:

> Hi,
> 
> I would love to have the Issuu fork of ocaml-zmq in Opam official package repository. I already have a Opam package description for it [1], if it helps.
> 
> Could it be that the compilation problems are related to having a too up to date version of the zmq C library?. We saw simmilar compilation erros when compiling against version 4.0.x of the zmq C library. Downgragind to version 3.2.x help in that case.
> 
> If you are using brew, you can downgrade to zmq 3.2.4 using the command:
> > brew switch zmq 3.2.4
> 
> Regards
> Anders Fugmann
> 
> [1]: https://github.com/andersfugmann/opam-repository-extra/tree/master/packages/ocaml-zmq.3.2.0
> 
> On 02/14/2014 11:05 AM, Anil Madhavapeddy wrote:
>> Having said that, the Issuu branch seems to fail on MacOS X 10.9 (which uses clang).  Needs more investigation...
>> 
>> --
>>         Store_field(result, 0, caml_copy_string(event.data.connected.addr));
>>                                                 ~~~~~ ^
>> /usr/local/lib/ocaml/caml/memory.h:235:27: note: expanded from macro 'Store_field'
>>   value caml__temp_val = (val); \
>>                           ^
>> src/caml_zmq_stubs.c:538:45: error: no member named 'data' in 'zmq_event_t'
>>         Store_field(result, 1, Val_fd(event.data.connected.fd));
>>                                       ~~~~~ ^
>> src/caml_zmq_stubs.c:27:29: note: expanded from macro 'Val_fd'
>> #  define Val_fd(x) Val_int(x)
>>                             ^
>> /usr/local/lib/ocaml/caml/mlvalues.h:75:29: note: expanded from macro 'Val_int'
>> #define Val_int(x) Val_long(x)
>>                             ^
>> /usr/local/lib/ocaml/caml/mlvalues.h:71:36: note: expanded from macro 'Val_long'
>> #define Val_long(x)     (((intnat)(x) << 1) + 1)
>>                                    ^
>> /usr/local/lib/ocaml/caml/memory.h:235:27: note: expanded from macro 'Store_field'
>>   value caml__temp_val = (val); \
>>                           ^
>> src/caml_zmq_stubs.c:542:55: error: no member named 'data' in 'zmq_event_t'
>>         Store_field(result, 0, caml_copy_string(event.data.connect_delayed.addr));
>>                                                 ~~~~~ ^
>> /usr/local/lib/ocaml/caml/memory.h:235:27: note: expanded from macro 'Store_field'
>>   value caml__temp_val = (val); \
>>                           ^
>> src/caml_zmq_stubs.c:543:46: error: no member named 'data' in 'zmq_event_t'
>>         Store_field(result, 1, Val_int(event.data.connect_delayed.err));
>>                                        ~~~~~ ^
>> 
>> -anil
>> 
>> On 14 Feb 2014, at 09:57, Anil Madhavapeddy <anil at recoil.org> wrote:
>> 
>>> This is great! (CCing opam-devel)
>>> 
>>> I'd like to resolve the zmq situation, since the current "ocaml-zmq" package in opam-stable has no maintainer, and is pointing to an unstable tarball.
>>> 
>>> We could add a new zmq package to OPAM that does not clash with "ocaml-zmq" , based off the Issuu branch which appears maintained.  I'm CCing Anders Fugmann for his opinion on this.  After a while, we could remove the ocaml-zmq package if the upstream cannot be contacted.
>>> 
>>> That should hopefully unblock getting iocaml into OPAM mainline too...
>>> 
>>> -anil
>>> 
>>> On 14 Feb 2014, at 00:34, Andy Ray <andy.ray at ujamjar.com> wrote:
>>> 
>>>> *** I announced this to the list through google groups a few days ago but I don't think it worked properly so hopefully this time ... ***
>>>> 
>>>> https://github.com/andrewray/iocaml
>>>> 
>>>> IOCaml is an OCaml kernel for the IPython notebook (http://ipython.org/notebook.html).  This provides a REPL within a web browser with a nice user interface including markdown based comments/documentation, mathjax formula and the possibility of generating all manner of HTML based output media from your code.  Here are a few features I think are particularly interesting;
>>>> 
>>>> * Uses ocp-index.lib to provide code completion and types (includes documentation if .cmt files exist).  Only works with installed libraries at the moment.  Very new, a wee bit buggy, but I love it.
>>>> 
>>>> * I copy/pasted the OCaml core language documentation page into a notebook.  Now you can learn interactively! [1]
>>>> 
>>>> * Play with TyXML in the notebook and render typed HTML interactively.
>>>> 
>>>> Installation is reasonably painless through opam, though you currently need to add my remote repository [2] and require a >=4.00.1 compiler.  Installation of IPython is a touch more involved as you will have to update (using 'pip') some python components [3].  Instructions for Ubuntu 13.10 are on the github page and I have also tested Fedora 20 which was, apart from some slightly different package names, very similar.
>>>> 
>>>> Cheers,
>>>> Andy
>>>> 
>>>> 
>>>> [1] I am not sure if, according to the license terms, I should be providing this.  The documentation has not been changed in any way apart from one inserted paragraph at the start explaining the difference between a normal toplevel and the notebook interface.  I hope it's OK to provide this.
>>>> 
>>>> [2] I'd love to push this to opam proper but require ocaml-zmq >=3.2.  There was a recent discussion on the list about this (indeed reading about ZeroMQ led me to IPython) so hopefully this will happen before too long.
>>>> 
>>>> [3] I haven't tested this release with 0.13.2 which the distros provide.  Maybe it works anyway.
>>> 
>>> _______________________________________________
>>> opam-devel mailing list
>>> opam-devel at lists.ocaml.org
>>> http://lists.ocaml.org/listinfo/opam-devel
>>> 
>> 
> 


From anders at fugmann.net  Fri Feb 14 10:40:34 2014
From: anders at fugmann.net (Anders Fugmann)
Date: Fri, 14 Feb 2014 11:40:34 +0100
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <1520E05E-DA7A-48C9-93E9-44E13148BB63@recoil.org>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <1520E05E-DA7A-48C9-93E9-44E13148BB63@recoil.org>
Message-ID: <52FDF2A2.5050605@fugmann.net>

Hi,

I would love to have the Issuu fork of ocaml-zmq in Opam official 
package repository. I already have a Opam package description for it 
[1], if it helps.

Could it be that the compilation problems are related to having a too up 
to date version of the zmq C library?. We saw simmilar compilation erros 
when compiling against version 4.0.x of the zmq C library. Downgragind 
to version 3.2.x help in that case.

If you are using brew, you can downgrade to zmq 3.2.4 using the command:
 > brew switch zmq 3.2.4

Regards
Anders Fugmann

[1]: 
https://github.com/andersfugmann/opam-repository-extra/tree/master/packages/ocaml-zmq.3.2.0

On 02/14/2014 11:05 AM, Anil Madhavapeddy wrote:
> Having said that, the Issuu branch seems to fail on MacOS X 10.9 (which uses clang).  Needs more investigation...
>
> --
>          Store_field(result, 0, caml_copy_string(event.data.connected.addr));
>                                                  ~~~~~ ^
> /usr/local/lib/ocaml/caml/memory.h:235:27: note: expanded from macro 'Store_field'
>    value caml__temp_val = (val); \
>                            ^
> src/caml_zmq_stubs.c:538:45: error: no member named 'data' in 'zmq_event_t'
>          Store_field(result, 1, Val_fd(event.data.connected.fd));
>                                        ~~~~~ ^
> src/caml_zmq_stubs.c:27:29: note: expanded from macro 'Val_fd'
> #  define Val_fd(x) Val_int(x)
>                              ^
> /usr/local/lib/ocaml/caml/mlvalues.h:75:29: note: expanded from macro 'Val_int'
> #define Val_int(x) Val_long(x)
>                              ^
> /usr/local/lib/ocaml/caml/mlvalues.h:71:36: note: expanded from macro 'Val_long'
> #define Val_long(x)     (((intnat)(x) << 1) + 1)
>                                     ^
> /usr/local/lib/ocaml/caml/memory.h:235:27: note: expanded from macro 'Store_field'
>    value caml__temp_val = (val); \
>                            ^
> src/caml_zmq_stubs.c:542:55: error: no member named 'data' in 'zmq_event_t'
>          Store_field(result, 0, caml_copy_string(event.data.connect_delayed.addr));
>                                                  ~~~~~ ^
> /usr/local/lib/ocaml/caml/memory.h:235:27: note: expanded from macro 'Store_field'
>    value caml__temp_val = (val); \
>                            ^
> src/caml_zmq_stubs.c:543:46: error: no member named 'data' in 'zmq_event_t'
>          Store_field(result, 1, Val_int(event.data.connect_delayed.err));
>                                         ~~~~~ ^
>
> -anil
>
> On 14 Feb 2014, at 09:57, Anil Madhavapeddy <anil at recoil.org> wrote:
>
>> This is great! (CCing opam-devel)
>>
>> I'd like to resolve the zmq situation, since the current "ocaml-zmq" package in opam-stable has no maintainer, and is pointing to an unstable tarball.
>>
>> We could add a new zmq package to OPAM that does not clash with "ocaml-zmq" , based off the Issuu branch which appears maintained.  I'm CCing Anders Fugmann for his opinion on this.  After a while, we could remove the ocaml-zmq package if the upstream cannot be contacted.
>>
>> That should hopefully unblock getting iocaml into OPAM mainline too...
>>
>> -anil
>>
>> On 14 Feb 2014, at 00:34, Andy Ray <andy.ray at ujamjar.com> wrote:
>>
>>> *** I announced this to the list through google groups a few days ago but I don't think it worked properly so hopefully this time ... ***
>>>
>>> https://github.com/andrewray/iocaml
>>>
>>> IOCaml is an OCaml kernel for the IPython notebook (http://ipython.org/notebook.html).  This provides a REPL within a web browser with a nice user interface including markdown based comments/documentation, mathjax formula and the possibility of generating all manner of HTML based output media from your code.  Here are a few features I think are particularly interesting;
>>>
>>> * Uses ocp-index.lib to provide code completion and types (includes documentation if .cmt files exist).  Only works with installed libraries at the moment.  Very new, a wee bit buggy, but I love it.
>>>
>>> * I copy/pasted the OCaml core language documentation page into a notebook.  Now you can learn interactively! [1]
>>>
>>> * Play with TyXML in the notebook and render typed HTML interactively.
>>>
>>> Installation is reasonably painless through opam, though you currently need to add my remote repository [2] and require a >=4.00.1 compiler.  Installation of IPython is a touch more involved as you will have to update (using 'pip') some python components [3].  Instructions for Ubuntu 13.10 are on the github page and I have also tested Fedora 20 which was, apart from some slightly different package names, very similar.
>>>
>>> Cheers,
>>> Andy
>>>
>>>
>>> [1] I am not sure if, according to the license terms, I should be providing this.  The documentation has not been changed in any way apart from one inserted paragraph at the start explaining the difference between a normal toplevel and the notebook interface.  I hope it's OK to provide this.
>>>
>>> [2] I'd love to push this to opam proper but require ocaml-zmq >=3.2.  There was a recent discussion on the list about this (indeed reading about ZeroMQ led me to IPython) so hopefully this will happen before too long.
>>>
>>> [3] I haven't tested this release with 0.13.2 which the distros provide.  Maybe it works anyway.
>>
>> _______________________________________________
>> opam-devel mailing list
>> opam-devel at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/opam-devel
>>
>


From anders at fugmann.net  Fri Feb 14 11:12:45 2014
From: anders at fugmann.net (Anders Fugmann)
Date: Fri, 14 Feb 2014 12:12:45 +0100
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <1FB58787-B3B3-424B-992B-F108B012F596@recoil.org>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <1520E05E-DA7A-48C9-93E9-44E13148BB63@recoil.org>
 <52FDF2A2.5050605@fugmann.net>
 <1FB58787-B3B3-424B-992B-F108B012F596@recoil.org>
Message-ID: <52FDFA2D.9030607@fugmann.net>

On 02/14/2014 11:49 AM, Anil Madhavapeddy wrote:
> The too-new library is almost certainly the case -- although unfortunately I don't have the 3.2.4 version in my Homebrew anymore and so the switch doesn't work (they don't keep older versions around like OPAM does, I believe).
>
> $ brew switch zmq 3.2.4
> Error: zmq does not have a version "3.2.4" in the Cellar.
> Versions available: 4.0.3
>
> Are the interfaces very different between the versions to support both, or does this require a big rev to your bindings?
I do not think that is feasible.

ZMQ 3.x.x and ZMQ 4.x.x has different wire formats, so they are not 
interchangeable. Also the header files have changed, so I assume that 
would not be possible to have a version that supports both (i.e. based 
on the C library installed).

We would at some point upgrade the binding to 4.x, but we don't have any 
concrete plans. That said I would guess that its not too far into the 
future.

However, it seems that its possible to install the zmq 3.2 though brew:

 > brew tap homebrew/versions
 > brew install zeromq32

Regards
Anders Fugmann

>
> -anil
>



From anil at recoil.org  Fri Feb 14 11:27:00 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 14 Feb 2014 11:27:00 +0000
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <52FDFA2D.9030607@fugmann.net>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <1520E05E-DA7A-48C9-93E9-44E13148BB63@recoil.org>
 <52FDF2A2.5050605@fugmann.net>
 <1FB58787-B3B3-424B-992B-F108B012F596@recoil.org>
 <52FDFA2D.9030607@fugmann.net>
Message-ID: <7D478BCD-2058-4E02-ABBF-FD081A953C0C@recoil.org>

On 14 Feb 2014, at 11:12, Anders Fugmann <anders at fugmann.net> wrote:

> On 02/14/2014 11:49 AM, Anil Madhavapeddy wrote:
>> The too-new library is almost certainly the case -- although unfortunately I don't have the 3.2.4 version in my Homebrew anymore and so the switch doesn't work (they don't keep older versions around like OPAM does, I believe).
>> 
>> $ brew switch zmq 3.2.4
>> Error: zmq does not have a version "3.2.4" in the Cellar.
>> Versions available: 4.0.3
>> 
>> Are the interfaces very different between the versions to support both, or does this require a big rev to your bindings?
> I do not think that is feasible.
> 
> ZMQ 3.x.x and ZMQ 4.x.x has different wire formats, so they are not interchangeable. Also the header files have changed, so I assume that would not be possible to have a version that supports both (i.e. based on the C library installed).
> 
> We would at some point upgrade the binding to 4.x, but we don't have any concrete plans. That said I would guess that its not too far into the future.
> 
> However, it seems that its possible to install the zmq 3.2 though brew:
> 
> > brew tap homebrew/versions
> > brew install zeromq32

That works great!  I just had to add:

> brew link zeromq32

To get zmq.h into /usr/local, and then ocaml-zmq installs fine, as does iocaml.top afterwards.

cheers,
Anil

From sylvain+ocaml at le-gall.net  Fri Feb 14 12:43:50 2014
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Fri, 14 Feb 2014 13:43:50 +0100
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
Message-ID: <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>

Hi all,

Sorry if you hate me for what I am just about to say.

2014-02-14 10:57 GMT+01:00 Anil Madhavapeddy <anil at recoil.org>:
> This is great! (CCing opam-devel)
>
> I'd like to resolve the zmq situation, since the current "ocaml-zmq" package in opam-stable has no maintainer, and is pointing to an unstable tarball.
>
> We could add a new zmq package to OPAM that does not clash with "ocaml-zmq" , based off the Issuu branch which appears maintained.  I'm CCing Anders Fugmann for his opinion on this.  After a while, we could remove the ocaml-zmq package if the upstream cannot be contacted.
>

I would 100% prefer that ocaml-zmq "ownership" or "official branch"
became Issuu branch. I think it will be better to have 1 maintained
package than 1 maintain and 1 unmaintained.

That said, I am not sure how to transfer ownership in Github (or even
if it is possible). So my proposal, is to create a forge project to
just host the tarballs and made OPAM to point to it. I am not saying
that the project VCS should move away from Github! I just think that a
forge project would be nice and would allow to have the maintained
branch release there...

An alternate method is to use:
http://oasis.ocamlcore.org/dev/view/ZMQ/latest

But this old OASIS-DB instance will go through major refactoring some
time this year, so I would prefer hosting tarballs on Forge...

> That should hopefully unblock getting iocaml into OPAM mainline too...
>
> -anil
>
> On 14 Feb 2014, at 00:34, Andy Ray <andy.ray at ujamjar.com> wrote:
>
>> *** I announced this to the list through google groups a few days ago but I don't think it worked properly so hopefully this time ... ***
>>
>> https://github.com/andrewray/iocaml
>>
>> IOCaml is an OCaml kernel for the IPython notebook (http://ipython.org/notebook.html).  This provides a REPL within a web browser with a nice user interface including markdown based comments/documentation, mathjax formula and the possibility of generating all manner of HTML based output media from your code.  Here are a few features I think are particularly interesting;
>>
>> * Uses ocp-index.lib to provide code completion and types (includes documentation if .cmt files exist).  Only works with installed libraries at the moment.  Very new, a wee bit buggy, but I love it.
>>
>> * I copy/pasted the OCaml core language documentation page into a notebook.  Now you can learn interactively! [1]
>>
>> * Play with TyXML in the notebook and render typed HTML interactively.
>>
>> Installation is reasonably painless through opam, though you currently need to add my remote repository [2] and require a >=4.00.1 compiler.  Installation of IPython is a touch more involved as you will have to update (using 'pip') some python components [3].  Instructions for Ubuntu 13.10 are on the github page and I have also tested Fedora 20 which was, apart from some slightly different package names, very similar.
>>
>> Cheers,
>> Andy
>>
>>
>> [1] I am not sure if, according to the license terms, I should be providing this.  The documentation has not been changed in any way apart from one inserted paragraph at the start explaining the difference between a normal toplevel and the notebook interface.  I hope it's OK to provide this.
>>
>> [2] I'd love to push this to opam proper but require ocaml-zmq >=3.2.  There was a recent discussion on the list about this (indeed reading about ZeroMQ led me to IPython) so hopefully this will happen before too long.
>>
>> [3] I haven't tested this release with 0.13.2 which the distros provide.  Maybe it works anyway.
>
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From anil at recoil.org  Fri Feb 14 13:32:08 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 14 Feb 2014 13:32:08 +0000
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
Message-ID: <E4757CFD-682A-4356-8482-4ADE59DD62A8@recoil.org>

On 14 Feb 2014, at 12:43, Sylvain Le Gall <sylvain+ocaml at le-gall.net> wrote:

> Hi all,
> 
> Sorry if you hate me for what I am just about to say.
> 
> 2014-02-14 10:57 GMT+01:00 Anil Madhavapeddy <anil at recoil.org>:
>> This is great! (CCing opam-devel)
>> 
>> I'd like to resolve the zmq situation, since the current "ocaml-zmq" package in opam-stable has no maintainer, and is pointing to an unstable tarball.
>> 
>> We could add a new zmq package to OPAM that does not clash with "ocaml-zmq" , based off the Issuu branch which appears maintained.  I'm CCing Anders Fugmann for his opinion on this.  After a while, we could remove the ocaml-zmq package if the upstream cannot be contacted.
>> 
> 
> I would 100% prefer that ocaml-zmq "ownership" or "official branch"
> became Issuu branch. I think it will be better to have 1 maintained
> package than 1 maintain and 1 unmaintained.
> 
> That said, I am not sure how to transfer ownership in Github (or even
> if it is possible). So my proposal, is to create a forge project to
> just host the tarballs and made OPAM to point to it. I am not saying
> that the project VCS should move away from Github! I just think that a
> forge project would be nice and would allow to have the maintained
> branch release there...
> 
> An alternate method is to use:
> http://oasis.ocamlcore.org/dev/view/ZMQ/latest
> 
> But this old OASIS-DB instance will go through major refactoring some
> time this year, so I would prefer hosting tarballs on Forge...

I don't really understand the benefit of involving the Forge here.
Why not just swap the `url` to point to the new GitHub maintainer
in the OPAM description?  

The reason I suggest adding a new package `zmq` in this case is
because the existing `ocaml-zmq` is misnamed in OPAM anyway, so we
can solve two problems at once.

-anil

From anders at fugmann.net  Fri Feb 14 14:27:23 2014
From: anders at fugmann.net (Anders Fugmann)
Date: Fri, 14 Feb 2014 15:27:23 +0100
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>	<0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
Message-ID: <52FE27CB.1080407@fugmann.net>

Hi Sylvian
On 02/14/2014 01:43 PM, Sylvain Le Gall wrote:
>
> I would 100% prefer that ocaml-zmq "ownership" or "official branch"
> became Issuu branch. I think it will be better to have 1 maintained
> package than 1 maintain and 1 unmaintained.
>
> That said, I am not sure how to transfer ownership in Github (or even
> if it is possible). So my proposal, is to create a forge project to
> just host the tarballs and made OPAM to point to it. I am not saying
> that the project VCS should move away from Github! I just think that a
> forge project would be nice and would allow to have the maintained
> branch release there...
>
> An alternate method is to use:
> http://oasis.ocamlcore.org/dev/view/ZMQ/latest
>
> But this old OASIS-DB instance will go through major refactoring some
> time this year, so I would prefer hosting tarballs on Forge...
>
I'm not sure what you mean by ownership.

GitHub does not have a notion of ownership or "official" repository 
across forks (its does track forks though, so you could say it has a 
notion of "upstream").

Like Anil, I'm not exactly sure how forge helps in this case as Active 
development would still occur on github. And I guess the idea is to 
allow users to understand where to find most resent sources. Opam should 
be able to provide a reference to the relevant fork on github.

Regards
Anders Fugmann








From anders at fugmann.net  Fri Feb 14 14:31:21 2014
From: anders at fugmann.net (Anders Fugmann)
Date: Fri, 14 Feb 2014 15:31:21 +0100
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <E4757CFD-682A-4356-8482-4ADE59DD62A8@recoil.org>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
 <E4757CFD-682A-4356-8482-4ADE59DD62A8@recoil.org>
Message-ID: <52FE28B9.2010506@fugmann.net>

On 02/14/2014 02:32 PM, Anil Madhavapeddy wrote:
> The reason I suggest adding a new package `zmq` in this case is
> because the existing `ocaml-zmq` is misnamed in OPAM anyway, so we
> can solve two problems at once.
I'm all fine with this name change.

If you like to have a tag in the git repository to track opam versions, 
please let me know.

Regards
Anders


From sylvain+ocaml at le-gall.net  Fri Feb 14 15:16:26 2014
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Fri, 14 Feb 2014 16:16:26 +0100
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <E4757CFD-682A-4356-8482-4ADE59DD62A8@recoil.org>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
 <E4757CFD-682A-4356-8482-4ADE59DD62A8@recoil.org>
Message-ID: <CAOCAUGO+rv01q4R7=TkVK-QUapGGt56vc4B+bTnuH_fH88q6Dg@mail.gmail.com>

2014-02-14 14:32 GMT+01:00 Anil Madhavapeddy <anil at recoil.org>:
> On 14 Feb 2014, at 12:43, Sylvain Le Gall <sylvain+ocaml at le-gall.net> wrote:
>
>> Hi all,
>>
>> Sorry if you hate me for what I am just about to say.
>>
>> 2014-02-14 10:57 GMT+01:00 Anil Madhavapeddy <anil at recoil.org>:
>>> This is great! (CCing opam-devel)
>>>
>>> I'd like to resolve the zmq situation, since the current "ocaml-zmq" package in opam-stable has no maintainer, and is pointing to an unstable tarball.
>>>
>>> We could add a new zmq package to OPAM that does not clash with "ocaml-zmq" , based off the Issuu branch which appears maintained.  I'm CCing Anders Fugmann for his opinion on this.  After a while, we could remove the ocaml-zmq package if the upstream cannot be contacted.
>>>
>>
>> I would 100% prefer that ocaml-zmq "ownership" or "official branch"
>> became Issuu branch. I think it will be better to have 1 maintained
>> package than 1 maintain and 1 unmaintained.
>>
>> That said, I am not sure how to transfer ownership in Github (or even
>> if it is possible). So my proposal, is to create a forge project to
>> just host the tarballs and made OPAM to point to it. I am not saying
>> that the project VCS should move away from Github! I just think that a
>> forge project would be nice and would allow to have the maintained
>> branch release there...
>>
>> An alternate method is to use:
>> http://oasis.ocamlcore.org/dev/view/ZMQ/latest
>>
>> But this old OASIS-DB instance will go through major refactoring some
>> time this year, so I would prefer hosting tarballs on Forge...
>
> I don't really understand the benefit of involving the Forge here.
> Why not just swap the `url` to point to the new GitHub maintainer
> in the OPAM description?

Will work fine as well, I suppose.

>
> The reason I suggest adding a new package `zmq` in this case is
> because the existing `ocaml-zmq` is misnamed in OPAM anyway, so we
> can solve two problems at once.
>

In this case, we should remove ocaml-zmq. I think we should avoid
clutter in the archive.

> -anil

Sylvain

From sylvain+ocaml at le-gall.net  Fri Feb 14 15:27:23 2014
From: sylvain+ocaml at le-gall.net (Sylvain Le Gall)
Date: Fri, 14 Feb 2014 16:27:23 +0100
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <52FE27CB.1080407@fugmann.net>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
 <52FE27CB.1080407@fugmann.net>
Message-ID: <CAOCAUGN-VfS583VWObUkk3HbYNn7a+cYRRcATpaCz-jqsDzAxQ@mail.gmail.com>

2014-02-14 15:27 GMT+01:00 Anders Fugmann <anders at fugmann.net>:
> Hi Sylvian
>
> On 02/14/2014 01:43 PM, Sylvain Le Gall wrote:
>>
>>
>> I would 100% prefer that ocaml-zmq "ownership" or "official branch"
>> became Issuu branch. I think it will be better to have 1 maintained
>> package than 1 maintain and 1 unmaintained.
>>
>> That said, I am not sure how to transfer ownership in Github (or even
>> if it is possible). So my proposal, is to create a forge project to
>> just host the tarballs and made OPAM to point to it. I am not saying
>> that the project VCS should move away from Github! I just think that a
>> forge project would be nice and would allow to have the maintained
>> branch release there...
>>
>> An alternate method is to use:
>> http://oasis.ocamlcore.org/dev/view/ZMQ/latest
>>
>> But this old OASIS-DB instance will go through major refactoring some
>> time this year, so I would prefer hosting tarballs on Forge...
>>
> I'm not sure what you mean by ownership.
>
> GitHub does not have a notion of ownership or "official" repository across
> forks (its does track forks though, so you could say it has a notion of
> "upstream").
>

Well, it is one of the thing I don't like about github:

https://github.com/pdhborges/ocaml-zmq

And everything seems to be forked from this repository... So it looks
to me that the official repository is this one and that the owner is
pdhborges! You can argue that you can look at the network graph to see
that another one is more active and in advance, but this network graph
is super long to load and when it works, it is not that obvious who is
in advance....

But maybe I am missing the point here.

I don't like having my name in the URL for my project, because I don't
feel I have a strong ownership of it (or at least I would like to
invite anyone to participate).

> Like Anil, I'm not exactly sure how forge helps in this case as Active
> development would still occur on github. And I guess the idea is to allow
> users to understand where to find most resent sources. Opam should be able
> to provide a reference to the relevant fork on github.
>

I was suggesting the forge just for hosting tarballs, no dev involved there.

And indeed, OPAM can point to the official repository. But whenever
someone will look for ocaml-zmq on Google the first link will be
pdhborges/ocaml-zmq for at least a couple of months and most people
may assume that it is the official one. If you update this in OPAM,
you will have to go to OPAM read the page and realize that the
official one is not the one that Google reports.... I just think this
is misleading. But this is just about communication, no dev here.

But all this is a side discussion -- sorry to bring it here. I think
removal of ocaml-zmq and adding zmq with and updated URL is the way to
go for OPAM. This is a fine solution, probably better than hosting on
the Forge.

Sylvain

From anil at recoil.org  Fri Feb 14 15:51:03 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 14 Feb 2014 15:51:03 +0000
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <52FE28B9.2010506@fugmann.net>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
 <E4757CFD-682A-4356-8482-4ADE59DD62A8@recoil.org>
 <52FE28B9.2010506@fugmann.net>
Message-ID: <6024AE97-36F4-4B7F-A021-BC421A1B60CC@recoil.org>

On 14 Feb 2014, at 14:31, Anders Fugmann <anders at fugmann.net> wrote:

> On 02/14/2014 02:32 PM, Anil Madhavapeddy wrote:
>> The reason I suggest adding a new package `zmq` in this case is
>> because the existing `ocaml-zmq` is misnamed in OPAM anyway, so we
>> can solve two problems at once.
> I'm all fine with this name change.
> 
> If you like to have a tag in the git repository to track opam versions, please let me know.

A release tag would be great.  Is there an Ubuntu zeromq package
with the right version?  Need to add that to the depexts field to
pass the test bot for OPAM stable.

cheers,
Anil



From anil at recoil.org  Fri Feb 14 16:03:51 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 14 Feb 2014 16:03:51 +0000
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <CAOCAUGN-VfS583VWObUkk3HbYNn7a+cYRRcATpaCz-jqsDzAxQ@mail.gmail.com>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
 <52FE27CB.1080407@fugmann.net>
 <CAOCAUGN-VfS583VWObUkk3HbYNn7a+cYRRcATpaCz-jqsDzAxQ@mail.gmail.com>
Message-ID: <EA588FCA-37DC-4C5D-B7B3-01AC417E7D38@recoil.org>

On 14 Feb 2014, at 15:27, Sylvain Le Gall <sylvain+ocaml at le-gall.net> wrote:
> 
> Well, it is one of the thing I don't like about github:
> 
> https://github.com/pdhborges/ocaml-zmq
> 
> And everything seems to be forked from this repository... So it looks
> to me that the official repository is this one and that the owner is
> pdhborges! You can argue that you can look at the network graph to see
> that another one is more active and in advance, but this network graph
> is super long to load and when it works, it is not that obvious who is
> in advance....
> 
> But maybe I am missing the point here.
> 
> I don't like having my name in the URL for my project, because I don't
> feel I have a strong ownership of it (or at least I would like to
> invite anyone to participate).

Note that it's possible to just mail GitHub support to disconnect your
repo from the fork graph.  I've done this for several Mirage libraries
that had to be switched around.

As for ownership, we just set up an organization when such things are
required (again, see http://github.com/mirage or many others for how
this works).

>> Like Anil, I'm not exactly sure how forge helps in this case as Active
>> development would still occur on github. And I guess the idea is to allow
>> users to understand where to find most resent sources. Opam should be able
>> to provide a reference to the relevant fork on github.
>> 
> 
> I was suggesting the forge just for hosting tarballs, no dev involved there.
> 
> And indeed, OPAM can point to the official repository. But whenever
> someone will look for ocaml-zmq on Google the first link will be
> pdhborges/ocaml-zmq for at least a couple of months and most people
> may assume that it is the official one. If you update this in OPAM,
> you will have to go to OPAM read the page and realize that the
> official one is not the one that Google reports.... I just think this
> is misleading. But this is just about communication, no dev here.

This is indeed a good point, which is why I raised the question of
transition here rather than just commit the change.  The opam.ocaml.org
web-ranking is improving though, so it should be reasonably obvious
that running an "opam search zmq" will be the latest version.  We
shouldn't leave two concurrent versions of the library in opam stable
for too long.

-anil

From anil at recoil.org  Fri Feb 14 16:22:29 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 14 Feb 2014 16:22:29 +0000
Subject: [opam-devel] [MirageOS-devel] Offline use of mirage?
In-Reply-To: <33CB1DF5-F2E7-4B10-AE0A-4C21CB1CE043@cam.ac.uk>
References: <33CB1DF5-F2E7-4B10-AE0A-4C21CB1CE043@cam.ac.uk>
Message-ID: <743FED91-38B8-48D4-AA27-B9DB350B028A@recoil.org>

On 14 Feb 2014, at 15:55, Amir Chaudhry <amc79 at cam.ac.uk> wrote:

> Hi folks,
> 
> I (perhaps foolishly) thought I could play with mirage-skeleton on the train today and made sure to update repos and packages.  Just now had a facepalm moment when I saw 'Installing OPAM packages' in the terminal while trying out the static_website stuff. 
> 
> Is there an easy way I can keep a local copy of all the things I might need? I get the feeling that opam-in-box (and a way to keep it up-to-date)  is what I'm after.
> 
> I'm just trying to figure out if I missed an obvious solution so if this isn't possible yet, that's fine. 

Mort made the same request recently as well.  It's possible to do this by using "opam-admin make" to build a local version of the repository and using that as your remote.

For this to work, though, we'll need to come up with a list of all the packages that will be needed to pass to `opam-admin make`.  I notice that "opam-admin make --help" tells me this:

       -r, --recursive
           Recurse among the transitive dependencies.

       --resolve
           A more advanced version of `--recursive': will attempt to resolve
           your installation with all dependencies in the best way possible
           and build the archives accordingly.

CCing opam-devel: what on earth does the latter entry mean? :-)  What's the downside of using --resolve for everything instead of -r?  If there's none, why not get rid of -r entirely?

-anil

From anil at recoil.org  Fri Feb 14 16:37:57 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Fri, 14 Feb 2014 16:37:57 +0000
Subject: [opam-devel] experimental 4.02.0dev PPAs available
In-Reply-To: <ACE84345-AA44-4C6F-AFB3-9FC78077AA64@recoil.org>
References: <ACE84345-AA44-4C6F-AFB3-9FC78077AA64@recoil.org>
Message-ID: <330807FE-85B2-413F-B565-F7AE0BC809FC@recoil.org>

On 23 Dec 2013, at 14:05, Anil Madhavapeddy <anil at recoil.org> wrote:

> I've created (extremely) experimental PPAs for the 4.02.0dev series, with the intention of using them to run bulk builds on OPAM to find users of camlp4 and labltk that need explicitly marked packages.
> 
> I won't have time to integrate these into anything for a while, but if anyone else wants to help with the 4.02 triage of issues, let me know.
> 
> https://launchpad.net/~avsm/+archive/ppa-opam-experimental

I've just refreshed these to the latest revision of OCaml in order to help test Pierre's base-camlp4 patch at;
https://github.com/ocaml/opam-repository/pull/1641

The only hitch is that we still need a camlp4 package to build OPAM itself, which has now disappeared.  Louis, Thomas, what are the realistic prospects of ditching camlp4 as a necessary dependency for building OPAM-trunk?

See
https://launchpadlibrarian.net/166290459/buildlog_ubuntu-precise-i386.opam_1.1.99%2B1SNAPSHOT20140214-1ppa1~precise_FAILEDTOBUILD.txt.gz

for a build failure of OPAM-trunk on OCaml-trunk in avsm:ppa-experimental.  I'm CC Jeremie in case he's motivated to provide a replacement deb package for camlp4, but I'd much prefer if we could not depend on it and build camlp4 out of OPAM instead.  The reason for this is that if the camlp4 host tool is installed, it will be hard to spot missing dependencies as it will be picked up even when base-camlp4 is missing.

-anil

From gesbert at antislash.info  Fri Feb 14 17:05:36 2014
From: gesbert at antislash.info (Louis Gesbert)
Date: Fri, 14 Feb 2014 18:05:36 +0100
Subject: [opam-devel] [MirageOS-devel] Offline use of mirage?
In-Reply-To: <743FED91-38B8-48D4-AA27-B9DB350B028A@recoil.org>
References: <33CB1DF5-F2E7-4B10-AE0A-4C21CB1CE043@cam.ac.uk>
 <743FED91-38B8-48D4-AA27-B9DB350B028A@recoil.org>
Message-ID: <1471768.hqMcl0LVWx@agaric>


> For this to work, though, we'll need to come up with a list of all the packages that will be needed to pass to `opam-admin make`.  I notice that "opam-admin make --help" tells me this:
> 
>        -r, --recursive
>            Recurse among the transitive dependencies.
> 
>        --resolve
>            A more advanced version of `--recursive': will attempt to resolve
>            your installation with all dependencies in the best way possible
>            and build the archives accordingly.
> 
> CCing opam-devel: what on earth does the latter entry mean? :-)  What's the downside of using --resolve for everything instead of -r?  If there's none, why not get rid of -r entirely?

True, `--recursive` is mostly here for historical reasons. It will actually download _all_ versions of the dependencies. `--resolve` is a bit less predictable but will give you one usable snapshot of the universe.

I've nothing against removing `--recursive`, it's probably not used.

A nice addition would be the ability to prune the repository of unneeded package definitions : for now it keeps them all, just downloads a subset of the archives. That wouldn't be difficult.


--
Louis


From jdimino at janestreet.com  Fri Feb 14 17:30:46 2014
From: jdimino at janestreet.com (Jeremie Dimino)
Date: Fri, 14 Feb 2014 17:30:46 +0000
Subject: [opam-devel] experimental 4.02.0dev PPAs available
In-Reply-To: <330807FE-85B2-413F-B565-F7AE0BC809FC@recoil.org>
References: <ACE84345-AA44-4C6F-AFB3-9FC78077AA64@recoil.org>
 <330807FE-85B2-413F-B565-F7AE0BC809FC@recoil.org>
Message-ID: <CANhEzE5koBt4XJMUUXXSvMR4d0bLw080eiFhOK=4Z=Qke+bbLA@mail.gmail.com>

On Fri, Feb 14, 2014 at 4:37 PM, Anil Madhavapeddy <anil at recoil.org> wrote:

> for a build failure of OPAM-trunk on OCaml-trunk in avsm:ppa-experimental.
>  I'm CC Jeremie in case he's motivated to provide a replacement deb package
> for camlp4, but I'd much prefer if we could not depend on it and build
> camlp4 out of OPAM instead.  The reason for this is that if the camlp4 host
> tool is installed, it will be hard to spot missing dependencies as it will
> be picked up even when base-camlp4 is missing.
>

TBH I don't think I can do that in the near future. I'm quite busy at the
moment and I haven't done debian packages for quite a while...

-- 
Jeremie
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20140214/23b297cf/attachment.html>

From anil at recoil.org  Sat Feb 15 11:52:14 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 15 Feb 2014 11:52:14 +0000
Subject: [opam-devel] experimental 4.02.0dev PPAs available
In-Reply-To: <CANhEzE5koBt4XJMUUXXSvMR4d0bLw080eiFhOK=4Z=Qke+bbLA@mail.gmail.com>
References: <ACE84345-AA44-4C6F-AFB3-9FC78077AA64@recoil.org>
 <330807FE-85B2-413F-B565-F7AE0BC809FC@recoil.org>
 <CANhEzE5koBt4XJMUUXXSvMR4d0bLw080eiFhOK=4Z=Qke+bbLA@mail.gmail.com>
Message-ID: <E8BC41E5-8651-42C6-8BAA-A6CC3DFB1E15@recoil.org>

On 14 Feb 2014, at 17:30, Jeremie Dimino <jdimino at janestreet.com> wrote:

> On Fri, Feb 14, 2014 at 4:37 PM, Anil Madhavapeddy <anil at recoil.org> wrote:
> for a build failure of OPAM-trunk on OCaml-trunk in avsm:ppa-experimental.  I'm CC Jeremie in case he's motivated to provide a replacement deb package for camlp4, but I'd much prefer if we could not depend on it and build camlp4 out of OPAM instead.  The reason for this is that if the camlp4 host tool is installed, it will be hard to spot missing dependencies as it will be picked up even when base-camlp4 is missing.
> 
> TBH I don't think I can do that in the near future. I'm quite busy at the moment and I haven't done debian packages for quite a while... 

Thanks for confirming -- I don't think there's an urgent need for a camlp4 package anyway.  Let's wait and see how difficult a camlp4-less OPAM would be to achieve instead.

-anil

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20140215/9ef04926/attachment-0001.html>

From anil at recoil.org  Sat Feb 15 11:59:51 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Sat, 15 Feb 2014 11:59:51 +0000
Subject: [opam-devel] [MirageOS-devel] Offline use of mirage?
In-Reply-To: <1471768.hqMcl0LVWx@agaric>
References: <33CB1DF5-F2E7-4B10-AE0A-4C21CB1CE043@cam.ac.uk>
 <743FED91-38B8-48D4-AA27-B9DB350B028A@recoil.org> <1471768.hqMcl0LVWx@agaric>
Message-ID: <338CF19F-F175-4E2E-B593-A72AA4C32BDA@recoil.org>

On 14 Feb 2014, at 17:05, Louis Gesbert <gesbert at antislash.info> wrote:

> 
>> For this to work, though, we'll need to come up with a list of all the packages that will be needed to pass to `opam-admin make`.  I notice that "opam-admin make --help" tells me this:
>> 
>>       -r, --recursive
>>           Recurse among the transitive dependencies.
>> 
>>       --resolve
>>           A more advanced version of `--recursive': will attempt to resolve
>>           your installation with all dependencies in the best way possible
>>           and build the archives accordingly.
>> 
>> CCing opam-devel: what on earth does the latter entry mean? :-)  What's the downside of using --resolve for everything instead of -r?  If there's none, why not get rid of -r entirely?
> 
> True, `--recursive` is mostly here for historical reasons. It will actually download _all_ versions of the dependencies. `--resolve` is a bit less predictable but will give you one usable snapshot of the universe.
> 
> I've nothing against removing `--recursive`, it's probably not used.
> 
> A nice addition would be the ability to prune the repository of unneeded package definitions : for now it keeps them all, just downloads a subset of the archives. That wouldn't be difficult.

Thanks for clarifying this!  It sounds like `--resolve` (with just one version per package) would work fine for our needs to use Mirage offline.  I've sent a pull request to OPAM to (hopefully) clarify the man page wording.

https://github.com/ocaml/opam/pull/1178

-a


From anders at fugmann.net  Mon Feb 17 08:25:58 2014
From: anders at fugmann.net (Anders Fugmann)
Date: Mon, 17 Feb 2014 09:25:58 +0100
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <6024AE97-36F4-4B7F-A021-BC421A1B60CC@recoil.org>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
 <E4757CFD-682A-4356-8482-4ADE59DD62A8@recoil.org>
 <52FE28B9.2010506@fugmann.net>
 <6024AE97-36F4-4B7F-A021-BC421A1B60CC@recoil.org>
Message-ID: <5301C796.5090703@fugmann.net>

Hi Anil,

I created a tag '3.2-0'.
3.2 indicates the zmq c library version, and 0 is the version of the 
ocaml bindings. The opam package could then have version 3.2.0

This is not Semantic Versioning[1]. If you have a better suggestion for 
tag names, please let me know.

As for the ubuntu/debian zmq package names, the needed packages are 
called 'libzmq3' for runtime and 'libzmq3-dev' is needed for compilation.

Regards
Anders Fugmann

[1] http://en.wikipedia.org/wiki/Software_versioning


On 02/14/2014 04:51 PM, Anil Madhavapeddy wrote:
> On 14 Feb 2014, at 14:31, Anders Fugmann <anders at fugmann.net> wrote:
>
>> On 02/14/2014 02:32 PM, Anil Madhavapeddy wrote:
>>> The reason I suggest adding a new package `zmq` in this case is
>>> because the existing `ocaml-zmq` is misnamed in OPAM anyway, so we
>>> can solve two problems at once.
>> I'm all fine with this name change.
>>
>> If you like to have a tag in the git repository to track opam versions, please let me know.
>
> A release tag would be great.  Is there an Ubuntu zeromq package
> with the right version?  Need to add that to the depexts field to
> pass the test bot for OPAM stable.
>
> cheers,
> Anil
>
>


From louis.gesbert at ocamlpro.com  Mon Feb 17 09:07:58 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 17 Feb 2014 10:07:58 +0100
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <5301C796.5090703@fugmann.net>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <6024AE97-36F4-4B7F-A021-BC421A1B60CC@recoil.org>
 <5301C796.5090703@fugmann.net>
Message-ID: <3136011.oCmeTtW7DR@agaric>

Le lundi 17 f?vrier 2014, 09:25:58 Anders Fugmann a ?crit :
> Hi Anil,
> 
> I created a tag '3.2-0'.
> 3.2 indicates the zmq c library version, and 0 is the version of the 
> ocaml bindings. The opam package could then have version 3.2.0

Note that OPAM supports Debian-like versioning, so you're allowed version names like '3.2-1', or even '4.0~beta1' (which would be _before_ '4.0')

Cheers,
Louis

From louis.gesbert at ocamlpro.com  Mon Feb 17 09:28:44 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 17 Feb 2014 10:28:44 +0100
Subject: [opam-devel] experimental 4.02.0dev PPAs available
In-Reply-To: <330807FE-85B2-413F-B565-F7AE0BC809FC@recoil.org>
References: <ACE84345-AA44-4C6F-AFB3-9FC78077AA64@recoil.org>
 <330807FE-85B2-413F-B565-F7AE0BC809FC@recoil.org>
Message-ID: <2007414.NbGSvkRDzV@agaric>

Le vendredi 14 f?vrier 2014, 16:37:57 Anil Madhavapeddy a ?crit :
> On 23 Dec 2013, at 14:05, Anil Madhavapeddy <anil at recoil.org> wrote:
> 
> > I've created (extremely) experimental PPAs for the 4.02.0dev series, with the intention of using them to run bulk builds on OPAM to find users of camlp4 and labltk that need explicitly marked packages.
> > 
> > I won't have time to integrate these into anything for a while, but if anyone else wants to help with the 4.02 triage of issues, let me know.
> > 
> > https://launchpad.net/~avsm/+archive/ppa-opam-experimental
> 
> I've just refreshed these to the latest revision of OCaml in order to help test Pierre's base-camlp4 patch at;
> https://github.com/ocaml/opam-repository/pull/1641
> 
> The only hitch is that we still need a camlp4 package to build OPAM itself, which has now disappeared.  Louis, Thomas, what are the realistic prospects of ditching camlp4 as a necessary dependency for building OPAM-trunk?

OPAM itself doesn't need it, but the bigger problem will be that our embedded dependencies require it -- dose3, in particular. I'll investigate how deeply it's used to give a more precise answer.

Worst case, there might be the option to pre-process their source beforehand...


From anil at recoil.org  Mon Feb 17 11:27:43 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 17 Feb 2014 11:27:43 +0000
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <5301C796.5090703@fugmann.net>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
 <E4757CFD-682A-4356-8482-4ADE59DD62A8@recoil.org>
 <52FE28B9.2010506@fugmann.net>
 <6024AE97-36F4-4B7F-A021-BC421A1B60CC@recoil.org>
 <5301C796.5090703@fugmann.net>
Message-ID: <FE449A76-2179-49EF-804F-2CEF9B660471@recoil.org>

Thanks!  I've now merged in your zmq library, and have a candidate iocaml
port at: https://github.com/ocaml/opam-repository/pull/1690

I'll wait for Andy to acknowledge the port before merging it, as I've added
a small patch to improve OPAM compatibility.

-anil

On 17 Feb 2014, at 08:25, Anders Fugmann <anders at fugmann.net> wrote:

> Hi Anil,
> 
> I created a tag '3.2-0'.
> 3.2 indicates the zmq c library version, and 0 is the version of the ocaml bindings. The opam package could then have version 3.2.0
> 
> This is not Semantic Versioning[1]. If you have a better suggestion for tag names, please let me know.
> 
> As for the ubuntu/debian zmq package names, the needed packages are called 'libzmq3' for runtime and 'libzmq3-dev' is needed for compilation.
> 
> Regards
> Anders Fugmann
> 
> [1] http://en.wikipedia.org/wiki/Software_versioning
> 
> 
> On 02/14/2014 04:51 PM, Anil Madhavapeddy wrote:
>> On 14 Feb 2014, at 14:31, Anders Fugmann <anders at fugmann.net> wrote:
>> 
>>> On 02/14/2014 02:32 PM, Anil Madhavapeddy wrote:
>>>> The reason I suggest adding a new package `zmq` in this case is
>>>> because the existing `ocaml-zmq` is misnamed in OPAM anyway, so we
>>>> can solve two problems at once.
>>> I'm all fine with this name change.
>>> 
>>> If you like to have a tag in the git repository to track opam versions, please let me know.
>> 
>> A release tag would be great.  Is there an Ubuntu zeromq package
>> with the right version?  Need to add that to the depexts field to
>> pass the test bot for OPAM stable.
>> 
>> cheers,
>> Anil
>> 
>> 
> 


From gesbert at antislash.info  Mon Feb 17 11:53:46 2014
From: gesbert at antislash.info (Louis Gesbert)
Date: Mon, 17 Feb 2014 12:53:46 +0100
Subject: [opam-devel] experimental 4.02.0dev PPAs available
In-Reply-To: <2007414.NbGSvkRDzV@agaric>
References: <ACE84345-AA44-4C6F-AFB3-9FC78077AA64@recoil.org>
 <330807FE-85B2-413F-B565-F7AE0BC809FC@recoil.org> <2007414.NbGSvkRDzV@agaric>
Message-ID: <2249083.vk6cmUmGdF@agaric>

Le lundi 17 f?vrier 2014, 10:28:44 Louis Gesbert a ?crit :
> Le vendredi 14 f?vrier 2014, 16:37:57 Anil Madhavapeddy a ?crit :
> > On 23 Dec 2013, at 14:05, Anil Madhavapeddy <anil at recoil.org> wrote:
> > 
> > > I've created (extremely) experimental PPAs for the 4.02.0dev series, with the intention of using them to run bulk builds on OPAM to find users of camlp4 and labltk that need explicitly marked packages.
> > > 
> > > I won't have time to integrate these into anything for a while, but if anyone else wants to help with the 4.02 triage of issues, let me know.
> > > 
> > > https://launchpad.net/~avsm/+archive/ppa-opam-experimental
> > 
> > I've just refreshed these to the latest revision of OCaml in order to help test Pierre's base-camlp4 patch at;
> > https://github.com/ocaml/opam-repository/pull/1641
> > 
> > The only hitch is that we still need a camlp4 package to build OPAM itself, which has now disappeared.  Louis, Thomas, what are the realistic prospects of ditching camlp4 as a necessary dependency for building OPAM-trunk?
> 
> OPAM itself doesn't need it, but the bigger problem will be that our embedded dependencies require it -- dose3, in particular. I'll investigate how deeply it's used to give a more precise answer.
> 
> Worst case, there might be the option to pre-process their source beforehand...
> 
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

It seems it's just dose, and it only uses Camlp4MacroParser to handle ./configure options, so that shouldn't be too difficult to get rid of for a more specialized build.

From anil at recoil.org  Mon Feb 17 11:59:56 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 17 Feb 2014 11:59:56 +0000
Subject: [opam-devel] experimental 4.02.0dev PPAs available
In-Reply-To: <2249083.vk6cmUmGdF@agaric>
References: <ACE84345-AA44-4C6F-AFB3-9FC78077AA64@recoil.org>
 <330807FE-85B2-413F-B565-F7AE0BC809FC@recoil.org> <2007414.NbGSvkRDzV@agaric>
 <2249083.vk6cmUmGdF@agaric>
Message-ID: <6C9517B5-10CA-4DCE-8D3B-2F69E119B9D2@recoil.org>

On 17 Feb 2014, at 11:53, Louis Gesbert <gesbert at antislash.info> wrote:

> Le lundi 17 f?vrier 2014, 10:28:44 Louis Gesbert a ?crit :
>> Le vendredi 14 f?vrier 2014, 16:37:57 Anil Madhavapeddy a ?crit :
>>> On 23 Dec 2013, at 14:05, Anil Madhavapeddy <anil at recoil.org> wrote:
>>> 
>>>> I've created (extremely) experimental PPAs for the 4.02.0dev series, with the intention of using them to run bulk builds on OPAM to find users of camlp4 and labltk that need explicitly marked packages.
>>>> 
>>>> I won't have time to integrate these into anything for a while, but if anyone else wants to help with the 4.02 triage of issues, let me know.
>>>> 
>>>> https://launchpad.net/~avsm/+archive/ppa-opam-experimental
>>> 
>>> I've just refreshed these to the latest revision of OCaml in order to help test Pierre's base-camlp4 patch at;
>>> https://github.com/ocaml/opam-repository/pull/1641
>>> 
>>> The only hitch is that we still need a camlp4 package to build OPAM itself, which has now disappeared.  Louis, Thomas, what are the realistic prospects of ditching camlp4 as a necessary dependency for building OPAM-trunk?
>> 
>> OPAM itself doesn't need it, but the bigger problem will be that our embedded dependencies require it -- dose3, in particular. I'll investigate how deeply it's used to give a more precise answer.
>> 
>> Worst case, there might be the option to pre-process their source beforehand...

Great! I've filed #1183 to track this
https://github.com/ocaml/opam/issues/1183

If you can get me a trunk snapshot that works without camlp4, I'll resume the PPA-based bulk builds for Pierre after that.  Note that they currently use a opam-full tarball so they don't require the external binary packages as upstream does.

-anil

From anders at fugmann.net  Mon Feb 17 12:33:29 2014
From: anders at fugmann.net (Anders Fugmann)
Date: Mon, 17 Feb 2014 13:33:29 +0100
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <FE449A76-2179-49EF-804F-2CEF9B660471@recoil.org>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
 <E4757CFD-682A-4356-8482-4ADE59DD62A8@recoil.org>
 <52FE28B9.2010506@fugmann.net>
 <6024AE97-36F4-4B7F-A021-BC421A1B60CC@recoil.org>
 <5301C796.5090703@fugmann.net>
 <FE449A76-2179-49EF-804F-2CEF9B660471@recoil.org>
Message-ID: <53020199.1070404@fugmann.net>

Looks good.

If possible, I think the zmq package should conflict with ocaml-zmq. I 
dont think they can co-exist, as they are both called 'ZMQ' wrt. ocamlfind.

Thanks,
Anders



On 02/17/2014 12:27 PM, Anil Madhavapeddy wrote:
> Thanks!  I've now merged in your zmq library, and have a candidate iocaml
> port at: https://github.com/ocaml/opam-repository/pull/1690
>
> I'll wait for Andy to acknowledge the port before merging it, as I've added
> a small patch to improve OPAM compatibility.
>
> -anil
>
> On 17 Feb 2014, at 08:25, Anders Fugmann <anders at fugmann.net> wrote:
>
>> Hi Anil,
>>
>> I created a tag '3.2-0'.
>> 3.2 indicates the zmq c library version, and 0 is the version of the ocaml bindings. The opam package could then have version 3.2.0
>>
>> This is not Semantic Versioning[1]. If you have a better suggestion for tag names, please let me know.
>>
>> As for the ubuntu/debian zmq package names, the needed packages are called 'libzmq3' for runtime and 'libzmq3-dev' is needed for compilation.
>>
>> Regards
>> Anders Fugmann
>>
>> [1] http://en.wikipedia.org/wiki/Software_versioning
>>
>>
>> On 02/14/2014 04:51 PM, Anil Madhavapeddy wrote:
>>> On 14 Feb 2014, at 14:31, Anders Fugmann <anders at fugmann.net> wrote:
>>>
>>>> On 02/14/2014 02:32 PM, Anil Madhavapeddy wrote:
>>>>> The reason I suggest adding a new package `zmq` in this case is
>>>>> because the existing `ocaml-zmq` is misnamed in OPAM anyway, so we
>>>>> can solve two problems at once.
>>>> I'm all fine with this name change.
>>>>
>>>> If you like to have a tag in the git repository to track opam versions, please let me know.
>>>
>>> A release tag would be great.  Is there an Ubuntu zeromq package
>>> with the right version?  Need to add that to the depexts field to
>>> pass the test bot for OPAM stable.
>>>
>>> cheers,
>>> Anil
>>>
>>>
>>
>


From anil at recoil.org  Mon Feb 17 14:08:26 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 17 Feb 2014 14:08:26 +0000
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <53020199.1070404@fugmann.net>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <CAOCAUGOVCfGNt8PS167SMaq-ZbwEmTkBSjYqKysLcPbKCMC3ww@mail.gmail.com>
 <E4757CFD-682A-4356-8482-4ADE59DD62A8@recoil.org>
 <52FE28B9.2010506@fugmann.net>
 <6024AE97-36F4-4B7F-A021-BC421A1B60CC@recoil.org>
 <5301C796.5090703@fugmann.net>
 <FE449A76-2179-49EF-804F-2CEF9B660471@recoil.org>
 <53020199.1070404@fugmann.net>
Message-ID: <B3DC460B-B9A9-475D-B76D-0C876A803091@recoil.org>

Good point; I've added this conflict in:
https://github.com/ocaml/opam-repository/pull/1691

-a

On 17 Feb 2014, at 12:33, Anders Fugmann <anders at fugmann.net> wrote:

> Looks good.
> 
> If possible, I think the zmq package should conflict with ocaml-zmq. I dont think they can co-exist, as they are both called 'ZMQ' wrt. ocamlfind.
> 
> Thanks,
> Anders
> 
> 
> 
> On 02/17/2014 12:27 PM, Anil Madhavapeddy wrote:
>> Thanks!  I've now merged in your zmq library, and have a candidate iocaml
>> port at: https://github.com/ocaml/opam-repository/pull/1690
>> 
>> I'll wait for Andy to acknowledge the port before merging it, as I've added
>> a small patch to improve OPAM compatibility.
>> 
>> -anil
>> 
>> On 17 Feb 2014, at 08:25, Anders Fugmann <anders at fugmann.net> wrote:
>> 
>>> Hi Anil,
>>> 
>>> I created a tag '3.2-0'.
>>> 3.2 indicates the zmq c library version, and 0 is the version of the ocaml bindings. The opam package could then have version 3.2.0
>>> 
>>> This is not Semantic Versioning[1]. If you have a better suggestion for tag names, please let me know.
>>> 
>>> As for the ubuntu/debian zmq package names, the needed packages are called 'libzmq3' for runtime and 'libzmq3-dev' is needed for compilation.
>>> 
>>> Regards
>>> Anders Fugmann
>>> 
>>> [1] http://en.wikipedia.org/wiki/Software_versioning
>>> 
>>> 
>>> On 02/14/2014 04:51 PM, Anil Madhavapeddy wrote:
>>>> On 14 Feb 2014, at 14:31, Anders Fugmann <anders at fugmann.net> wrote:
>>>> 
>>>>> On 02/14/2014 02:32 PM, Anil Madhavapeddy wrote:
>>>>>> The reason I suggest adding a new package `zmq` in this case is
>>>>>> because the existing `ocaml-zmq` is misnamed in OPAM anyway, so we
>>>>>> can solve two problems at once.
>>>>> I'm all fine with this name change.
>>>>> 
>>>>> If you like to have a tag in the git repository to track opam versions, please let me know.
>>>> 
>>>> A release tag would be great.  Is there an Ubuntu zeromq package
>>>> with the right version?  Need to add that to the depexts field to
>>>> pass the test bot for OPAM stable.
>>>> 
>>>> cheers,
>>>> Anil
>>>> 
>>>> 
>>> 
>> 
> 


From hez at 0ok.org  Tue Feb 18 12:18:27 2014
From: hez at 0ok.org (Hezekiah M. Carty)
Date: Tue, 18 Feb 2014 07:18:27 -0500
Subject: [opam-devel] [Caml-list] [ANN] IOCaml v0.3
In-Reply-To: <52FDFA2D.9030607@fugmann.net>
References: <CAHYOizEVwqKunGPfpCGR=VScERu7cEQ=mgpGR-2W=oUa9MxLPg@mail.gmail.com>
 <0F12CFD7-5DBB-4235-BD9D-C99D4949CF36@recoil.org>
 <1520E05E-DA7A-48C9-93E9-44E13148BB63@recoil.org>
 <52FDF2A2.5050605@fugmann.net>
 <1FB58787-B3B3-424B-992B-F108B012F596@recoil.org>
 <52FDFA2D.9030607@fugmann.net>
Message-ID: <CAMfPyLD=eS2wAyHFGcM72WB=6Oc6FkEy0ii4Y0267pbftkX+sg@mail.gmail.com>

On Fri, Feb 14, 2014 at 6:12 AM, Anders Fugmann <anders at fugmann.net> wrote:
> On 02/14/2014 11:49 AM, Anil Madhavapeddy wrote:
>>
>> The too-new library is almost certainly the case -- although unfortunately
>> I don't have the 3.2.4 version in my Homebrew anymore and so the switch
>> doesn't work (they don't keep older versions around like OPAM does, I
>> believe).
>>
>> $ brew switch zmq 3.2.4
>> Error: zmq does not have a version "3.2.4" in the Cellar.
>> Versions available: 4.0.3
>>
>> Are the interfaces very different between the versions to support both, or
>> does this require a big rev to your bindings?
>
> I do not think that is feasible.
>
> ZMQ 3.x.x and ZMQ 4.x.x has different wire formats, so they are not
> interchangeable. Also the header files have changed, so I assume that would
> not be possible to have a version that supports both (i.e. based on the C
> library installed).
>

A slightly off-topic clarification - A program using ZMQ 4.x.x can
speak to one using ZMQ 3.x.x or ZMQ 2.x.x (and 3.x.x can speak to
2.x.x) as long as the newer program only uses socket types supported
by the older library.  I don't think that there is C ABI or API
compatibility across major ZMQ releases.

Hez

From mmatalka at gmail.com  Mon Feb 24 09:04:16 2014
From: mmatalka at gmail.com (Malcolm Matalka)
Date: Mon, 24 Feb 2014 09:04:16 +0000
Subject: [opam-devel] [ocaml-platform] OPAM 1.1.1 Released !
In-Reply-To: <16AD65D7-9B29-41F2-A6A4-A3F4B7256F9E@recoil.org> (Anil
 Madhavapeddy's message of "Thu, 30 Jan 2014 11:03:22 +0000")
References: <2402300.iHojb7qSok@agaric>
 <16AD65D7-9B29-41F2-A6A4-A3F4B7256F9E@recoil.org>
Message-ID: <87d2ic51bj.fsf@gmail.com>

Merged into NixPkgs

https://github.com/NixOS/nixpkgs/pull/1810

Anil Madhavapeddy <anil at recoil.org> writes:

> Homebrew pull: https://github.com/Homebrew/homebrew/pull/26282
> (with aspcud as recommended)
>
> Ubuntu packages building in my unstable PPA:
> https://launchpad.net/~avsm/+archive/ppa-opam-unstable/+packages
> I've made one change to the packaging here by adding 'aspcud' to the recommended list.  I'll mail the OCaml list when I put these live in the stable PPA.
>
> CCing Mehdi so he can upload a proper 1.1.1 to Debian when he gets a chance.
>
> Any volunteers to get an RPM version of OPAM building?  We can hook that into the SUSE Open Build service to get a lot of architecture
> binaries more easily.  It would be great to submit OPAM into Fedora as well.
>
>
> -anil
>
> On 29 Jan 2014, at 15:36, Louis Gesbert <louis.gesbert at ocamlpro.com> wrote:
>
>> We are glad to announce that OPAM 1.1.1 has just been released.
>> https://github.com/ocaml/opam/releases/tag/1.1.1
>>  
>>  
>> The full changelog is available here: https://raw.github.com/ocaml/opam/1.1.1/CHANGES
>>  
>> Most notable changes since the first RC include a fix for the weird update-messages bug (#1030), a more accurate trigger of recompilation
>> on upstream package changes, and ongoing efforts to have the external solver work across platforms.
>>  
>> This is going to be announced on the caml-list very shortly, once we get the binaries available for the most common platforms.
>>  
>> Thanks to all who contributed to this :)
>>  
>> Louis
>> _______________________________________________
>> Platform mailing list
>> Platform at lists.ocaml.org
>> http://lists.ocaml.org/listinfo/platform
>
> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel

From ygrek at autistici.org  Mon Feb 24 10:13:37 2014
From: ygrek at autistici.org (ygrek)
Date: Mon, 24 Feb 2014 18:13:37 +0800
Subject: [opam-devel] bundling
Message-ID: <20140224181337.5dd541dd@kiwi.local.tld>

Hello,

 https://github.com/ocaml/opam/pull/1190

 This is not 100% complete, but it helps me to solve my current issue, namely a single click install of ocaml software.
 My further goal is to use this to unbundle mldonkey so that it can be built with ocamlfind dependencies
 by the developer and still distributed as a single archive for the end-users.
 TODO:
 * bundling of ocaml itself
 * better error messages (e.g. when depext is missing), though that can be checked by configure script
 * windows?

 I wonder what you think about it.

-- 

From gesbert at antislash.info  Mon Feb 24 12:05:43 2014
From: gesbert at antislash.info (Louis Gesbert)
Date: Mon, 24 Feb 2014 13:05:43 +0100
Subject: [opam-devel] bundling
In-Reply-To: <20140224181337.5dd541dd@kiwi.local.tld>
References: <20140224181337.5dd541dd@kiwi.local.tld>
Message-ID: <33179724.3I7kyHHkoF@agaric>

That's awesome, thanks ! I am in the process of reviewing the patch ; in its current state it will work for basic packages but won't handle patches, .install files and such more advanced features. I am wondering also if this should fit in opam itself, or in an external tool like opam admin / opamfu, as this is mostly independent from the current opam installation (except for repositories used). Making it external would ensure there is no issue with the current state being loaded and used for filtering the commands.

>  * bundling of ocaml itself

When my compilers-as-packages branch lands, hopefully this won't require any more work for bundling :)

>  * better error messages (e.g. when depext is missing), though that can be checked by configure script

Integrating proper depexts and/or post-messages processing in a generated shell-script sounds very tedious, not sure what the best approach would be here but just outputing the info at bundle-generation time to help document may be good enough for a start.


These are just details though, this is really cool and will just need a bit of polishing to make sure it integrates nicely without unexpected errors.

Louis


Le lundi 24 f?vrier 2014, 18:13:37 ygrek a ?crit :
> Hello,
> 
>  https://github.com/ocaml/opam/pull/1190
> 
>  This is not 100% complete, but it helps me to solve my current issue, namely a single click install of ocaml software.
>  My further goal is to use this to unbundle mldonkey so that it can be built with ocamlfind dependencies
>  by the developer and still distributed as a single archive for the end-users.
>  TODO:
>  * bundling of ocaml itself
>  * better error messages (e.g. when depext is missing), though that can be checked by configure script
>  * windows?
> 
>  I wonder what you think about it.
> 
> 


From anil at recoil.org  Mon Feb 24 12:10:09 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Mon, 24 Feb 2014 12:10:09 +0000
Subject: [opam-devel] bundling
In-Reply-To: <33179724.3I7kyHHkoF@agaric>
References: <20140224181337.5dd541dd@kiwi.local.tld>
 <33179724.3I7kyHHkoF@agaric>
Message-ID: <10491966-6DA8-4942-A949-C4EAA6428981@recoil.org>

On 24 Feb 2014, at 12:05, Louis Gesbert <gesbert at antislash.info> wrote:

> Integrating proper depexts and/or post-messages processing in a generated shell-script sounds very tedious, not sure what the best approach would be here but just outputing the info at bundle-generation time to help document may be good enough for a start.

We could get pretty far on (e.g.) Ubuntu with the existing external tag metadata.  Full detection will be hard, but have a script option to install a few packages doesn't seem too bad.

-anil


From ygrek at autistici.org  Mon Feb 24 15:10:35 2014
From: ygrek at autistici.org (ygrek)
Date: Mon, 24 Feb 2014 23:10:35 +0800
Subject: [opam-devel] bundling
In-Reply-To: <33179724.3I7kyHHkoF@agaric>
References: <20140224181337.5dd541dd@kiwi.local.tld>
 <33179724.3I7kyHHkoF@agaric>
Message-ID: <20140224231035.41ce5847@kiwi.local.tld>

On Mon, 24 Feb 2014 13:05:43 +0100
Louis Gesbert <gesbert at antislash.info> wrote:

> That's awesome, thanks ! I am in the process of reviewing the patch ; in its current state it will work for basic packages but won't handle patches, .install files and such more advanced features. I am wondering also if this should fit in opam itself, or in an external tool like opam admin / opamfu, as this is mostly independent from the current opam installation (except for repositories used). Making it external would ensure there is no issue with the current state being loaded and used for filtering the commands.

It was first part of opam-admin (as one can probably see from resolve_deps code :) ) but then it was not very convenient to use. It handles patches just fine, because
it archives the build directory after patches are applied (that's on purpose). I am not sure whether using the current state is good or bad actually, because
it ensures that the state bundled is the state used during development (that is - tested). On the other hand it doesn't fit well with {:installed} flags and optional
dependencies..

> When my compilers-as-packages branch lands, hopefully this won't require any more work for bundling :)

Nice!

> Integrating proper depexts and/or post-messages processing in a generated shell-script sounds very tedious, not sure what the best approach would be here but just outputing the info at bundle-generation time to help document may be good enough for a start.

Ack.

-- 

From louis.gesbert at ocamlpro.com  Mon Feb 24 15:31:20 2014
From: louis.gesbert at ocamlpro.com (Louis Gesbert)
Date: Mon, 24 Feb 2014 16:31:20 +0100
Subject: [opam-devel] bundling
In-Reply-To: <20140224231035.41ce5847@kiwi.local.tld>
References: <20140224181337.5dd541dd@kiwi.local.tld>
 <33179724.3I7kyHHkoF@agaric> <20140224231035.41ce5847@kiwi.local.tld>
Message-ID: <3380759.oTzl8Z9Ugf@agaric>

> > Integrating proper depexts and/or post-messages processing in a generated shell-script sounds very tedious, not sure what the best approach would be here but just outputing the info at bundle-generation time to help document may be good enough for a start.
> 
> Ack.
> 

Actually, as Anil pointed out, handling depexts wouldn't be hard (just match tags and OS and issue appropriate `apt-get install` or whatever) ; that could be useful elsewhere also.
Post-messages _may_ use conditions with OPAM variable logic so that's what made me think it would be hard ; in practice it's just {success} / {failure} and OS switches though, so we may do something with that, albeit not completely generic.

From roberto at dicosmo.org  Mon Feb 24 19:25:26 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Mon, 24 Feb 2014 20:25:26 +0100
Subject: [opam-devel] Sources of the aspcud external solver
Message-ID: <20140224192526.GA10704@voyager>

I just met in the Irill corridors another person interested in
using aspcud as an external solver for opam, and that had
difficulties finding the pointer to upstream sources.

It seems then useful to paste here information that ended
up scattered on github, private mail exchanges, and the like,
in case somebody else want to get an external solver running
on her/his system

1) the page https://github.com/ocaml/opam/wiki/Distributions maintained by
   Anil contains current information on the porting status of the external
   solvers on different architectures/OS

2) the official page with information on aspcud is actually
   out there:

     http://www.cs.uni-potsdam.de/wv/aspcud/

   Since this tool is built on top of an ASP solver distributed
   by the Potassco team and available here

     http://potassco.sourceforge.net/

   you need to first make clasp and gringo run on your system,
   and yes, there is information on what you need to do to make
   this work

   http://sourceforge.net/p/potassco/wiki/Home/

 3) the developer of aspcud, Roland Kaminski, is active, and willing to help;
    he has already incorporated upstream several changes that should make
    porting/packaging easier (in particular, the shell script wrapper used
    in 1.8 is gone). Here is the changelog and the url to the upstream version

        added support for old-style criteria
        added an install target (supports DESTDIR)
        replaced bash/python script with a small C program
        should build on MacOS X without problems now

    http://svn.code.sf.net/p/potassco/code/trunk/aspcud/

Cheers

--
Roberto

From ygrek at autistici.org  Mon Feb 24 20:48:38 2014
From: ygrek at autistici.org (ygrek)
Date: Tue, 25 Feb 2014 04:48:38 +0800
Subject: [opam-devel] bundling
In-Reply-To: <33179724.3I7kyHHkoF@agaric>
References: <20140224181337.5dd541dd@kiwi.local.tld>
 <33179724.3I7kyHHkoF@agaric>
Message-ID: <20140225044838.6b071485@kiwi.local.tld>

On Mon, 24 Feb 2014 13:05:43 +0100
Louis Gesbert <gesbert at antislash.info> wrote:

> I am in the process of reviewing the patch ; in its current state it will work for basic packages but won't handle patches, .install files and such more advanced features.

Just pushed support for .install files

-- 

From vb at luminar.eu.org  Tue Feb 25 15:03:37 2014
From: vb at luminar.eu.org (Vincent B.)
Date: Tue, 25 Feb 2014 16:03:37 +0100
Subject: [opam-devel] aspcud release on Archlinux
Message-ID: <530CB0C9.6000406@luminar.eu.org>

Hi everybody,

I have just released the package aspcud-svn on AUR (Archlinux User
Repository).

Currently, clasp and gringo are already packaged on AUR but are obsolete
and I can't upgrade them (since they are locked by the previous
packager). I have contacted him and asked him to take action.

In the meantime, I provide here updated source packages for the aspcud
suite. I will update it on AUR as soon as possible.

Cheers,

Vincent
-------------- next part --------------
A non-text attachment was scrubbed...
Name: gringo-4.3.0-1.src.tar.gz
Type: application/gzip
Size: 983 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20140225/041f9af4/attachment.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: clasp-2.1.5-1.src.tar.gz
Type: application/gzip
Size: 533 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20140225/041f9af4/attachment-0001.bin>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: aspcud-svn-r7749-1.src.tar.gz
Type: application/gzip
Size: 648 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/opam-devel/attachments/20140225/041f9af4/attachment-0002.bin>

From anil at recoil.org  Tue Feb 25 16:38:26 2014
From: anil at recoil.org (Anil Madhavapeddy)
Date: Tue, 25 Feb 2014 16:38:26 +0000
Subject: [opam-devel] aspcud release on Archlinux
In-Reply-To: <530CB0C9.6000406@luminar.eu.org>
References: <530CB0C9.6000406@luminar.eu.org>
Message-ID: <DEFED0AA-5FBB-445F-BE6D-BE0260D909CA@recoil.org>

Thanks Vincent! I've updated the distributions wiki to reflect this thread.

-anil

On 25 Feb 2014, at 15:03, Vincent B. <vb at luminar.eu.org> wrote:

> Hi everybody,
> 
> I have just released the package aspcud-svn on AUR (Archlinux User
> Repository).
> 
> Currently, clasp and gringo are already packaged on AUR but are obsolete
> and I can't upgrade them (since they are locked by the previous
> packager). I have contacted him and asked him to take action.
> 
> In the meantime, I provide here updated source packages for the aspcud
> suite. I will update it on AUR as soon as possible.
> 
> Cheers,
> 
> Vincent
> <gringo-4.3.0-1.src.tar.gz><clasp-2.1.5-1.src.tar.gz><aspcud-svn-r7749-1.src.tar.gz>_______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


From roberto at dicosmo.org  Tue Feb 25 16:39:10 2014
From: roberto at dicosmo.org (Roberto Di Cosmo)
Date: Tue, 25 Feb 2014 17:39:10 +0100
Subject: [opam-devel] aspcud release on Archlinux
In-Reply-To: <530CB0C9.6000406@luminar.eu.org>
References: <530CB0C9.6000406@luminar.eu.org>
Message-ID: <20140225163910.GA9436@voyager>

Thanks a lot, Vincent!

On Tue, Feb 25, 2014 at 04:03:37PM +0100, Vincent B. wrote:
> Hi everybody,
> 
> I have just released the package aspcud-svn on AUR (Archlinux User
> Repository).
> 
> Currently, clasp and gringo are already packaged on AUR but are obsolete
> and I can't upgrade them (since they are locked by the previous
> packager). I have contacted him and asked him to take action.
> 
> In the meantime, I provide here updated source packages for the aspcud
> suite. I will update it on AUR as soon as possible.
> 
> Cheers,
> 
> Vincent




> _______________________________________________
> opam-devel mailing list
> opam-devel at lists.ocaml.org
> http://lists.ocaml.org/listinfo/opam-devel


-- 
Roberto Di Cosmo
 
------------------------------------------------------------------
Professeur               En delegation a l'INRIA
PPS                      E-mail: roberto at dicosmo.org
Universite Paris Diderot WWW  : http://www.dicosmo.org
Case 7014                Tel  : ++33-(0)1-57 27 92 20
5, Rue Thomas Mann       
F-75205 Paris Cedex 13   Identica: http://identi.ca/rdicosmo
FRANCE.                  Twitter: http://twitter.com/rdicosmo
------------------------------------------------------------------
Attachments:
MIME accepted, Word deprecated
      http://www.gnu.org/philosophy/no-word-attachments.html
------------------------------------------------------------------
Office location:
 
Bureau 3020 (3rd floor)
Batiment Sophie Germain
Avenue de France
Metro Bibliotheque Francois Mitterrand, ligne 14/RER C
-----------------------------------------------------------------
GPG fingerprint 2931 20CE 3A5A 5390 98EC 8BFC FCCA C3BE 39CB 12D3                        

