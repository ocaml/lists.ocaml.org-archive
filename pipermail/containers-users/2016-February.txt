From simon.cruanes.2007 at m4x.org  Tue Feb 16 17:26:29 2016
From: simon.cruanes.2007 at m4x.org (Simon Cruanes)
Date: Tue, 16 Feb 2016 18:26:29 +0100
Subject: [containers-users] breakage of CCMixmap
Message-ID: <20160216172629.GG2528@nunchakus.loria.fr>

Hi,

I'm thinking of breaking the API of CCMixmap so that it is closer to Map.S,
with the map as last argument. The point is to make the module usable in
conjunction with |> .

Does anyone that uses the module object?

Cheers,

-- 
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/containers-users/attachments/20160216/35e22e0b/attachment.sig>

From simon.cruanes.2007 at m4x.org  Thu Feb 18 11:27:22 2016
From: simon.cruanes.2007 at m4x.org (Simon Cruanes)
Date: Thu, 18 Feb 2016 12:27:22 +0100
Subject: [containers-users] more on deprecation
Message-ID: <20160218112722.GA1544@nunchakus.loria.fr>

Hi again,

I'm thinking about removing `CCHashtbl.Default` by adding more utils to the
regular functor `CCHashtbl.Make`
(for instance, I added `get_or: 'a tbl -> key -> or_:'a -> 'a`)
and possibly also merging `Counter` into `CCHashtbl.Make` by adding some
utils that work only on `int tbl`.

Globally, I suspect that some parts of Containers are little used (or
not used at all) and it might benefit from cleanup. I'd also like to
make names more consistent (arguably a problem already present in the
stdlib itself).

Any feedback or protest welcome :)

If you have issues with some current design, think some part of
containers is useless, some feature is sorely missing, please send a
mail here or add an issue on github!

-- 
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/containers-users/attachments/20160218/4ff9941f/attachment.sig>

From nils.becker at bioquant.uni-heidelberg.de  Fri Feb 19 10:55:08 2016
From: nils.becker at bioquant.uni-heidelberg.de (Nils Becker)
Date: Fri, 19 Feb 2016 11:55:08 +0100
Subject: [containers-users] more on deprecation
In-Reply-To: <20160218112722.GA1544@nunchakus.loria.fr>
References: <20160218112722.GA1544@nunchakus.loria.fr>
Message-ID: <na6s7m$lbm$1@ger.gmane.org>

On 18/02/16 12:27, Simon Cruanes wrote:
> Hi again,
> 
> I'm thinking about removing `CCHashtbl.Default` by adding more utils to the
> regular functor `CCHashtbl.Make`
> (for instance, I added `get_or: 'a tbl -> key -> or_:'a -> 'a`)
> and possibly also merging `Counter` into `CCHashtbl.Make` by adding some
> utils that work only on `int tbl`.
> 

this would not be a problem for me. what is the benefit? is it that
there are no two incompatible hash table types anymore, one with and one
without default element?

n.



From simon.cruanes.2007 at m4x.org  Fri Feb 19 12:45:34 2016
From: simon.cruanes.2007 at m4x.org (Simon Cruanes)
Date: Fri, 19 Feb 2016 13:45:34 +0100
Subject: [containers-users] more on deprecation
In-Reply-To: <na6s7m$lbm$1@ger.gmane.org>
References: <20160218112722.GA1544@nunchakus.loria.fr>
 <na6s7m$lbm$1@ger.gmane.org>
Message-ID: <20160219124534.GD1544@nunchakus.loria.fr>

Le Fri, 19 Feb 2016, Nils Becker a ?crit :
> On 18/02/16 12:27, Simon Cruanes wrote:
> > Hi again,
> > 
> > I'm thinking about removing `CCHashtbl.Default` by adding more utils to the
> > regular functor `CCHashtbl.Make`
> > (for instance, I added `get_or: 'a tbl -> key -> or_:'a -> 'a`)
> > and possibly also merging `Counter` into `CCHashtbl.Make` by adding some
> > utils that work only on `int tbl`.
> > 
> 
> this would not be a problem for me. what is the benefit? is it that
> there are no two incompatible hash table types anymore, one with and one
> without default element?

Yes indeed, instead of choosing whether your want a "hashtable" or a
"default hashtable" you just get the (quasi-)union of their
functionalities. Also, currently the Default and Counter modules are
really low on features (didn't take time to replicate
iter,fold,map,etc.).

Cheers,

-- 
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/containers-users/attachments/20160219/762b431b/attachment.sig>

From simon.cruanes.2007 at m4x.org  Tue Feb 23 16:17:56 2016
From: simon.cruanes.2007 at m4x.org (Simon Cruanes)
Date: Tue, 23 Feb 2016 17:17:56 +0100
Subject: [containers-users] more deprecations(!), overview of next release
Message-ID: <20160223161756.GM1544@nunchakus.loria.fr>

Hi camelidaes,

It's starting to be a recurrent theme here (but since I don't hear any
complains I'll assume it's fine), but I'm planning to deprecate and move
to separate repositories other parts (more precisely, sub-libraries)
of containers. In a nutshell, opam makes it easier to split big
libraries into smaller chunks that users can pick independently;
my goal here is to make containers more lightweight (faster to compile,
to download, etc.) focused on:

- containers: (the core library, direct complement to the stdlib)
- containers.data: (data structures)
- containers.string, containers.advanced: more specialized data
  structures and algorithms (even though it is possible that
  containers.advanced will be deprecated too, I moved its main module
  `CCLinq` into its own repository already).
- containers.unix: some utils around Unix

On the other hands, the following sublibraries belong in their own
repository; they will be deprecated in the incoming 0.16 and removed
in some time (probably a few months) :

- containers.bigarray (already moved to the `bigstring` library, useful
  on its own for low level IOs)
- containers.threads (I don't know yet, I'm thinking of an exthreads or
  something as a collection of thread pools, preemptive futures,
  concurrent queues, semaphores, etc. for programmers who use threads)

Nothing will get broken at the next release yet, but if you use some of
those sublibraries in your project(s) please tell me, so we can discuss
non-deprecation or a migration path (which should be easy in most
cases).

The next release will also include a wrapper around the `result` type
(with a dependency on the dummy library `result` on < 4.03), with an
interface identical to `CCError`, ANSI codes in CCFormat, and many more
new functions and features.

Cheers!

-- 
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/containers-users/attachments/20160223/f79587ff/attachment.sig>

From nils.becker at bioquant.uni-heidelberg.de  Thu Feb 25 14:55:05 2016
From: nils.becker at bioquant.uni-heidelberg.de (Nils Becker)
Date: Thu, 25 Feb 2016 15:55:05 +0100
Subject: [containers-users] more deprecations(!),
	overview of next release
In-Reply-To: <20160223161756.GM1544@nunchakus.loria.fr>
References: <20160223161756.GM1544@nunchakus.loria.fr>
Message-ID: <nan4h5$9ag$1@ger.gmane.org>

congrats on the new release. i think the tutorial is an excellent idea.
it's inviting, and it's a super efficient way for someone to decide if a
library is what he/she needs. every project should have one.

n.


From simon.cruanes.2007 at m4x.org  Thu Feb 25 15:36:57 2016
From: simon.cruanes.2007 at m4x.org (Simon Cruanes)
Date: Thu, 25 Feb 2016 16:36:57 +0100
Subject: [containers-users] more deprecations(!),
	overview of next release
In-Reply-To: <nan4h5$9ag$1@ger.gmane.org>
References: <20160223161756.GM1544@nunchakus.loria.fr>
 <nan4h5$9ag$1@ger.gmane.org>
Message-ID: <20160225153657.GG11634@nunchakus.loria.fr>

Le Thu, 25 Feb 2016, Nils Becker a ?crit :
> congrats on the new release. i think the tutorial is an excellent idea.
> it's inviting, and it's a super efficient way for someone to decide if a
> library is what he/she needs. every project should have one.

Thanks! 0.16 is a big release, and the project needs to move forward, so
I hope it will help potential users to decide. I also feel like there
the rate at which newcomers ask about stdlib(s) on #ocaml has increased :)

Cheers!

-- 
Simon Cruanes

http://weusepgp.info/
key 49AA62B6, fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: not available
URL: <http://lists.ocaml.org/pipermail/containers-users/attachments/20160225/13d3ac53/attachment.sig>

