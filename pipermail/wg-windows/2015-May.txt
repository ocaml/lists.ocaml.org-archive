From thomas.braibant at gmail.com  Fri May 29 16:10:36 2015
From: thomas.braibant at gmail.com (Thomas Braibant)
Date: Fri, 29 May 2015 17:10:36 +0200
Subject: [wg-windows] Improving the state of OCaml on Windows
Message-ID: <CAHR=VkyJ83Y1CmpdJNvgSNZ2+-M4_k6ppC05eH-nQ3=8c1Hgvw@mail.gmail.com>

Hi,

Thanks for joining this working group. Its goal is to find out how to
improve the state of OCaml and its ecosystem on Windows.

Some of the tasks that we might address (this list is by no mean meant to
be exhaustive nor normative):

- Gather information from the community  about the use of the various
versions of OCaml available on Windows, and understand what kind of
environment people are working with. (BTW, I think a good way to get the
discussion rolling might be to describe each other's setup to use OCaml on
Windows.)

- Finalize OPAM support for Windows (this is listed on the OPAM 1.3
roadmap). When this support is in place, many OCaml packages should work
out of the box (with the proviso that many packages assume a unix-ish
environment for their build system).

- Discuss how to help package developers improve Windows support. One way
to do that could be to provide know-how about how to setup continuous
integration on services like Appveyor to check that packages build on
typical Windows setups.

- Find a solution for users of WODI, the GODI based OCaml distribution for
Windows, which has been shutdown. WODI was able to compile OCaml related
software (using Cygwin as an environment), but was also able to install
binary packages. (In some cases, some non-trivial patches  were applied to
make package usable on Windows.) Some of the sources needed to use WODI are
still available, but the system does not work out of the box now that the
server has gone offline. With a little work, we might be able to bring it
back, to smooth the transition.

- Discuss the state of cross compilation to Windows.

- Advertise OCamlPro's OCPWin commercial effort. (I will leave Fabrice tell
a bit more about that.)

- Discuss how to pool resources (if needed) to work toward these goals.

Many thanks to Anil and OcamlLabs for hosting this mailing list.

Thomas
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/wg-windows/attachments/20150529/acf537f1/attachment.html>

From john at coherentgraphics.co.uk  Fri May 29 17:37:33 2015
From: john at coherentgraphics.co.uk (John Whitington)
Date: Fri, 29 May 2015 17:37:33 +0100
Subject: [wg-windows] Improving the state of OCaml on Windows
In-Reply-To: <CAHR=VkyJ83Y1CmpdJNvgSNZ2+-M4_k6ppC05eH-nQ3=8c1Hgvw@mail.gmail.com>
References: <CAHR=VkyJ83Y1CmpdJNvgSNZ2+-M4_k6ppC05eH-nQ3=8c1Hgvw@mail.gmail.com>
Message-ID: <556895CD.8080302@coherentgraphics.co.uk>

Hi,

Thanks for setting up this list.

Thomas Braibant wrote:
> - Gather information from the community  about the use of the various
> versions of OCaml available on Windows, and understand what kind of
> environment people are working with. (BTW, I think a good way to get the
> discussion rolling might be to describe each other's setup to use OCaml
> on Windows.)

I have relatively simple needs: compiling our commercial command line 
software from C and OCaml sources. It's easier when OCamlfind is 
installed, but there are no other prerequisites.

Some observations, in no particular order:

a) I use virtual machines for compiling. It can be tedious to install 32 
and 64 bit OCaml toolchains on the same machine. This works well.

b) For 32 bit, I use Jonathan Protz's installer:

http://protz.github.io/ocaml-installer/

This is stuck at 4.01.0. It would be nice to have it up to date. It 
seems to work well.

c) For 64 bit, I use

http://caml.inria.fr/mantis/view.php?id=5179

This takes about 2 hours to manually install, and is very complicated. 
It would be great to have this ported into trunk.

It's stuck at 3.12.1.

(I need 64 bit Windows builds because customers want >2gb PDF files, for 
some reason...)

Someone mentioned once that the 64 bit windows build has failures, such 
as uncaught exceptions causing a stack overflow. Perhaps there are other 
issues to fix too. But, I have multiple customers using it with zero 
complaints so far.

d) I tried the OCamlPro 64 bit port, and didn't manage to compile my 
project, but the existence of these ports is great:

https://github.com/OCamlPro/ocpwin-distrib/issues/7

e) It would be lovely to have 'official' Windows compilers again, or at 
least on 'blessed' set, even if they are produced by a third party. I 
thought we were close with Protz's work, but I assume he no longer has 
time or inclination.

Cheers,

-- 
John Whitington
Director, Coherent Graphics Ltd
http://www.coherentpdf.com/


From frederic.bour at lakaban.net  Fri May 29 18:56:37 2015
From: frederic.bour at lakaban.net (=?UTF-8?Q?Fr=C3=A9d=C3=A9ric_Bour?=)
Date: Fri, 29 May 2015 13:56:37 -0400
Subject: [wg-windows] Improving the state of OCaml on Windows
In-Reply-To: <CAHR=VkyJ83Y1CmpdJNvgSNZ2+-M4_k6ppC05eH-nQ3=8c1Hgvw@mail.gmail.com>
References: <CAHR=VkyJ83Y1CmpdJNvgSNZ2+-M4_k6ppC05eH-nQ3=8c1Hgvw@mail.gmail.com>
Message-ID: <bb6cff18f1e7ac723fa6f1879313f65a@ygg-drasil.fr>

Hi,

It's nice to have this list. I will share a few words about the state of 
Merlin in windows world.

We got some Merlin builds working under windows. The process relied on 
Jonathan's OCaml distribution, so we had a working version of 4.01 and 
beta version for 4.02.
The workflow is there, but has been untouched for a long time as we have 
no (apparent) users. If people are interested, I can revive test 
versions.

Also, the workflow might be of interest as it is deceptively simple:
1) We have a wine prefix with Jonathan's ocaml and relevant ocamlfind 
packages installed (all in a tarball, ready to be extracted).
2) Merlin is built under Linux using make and OCamlMakefile; we only 
prepend "wine" to invocation of ocaml tools. This produces an 
ocamlmerlin.exe without further work.
3) It's tested first under Unix, with native vim and emacs, once again 
only by prefixing the ocamlmerlin invocation with "wine" (and setting up 
wine vfs so that cmi files are found).
4) After that I tested on two windows machines, the binary was 
relocatable and could just be distributed standalone, following windows 
habits.

The main pain point was to get ocaml packages installed, the only 
dependency is yojson and it was installed by hacking makefiles a lot.
(Only changes needed to merlin were related to signals and handling of 
paths)

Fred

Le , Thomas Braibant a ?crit?:
> Hi,
> 
> Thanks for joining this working group. Its goal is to find out how to
> improve the state of OCaml and its ecosystem on Windows.
> 
> Some of the tasks that we might address (this list is by no mean meant
> to be exhaustive nor normative):
> 
> - Gather information from the community  about the use of the various
> versions of OCaml available on Windows, and understand what kind of
> environment people are working with. (BTW, I think a good way to get
> the discussion rolling might be to describe each other's setup to use
> OCaml on Windows.)
> 
> - Finalize OPAM support for Windows (this is listed on the OPAM 1.3
> roadmap). When this support is in place, many OCaml packages should
> work out of the box (with the proviso that many packages assume a
> unix-ish environment for their build system).
> 
> - Discuss how to help package developers improve Windows support. One
> way to do that could be to provide know-how about how to setup
> continuous integration on services like Appveyor to check that
> packages build on typical Windows setups.
> 
> - Find a solution for users of WODI, the GODI based OCaml distribution
> for Windows, which has been shutdown. WODI was able to compile OCaml
> related software (using Cygwin as an environment), but was also able
> to install binary packages. (In some cases, some non-trivial patches
> were applied to make package usable on Windows.) Some of the sources
> needed to use WODI are still available, but the system does not work
> out of the box now that the server has gone offline. With a little
> work, we might be able to bring it back, to smooth the transition.
> 
> - Discuss the state of cross compilation to Windows.
> 
> - Advertise OCamlPro's OCPWin commercial effort. (I will leave Fabrice
> tell a bit more about that.)
> 
> - Discuss how to pool resources (if needed) to work toward these
> goals.
> 
> Many thanks to Anil and OcamlLabs for hosting this mailing list.
> 
> Thomas
> 
> 
> _______________________________________________
> wg-windows mailing list
> wg-windows at lists.ocaml.org
> http://lists.ocaml.org/listinfo/wg-windows


From edwin+ml-ocaml at etorok.net  Fri May 29 20:00:22 2015
From: edwin+ml-ocaml at etorok.net (=?windows-1252?Q?T=F6r=F6k_Edwin?=)
Date: Fri, 29 May 2015 22:00:22 +0300
Subject: [wg-windows] Improving the state of OCaml on Windows
In-Reply-To: <CAHR=VkyJ83Y1CmpdJNvgSNZ2+-M4_k6ppC05eH-nQ3=8c1Hgvw@mail.gmail.com>
References: <CAHR=VkyJ83Y1CmpdJNvgSNZ2+-M4_k6ppC05eH-nQ3=8c1Hgvw@mail.gmail.com>
Message-ID: <5568B746.4050607@etorok.net>

On 05/29/2015 06:10 PM, Thomas Braibant wrote:
> Hi,
> 
> Thanks for joining this working group. Its goal is to find out how to
> improve the state of OCaml and its ecosystem on Windows.
> 
> Some of the tasks that we might address (this list is by no mean
> meant to be exhaustive nor normative):
> 
> - Gather information from the community  about the use of the various
> versions of OCaml available on Windows, and understand what kind of
> environment people are working with. (BTW, I think a good way to get
> the discussion rolling might be to describe each other's setup to use
> OCaml on Windows.)

I don't use Windows myself at all, but I've been recently asked how to build an OCaml application on windows.
Here is my very short experience with OCaml on Windows:
 - I used WODI with Cygwin64/Cygwin32 and OCaml 4.02.1 due to the large number of OCaml and C libraries available (notably Lwt and OpenSSL)
 - I tried to build my application however it failed due to path errors (more on this below)
 - I tried building opam from git, and it succeeded, although almost any package I tried to opam install failed to build
 - for some reason Cygwin64 executables keep crashing
 - I gave up after WODI was shutdown, waiting until opam has official Windows support 

Path errors
-----------

The errors looked like this, and it took me a while to figure out that this is because the build system is Cygwin but ocamlfind is a Win32 application
and has no knowledge of what /cygdrive is:
ocamlfind: Bad configuration: Cannot mkdir /cygdrive/c/libre/source/_build/lib/ocaml/site-lib\re because a path component does not exist or is not a directory
File "dynlink_wrapper.ml", line 1, characters 13-14: Illegal character (\000)

I worked this around by using `cygpath -m` in my build system in a few places, normalizing all paths to use / and replacing symlinks with cp.

The path separators are also mixed (/ vs \, because build system uses / in queries like `pwd`, and Filename.concat uses \),  but IIRC this actually worked.
I think native Win32 apps might support a path made all of / these days, not sure why we have to go through all the trouble of trying to use \, but as a Unix person I probably miss some details here.

Cygwin64 unreliability
----------------------

I don't know if the bug is in Windows, Cygwin64 or my VM configuration but the build system itself crashes a lot and randomly
(there seems to be plenty of RAM available).
Even things like make.exe or rm.exe crash with: segfault, fork: resource unavailable, exit code -1073741819.
Restarting the cygwin shell helps sometimes but the errors are soon back, even when using just make -j1.
The situation was bad enough that I had to repeat the build  4-5 times until it finally succeeded as it kept crashing in different places.
Someone else tried WODI32 and didn't see such errors there, so that seems like a more reliable build system.
Was about to report this as a bug in Cygwin64, but next week WODI was shutdown so that ended my Windows testing as well.

Functions not implemented in Unix module
----------------------------------------

Although the build system was cygwin I got a native Win32 executable apparently, as it failed at runtime as various functions from the Unix module are not implemented.
Luckily this is all well documented, so after adding some conditional code I was able to make some progress. Would be better if I could override these functions
with a dummy implementation to make sure I don't get runtime errors.

> 
> - Finalize OPAM support for Windows (this is listed on the OPAM 1.3
> roadmap). When this support is in place, many OCaml packages should
> work out of the box (with the proviso that many packages assume a
> unix-ish environment for their build system).

Is there a way to have the build system and ocamlfind/ocamlopt/ocamlc agree on the format of paths?
(i.e. either both of them are Cygwin or both of them native Win32 apps but not a mix)

> 
> - Discuss how to help package developers improve Windows support. One
> way to do that could be to provide know-how about how to setup
> continuous integration on services like Appveyor to check that
> packages build on typical Windows setups.
> 
> - Find a solution for users of WODI, the GODI based OCaml
> distribution for Windows, which has been shutdown. WODI was able to
> compile OCaml related software (using Cygwin as an environment), but
> was also able to install binary packages. (In some cases, some
> non-trivial patches  were applied to make package usable on Windows.)
> Some of the sources needed to use WODI are still available, but the
> system does not work out of the box now that the server has gone
> offline. With a little work, we might be able to bring it back, to
> smooth the transition.
> 
> - Discuss the state of cross compilation to Windows.

This seems similar to the Android cross-compilation repository:
https://github.com/vouillon/opam-windows-repository

Best regards,
--Edwin

From jonathan.protzenko at gmail.com  Fri May 29 20:02:34 2015
From: jonathan.protzenko at gmail.com (Jonathan Protzenko)
Date: Fri, 29 May 2015 12:02:34 -0700
Subject: [wg-windows] Status of the OCaml Installer for Windows: the way
	forward?
Message-ID: <5568B7CA.8010904@gmail.com>

Dear OCaml-on-Windows aficionados,

I thought I'd give a quick update on the status of my installer and more 
generally the way I see things moving forward in the OCaml for Windows 
ecosystem.

About the installer: it hasn't been updated for a while. I'll issue a 
new release shortly. I'll drop the ActiveTCL step (no stable URL, causes 
problems) and I'll also drop Emacs (I don't think anyone uses that setup 
for real).

About the way forward: there's two assumptions that I'd like to bring to 
this mailing-list.
- Most OCaml packages need / assume a Unix-ish environment to build.
- Binary packages are likely not going to happen soon.

Therefore, what is urgently needed is:
i) an installer that brings you the bare minimum (ocaml, flexdll, plus 
perhaps camlp4, ocamlfind and batteries), and
ii) a unix-ish environment to make sure tools like ocamlbuild find the 
required utilities such as "bash" that they (infortunately) require in 
order to run, and
iii) a way to distribute the toolchain (the assembler, a.k.a. 
i686-mingw-w64-as) required by ocaml (more precisely, by flexdll),
iv) a package manager that can take it from there and fetch/compile the 
rest.

The installer I provide satisfies i). Since it installs Cygwin, ii) and 
iii) are satisfied as well, because cygwin packages the /native/ 
compilers from the mingw64 project. The only remaining pain point is 
iv), and for that I really think we need OPAM to work out of the box on 
Windows.

Once OPAM works superbly well, we won't need the installer anymore, because:
- OPAM will be distributed as a statically-linked binary, that
- takes care of installing even the OCaml compiler itself, and
- is capable of installing the remaining binaries, as long as
- the user operates in a cygwin environment so as to get bash, sed, and 
the toolchain from mingw.

Please keep in mind that we're only talking of Cygwin as a way to get a 
Unix-ish environment. In the scenario outlined above, the OCaml 
compilers are, and generate, native windows programs.

Of course, that's a very biased point of view, but I'd be happy to hear 
other's thoughts as to what exactly this doesn't fit their needs!

Best,

Jonathan

From yotambarnoy at gmail.com  Fri May 29 20:19:23 2015
From: yotambarnoy at gmail.com (Yotam Barnoy)
Date: Fri, 29 May 2015 15:19:23 -0400
Subject: [wg-windows] Improving the state of OCaml on Windows
In-Reply-To: <5568B746.4050607@etorok.net>
References: <CAHR=VkyJ83Y1CmpdJNvgSNZ2+-M4_k6ppC05eH-nQ3=8c1Hgvw@mail.gmail.com>
 <5568B746.4050607@etorok.net>
Message-ID: <CAN6ygO=4gB=tVZFBX52o9b69M+GUO1LySXPPcDHwdYz1OE=SVQ@mail.gmail.com>

I'll join in thanking you for making this list, Thomas.

I consider this the 2nd most important issue to the health of the OCaml
ecosystem, right after multicore.

Unfortunately, we don't have the feedback of heavy windows users, because
those have been selected out of the OCaml ecosystem. However, looking at
just about every language out there, I think the ultimate goal has to be
first class Windows support. This is my opinion at least. Cygwin is ok for
now, but the aim has to be full windows support if OCaml is going to be
seen as a viable option by the majority of the enterprise crowd. That means
eventually getting rid of every Unix-ism out there, starting with
ocamlbuild and ocamlfind, moving on to opam, and then making a curated list
of packages on opam that build on windows. In fact, we should have a
separate list for packages that build on cygwin, and one for packages that
build on native windows, and we should encourage developers to move towards
the latter list.

As an aside, if you're trying to install cygwin on a windows VM (such as
the ones Microsoft distributes freely) and getting errors, it might have to
do with symlinks. Cygwin has 3 modes of emulating symlinks on windows, and
it can get fooled by the VM into thinking it has low-level support that
isn't really there. All symlinks are then read as regular files, messing up
just about everything. Therefore, before installing cygwin, set the
environment variable CYGWIN to 'winsymlinks:lnk' in the windows environment.

-Yotam

On Fri, May 29, 2015 at 3:00 PM, T?r?k Edwin <edwin+ml-ocaml at etorok.net>
wrote:

> On 05/29/2015 06:10 PM, Thomas Braibant wrote:
> > Hi,
> >
> > Thanks for joining this working group. Its goal is to find out how to
> > improve the state of OCaml and its ecosystem on Windows.
> >
> > Some of the tasks that we might address (this list is by no mean
> > meant to be exhaustive nor normative):
> >
> > - Gather information from the community  about the use of the various
> > versions of OCaml available on Windows, and understand what kind of
> > environment people are working with. (BTW, I think a good way to get
> > the discussion rolling might be to describe each other's setup to use
> > OCaml on Windows.)
>
> I don't use Windows myself at all, but I've been recently asked how to
> build an OCaml application on windows.
> Here is my very short experience with OCaml on Windows:
>  - I used WODI with Cygwin64/Cygwin32 and OCaml 4.02.1 due to the large
> number of OCaml and C libraries available (notably Lwt and OpenSSL)
>  - I tried to build my application however it failed due to path errors
> (more on this below)
>  - I tried building opam from git, and it succeeded, although almost any
> package I tried to opam install failed to build
>  - for some reason Cygwin64 executables keep crashing
>  - I gave up after WODI was shutdown, waiting until opam has official
> Windows support
>
> Path errors
> -----------
>
> The errors looked like this, and it took me a while to figure out that
> this is because the build system is Cygwin but ocamlfind is a Win32
> application
> and has no knowledge of what /cygdrive is:
> ocamlfind: Bad configuration: Cannot mkdir
> /cygdrive/c/libre/source/_build/lib/ocaml/site-lib\re because a path
> component does not exist or is not a directory
> File "dynlink_wrapper.ml", line 1, characters 13-14: Illegal character
> (\000)
>
> I worked this around by using `cygpath -m` in my build system in a few
> places, normalizing all paths to use / and replacing symlinks with cp.
>
> The path separators are also mixed (/ vs \, because build system uses / in
> queries like `pwd`, and Filename.concat uses \),  but IIRC this actually
> worked.
> I think native Win32 apps might support a path made all of / these days,
> not sure why we have to go through all the trouble of trying to use \, but
> as a Unix person I probably miss some details here.
>
> Cygwin64 unreliability
> ----------------------
>
> I don't know if the bug is in Windows, Cygwin64 or my VM configuration but
> the build system itself crashes a lot and randomly
> (there seems to be plenty of RAM available).
> Even things like make.exe or rm.exe crash with: segfault, fork: resource
> unavailable, exit code -1073741819.
> Restarting the cygwin shell helps sometimes but the errors are soon back,
> even when using just make -j1.
> The situation was bad enough that I had to repeat the build  4-5 times
> until it finally succeeded as it kept crashing in different places.
> Someone else tried WODI32 and didn't see such errors there, so that seems
> like a more reliable build system.
> Was about to report this as a bug in Cygwin64, but next week WODI was
> shutdown so that ended my Windows testing as well.
>
> Functions not implemented in Unix module
> ----------------------------------------
>
> Although the build system was cygwin I got a native Win32 executable
> apparently, as it failed at runtime as various functions from the Unix
> module are not implemented.
> Luckily this is all well documented, so after adding some conditional code
> I was able to make some progress. Would be better if I could override these
> functions
> with a dummy implementation to make sure I don't get runtime errors.
>
> >
> > - Finalize OPAM support for Windows (this is listed on the OPAM 1.3
> > roadmap). When this support is in place, many OCaml packages should
> > work out of the box (with the proviso that many packages assume a
> > unix-ish environment for their build system).
>
> Is there a way to have the build system and ocamlfind/ocamlopt/ocamlc
> agree on the format of paths?
> (i.e. either both of them are Cygwin or both of them native Win32 apps but
> not a mix)
>
> >
> > - Discuss how to help package developers improve Windows support. One
> > way to do that could be to provide know-how about how to setup
> > continuous integration on services like Appveyor to check that
> > packages build on typical Windows setups.
> >
> > - Find a solution for users of WODI, the GODI based OCaml
> > distribution for Windows, which has been shutdown. WODI was able to
> > compile OCaml related software (using Cygwin as an environment), but
> > was also able to install binary packages. (In some cases, some
> > non-trivial patches  were applied to make package usable on Windows.)
> > Some of the sources needed to use WODI are still available, but the
> > system does not work out of the box now that the server has gone
> > offline. With a little work, we might be able to bring it back, to
> > smooth the transition.
> >
> > - Discuss the state of cross compilation to Windows.
>
> This seems similar to the Android cross-compilation repository:
> https://github.com/vouillon/opam-windows-repository
>
> Best regards,
> --Edwin
> _______________________________________________
> wg-windows mailing list
> wg-windows at lists.ocaml.org
> http://lists.ocaml.org/listinfo/wg-windows
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/wg-windows/attachments/20150529/abeceb20/attachment.html>

From modlfo at gmail.com  Sat May 30 12:11:51 2015
From: modlfo at gmail.com (Leonardo Laguna Ruiz)
Date: Sat, 30 May 2015 13:11:51 +0200
Subject: [wg-windows] Status of the OCaml Installer for Windows: the way
	forward?
In-Reply-To: <5568B7CA.8010904@gmail.com>
References: <5568B7CA.8010904@gmail.com>
Message-ID: <BE95CB14-9A5C-485A-A0D4-90E5014F16E9@gmail.com>


Hi, I use ocaml in linux, osx and windows. I don?t use any library that I cannot easily compile in all platforms. On windows I use the MSVC port since I can link .lib files that I have not compile by myself. In order to get Ocaml in windows I have setup a repo with Ocaml MSVC 2013 64 bits. There I have a few libraries and tools I use.

- containers
- ocamlgraph
- ppx_deriving
- extlib
- yojson (and it?s dependencies)
- merlin (which I use with sublime text)
- lwt
- batteries

Developing Ocaml programs in windows is not a pleasant experience since it lacks of tools that I consider essential like: 
- utop
- oasis
- ocamldebug (which does not work very well) 

So I usually write the code on OS X or linux; then I use ocamlbuild+cmake to build the executable in all platforms. When I have C/C++ bindings I use ocamlbuild to generate a .o or .obj  file which I link to the rest of the code using cmake. Using cmake also simplifies compilation and linking C++ code.

At work I have developed a few internal tools. The main problem is that our developers working on windows (which are a majority) cannot take full advantage of the ocaml tools. It really sets them off having to use cygwin to build and having only debugging through a console application. 

In my company we are currently not distributing any application or library written in Ocaml. This is in part due to the uncertain support of the Ocaml infrastructure in windows. 

In summary the points that are important for me when creating an ocaml for windows distribution. 

1.- Having the possibility of easily select the tools (MSVC, MinGW,Cygwin) that you want to use.
2.- Distribute asmrun and byterun as binaries for all ocaml ports (this will simply the first point) .
3.- Get rid of bash (cygwin) in ocaml tools (ocamlbuild)
4.- Include the common tools to build, edit and debug code. In my case, oasis, merlin, utop and some graphical debugger. 
5.- Integration with multiplatform build system like cmake (which I have partially done)

Leonardo



> On 29 May 2015, at 21:02, Jonathan Protzenko <jonathan.protzenko at gmail.com> wrote:
> 
> Dear OCaml-on-Windows aficionados,
> 
> I thought I'd give a quick update on the status of my installer and more generally the way I see things moving forward in the OCaml for Windows ecosystem.
> 
> About the installer: it hasn't been updated for a while. I'll issue a new release shortly. I'll drop the ActiveTCL step (no stable URL, causes problems) and I'll also drop Emacs (I don't think anyone uses that setup for real).
> 
> About the way forward: there's two assumptions that I'd like to bring to this mailing-list.
> - Most OCaml packages need / assume a Unix-ish environment to build.
> - Binary packages are likely not going to happen soon.
> 
> Therefore, what is urgently needed is:
> i) an installer that brings you the bare minimum (ocaml, flexdll, plus perhaps camlp4, ocamlfind and batteries), and
> ii) a unix-ish environment to make sure tools like ocamlbuild find the required utilities such as "bash" that they (infortunately) require in order to run, and
> iii) a way to distribute the toolchain (the assembler, a.k.a. i686-mingw-w64-as) required by ocaml (more precisely, by flexdll),
> iv) a package manager that can take it from there and fetch/compile the rest.
> 
> The installer I provide satisfies i). Since it installs Cygwin, ii) and iii) are satisfied as well, because cygwin packages the /native/ compilers from the mingw64 project. The only remaining pain point is iv), and for that I really think we need OPAM to work out of the box on Windows.
> 
> Once OPAM works superbly well, we won't need the installer anymore, because:
> - OPAM will be distributed as a statically-linked binary, that
> - takes care of installing even the OCaml compiler itself, and
> - is capable of installing the remaining binaries, as long as
> - the user operates in a cygwin environment so as to get bash, sed, and the toolchain from mingw.
> 
> Please keep in mind that we're only talking of Cygwin as a way to get a Unix-ish environment. In the scenario outlined above, the OCaml compilers are, and generate, native windows programs.
> 
> Of course, that's a very biased point of view, but I'd be happy to hear other's thoughts as to what exactly this doesn't fit their needs!
> 
> Best,
> 
> Jonathan
> _______________________________________________
> wg-windows mailing list
> wg-windows at lists.ocaml.org
> http://lists.ocaml.org/listinfo/wg-windows


From martin.neuhaeusser at siemens.com  Sat May 30 19:43:16 2015
From: martin.neuhaeusser at siemens.com (Neuhaeusser, Martin)
Date: Sat, 30 May 2015 18:43:16 +0000
Subject: [wg-windows] Improving the state of OCaml on Windows
In-Reply-To: <CAHR=VkyJ83Y1CmpdJNvgSNZ2+-M4_k6ppC05eH-nQ3=8c1Hgvw@mail.gmail.com>
References: <CAHR=VkyJ83Y1CmpdJNvgSNZ2+-M4_k6ppC05eH-nQ3=8c1Hgvw@mail.gmail.com>
Message-ID: <965631B03C670145ABB9F693E51622530D05EC72@DENBGAT9EK5MSX.ww902.siemens.net>

Hi Thomas,

thank you for setting up this list! I really hope that it will help in improving the way Ocaml
can be used on Windows. We are working on some OCaml projects that ultimately need to
be compiled into a Windows-DLL using the MSVC-Toolchain. The development itself is done
entirely on Linux. In particular, we rely on a number of packages on Windows:


-        OCaml 4.02.1

-        Batteries 2.3.1

-        Ocamlgraph 1.8.5

-        Re

-        ZArith 1.2.1  (we failed in building newer versions)

-        Volt (a variant of the Bolt logging library)

-        menhir

-        camlp4

To my experience, compiling the core components (i.e. OCaml, findlib, flexdll, and batteries)
from scratch with MSVC from Visual Studio 2012 within Cygwin, both 32 and 64 bits, is rather
straight-forward and well supported.

Building the other libraries has been rather difficult: Confusion arises when it comes to specifying
search paths when configuring the package builds: Sometimes, one has to specify Unix-like
pathnames. At other times, one has to use Windows pathnames. And the question whether to
use slashes or backslashes, the file extensions and naming conventions, etc. worsen the situation.
Some examples:


?        Menhir gets confused by Windows and Unix-like Pathnames when built on Cygwin.
Hint: You have to specify Windows-Pathnames, but replace any backslashes by slashes
to set the PREFIX in the menhir configuration?

?        The makefile of the regular expression library Re does not correctly handle the .obj
file extension produced on Windows.
Hint: Build Re until it fails; remove the file setup.obj by hand, and build again. Then it
succeeds?

?        Another problem are the paths to the ocaml libraries as reported by ocamlc and ocamlfind.
Sometimes they differ (one reports Unix-pathnames, the other Windows-like paths).
This disturbs the ocamlgraph configuration process. Moreover, we failed in building
ocamlgraph as a shared library.

?        A similar problem related to paths exists in camlp4?s configuration. Resolving it requires
modifications in its myocamlbuild.ml and its install.sh shell script.

?        Building ZArith requires the ?mpir and -noasm options and some further hacking in
its configuration file. We only managed to build the older version 1.2.1.

Of course, OPAM on Windows would be great. Offering help to the package maintainers to test their
build system on Windows might help a lot. I will try to file bug reports on the issues that I encountered
when building on Cygwin to the appropriate package maintainers.

Best regards,
Martin

Von: wg-windows [mailto:wg-windows-bounces at lists.ocaml.org] Im Auftrag von Thomas Braibant
Gesendet: Freitag, 29. Mai 2015 17:11
An: wg-windows at lists.ocaml.org<mailto:wg-windows at lists.ocaml.org>
Betreff: [wg-windows] Improving the state of OCaml on Windows

Hi,

Thanks for joining this working group. Its goal is to find out how to improve the state of OCaml and its ecosystem on Windows.

Some of the tasks that we might address (this list is by no mean meant to be exhaustive nor normative):

- Gather information from the community  about the use of the various versions of OCaml available on Windows, and understand what kind of environment people are working with. (BTW, I think a good way to get the discussion rolling might be to describe each other's setup to use OCaml on Windows.)

- Finalize OPAM support for Windows (this is listed on the OPAM 1.3 roadmap). When this support is in place, many OCaml packages should work out of the box (with the proviso that many packages assume a unix-ish environment for their build system).

- Discuss how to help package developers improve Windows support. One way to do that could be to provide know-how about how to setup continuous integration on services like Appveyor to check that packages build on typical Windows setups.

- Find a solution for users of WODI, the GODI based OCaml distribution for Windows, which has been shutdown. WODI was able to compile OCaml related software (using Cygwin as an environment), but was also able to install binary packages. (In some cases, some non-trivial patches  were applied to make package usable on Windows.) Some of the sources needed to use WODI are still available, but the system does not work out of the box now that the server has gone offline. With a little work, we might be able to bring it back, to smooth the transition.

- Discuss the state of cross compilation to Windows.

- Advertise OCamlPro's OCPWin commercial effort. (I will leave Fabrice tell a bit more about that.)

- Discuss how to pool resources (if needed) to work toward these goals.

Many thanks to Anil and OcamlLabs for hosting this mailing list.

Thomas



-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.ocaml.org/pipermail/wg-windows/attachments/20150530/c0db58db/attachment-0001.html>

